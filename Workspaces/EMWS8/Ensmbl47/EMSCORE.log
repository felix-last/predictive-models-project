MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.23 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                12.23 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O04BJUJ1 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O04BJUJ1 new;
MPRINT(EM_DIAGRAM):   run;
1209743    filename emflow
1209743  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring AUTONEURAL10_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209744    *------------------------------------------------------------*;
1209745    * Ensmbl47: Scoring AUTONEURAL10_TRAIN data;
1209746    *------------------------------------------------------------*;
1209747    data EMWS8.Ensmbl47_TRAIN
1209748    / view=EMWS8.Ensmbl47_TRAIN
1209749    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_TRAIN / view=EMWS8.Ensmbl47_TRAIN ;
1209750    set EMWS8.AutoNeural10_TRAIN
1209751    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_TRAIN ;
1209752    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMFLOWSCORE.sas.
1209753   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209754   +* Ensmbl47: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Combine model for DepVar;
1209755   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209756   +* Ensmbl47: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 1 of 5;
1209757   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209758   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209759   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1209760   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1209761   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1209762   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209763   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209764   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1209765   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1209766   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1209767   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209768   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209769   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1209770   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1209771   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1209772   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209773   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209774   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1209775   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1209776   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1209777   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209778   +
1209779   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1209780   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1209780  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1209781   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1209782   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1209783   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1209784   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1209785   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1209786   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209787   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1209788   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1209789   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1209790   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209791   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209792   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1209793   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209794   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1209795   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1209796   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1209797   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209798   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1209799   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1209800   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1209801   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209802   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209803   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1209804   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1209805   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1209806   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209807   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209808   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1209809   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1209810   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
1209811   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209812   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1209813   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1209814   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1209815   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1209816   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1209817   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1209818   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1209819   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1209820   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1209821   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1209822   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1209823   +LENGTH _WARN_ $4
1209824   +      F_DepVar  $ 12
1209825   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1209826   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1209827   +
1209828   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1209829   +
1209830   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1209831   +
1209832   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1209833   +
1209834   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1209835   +
1209836   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1209837   +
1209838   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1209839   +
1209840   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1209841   +
1209842   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1209843   +
1209844   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1209845   +
1209846   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1209847   +
1209848   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1209849   +
1209850   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1209851   +
1209852   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1209853   +
1209854   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1209855   +
1209856   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1209857   +
1209858   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1209859   +
1209860   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1209861   +
1209862   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1209863   +
1209864   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1209865   +
1209866   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1209867   +
1209868   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1209869   +
1209870   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1209871   +
1209872   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1209873   +
1209874   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1209875   +
1209876   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1209877   +
1209878   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1209879   +
1209880   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1209881   +
1209882   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1209883   +
1209884   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1209885   +
1209886   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1209887   +
1209888   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1209889   +
1209890   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1209891   +
1209892   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1209893   +
1209894   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1209895   +
1209896   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1209897   +
1209898   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1209899   +
1209900   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1209901   +
1209902   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1209903   +
1209904   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1209905   +
1209906   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1209907   +
1209908   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1209909   +
1209910   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1209911   +
1209912   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1209913   +
1209914   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1209915   +
1209916   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1209917   +
1209918   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1209919   +
1209920   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1209921   +
1209922   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1209923   +
1209924   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1209925   +
1209926   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1209927   +
1209928   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1209929   +
1209930   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1209931   +
1209932   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1209933   +
1209934   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1209935   +
1209936   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1209937   +
1209938   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1209939   +
The SAS System

1209940   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1209941   +
1209942   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1209943   +
1209944   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1209945   +
1209946   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1209947   +
1209948   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1209949   +
1209950   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1209951   +
1209952   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1209953   +
1209954   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1209955   +
1209956   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1209957   +
1209958   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1209959   +
1209960   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1209961   +
1209962   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1209963   +
1209964   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1209965   +
1209966   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1209967   +
1209968   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1209969   +
1209970   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1209971   +
1209972   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1209973   +
1209974   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1209975   +
1209976   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1209977   +
1209978   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1209979   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1209980   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1209981   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1209982   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209983   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209984   +end;
MPRINT(EM_DIAGRAM):   end;
1209985   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209986   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209987   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1209988   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209989   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1209990   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1209991   +   end;
MPRINT(EM_DIAGRAM):   end;
1209992   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1209993   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1209994   +   end;
MPRINT(EM_DIAGRAM):   end;
1209995   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209996   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1209997   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209998   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209999   +   end;
MPRINT(EM_DIAGRAM):   end;
1210000   +end;
MPRINT(EM_DIAGRAM):   end;
1210001   +
1210002   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1210003   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1210004   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1210005   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1210006   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210007   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210008   +end;
MPRINT(EM_DIAGRAM):   end;
1210009   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210010   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210011   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1210012   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210013   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1210014   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1210015   +   end;
MPRINT(EM_DIAGRAM):   end;
1210016   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1210017   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1210018   +   end;
MPRINT(EM_DIAGRAM):   end;
1210019   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210020   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1210021   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210022   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210023   +   end;
MPRINT(EM_DIAGRAM):   end;
1210024   +end;
MPRINT(EM_DIAGRAM):   end;
1210025   +
1210026   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1210027   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1210028   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1210029   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1210030   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210031   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210032   +end;
MPRINT(EM_DIAGRAM):   end;
1210033   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210034   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210035   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1210036   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210037   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1210038   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1210039   +   end;
MPRINT(EM_DIAGRAM):   end;
1210040   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1210041   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1210042   +   end;
MPRINT(EM_DIAGRAM):   end;
1210043   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210044   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1210045   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210046   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210047   +   end;
MPRINT(EM_DIAGRAM):   end;
1210048   +end;
MPRINT(EM_DIAGRAM):   end;
1210049   +
1210050   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1210051   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1210052   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1210053   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1210054   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210055   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210056   +end;
MPRINT(EM_DIAGRAM):   end;
1210057   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210058   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210059   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1210060   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210061   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1210062   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1210063   +   end;
MPRINT(EM_DIAGRAM):   end;
1210064   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1210065   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1210066   +   end;
MPRINT(EM_DIAGRAM):   end;
1210067   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210068   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1210069   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210070   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210071   +   end;
MPRINT(EM_DIAGRAM):   end;
1210072   +end;
MPRINT(EM_DIAGRAM):   end;
1210073   +
1210074   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1210075   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1210076   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1210077   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1210078   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210079   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210080   +end;
MPRINT(EM_DIAGRAM):   end;
1210081   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210082   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210083   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1210084   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210085   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1210086   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1210087   +   end;
MPRINT(EM_DIAGRAM):   end;
1210088   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1210089   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1210090   +   end;
MPRINT(EM_DIAGRAM):   end;
1210091   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210092   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1210093   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210094   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210095   +   end;
MPRINT(EM_DIAGRAM):   end;
1210096   +end;
MPRINT(EM_DIAGRAM):   end;
1210097   +
1210098   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1210099   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1210100   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1210101   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1210102   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210103   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210104   +end;
MPRINT(EM_DIAGRAM):   end;
1210105   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210106   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210107   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1210108   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210109   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1210110   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1210111   +   end;
MPRINT(EM_DIAGRAM):   end;
1210112   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1210113   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1210114   +   end;
MPRINT(EM_DIAGRAM):   end;
1210115   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210116   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1210117   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210118   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210119   +   end;
MPRINT(EM_DIAGRAM):   end;
1210120   +end;
MPRINT(EM_DIAGRAM):   end;
1210121   +
1210122   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1210123   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1210124   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1210125   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1210126   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210127   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210128   +end;
MPRINT(EM_DIAGRAM):   end;
1210129   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210130   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210131   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1210132   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210133   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1210134   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1210135   +   end;
MPRINT(EM_DIAGRAM):   end;
1210136   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1210137   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1210138   +   end;
MPRINT(EM_DIAGRAM):   end;
1210139   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210140   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1210141   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210142   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210143   +   end;
MPRINT(EM_DIAGRAM):   end;
1210144   +end;
MPRINT(EM_DIAGRAM):   end;
1210145   +
1210146   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1210147   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1210148   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1210149   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1210150   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1210151   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1210152   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1210153   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1210154   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1210155   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1210156   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1210157   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1210158   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210159   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210160   +end;
MPRINT(EM_DIAGRAM):   end;
1210161   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210162   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1210163   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1210164   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210165   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1210166   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1210167   +   end;
MPRINT(EM_DIAGRAM):   end;
1210168   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1210169   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1210170   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1210171   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1210172   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1210173   +   end;
MPRINT(EM_DIAGRAM):   end;
1210174   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1210175   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1210176   +   end;
MPRINT(EM_DIAGRAM):   end;
1210177   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1210178   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1210179   +   end;
MPRINT(EM_DIAGRAM):   end;
1210180   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1210181   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1210182   +   end;
MPRINT(EM_DIAGRAM):   end;
1210183   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210184   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1210185   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1210186   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1210187   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1210188   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210189   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210190   +   end;
MPRINT(EM_DIAGRAM):   end;
1210191   +end;
MPRINT(EM_DIAGRAM):   end;
1210192   +
1210193   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1210194   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1210195   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1210196   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1210197   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1210198   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1210199   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1210200   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1210201   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1210202   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1210203   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1210204   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1210205   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1210206   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210207   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210208   +end;
MPRINT(EM_DIAGRAM):   end;
1210209   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210210   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1210211   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1210212   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210213   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1210214   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1210215   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1210216   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1210217   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1210218   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1210219   +         end;
MPRINT(EM_DIAGRAM):   end;
1210220   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1210221   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1210222   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1210223   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1210224   +            end;
MPRINT(EM_DIAGRAM):   end;
1210225   +         end;
MPRINT(EM_DIAGRAM):   end;
1210226   +      end;
MPRINT(EM_DIAGRAM):   end;
1210227   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1210228   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1210229   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1210230   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1210231   +         end;
MPRINT(EM_DIAGRAM):   end;
1210232   +      end;
MPRINT(EM_DIAGRAM):   end;
1210233   +   end;
MPRINT(EM_DIAGRAM):   end;
1210234   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210235   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1210236   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1210237   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1210238   +      end;
MPRINT(EM_DIAGRAM):   end;
1210239   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1210240   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1210241   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1210242   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1210243   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1210244   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1210245   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1210246   +         end;
MPRINT(EM_DIAGRAM):   end;
1210247   +      end;
MPRINT(EM_DIAGRAM):   end;
1210248   +   end;
MPRINT(EM_DIAGRAM):   end;
1210249   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1210250   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1210251   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1210252   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1210253   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1210254   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210255   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210256   +   end;
MPRINT(EM_DIAGRAM):   end;
1210257   +end;
MPRINT(EM_DIAGRAM):   end;
1210258   +
1210259   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210260   +*** Checking missing input Interval
1210261   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1210262   +
1210263   +IF NMISS(
1210264   +   AcceptedCmpTotal ,
1210265   +   Age ,
1210266   +   Frq ,
1210267   +   Income ,
1210268   +   Kidhome ,
1210269   +   Mnt ,
1210270   +   MntFishProducts ,
1210271   +   MntFruits ,
1210272   +   MntGoldProds ,
1210273   +   MntMeatProducts ,
1210274   +   MntSweetProducts ,
1210275   +   MntWines ,
1210276   +   MonthsAsCustomer ,
1210277   +   NumCatalogPurchases ,
1210278   +   NumDealsPurchases ,
1210279   +   NumDistPurchases ,
1210280   +   NumStorePurchases ,
1210281   +   NumWebPurchases ,
1210282   +   NumWebVisitsMonth ,
1210283   +   RFMstat ,
1210284   +   RMntFrq ,
1210285   +   Recency ,
1210286   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1210287   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1210288   +
1210289   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210290   +END;
MPRINT(EM_DIAGRAM):   END;
1210291   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210292   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1210293   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210294   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1210295   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1210296   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1210297   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1210298   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1210299   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1210300   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1210301   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1210302   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1210303   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1210304   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1210305   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1210306   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1210307   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1210308   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1210309   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1210310   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1210311   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1210312   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1210313   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1210314   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1210315   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1210316   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1210317   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1210318   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1210319   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1210320   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1210321   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1210322   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1210323   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1210324   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1210325   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1210326   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1210327   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1210328   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1210329   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1210330   +END;
MPRINT(EM_DIAGRAM):   END;
1210331   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1210332   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1210333   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1210334   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1210335   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1210336   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1210337   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1210338   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1210339   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1210340   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1210341   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1210342   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1210343   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1210344   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1210345   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1210346   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1210347   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1210348   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1210349   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1210350   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1210351   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1210352   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1210353   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1210354   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1210355   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1210356   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1210357   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1210358   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1210359   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1210360   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1210361   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1210362   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1210363   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1210364   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1210365   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1210366   +   ELSE S_NumCatalogPurchases
1210367   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1210368   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1210369   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1210370   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1210371   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1210372   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1210373   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1210374   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1210375   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1210376   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1210377   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1210378   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1210379   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1210380   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1210381   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1210382   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1210383   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1210384   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1210385   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1210386   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1210387   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1210388   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1210389   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1210390   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1210391   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1210392   +END;
MPRINT(EM_DIAGRAM):   END;
1210393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210394   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1210395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210396   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210397   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1210398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210399   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210400   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1210401   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210402   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1210403   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
1210404   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
1210405   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
1210406   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
1210407   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
1210408   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
1210409   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
1210410   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
1210411   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
1210412   +          +     3.45371614080196 * S_NumDealsPurchases
1210413   +          +     0.19118374544537 * S_NumDistPurchases
1210414   +          +    -2.45138001446793 * S_NumStorePurchases
1210415   +          +    -0.11424280244155 * S_NumWebPurchases
1210416   +          +    -2.31770357716565 * S_NumWebVisitsMonth
1210417   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
1210418   +        S_RMntFrq  +     0.26870809438679 * S_Recency
1210419   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 * 
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 * 
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts + 
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 * 
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines + 
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases + 
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases + 
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases + 
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 * 
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
1210420   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
1210421   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
1210422   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
1210423   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
1210424   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
1210425   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
1210426   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
1210427   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
1210428   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
1210429   +          +    -1.28390925647659 * S_NumDealsPurchases
1210430   +          +     0.82669177239926 * S_NumDistPurchases
1210431   +          +     1.71678585204511 * S_NumStorePurchases
1210432   +          +     1.49226295608046 * S_NumWebPurchases
1210433   +          +     -4.0105103018388 * S_NumWebVisitsMonth
1210434   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
1210435   +        S_RMntFrq  +     4.74241121363086 * S_Recency
1210436   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 * 
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome 
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 * 
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts + 
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 * 
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 * 
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 * 
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 * 
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq + 
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
1210437   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
1210438   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
1210439   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
1210440   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
1210441   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
1210442   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
1210443   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
1210444   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
1210445   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
1210446   +          +     0.22958626391725 * S_NumDealsPurchases
1210447   +          +    -0.02046515813996 * S_NumDistPurchases
1210448   +          +      0.8618502050837 * S_NumStorePurchases
1210449   +          +     1.45175370326009 * S_NumWebPurchases
1210450   +          +    -0.86122442436156 * S_NumWebVisitsMonth
1210451   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
1210452   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
1210453   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 * 
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome 
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 * 
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts + 
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 * 
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 * 
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 * 
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 * 
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq + 
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
1210454   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
1210455   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
1210456   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
1210457   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
1210458   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
1210459   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
1210460   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
1210461   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
1210462   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
1210463   +          +     1.25310034610344 * S_NumDealsPurchases
1210464   +          +     0.92141098602176 * S_NumDistPurchases
1210465   +          +    -0.08806509391473 * S_NumStorePurchases
1210466   +          +     -1.0533787624668 * S_NumWebPurchases
1210467   +          +     3.07050739830585 * S_NumWebVisitsMonth
1210468   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
1210469   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
1210470   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 * 
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome 
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 * 
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts + 
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 * 
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 * 
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 * 
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 * 
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq + 
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
1210471   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
1210472   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
1210473   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
1210474   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
1210475   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
1210476   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
1210477   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
1210478   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
1210479   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
1210480   +          +    -1.68259553608287 * S_NumDealsPurchases
1210481   +          +    -0.53835572290445 * S_NumDistPurchases
1210482   +          +     1.25833922835446 * S_NumStorePurchases
1210483   +          +     0.48300830623998 * S_NumWebPurchases
1210484   +          +    -2.20119275236582 * S_NumWebVisitsMonth
1210485   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
1210486   +        S_RMntFrq  +     0.35692712879409 * S_Recency
1210487   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 * 
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome 
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 * 
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts + 
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 * 
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 * 
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 * 
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 * 
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq + 
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
1210488   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
1210489   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
1210490   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
1210491   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
1210492   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 * 
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 + 
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 * 
HigherEducationBinary0 ;
1210493   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
1210494   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
1210495   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
1210496   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
1210497   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 * 
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 + 
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 * 
HigherEducationBinary0 ;
1210498   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
1210499   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
1210500   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
1210501   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
1210502   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 * 
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 + 
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 * 
HigherEducationBinary0 ;
1210503   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
1210504   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
1210505   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
1210506   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
1210507   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355 
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 + 
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 * 
HigherEducationBinary0 ;
1210508   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
1210509   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
1210510   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
1210511   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
1210512   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255 
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 + 
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 * 
HigherEducationBinary0 ;
1210513   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
1210514   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
1210515   +        EducationGraduation  +     1.25189584055994 * EducationMaster
1210516   +          +     0.26230568150721 * Marital_StatusDivorced
1210517   +          +     0.27563523967756 * Marital_StatusMarried
1210518   +          +     0.54464481618478 * Marital_StatusSingle
1210519   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931 
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster 
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried + 
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
1210520   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
1210521   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
1210522   +        EducationGraduation  +     0.29772013614284 * EducationMaster
1210523   +          +    -0.06750661313108 * Marital_StatusDivorced
1210524   +          +     1.48628445854207 * Marital_StatusMarried
1210525   +          +    -0.52197797291165 * Marital_StatusSingle
1210526   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle + 
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284 
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 * 
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 * 
Marital_StatusTogether ;
1210527   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
1210528   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
1210529   +        EducationGraduation  +     0.45665087056809 * EducationMaster
1210530   +          +     0.03219453957597 * Marital_StatusDivorced
1210531   +          +    -0.73835008216677 * Marital_StatusMarried
1210532   +          +     0.11212575818086 * Marital_StatusSingle
1210533   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle + 
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 * 
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 * 
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 * 
Marital_StatusTogether ;
1210534   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
1210535   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
1210536   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
1210537   +          +    -0.95055539413405 * Marital_StatusDivorced
1210538   +          +    -1.65922419336067 * Marital_StatusMarried
1210539   +          +     0.78727538125107 * Marital_StatusSingle
1210540   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle + 
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701 
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 * 
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 * 
Marital_StatusTogether ;
1210541   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
1210542   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
1210543   +        EducationGraduation  +     0.46710355433642 * EducationMaster
1210544   +          +     -4.1747415035634 * Marital_StatusDivorced
1210545   +          +     3.61194282451968 * Marital_StatusMarried
1210546   +          +     -3.2800495365546 * Marital_StatusSingle
1210547   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle + 
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642 
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 * 
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 * 
Marital_StatusTogether ;
1210548   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
1210549   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
1210550   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
1210551   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
1210552   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
1210553   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1210554   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1210555   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1210556   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1210557   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1210558   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1210559   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1210560   +END;
MPRINT(EM_DIAGRAM):   END;
1210561   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1210562   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1210563   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1210564   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1210565   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1210566   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1210567   +END;
MPRINT(EM_DIAGRAM):   END;
1210568   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210569   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1210570   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210571   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1210572   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
1210573   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
1210574   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
1210575   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
1210576   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
1210577   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
1210578   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
1210579   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
1210580   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
1210581   +          +     1.29727972396867 * S_NumDealsPurchases
1210582   +          +     -0.4796144286007 * S_NumDistPurchases
1210583   +          +     0.88365985808591 * S_NumStorePurchases
1210584   +          +     0.68522096892804 * S_NumWebPurchases
1210585   +          +     0.54931043107798 * S_NumWebVisitsMonth
1210586   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
1210587   +        S_RMntFrq  +     2.35704770144328 * S_Recency
1210588   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 * 
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome 
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 * 
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts + 
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 * 
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 * 
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 * 
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 * 
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq + 
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
1210589   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
1210590   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
1210591   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
1210592   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
1210593   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
1210594   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
1210595   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
1210596   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
1210597   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
1210598   +          +     0.26997834581422 * S_NumDealsPurchases
1210599   +          +      1.4974894627406 * S_NumDistPurchases
1210600   +          +     0.20577850505638 * S_NumStorePurchases
1210601   +          +     0.67578530037026 * S_NumWebPurchases
1210602   +          +     1.48893165613941 * S_NumWebVisitsMonth
1210603   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
1210604   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
1210605   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 * 
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 * 
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts + 
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 * 
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines + 
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases + 
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases + 
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases + 
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 * 
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
1210606   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
1210607   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
1210608   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
1210609   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
1210610   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
1210611   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
1210612   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
1210613   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
1210614   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
1210615   +          +    -0.75474919633886 * S_NumDealsPurchases
1210616   +          +     2.21872386475638 * S_NumDistPurchases
1210617   +          +    -0.36191460108989 * S_NumStorePurchases
1210618   +          +     0.03160010932412 * S_NumWebPurchases
1210619   +          +     0.00984650739909 * S_NumWebVisitsMonth
1210620   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
1210621   +        S_RMntFrq  +     0.97890474913417 * S_Recency
1210622   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 * 
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome + 
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 * 
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts + 
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 * 
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 * 
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 * 
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 * 
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq + 
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
1210623   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
1210624   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
1210625   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
1210626   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
1210627   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
1210628   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
1210629   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
1210630   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
1210631   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
1210632   +          +    -1.12057357865269 * S_NumDealsPurchases
1210633   +          +    -0.70841760614521 * S_NumDistPurchases
1210634   +          +    -1.39174816270404 * S_NumStorePurchases
1210635   +          +    -1.62343249380806 * S_NumWebPurchases
1210636   +          +    -0.73097954508465 * S_NumWebVisitsMonth
1210637   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
1210638   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
1210639   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 * 
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 * 
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658 
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts + 
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 * 
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 * 
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 * 
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 * 
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq + 
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
1210640   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
1210641   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
1210642   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
1210643   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
1210644   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
1210645   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
1210646   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
1210647   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
1210648   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
1210649   +          +     0.66880481485557 * S_NumDealsPurchases
1210650   +          +     0.69540174544859 * S_NumDistPurchases
1210651   +          +     1.68246546921736 * S_NumStorePurchases
1210652   +          +     1.85958176898295 * S_NumWebPurchases
1210653   +          +    -0.23815810306565 * S_NumWebVisitsMonth
1210654   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
1210655   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
1210656   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 * 
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome 
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 * 
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts + 
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 * 
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 * 
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 * 
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 * 
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq + 
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
1210657   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
1210658   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
1210659   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
1210660   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
1210661   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761 
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 + 
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 * 
HigherEducationBinary0 ;
1210662   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
1210663   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
1210664   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
1210665   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
1210666   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 * 
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 + 
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 * 
HigherEducationBinary0 ;
1210667   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
1210668   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
1210669   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
1210670   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
1210671   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 * 
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 + 
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 * 
HigherEducationBinary0 ;
1210672   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
1210673   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
1210674   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
1210675   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
1210676   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 * 
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 + 
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 * 
HigherEducationBinary0 ;
1210677   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
1210678   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
1210679   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
1210680   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
1210681   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 * 
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 + 
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 * 
HigherEducationBinary0 ;
1210682   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
1210683   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
1210684   +        EducationGraduation  +     0.32623787352656 * EducationMaster
1210685   +          +      0.2766977476799 * Marital_StatusDivorced
1210686   +          +     0.99585126449473 * Marital_StatusMarried
1210687   +          +    -0.71244490682808 * Marital_StatusSingle
1210688   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle + 
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656 
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 * 
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 * 
Marital_StatusTogether ;
1210689   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
1210690   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
1210691   +        EducationGraduation  +     0.47239961039918 * EducationMaster
1210692   +          +     0.04724779113048 * Marital_StatusDivorced
1210693   +          +    -0.80186231440666 * Marital_StatusMarried
1210694   +          +    -0.02226793584171 * Marital_StatusSingle
1210695   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle + 
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918 
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 * 
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 * 
Marital_StatusTogether ;
1210696   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
1210697   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
1210698   +        EducationGraduation  +     0.41284540548646 * EducationMaster
1210699   +          +     0.28206835683721 * Marital_StatusDivorced
1210700   +          +     0.46500886756532 * Marital_StatusMarried
1210701   +          +     0.35327545255503 * Marital_StatusSingle
1210702   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle + 
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation + 
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced + 
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle + 
0.58394650567036 * Marital_StatusTogether ;
1210703   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
1210704   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
1210705   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
1210706   +          +     1.22291788006392 * Marital_StatusDivorced
1210707   +          +    -2.27040720272432 * Marital_StatusMarried
1210708   +          +     1.13606780043773 * Marital_StatusSingle
1210709   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle + 
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479 
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 * 
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 * 
Marital_StatusTogether ;
1210710   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
1210711   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
1210712   +        EducationGraduation  +      0.4909097120378 * EducationMaster
1210713   +          +     -0.3999800759199 * Marital_StatusDivorced
1210714   +          +    -0.40978271635345 * Marital_StatusMarried
1210715   +          +    -0.55524279444227 * Marital_StatusSingle
1210716   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle + 
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 * 
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 * 
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 * 
Marital_StatusTogether ;
1210717   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
1210718   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
1210719   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
1210720   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
1210721   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
1210722   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1210723   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1210724   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1210725   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
1210726   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
1210727   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
1210728   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
1210729   +END;
MPRINT(EM_DIAGRAM):   END;
1210730   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1210731   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1210732   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1210733   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1210734   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1210735   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1210736   +END;
MPRINT(EM_DIAGRAM):   END;
1210737   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210738   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1210739   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210740   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1210741   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
1210742   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
1210743   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
1210744   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
1210745   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
1210746   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
1210747   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
1210748   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
1210749   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
1210750   +          +     0.15783958682465 * S_NumDealsPurchases
1210751   +          +     1.52124708558457 * S_NumDistPurchases
1210752   +          +     -1.3804418313581 * S_NumStorePurchases
1210753   +          +    -1.29570111649272 * S_NumWebPurchases
1210754   +          +    -0.64280706056547 * S_NumWebVisitsMonth
1210755   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
1210756   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
1210757   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 * 
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome 
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 * 
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts + 
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 * 
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 * 
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 * 
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 * 
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq + 
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
1210758   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
1210759   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
1210760   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
1210761   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
1210762   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
1210763   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
1210764   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
1210765   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
1210766   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
1210767   +          +     0.12337111358286 * S_NumDealsPurchases
1210768   +          +     -2.3848926094027 * S_NumDistPurchases
1210769   +          +    -1.20666646996433 * S_NumStorePurchases
1210770   +          +     0.89549302881365 * S_NumWebPurchases
1210771   +          +     0.95359042569947 * S_NumWebVisitsMonth
1210772   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
1210773   +        S_RMntFrq  +     0.17682790616815 * S_Recency
1210774   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 * 
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome 
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 * 
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts + 
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 * 
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 * 
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 * 
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 * 
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq + 
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
1210775   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
1210776   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
1210777   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
1210778   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
1210779   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
1210780   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
1210781   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
1210782   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
1210783   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
1210784   +          +    -1.05383642674948 * S_NumDealsPurchases
1210785   +          +     1.71861984509369 * S_NumDistPurchases
1210786   +          +     1.47595181536047 * S_NumStorePurchases
1210787   +          +    -1.64165005491178 * S_NumWebPurchases
1210788   +          +    -2.35130004742828 * S_NumWebVisitsMonth
1210789   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
1210790   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
1210791   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 * 
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 * 
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241 
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts + 
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 * 
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 * 
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 * 
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 * 
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq + 
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
1210792   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
1210793   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
1210794   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
1210795   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
1210796   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
1210797   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
1210798   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
1210799   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
1210800   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
1210801   +          +     0.13347794794222 * S_NumDealsPurchases
1210802   +          +     0.30533639886561 * S_NumDistPurchases
1210803   +          +     1.63892955540526 * S_NumStorePurchases
1210804   +          +     0.43734586516446 * S_NumWebPurchases
1210805   +          +     1.79260779802864 * S_NumWebVisitsMonth
1210806   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
1210807   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
1210808   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 * 
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome + 
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 * 
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts + 
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 * 
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 * 
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 * 
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 * 
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq + 
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
1210809   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
1210810   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
1210811   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
1210812   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
1210813   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
1210814   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
1210815   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
1210816   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
1210817   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
1210818   +          +     1.64209094349557 * S_NumDealsPurchases
1210819   +          +    -0.38876870460627 * S_NumDistPurchases
1210820   +          +    -0.48559309584971 * S_NumStorePurchases
1210821   +          +     0.21254626353218 * S_NumWebPurchases
1210822   +          +    -0.71484448532542 * S_NumWebVisitsMonth
1210823   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
1210824   +        S_RMntFrq  +     0.44893411588775 * S_Recency
1210825   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 * 
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome 
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 * 
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts + 
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 * 
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 * 
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 * 
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 * 
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq + 
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
1210826   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
1210827   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
1210828   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
1210829   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
1210830   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 * 
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 + 
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 * 
HigherEducationBinary0 ;
1210831   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
1210832   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
1210833   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
1210834   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
1210835   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 * 
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 + 
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 * 
HigherEducationBinary0 ;
1210836   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
1210837   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
1210838   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
1210839   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
1210840   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 * 
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 + 
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 * 
HigherEducationBinary0 ;
1210841   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
1210842   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
1210843   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
1210844   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
1210845   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334 
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 + 
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 * 
HigherEducationBinary0 ;
1210846   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
1210847   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
1210848   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
1210849   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
1210850   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 * 
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 + 
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 * 
HigherEducationBinary0 ;
1210851   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
1210852   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
1210853   +        EducationGraduation  +     0.46887304015863 * EducationMaster
1210854   +          +     1.33953173091973 * Marital_StatusDivorced
1210855   +          +    -0.26253208073262 * Marital_StatusMarried
1210856   +          +    -0.00960552682431 * Marital_StatusSingle
1210857   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle + 
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation + 
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced + 
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle + 
1.02851334153667 * Marital_StatusTogether ;
1210858   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
1210859   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
1210860   +        EducationGraduation  +     1.05325310300372 * EducationMaster
1210861   +          +     1.43150850334311 * Marital_StatusDivorced
1210862   +          +    -0.69239127844934 * Marital_StatusMarried
1210863   +          +     2.08477562471559 * Marital_StatusSingle
1210864   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle + 
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372 
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 * 
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 * 
Marital_StatusTogether ;
1210865   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
1210866   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
1210867   +        EducationGraduation  +     1.80436924796338 * EducationMaster
1210868   +          +     1.08387556786168 * Marital_StatusDivorced
1210869   +          +      1.0283506000217 * Marital_StatusMarried
1210870   +          +    -0.87069431107983 * Marital_StatusSingle
1210871   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle + 
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338 
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 * 
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 * 
Marital_StatusTogether ;
1210872   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
1210873   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
1210874   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
1210875   +          +      -1.347780188307 * Marital_StatusDivorced
1210876   +          +    -0.53911983240372 * Marital_StatusMarried
1210877   +          +     0.22083074159185 * Marital_StatusSingle
1210878   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle + 
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation + 
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced + 
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle + 
0.46023807391468 * Marital_StatusTogether ;
1210879   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
1210880   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
1210881   +        EducationGraduation  +      1.6087631135774 * EducationMaster
1210882   +          +     1.46582538311384 * Marital_StatusDivorced
1210883   +          +     0.05256161016002 * Marital_StatusMarried
1210884   +          +    -1.21402967626877 * Marital_StatusSingle
1210885   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle + 
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 * 
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 * 
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 * 
Marital_StatusTogether ;
1210886   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
1210887   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
1210888   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
1210889   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
1210890   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
1210891   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1210892   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1210893   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1210894   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
1210895   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
1210896   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
1210897   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
1210898   +END;
MPRINT(EM_DIAGRAM):   END;
1210899   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1210900   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1210901   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1210902   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1210903   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1210904   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1210905   +END;
MPRINT(EM_DIAGRAM):   END;
1210906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210907   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1210908   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210909   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1210910   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
1210911   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
1210912   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 + 
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
1210913   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
1210914   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
1210915   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 + 
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
1210916   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
1210917   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
1210918   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 + 
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
1210919   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
1210920   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
1210921   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 + 
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
1210922   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
1210923   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
1210924   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2 
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
1210925   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
1210926   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
1210927   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2 
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
1210928   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
1210929   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
1210930   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2 
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
1210931   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
1210932   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
1210933   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2 
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
1210934   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
1210935   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
1210936   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2 
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
1210937   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
1210938   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
1210939   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 + 
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
1210940   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
1210941   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
1210942   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2 
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
1210943   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
1210944   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
1210945   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2 
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
1210946   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
1210947   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
1210948   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
1210949   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
1210950   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
1210951   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
1210952   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1210953   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1210954   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1210955   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1210956   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1210957   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1210958   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1210959   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1210960   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1210961   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1210962   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1210963   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1210964   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1210965   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1210966   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1210967   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1210968   +END;
MPRINT(EM_DIAGRAM):   END;
1210969   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1210970   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1210971   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1210972   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1210973   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1210974   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1210975   +END;
MPRINT(EM_DIAGRAM):   END;
1210976   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210977   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1210978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210979   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1210980   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
1210981   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
1210982   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 + 
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
1210983   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
1210984   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
1210985   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 + 
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
1210986   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
1210987   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
1210988   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 + 
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
1210989   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
1210990   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
1210991   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 + 
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
1210992   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
1210993   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
1210994   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 + 
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
1210995   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
1210996   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
1210997   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2 
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
1210998   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
1210999   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
1211000   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2 
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
1211001   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
1211002   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
1211003   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2 
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
1211004   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
1211005   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
1211006   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2 
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
1211007   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
1211008   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
1211009   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 * 
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
1211010   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
1211011   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
1211012   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2 
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
1211013   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
1211014   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
1211015   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2 
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
1211016   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
1211017   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
1211018   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
1211019   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
1211020   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
1211021   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
1211022   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1211023   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1211024   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1211025   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1211026   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1211027   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1211028   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1211029   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
1211030   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
1211031   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
1211032   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
1211033   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1211034   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1211035   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1211036   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
1211037   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
1211038   +END;
MPRINT(EM_DIAGRAM):   END;
1211039   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1211040   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1211041   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1211042   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1211043   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1211044   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1211045   +END;
MPRINT(EM_DIAGRAM):   END;
1211046   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211047   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1211048   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211049   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1211050   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
1211051   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
1211052   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 + 
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
1211053   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
1211054   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
1211055   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 + 
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
1211056   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
1211057   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
1211058   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 + 
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
1211059   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
1211060   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
1211061   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 + 
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
1211062   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
1211063   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
1211064   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2 
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
1211065   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
1211066   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
1211067   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2 
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
1211068   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
1211069   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
1211070   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2 
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
1211071   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
1211072   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
1211073   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 * 
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
1211074   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
1211075   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
1211076   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
1211077   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
1211078   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
1211079   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
1211080   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1211081   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1211082   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1211083   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1211084   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1211085   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
1211086   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
1211087   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
1211088   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
1211089   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
1211090   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
1211091   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1211092   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1211093   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
1211094   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
1211095   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
1211096   +END;
MPRINT(EM_DIAGRAM):   END;
1211097   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1211098   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1211099   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1211100   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1211101   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1211102   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1211103   +END;
MPRINT(EM_DIAGRAM):   END;
1211104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211105   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1211106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211107   +
1211108   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1211109   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1211110   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1211111   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1211112   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1211113   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211114   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1211115   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1211116   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1211117   +end;
MPRINT(EM_DIAGRAM):   end;
1211118   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211119   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1211120   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1211121   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1211122   +   end;
MPRINT(EM_DIAGRAM):   end;
1211123   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1211124   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1211125   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1211126   +   end;
MPRINT(EM_DIAGRAM):   end;
1211127   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211128   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1211129   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1211130   +   end;
MPRINT(EM_DIAGRAM):   end;
1211131   +end;
MPRINT(EM_DIAGRAM):   end;
1211132   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1211133   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
1211134   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
1211135   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 + 
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
1211136   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
1211137   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1211138   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1211139   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1211140   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1211141   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1211142   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1211143   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1211144   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1211145   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1211146   +END;
MPRINT(EM_DIAGRAM):   END;
1211147   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1211148   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1211149   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1211150   +END;
MPRINT(EM_DIAGRAM):   END;
1211151   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1211152   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1211153   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1211154   +END;
MPRINT(EM_DIAGRAM):   END;
1211155   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1211156   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1211157   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1211158   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1211159   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1211160   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1211161   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1211162   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211163   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1211164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211165   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1211166   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1211167   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1211168   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1211169   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1211170   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1211171   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1211172   +END;
MPRINT(EM_DIAGRAM):   END;
1211173   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1211174   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1211175   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1211176   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1211177   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
1211178   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211179   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
1211180   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211181   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
1211182   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
1211183   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
1211184   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
1211185   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211186   +* Renaming Into variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural10;
1211187   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211188   +length AutoNeural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural10_I_DepVar $32;
1211189   +drop AutoNeural10_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_I_DepVar;
1211190   +AutoNeural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural10_I_DepVar = I_DepVar;
1211191   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211192   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
1211193   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211194   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
1211195   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
1211196   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
1211197   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211198   +* Ensmbl47: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 2 of 5;
1211199   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211200   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211201   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1211202   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1211203   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
1211204   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211205   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1211206   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1211207   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1211208   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1211209   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1211210   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1211211   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1211212   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1211213   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1211214   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1211215   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1211216   +LENGTH _WARN_ $4
1211217   +      F_DepVar  $ 12
1211218   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1211219   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1211220   +
1211221   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1211222   +
1211223   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1211224   +
1211225   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1211226   +
1211227   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1211228   +
1211229   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1211230   +
1211231   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1211232   +
1211233   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1211234   +
1211235   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1211236   +
1211237   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1211238   +
1211239   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1211240   +
1211241   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1211242   +
1211243   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1211244   +
1211245   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1211246   +
1211247   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1211248   +
1211249   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1211250   +
1211251   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1211252   +
1211253   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1211254   +
1211255   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1211256   +
1211257   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1211258   +
1211259   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1211260   +
1211261   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1211262   +
1211263   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1211264   +
1211265   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1211266   +
1211267   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1211268   +
1211269   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1211270   +
1211271   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1211272   +
1211273   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1211274   +
1211275   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1211276   +
1211277   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1211278   +
1211279   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1211280   +
1211281   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1211282   +
1211283   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1211284   +
1211285   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1211286   +
1211287   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1211288   +
1211289   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1211290   +
1211291   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1211292   +
1211293   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1211294   +
1211295   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1211296   +
1211297   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1211298   +
1211299   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1211300   +
1211301   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1211302   +
1211303   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1211304   +
1211305   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1211306   +
1211307   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1211308   +
1211309   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1211310   +
1211311   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1211312   +
1211313   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1211314   +
1211315   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1211316   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1211317   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1211318   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1211319   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211320   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211321   +end;
MPRINT(EM_DIAGRAM):   end;
1211322   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211323   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211324   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1211325   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211326   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1211327   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1211328   +   end;
MPRINT(EM_DIAGRAM):   end;
1211329   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1211330   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1211331   +   end;
MPRINT(EM_DIAGRAM):   end;
1211332   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211333   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1211334   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211335   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211336   +   end;
MPRINT(EM_DIAGRAM):   end;
1211337   +end;
MPRINT(EM_DIAGRAM):   end;
1211338   +
1211339   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1211340   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1211341   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1211342   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1211343   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211344   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211345   +end;
MPRINT(EM_DIAGRAM):   end;
1211346   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211347   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211348   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1211349   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211350   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1211351   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1211352   +   end;
MPRINT(EM_DIAGRAM):   end;
1211353   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1211354   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1211355   +   end;
MPRINT(EM_DIAGRAM):   end;
1211356   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211357   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1211358   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211359   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211360   +   end;
MPRINT(EM_DIAGRAM):   end;
1211361   +end;
MPRINT(EM_DIAGRAM):   end;
1211362   +
1211363   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1211364   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1211365   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1211366   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1211367   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211368   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211369   +end;
MPRINT(EM_DIAGRAM):   end;
1211370   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211371   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211372   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1211373   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211374   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1211375   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1211376   +   end;
MPRINT(EM_DIAGRAM):   end;
1211377   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1211378   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1211379   +   end;
MPRINT(EM_DIAGRAM):   end;
1211380   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211381   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1211382   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211383   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211384   +   end;
MPRINT(EM_DIAGRAM):   end;
1211385   +end;
MPRINT(EM_DIAGRAM):   end;
1211386   +
1211387   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1211388   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1211389   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1211390   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1211391   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211392   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211393   +end;
MPRINT(EM_DIAGRAM):   end;
1211394   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211395   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211396   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1211397   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211398   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1211399   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1211400   +   end;
MPRINT(EM_DIAGRAM):   end;
1211401   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1211402   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1211403   +   end;
MPRINT(EM_DIAGRAM):   end;
1211404   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211405   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1211406   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211407   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211408   +   end;
MPRINT(EM_DIAGRAM):   end;
1211409   +end;
MPRINT(EM_DIAGRAM):   end;
1211410   +
1211411   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1211412   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1211413   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1211414   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1211415   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211416   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211417   +end;
MPRINT(EM_DIAGRAM):   end;
1211418   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211419   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211420   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1211421   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211422   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1211423   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1211424   +   end;
MPRINT(EM_DIAGRAM):   end;
1211425   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1211426   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1211427   +   end;
MPRINT(EM_DIAGRAM):   end;
1211428   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211429   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1211430   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211431   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211432   +   end;
MPRINT(EM_DIAGRAM):   end;
1211433   +end;
MPRINT(EM_DIAGRAM):   end;
1211434   +
1211435   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1211436   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1211437   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1211438   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1211439   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211440   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211441   +end;
MPRINT(EM_DIAGRAM):   end;
1211442   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211443   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211444   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1211445   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211446   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1211447   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1211448   +   end;
MPRINT(EM_DIAGRAM):   end;
1211449   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1211450   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1211451   +   end;
MPRINT(EM_DIAGRAM):   end;
1211452   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211453   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1211454   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211455   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211456   +   end;
MPRINT(EM_DIAGRAM):   end;
1211457   +end;
MPRINT(EM_DIAGRAM):   end;
1211458   +
1211459   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1211460   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1211461   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1211462   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1211463   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211464   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211465   +end;
MPRINT(EM_DIAGRAM):   end;
1211466   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211467   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211468   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1211469   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211470   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1211471   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1211472   +   end;
MPRINT(EM_DIAGRAM):   end;
1211473   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1211474   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1211475   +   end;
MPRINT(EM_DIAGRAM):   end;
1211476   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211477   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1211478   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211479   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211480   +   end;
MPRINT(EM_DIAGRAM):   end;
1211481   +end;
MPRINT(EM_DIAGRAM):   end;
1211482   +
1211483   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1211484   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1211485   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1211486   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1211487   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1211488   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1211489   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1211490   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1211491   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1211492   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1211493   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1211494   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1211495   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211496   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211497   +end;
MPRINT(EM_DIAGRAM):   end;
1211498   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211499   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1211500   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1211501   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211502   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1211503   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1211504   +   end;
MPRINT(EM_DIAGRAM):   end;
1211505   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1211506   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1211507   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1211508   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1211509   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1211510   +   end;
MPRINT(EM_DIAGRAM):   end;
1211511   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1211512   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1211513   +   end;
MPRINT(EM_DIAGRAM):   end;
1211514   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1211515   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1211516   +   end;
MPRINT(EM_DIAGRAM):   end;
1211517   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1211518   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1211519   +   end;
MPRINT(EM_DIAGRAM):   end;
1211520   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211521   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1211522   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1211523   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1211524   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1211525   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211526   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211527   +   end;
MPRINT(EM_DIAGRAM):   end;
1211528   +end;
MPRINT(EM_DIAGRAM):   end;
1211529   +
1211530   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1211531   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1211532   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1211533   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1211534   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1211535   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1211536   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1211537   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1211538   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1211539   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1211540   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1211541   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1211542   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1211543   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211544   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211545   +end;
MPRINT(EM_DIAGRAM):   end;
1211546   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211547   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1211548   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1211549   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211550   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1211551   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1211552   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1211553   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1211554   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1211555   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1211556   +         end;
MPRINT(EM_DIAGRAM):   end;
1211557   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1211558   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1211559   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1211560   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1211561   +            end;
MPRINT(EM_DIAGRAM):   end;
1211562   +         end;
MPRINT(EM_DIAGRAM):   end;
1211563   +      end;
MPRINT(EM_DIAGRAM):   end;
1211564   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1211565   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1211566   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1211567   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1211568   +         end;
MPRINT(EM_DIAGRAM):   end;
1211569   +      end;
MPRINT(EM_DIAGRAM):   end;
1211570   +   end;
MPRINT(EM_DIAGRAM):   end;
1211571   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211572   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1211573   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1211574   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1211575   +      end;
MPRINT(EM_DIAGRAM):   end;
1211576   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1211577   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1211578   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1211579   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1211580   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1211581   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1211582   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1211583   +         end;
MPRINT(EM_DIAGRAM):   end;
1211584   +      end;
MPRINT(EM_DIAGRAM):   end;
1211585   +   end;
MPRINT(EM_DIAGRAM):   end;
1211586   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1211587   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1211588   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1211589   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1211590   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1211591   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211592   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211593   +   end;
MPRINT(EM_DIAGRAM):   end;
1211594   +end;
MPRINT(EM_DIAGRAM):   end;
1211595   +
1211596   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211597   +*** Checking missing input Interval
1211598   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1211599   +
1211600   +IF NMISS(
1211601   +   AcceptedCmpTotal ,
1211602   +   Age ,
1211603   +   Frq ,
1211604   +   Income ,
1211605   +   Kidhome ,
1211606   +   Mnt ,
1211607   +   MntFishProducts ,
1211608   +   MntFruits ,
1211609   +   MntGoldProds ,
1211610   +   MntMeatProducts ,
1211611   +   MntSweetProducts ,
1211612   +   MntWines ,
1211613   +   MonthsAsCustomer ,
1211614   +   NumCatalogPurchases ,
1211615   +   NumDealsPurchases ,
1211616   +   NumDistPurchases ,
1211617   +   NumStorePurchases ,
1211618   +   NumWebPurchases ,
1211619   +   NumWebVisitsMonth ,
1211620   +   RFMstat ,
1211621   +   RMntFrq ,
1211622   +   Recency ,
1211623   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1211624   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1211625   +
1211626   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211627   +END;
MPRINT(EM_DIAGRAM):   END;
1211628   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211629   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1211630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211631   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1211632   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1211633   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1211634   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1211635   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1211636   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1211637   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1211638   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1211639   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1211640   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1211641   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1211642   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1211643   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1211644   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1211645   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1211646   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1211647   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1211648   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1211649   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1211650   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1211651   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1211652   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1211653   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1211654   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1211655   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1211656   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1211657   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1211658   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1211659   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1211660   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1211661   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1211662   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1211663   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1211664   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1211665   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1211666   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1211667   +END;
MPRINT(EM_DIAGRAM):   END;
1211668   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1211669   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1211670   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1211671   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1211672   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1211673   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1211674   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1211675   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1211676   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1211677   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1211678   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1211679   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1211680   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1211681   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1211682   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1211683   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1211684   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1211685   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1211686   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1211687   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1211688   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1211689   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1211690   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1211691   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1211692   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1211693   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1211694   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1211695   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1211696   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1211697   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1211698   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1211699   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1211700   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1211701   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1211702   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1211703   +   ELSE S_NumCatalogPurchases
1211704   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1211705   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1211706   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1211707   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1211708   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1211709   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1211710   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1211711   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1211712   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1211713   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1211714   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1211715   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1211716   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1211717   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1211718   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1211719   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1211720   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1211721   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1211722   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1211723   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1211724   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1211725   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1211726   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1211727   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1211728   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1211729   +END;
MPRINT(EM_DIAGRAM):   END;
1211730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211731   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1211732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211733   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211734   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1211735   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211737   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1211738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211739   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1211740   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
1211741   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
1211742   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
1211743   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
1211744   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
1211745   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
1211746   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
1211747   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
1211748   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
1211749   +          +     0.09708841024031 * S_NumDealsPurchases
1211750   +          +    -0.29075561032014 * S_NumDistPurchases
1211751   +          +    -0.14495394259873 * S_NumStorePurchases
1211752   +          +     0.11890705145732 * S_NumWebPurchases
1211753   +          +    -0.16954189911344 * S_NumWebVisitsMonth
1211754   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
1211755   +        S_RMntFrq  +     0.17150719398884 * S_Recency
1211756   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
1211757   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
1211758   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
1211759   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
1211760   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
1211761   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
1211762   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
1211763   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
1211764   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
1211765   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
1211766   +          +     0.16274478997892 * S_NumDealsPurchases
1211767   +          +     0.03966958784582 * S_NumDistPurchases
1211768   +          +    -0.04714110726598 * S_NumStorePurchases
1211769   +          +    -0.02124229528082 * S_NumWebPurchases
1211770   +          +     0.29753299776832 * S_NumWebVisitsMonth
1211771   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
1211772   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
1211773   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
1211774   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
1211775   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
1211776   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
1211777   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
1211778   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
1211779   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
1211780   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
1211781   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
1211782   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
1211783   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
1211784   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
1211785   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
1211786   +        EducationGraduation  +     0.00619669837452 * EducationMaster
1211787   +          +    -0.05037639679806 * Marital_StatusDivorced
1211788   +          +     0.28781968727878 * Marital_StatusMarried
1211789   +          +    -0.20382417074384 * Marital_StatusSingle
1211790   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
1211791   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
1211792   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
1211793   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
1211794   +          +     0.06970969219123 * Marital_StatusDivorced
1211795   +          +    -0.15787475744986 * Marital_StatusMarried
1211796   +          +     0.14345344072192 * Marital_StatusSingle
1211797   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
1211798   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
1211799   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
1211800   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1211801   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1211802   +END;
MPRINT(EM_DIAGRAM):   END;
1211803   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1211804   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1211805   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1211806   +END;
MPRINT(EM_DIAGRAM):   END;
1211807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211808   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1211809   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211810   +
1211811   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1211812   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1211813   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1211814   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1211815   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1211816   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211817   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1211818   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1211819   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1211820   +end;
MPRINT(EM_DIAGRAM):   end;
1211821   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211822   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1211823   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1211824   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1211825   +   end;
MPRINT(EM_DIAGRAM):   end;
1211826   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1211827   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1211828   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1211829   +   end;
MPRINT(EM_DIAGRAM):   end;
1211830   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211831   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1211832   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1211833   +   end;
MPRINT(EM_DIAGRAM):   end;
1211834   +end;
MPRINT(EM_DIAGRAM):   end;
1211835   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1211836   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
1211837   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
1211838   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
1211839   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1211840   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1211841   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1211842   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1211843   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1211844   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1211845   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1211846   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1211847   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1211848   +END;
MPRINT(EM_DIAGRAM):   END;
1211849   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1211850   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1211851   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1211852   +END;
MPRINT(EM_DIAGRAM):   END;
1211853   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1211854   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1211855   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1211856   +END;
MPRINT(EM_DIAGRAM):   END;
1211857   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1211858   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1211859   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1211860   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1211861   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1211862   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1211863   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1211864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211865   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1211866   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211867   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1211868   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1211869   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1211870   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1211871   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1211872   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1211873   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1211874   +END;
MPRINT(EM_DIAGRAM):   END;
1211875   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1211876   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1211877   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1211878   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1211879   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
1211880   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211881   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
1211882   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211883   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
1211884   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
1211885   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
1211886   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
1211887   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211888   +* Renaming Into variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural7;
1211889   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211890   +length AutoNeural7_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural7_I_DepVar $32;
1211891   +drop AutoNeural7_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_I_DepVar;
1211892   +AutoNeural7_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural7_I_DepVar = I_DepVar;
1211893   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211894   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
1211895   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211896   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
1211897   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
1211898   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
1211899   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211900   +* Ensmbl47: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 3 of 5;
1211901   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211902   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211903   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1211904   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1211905   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
1211906   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211907   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1211908   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1211909   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1211910   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1211911   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1211912   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1211913   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1211914   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1211915   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1211916   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1211917   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1211918   +LENGTH _WARN_ $4
1211919   +      F_DepVar  $ 12
1211920   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1211921   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1211922   +
1211923   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1211924   +
1211925   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1211926   +
1211927   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1211928   +
1211929   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1211930   +
1211931   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1211932   +
1211933   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1211934   +
1211935   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1211936   +
1211937   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1211938   +
1211939   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1211940   +
1211941   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1211942   +
1211943   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1211944   +
1211945   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1211946   +
1211947   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1211948   +
1211949   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1211950   +
1211951   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1211952   +
1211953   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1211954   +
1211955   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1211956   +
1211957   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1211958   +
1211959   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1211960   +
1211961   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1211962   +
1211963   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1211964   +
1211965   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1211966   +
1211967   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1211968   +
1211969   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1211970   +
1211971   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1211972   +
1211973   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1211974   +
1211975   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1211976   +
1211977   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1211978   +
1211979   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1211980   +
1211981   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1211982   +
1211983   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1211984   +
1211985   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1211986   +
1211987   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1211988   +
1211989   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1211990   +
1211991   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1211992   +
1211993   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1211994   +
1211995   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1211996   +
1211997   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1211998   +
1211999   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1212000   +
1212001   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1212002   +
1212003   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1212004   +
1212005   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1212006   +
1212007   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1212008   +
1212009   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1212010   +
1212011   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1212012   +
1212013   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1212014   +
1212015   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1212016   +
1212017   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1212018   +
1212019   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1212020   +
1212021   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1212022   +
1212023   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
1212024   +
1212025   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1212026   +
1212027   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1212028   +
1212029   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1212030   +
1212031   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1212032   +
1212033   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1212034   +
1212035   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1212036   +
1212037   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
1212038   +
1212039   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1212040   +
1212041   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1212042   +
1212043   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1212044   +
1212045   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1212046   +
1212047   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1212048   +
1212049   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1212050   +
1212051   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1212052   +
1212053   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1212054   +
1212055   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1212056   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1212057   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1212058   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1212059   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212060   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212061   +end;
MPRINT(EM_DIAGRAM):   end;
1212062   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212063   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212064   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1212065   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212066   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1212067   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1212068   +   end;
MPRINT(EM_DIAGRAM):   end;
1212069   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1212070   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1212071   +   end;
MPRINT(EM_DIAGRAM):   end;
1212072   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212073   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1212074   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212075   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212076   +   end;
MPRINT(EM_DIAGRAM):   end;
1212077   +end;
MPRINT(EM_DIAGRAM):   end;
1212078   +
1212079   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1212080   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1212081   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1212082   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1212083   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212084   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212085   +end;
MPRINT(EM_DIAGRAM):   end;
1212086   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212087   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212088   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1212089   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212090   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1212091   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1212092   +   end;
MPRINT(EM_DIAGRAM):   end;
1212093   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1212094   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1212095   +   end;
MPRINT(EM_DIAGRAM):   end;
1212096   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212097   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1212098   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212099   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212100   +   end;
MPRINT(EM_DIAGRAM):   end;
1212101   +end;
MPRINT(EM_DIAGRAM):   end;
1212102   +
1212103   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1212104   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1212105   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1212106   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1212107   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212108   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212109   +end;
MPRINT(EM_DIAGRAM):   end;
1212110   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212111   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212112   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1212113   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212114   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1212115   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1212116   +   end;
MPRINT(EM_DIAGRAM):   end;
1212117   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1212118   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1212119   +   end;
MPRINT(EM_DIAGRAM):   end;
1212120   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212121   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1212122   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212123   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212124   +   end;
MPRINT(EM_DIAGRAM):   end;
1212125   +end;
MPRINT(EM_DIAGRAM):   end;
1212126   +
1212127   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1212128   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1212129   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1212130   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1212131   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212132   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212133   +end;
MPRINT(EM_DIAGRAM):   end;
1212134   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212135   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212136   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1212137   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212138   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1212139   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1212140   +   end;
MPRINT(EM_DIAGRAM):   end;
1212141   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1212142   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1212143   +   end;
MPRINT(EM_DIAGRAM):   end;
1212144   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212145   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1212146   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212147   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212148   +   end;
MPRINT(EM_DIAGRAM):   end;
1212149   +end;
MPRINT(EM_DIAGRAM):   end;
1212150   +
1212151   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1212152   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1212153   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1212154   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1212155   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212156   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212157   +end;
MPRINT(EM_DIAGRAM):   end;
1212158   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212159   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212160   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1212161   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212162   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1212163   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1212164   +   end;
MPRINT(EM_DIAGRAM):   end;
1212165   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1212166   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1212167   +   end;
MPRINT(EM_DIAGRAM):   end;
1212168   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212169   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1212170   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212171   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212172   +   end;
MPRINT(EM_DIAGRAM):   end;
1212173   +end;
MPRINT(EM_DIAGRAM):   end;
1212174   +
1212175   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1212176   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1212177   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1212178   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1212179   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212180   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212181   +end;
MPRINT(EM_DIAGRAM):   end;
1212182   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212183   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212184   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1212185   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212186   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1212187   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1212188   +   end;
MPRINT(EM_DIAGRAM):   end;
1212189   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1212190   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1212191   +   end;
MPRINT(EM_DIAGRAM):   end;
1212192   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212193   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1212194   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212195   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212196   +   end;
MPRINT(EM_DIAGRAM):   end;
1212197   +end;
MPRINT(EM_DIAGRAM):   end;
1212198   +
1212199   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1212200   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1212201   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1212202   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1212203   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212204   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212205   +end;
MPRINT(EM_DIAGRAM):   end;
1212206   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212207   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212208   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1212209   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212210   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1212211   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1212212   +   end;
MPRINT(EM_DIAGRAM):   end;
1212213   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1212214   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1212215   +   end;
MPRINT(EM_DIAGRAM):   end;
1212216   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212217   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1212218   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212219   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212220   +   end;
MPRINT(EM_DIAGRAM):   end;
1212221   +end;
MPRINT(EM_DIAGRAM):   end;
1212222   +
1212223   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1212224   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1212225   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1212226   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1212227   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1212228   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1212229   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1212230   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1212231   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1212232   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1212233   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1212234   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1212235   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212236   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212237   +end;
MPRINT(EM_DIAGRAM):   end;
1212238   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212239   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1212240   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1212241   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212242   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1212243   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1212244   +   end;
MPRINT(EM_DIAGRAM):   end;
1212245   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1212246   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1212247   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1212248   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1212249   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1212250   +   end;
MPRINT(EM_DIAGRAM):   end;
1212251   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1212252   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1212253   +   end;
MPRINT(EM_DIAGRAM):   end;
1212254   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1212255   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1212256   +   end;
MPRINT(EM_DIAGRAM):   end;
1212257   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1212258   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1212259   +   end;
MPRINT(EM_DIAGRAM):   end;
1212260   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212261   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1212262   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1212263   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1212264   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1212265   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212266   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212267   +   end;
MPRINT(EM_DIAGRAM):   end;
1212268   +end;
MPRINT(EM_DIAGRAM):   end;
1212269   +
1212270   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1212271   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1212272   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1212273   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1212274   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1212275   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1212276   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1212277   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1212278   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1212279   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1212280   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1212281   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1212282   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1212283   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212284   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212285   +end;
MPRINT(EM_DIAGRAM):   end;
1212286   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212287   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1212288   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1212289   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212290   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1212291   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1212292   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1212293   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1212294   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1212295   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1212296   +         end;
MPRINT(EM_DIAGRAM):   end;
1212297   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1212298   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1212299   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1212300   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1212301   +            end;
MPRINT(EM_DIAGRAM):   end;
1212302   +         end;
MPRINT(EM_DIAGRAM):   end;
1212303   +      end;
MPRINT(EM_DIAGRAM):   end;
1212304   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1212305   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1212306   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1212307   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1212308   +         end;
MPRINT(EM_DIAGRAM):   end;
1212309   +      end;
MPRINT(EM_DIAGRAM):   end;
1212310   +   end;
MPRINT(EM_DIAGRAM):   end;
1212311   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212312   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1212313   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1212314   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1212315   +      end;
MPRINT(EM_DIAGRAM):   end;
1212316   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1212317   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1212318   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1212319   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1212320   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1212321   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1212322   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1212323   +         end;
MPRINT(EM_DIAGRAM):   end;
1212324   +      end;
MPRINT(EM_DIAGRAM):   end;
1212325   +   end;
MPRINT(EM_DIAGRAM):   end;
1212326   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1212327   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1212328   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1212329   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1212330   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1212331   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212332   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212333   +   end;
MPRINT(EM_DIAGRAM):   end;
1212334   +end;
MPRINT(EM_DIAGRAM):   end;
1212335   +
1212336   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212337   +*** Checking missing input Interval
1212338   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1212339   +
1212340   +IF NMISS(
1212341   +   AcceptedCmpTotal ,
1212342   +   Age ,
1212343   +   Frq ,
1212344   +   Income ,
1212345   +   Kidhome ,
1212346   +   Mnt ,
1212347   +   MntFishProducts ,
1212348   +   MntFruits ,
1212349   +   MntGoldProds ,
1212350   +   MntMeatProducts ,
1212351   +   MntSweetProducts ,
1212352   +   MntWines ,
1212353   +   MonthsAsCustomer ,
1212354   +   NumCatalogPurchases ,
1212355   +   NumDealsPurchases ,
1212356   +   NumDistPurchases ,
1212357   +   NumStorePurchases ,
1212358   +   NumWebPurchases ,
1212359   +   NumWebVisitsMonth ,
1212360   +   RFMstat ,
1212361   +   RMntFrq ,
1212362   +   Recency ,
1212363   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1212364   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1212365   +
1212366   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212367   +END;
MPRINT(EM_DIAGRAM):   END;
1212368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212369   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1212370   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212371   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1212372   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1212373   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1212374   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1212375   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1212376   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1212377   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1212378   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1212379   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1212380   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1212381   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1212382   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1212383   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1212384   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1212385   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1212386   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1212387   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1212388   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1212389   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1212390   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1212391   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1212392   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1212393   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1212394   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1212395   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1212396   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1212397   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1212398   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1212399   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1212400   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1212401   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1212402   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1212403   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1212404   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1212405   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1212406   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1212407   +END;
MPRINT(EM_DIAGRAM):   END;
1212408   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1212409   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1212410   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1212411   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1212412   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1212413   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1212414   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1212415   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1212416   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1212417   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1212418   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1212419   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1212420   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1212421   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1212422   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1212423   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1212424   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1212425   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1212426   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1212427   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1212428   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1212429   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1212430   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1212431   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1212432   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1212433   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1212434   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1212435   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1212436   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1212437   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1212438   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1212439   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1212440   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1212441   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1212442   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1212443   +   ELSE S_NumCatalogPurchases
1212444   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1212445   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1212446   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1212447   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1212448   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1212449   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1212450   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1212451   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1212452   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1212453   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1212454   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1212455   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1212456   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1212457   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1212458   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1212459   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1212460   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1212461   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1212462   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1212463   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1212464   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1212465   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1212466   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1212467   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1212468   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1212469   +END;
MPRINT(EM_DIAGRAM):   END;
1212470   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212471   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1212472   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212473   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212474   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1212475   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212477   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1212478   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212479   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1212480   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
1212481   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
1212482   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
1212483   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
1212484   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
1212485   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
1212486   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
1212487   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
1212488   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
1212489   +          +     1.17276395296242 * S_NumDealsPurchases
1212490   +          +     0.26632768295477 * S_NumDistPurchases
1212491   +          +    -1.26575615903579 * S_NumStorePurchases
1212492   +          +    -0.95316107557927 * S_NumWebPurchases
1212493   +          +     1.01828574356487 * S_NumWebVisitsMonth
1212494   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
1212495   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
1212496   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
1212497   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
1212498   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
1212499   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
1212500   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
1212501   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
1212502   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
1212503   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
1212504   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
1212505   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
1212506   +          +     1.14485571201233 * S_NumDealsPurchases
1212507   +          +     0.21414266588987 * S_NumDistPurchases
1212508   +          +    -0.10530090074297 * S_NumStorePurchases
1212509   +          +    -0.41712321238458 * S_NumWebPurchases
1212510   +          +    -0.99760766791108 * S_NumWebVisitsMonth
1212511   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
1212512   +        S_RMntFrq  +     1.10040128548883 * S_Recency
1212513   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
1212514   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
1212515   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
1212516   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
1212517   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
1212518   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
1212519   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
1212520   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
1212521   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
1212522   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
1212523   +          +      0.7196418967437 * S_NumDealsPurchases
1212524   +          +     0.69035286374177 * S_NumDistPurchases
1212525   +          +     0.38027656631135 * S_NumStorePurchases
1212526   +          +    -0.18878358997924 * S_NumWebPurchases
1212527   +          +     1.61962062004798 * S_NumWebVisitsMonth
1212528   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
1212529   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
1212530   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
1212531   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
1212532   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
1212533   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
1212534   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
1212535   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
1212536   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
1212537   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
1212538   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
1212539   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
1212540   +          +    -0.00642902007204 * S_NumDealsPurchases
1212541   +          +     0.29785069480367 * S_NumDistPurchases
1212542   +          +    -0.42243322063147 * S_NumStorePurchases
1212543   +          +     0.54880896338383 * S_NumWebPurchases
1212544   +          +    -0.12525846016886 * S_NumWebVisitsMonth
1212545   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
1212546   +        S_RMntFrq  +     0.10252211581449 * S_Recency
1212547   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
1212548   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
1212549   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
1212550   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
1212551   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
1212552   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
1212553   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
1212554   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
1212555   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
1212556   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
1212557   +          +    -0.48404738328225 * S_NumDealsPurchases
1212558   +          +    -0.02464180457879 * S_NumDistPurchases
1212559   +          +     1.17201831082067 * S_NumStorePurchases
1212560   +          +     0.57453655167516 * S_NumWebPurchases
1212561   +          +    -1.94417019790248 * S_NumWebVisitsMonth
1212562   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
1212563   +        S_RMntFrq  +      1.6169916658132 * S_Recency
1212564   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
1212565   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
1212566   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
1212567   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
1212568   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
1212569   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
1212570   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
1212571   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
1212572   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
1212573   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
1212574   +          +    -1.49850531967483 * S_NumDealsPurchases
1212575   +          +    -0.82105466264223 * S_NumDistPurchases
1212576   +          +     0.29984603642824 * S_NumStorePurchases
1212577   +          +     0.06557123721611 * S_NumWebPurchases
1212578   +          +     1.04754749365002 * S_NumWebVisitsMonth
1212579   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
1212580   +        S_RMntFrq  +     0.12396789666359 * S_Recency
1212581   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
1212582   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
1212583   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
1212584   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
1212585   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
1212586   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
1212587   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
1212588   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
1212589   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
1212590   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
1212591   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
1212592   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
1212593   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
1212594   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
1212595   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
1212596   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
1212597   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
1212598   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
1212599   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
1212600   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
1212601   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
1212602   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
1212603   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
1212604   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
1212605   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
1212606   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
1212607   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
1212608   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
1212609   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
1212610   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
1212611   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
1212612   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
1212613   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
1212614   +        EducationGraduation  +     0.07595631354847 * EducationMaster
1212615   +          +     0.24583509957712 * Marital_StatusDivorced
1212616   +          +    -0.22681931588361 * Marital_StatusMarried
1212617   +          +    -0.12924106229536 * Marital_StatusSingle
1212618   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
1212619   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
1212620   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
1212621   +        EducationGraduation  +     0.23015089246655 * EducationMaster
1212622   +          +    -0.12585334311068 * Marital_StatusDivorced
1212623   +          +    -0.20835502467207 * Marital_StatusMarried
1212624   +          +    -0.13839534449368 * Marital_StatusSingle
1212625   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
1212626   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
1212627   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
1212628   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
1212629   +          +     0.35106363238113 * Marital_StatusDivorced
1212630   +          +     -1.3414808583918 * Marital_StatusMarried
1212631   +          +     1.40835320798486 * Marital_StatusSingle
1212632   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
1212633   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
1212634   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
1212635   +        EducationGraduation  +      0.1746658332011 * EducationMaster
1212636   +          +     0.48174546958393 * Marital_StatusDivorced
1212637   +          +    -0.41416978858191 * Marital_StatusMarried
1212638   +          +    -0.23376801546265 * Marital_StatusSingle
1212639   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
1212640   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
1212641   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
1212642   +        EducationGraduation  +     0.68875064631577 * EducationMaster
1212643   +          +    -0.67557643774246 * Marital_StatusDivorced
1212644   +          +     1.63844045917367 * Marital_StatusMarried
1212645   +          +    -0.70320960247699 * Marital_StatusSingle
1212646   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
1212647   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
1212648   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
1212649   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
1212650   +          +    -0.11371453086883 * Marital_StatusDivorced
1212651   +          +    -0.34226997176291 * Marital_StatusMarried
1212652   +          +    -1.01568676685754 * Marital_StatusSingle
1212653   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
1212654   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
1212655   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
1212656   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
1212657   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
1212658   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
1212659   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
1212660   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
1212661   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
1212662   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
1212663   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1212664   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1212665   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1212666   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1212667   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1212668   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1212669   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1212670   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1212671   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1212672   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1212673   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1212674   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1212675   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1212676   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
1212677   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
1212678   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1212679   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1212680   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1212681   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1212682   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1212683   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1212684   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
1212685   +END;
MPRINT(EM_DIAGRAM):   END;
1212686   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1212687   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1212688   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1212689   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1212690   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1212691   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1212692   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1212693   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1212694   +END;
MPRINT(EM_DIAGRAM):   END;
1212695   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212696   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1212697   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212698   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1212699   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
1212700   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
1212701   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
1212702   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
1212703   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
1212704   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
1212705   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
1212706   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
1212707   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
1212708   +          +    -0.87259051567474 * S_NumDealsPurchases
1212709   +          +    -0.36454149529139 * S_NumDistPurchases
1212710   +          +     0.12447759925061 * S_NumStorePurchases
1212711   +          +    -1.08133487947367 * S_NumWebPurchases
1212712   +          +    -0.49882157745454 * S_NumWebVisitsMonth
1212713   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
1212714   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
1212715   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
1212716   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
1212717   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
1212718   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
1212719   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
1212720   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
1212721   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
1212722   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
1212723   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
1212724   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
1212725   +          +     2.23121497416403 * S_NumDealsPurchases
1212726   +          +    -0.48674842191071 * S_NumDistPurchases
1212727   +          +     1.77510728607544 * S_NumStorePurchases
1212728   +          +     0.14647433155436 * S_NumWebPurchases
1212729   +          +    -0.95892686924419 * S_NumWebVisitsMonth
1212730   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
1212731   +        S_RMntFrq  +     2.46497777428475 * S_Recency
1212732   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
1212733   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
1212734   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
1212735   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
1212736   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
1212737   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
1212738   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
1212739   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
1212740   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
1212741   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
1212742   +          +     0.14338855349611 * S_NumDealsPurchases
1212743   +          +    -2.21071010829235 * S_NumDistPurchases
1212744   +          +    -0.21795889348002 * S_NumStorePurchases
1212745   +          +     1.98825087883535 * S_NumWebPurchases
1212746   +          +     1.02482442531149 * S_NumWebVisitsMonth
1212747   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
1212748   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
1212749   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
1212750   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
1212751   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
1212752   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
1212753   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
1212754   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
1212755   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
1212756   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
1212757   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
1212758   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
1212759   +          +     0.30041205661012 * S_NumDealsPurchases
1212760   +          +    -0.63499849986918 * S_NumDistPurchases
1212761   +          +    -0.34155713433714 * S_NumStorePurchases
1212762   +          +    -1.14183354933936 * S_NumWebPurchases
1212763   +          +    -0.42681980262973 * S_NumWebVisitsMonth
1212764   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
1212765   +        S_RMntFrq  +     1.25852246467612 * S_Recency
1212766   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
1212767   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
1212768   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
1212769   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
1212770   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
1212771   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
1212772   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
1212773   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
1212774   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
1212775   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
1212776   +          +    -0.21237915559831 * S_NumDealsPurchases
1212777   +          +     0.48256923764182 * S_NumDistPurchases
1212778   +          +    -0.45553093140641 * S_NumStorePurchases
1212779   +          +      0.5593655963659 * S_NumWebPurchases
1212780   +          +     0.27943768691188 * S_NumWebVisitsMonth
1212781   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
1212782   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
1212783   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
1212784   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
1212785   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
1212786   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
1212787   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
1212788   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
1212789   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
1212790   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
1212791   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
1212792   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
1212793   +          +     2.38967021388062 * S_NumDealsPurchases
1212794   +          +    -0.97722398866481 * S_NumDistPurchases
1212795   +          +     1.57612333191312 * S_NumStorePurchases
1212796   +          +    -0.75968679115983 * S_NumWebPurchases
1212797   +          +    -0.64207187757251 * S_NumWebVisitsMonth
1212798   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
1212799   +        S_RMntFrq  +     1.71313869798331 * S_Recency
1212800   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
1212801   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
1212802   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
1212803   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
1212804   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
1212805   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
1212806   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
1212807   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
1212808   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
1212809   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
1212810   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
1212811   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
1212812   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
1212813   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
1212814   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
1212815   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
1212816   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
1212817   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
1212818   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
1212819   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
1212820   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
1212821   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
1212822   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
1212823   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
1212824   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
1212825   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
1212826   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
1212827   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
1212828   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
1212829   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
1212830   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
1212831   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
1212832   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
1212833   +        EducationGraduation  +      0.1073450284316 * EducationMaster
1212834   +          +     0.96470902298142 * Marital_StatusDivorced
1212835   +          +     0.94805959268314 * Marital_StatusMarried
1212836   +          +     -0.6523948769616 * Marital_StatusSingle
1212837   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
1212838   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
1212839   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
1212840   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
1212841   +          +      0.3918249505531 * Marital_StatusDivorced
1212842   +          +    -0.00968091979586 * Marital_StatusMarried
1212843   +          +     0.84615379885071 * Marital_StatusSingle
1212844   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
1212845   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
1212846   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
1212847   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
1212848   +          +     1.14335160313191 * Marital_StatusDivorced
1212849   +          +     0.50580517192175 * Marital_StatusMarried
1212850   +          +     0.17264295020921 * Marital_StatusSingle
1212851   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
1212852   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
1212853   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
1212854   +        EducationGraduation  +     1.95818378342783 * EducationMaster
1212855   +          +    -0.11238504444225 * Marital_StatusDivorced
1212856   +          +    -0.81348274043749 * Marital_StatusMarried
1212857   +          +     0.46075415610001 * Marital_StatusSingle
1212858   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
1212859   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
1212860   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
1212861   +        EducationGraduation  +     0.08396135672504 * EducationMaster
1212862   +          +    -0.46342068701431 * Marital_StatusDivorced
1212863   +          +    -0.41667845270204 * Marital_StatusMarried
1212864   +          +    -0.47166707496281 * Marital_StatusSingle
1212865   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
1212866   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
1212867   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
1212868   +        EducationGraduation  +     0.36656103863186 * EducationMaster
1212869   +          +    -0.45376613787812 * Marital_StatusDivorced
1212870   +          +     0.01337046049801 * Marital_StatusMarried
1212871   +          +    -0.92811489484121 * Marital_StatusSingle
1212872   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
1212873   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
1212874   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
1212875   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
1212876   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
1212877   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
1212878   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
1212879   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
1212880   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
1212881   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
1212882   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1212883   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1212884   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1212885   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1212886   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1212887   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1212888   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1212889   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1212890   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1212891   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1212892   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1212893   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1212894   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1212895   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
1212896   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
1212897   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1212898   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1212899   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1212900   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1212901   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1212902   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1212903   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
1212904   +END;
MPRINT(EM_DIAGRAM):   END;
1212905   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1212906   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1212907   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1212908   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1212909   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1212910   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1212911   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1212912   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
1212913   +END;
MPRINT(EM_DIAGRAM):   END;
1212914   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212915   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1212916   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212917   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1212918   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
1212919   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
1212920   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
1212921   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
1212922   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
1212923   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
1212924   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
1212925   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
1212926   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
1212927   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
1212928   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
1212929   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
1212930   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
1212931   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
1212932   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
1212933   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
1212934   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
1212935   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
1212936   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
1212937   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
1212938   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
1212939   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
1212940   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
1212941   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
1212942   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
1212943   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
1212944   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
1212945   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
1212946   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
1212947   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
1212948   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
1212949   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
1212950   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
1212951   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
1212952   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
1212953   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
1212954   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
1212955   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
1212956   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
1212957   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
1212958   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
1212959   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
1212960   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
1212961   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
1212962   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
1212963   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
1212964   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
1212965   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
1212966   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
1212967   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
1212968   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
1212969   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
1212970   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
1212971   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
1212972   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
1212973   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
1212974   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
1212975   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1212976   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1212977   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1212978   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1212979   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1212980   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1212981   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1212982   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1212983   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1212984   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1212985   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1212986   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1212987   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1212988   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
1212989   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
1212990   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1212991   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1212992   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1212993   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1212994   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1212995   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1212996   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
1212997   +END;
MPRINT(EM_DIAGRAM):   END;
1212998   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1212999   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1213000   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1213001   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1213002   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1213003   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1213004   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1213005   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
1213006   +END;
MPRINT(EM_DIAGRAM):   END;
1213007   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213008   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1213009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213010   +
1213011   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1213012   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1213013   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1213014   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1213015   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1213016   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213017   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1213018   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1213019   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1213020   +end;
MPRINT(EM_DIAGRAM):   end;
1213021   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213022   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1213023   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1213024   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1213025   +   end;
MPRINT(EM_DIAGRAM):   end;
1213026   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1213027   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1213028   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1213029   +   end;
MPRINT(EM_DIAGRAM):   end;
1213030   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213031   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1213032   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1213033   +   end;
MPRINT(EM_DIAGRAM):   end;
1213034   +end;
MPRINT(EM_DIAGRAM):   end;
1213035   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1213036   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
1213037   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
1213038   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
1213039   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
1213040   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
1213041   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1213042   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1213043   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1213044   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1213045   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1213046   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1213047   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1213048   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1213049   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1213050   +END;
MPRINT(EM_DIAGRAM):   END;
1213051   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1213052   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1213053   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1213054   +END;
MPRINT(EM_DIAGRAM):   END;
1213055   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1213056   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1213057   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1213058   +END;
MPRINT(EM_DIAGRAM):   END;
1213059   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1213060   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1213061   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1213062   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1213063   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1213064   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1213065   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1213066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213067   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1213068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213069   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1213070   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1213071   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1213072   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1213073   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1213074   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1213075   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1213076   +END;
MPRINT(EM_DIAGRAM):   END;
1213077   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1213078   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1213079   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1213080   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1213081   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
1213082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213083   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
1213084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213085   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
1213086   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
1213087   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
1213088   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
1213089   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213090   +* Renaming Into variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural12;
1213091   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213092   +length AutoNeural12_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural12_I_DepVar $32;
1213093   +drop AutoNeural12_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_I_DepVar;
1213094   +AutoNeural12_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural12_I_DepVar = I_DepVar;
1213095   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213096   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
1213097   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213098   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
1213099   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
1213100   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
1213101   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213102   +* Ensmbl47: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 4 of 5;
1213103   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213104   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213105   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1213106   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1213107   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
1213108   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213109   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1213110   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1213111   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1213112   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1213113   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1213114   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1213115   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1213116   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1213117   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1213118   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1213119   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1213120   +LENGTH _WARN_ $4
1213121   +      F_DepVar  $ 12
1213122   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1213123   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1213124   +
1213125   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1213126   +
1213127   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1213128   +
1213129   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1213130   +
1213131   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1213132   +
1213133   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1213134   +
1213135   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1213136   +
1213137   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1213138   +
1213139   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1213140   +
1213141   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1213142   +
1213143   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1213144   +
1213145   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1213146   +
1213147   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1213148   +
1213149   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1213150   +
1213151   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1213152   +
1213153   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1213154   +
1213155   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1213156   +
1213157   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1213158   +
1213159   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1213160   +
1213161   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1213162   +
1213163   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1213164   +
1213165   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1213166   +
1213167   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1213168   +
1213169   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1213170   +
1213171   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1213172   +
1213173   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1213174   +
1213175   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1213176   +
1213177   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1213178   +
1213179   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1213180   +
1213181   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1213182   +
1213183   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1213184   +
1213185   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1213186   +
1213187   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1213188   +
1213189   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1213190   +
1213191   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1213192   +
1213193   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1213194   +
1213195   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1213196   +
1213197   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1213198   +
1213199   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1213200   +
1213201   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1213202   +
1213203   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1213204   +
1213205   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1213206   +
1213207   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1213208   +
1213209   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1213210   +
1213211   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1213212   +
1213213   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1213214   +
1213215   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1213216   +
1213217   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1213218   +
1213219   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1213220   +
1213221   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1213222   +
1213223   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1213224   +
1213225   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1213226   +
1213227   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1213228   +
1213229   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1213230   +
1213231   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1213232   +
1213233   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1213234   +
1213235   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1213236   +
1213237   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1213238   +
1213239   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1213240   +
1213241   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1213242   +
1213243   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1213244   +
1213245   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1213246   +
1213247   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1213248   +
1213249   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1213250   +
1213251   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1213252   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1213253   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1213254   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1213255   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213256   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213257   +end;
MPRINT(EM_DIAGRAM):   end;
1213258   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213259   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1213260   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1213261   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213262   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1213263   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1213264   +   end;
MPRINT(EM_DIAGRAM):   end;
1213265   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1213266   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1213267   +   end;
MPRINT(EM_DIAGRAM):   end;
1213268   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213269   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1213270   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213271   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213272   +   end;
MPRINT(EM_DIAGRAM):   end;
1213273   +end;
MPRINT(EM_DIAGRAM):   end;
1213274   +
1213275   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1213276   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1213277   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1213278   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1213279   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213280   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213281   +end;
MPRINT(EM_DIAGRAM):   end;
1213282   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213283   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1213284   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1213285   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213286   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1213287   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1213288   +   end;
MPRINT(EM_DIAGRAM):   end;
1213289   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1213290   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1213291   +   end;
MPRINT(EM_DIAGRAM):   end;
1213292   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213293   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1213294   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213295   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213296   +   end;
MPRINT(EM_DIAGRAM):   end;
1213297   +end;
MPRINT(EM_DIAGRAM):   end;
1213298   +
1213299   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1213300   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1213301   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1213302   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1213303   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213304   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213305   +end;
MPRINT(EM_DIAGRAM):   end;
1213306   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213307   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1213308   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1213309   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213310   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1213311   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1213312   +   end;
MPRINT(EM_DIAGRAM):   end;
1213313   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1213314   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1213315   +   end;
MPRINT(EM_DIAGRAM):   end;
1213316   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213317   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1213318   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213319   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213320   +   end;
MPRINT(EM_DIAGRAM):   end;
1213321   +end;
MPRINT(EM_DIAGRAM):   end;
1213322   +
1213323   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1213324   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1213325   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1213326   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1213327   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213328   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213329   +end;
MPRINT(EM_DIAGRAM):   end;
1213330   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213331   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1213332   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1213333   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213334   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1213335   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1213336   +   end;
MPRINT(EM_DIAGRAM):   end;
1213337   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1213338   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1213339   +   end;
MPRINT(EM_DIAGRAM):   end;
1213340   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213341   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1213342   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213343   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213344   +   end;
MPRINT(EM_DIAGRAM):   end;
1213345   +end;
MPRINT(EM_DIAGRAM):   end;
1213346   +
1213347   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1213348   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1213349   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1213350   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1213351   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213352   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213353   +end;
MPRINT(EM_DIAGRAM):   end;
1213354   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213355   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1213356   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1213357   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213358   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1213359   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1213360   +   end;
MPRINT(EM_DIAGRAM):   end;
1213361   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1213362   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1213363   +   end;
MPRINT(EM_DIAGRAM):   end;
1213364   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213365   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1213366   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213367   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213368   +   end;
MPRINT(EM_DIAGRAM):   end;
1213369   +end;
MPRINT(EM_DIAGRAM):   end;
1213370   +
1213371   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1213372   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1213373   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1213374   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1213375   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213376   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213377   +end;
MPRINT(EM_DIAGRAM):   end;
1213378   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213379   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1213380   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1213381   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213382   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1213383   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1213384   +   end;
MPRINT(EM_DIAGRAM):   end;
1213385   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1213386   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1213387   +   end;
MPRINT(EM_DIAGRAM):   end;
1213388   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213389   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1213390   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213391   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213392   +   end;
MPRINT(EM_DIAGRAM):   end;
1213393   +end;
MPRINT(EM_DIAGRAM):   end;
1213394   +
1213395   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1213396   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1213397   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1213398   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1213399   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213400   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213401   +end;
MPRINT(EM_DIAGRAM):   end;
1213402   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213403   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1213404   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1213405   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213406   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1213407   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1213408   +   end;
MPRINT(EM_DIAGRAM):   end;
1213409   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1213410   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1213411   +   end;
MPRINT(EM_DIAGRAM):   end;
1213412   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213413   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1213414   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213415   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213416   +   end;
MPRINT(EM_DIAGRAM):   end;
1213417   +end;
MPRINT(EM_DIAGRAM):   end;
1213418   +
1213419   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1213420   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1213421   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1213422   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1213423   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1213424   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1213425   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1213426   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1213427   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1213428   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1213429   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1213430   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1213431   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213432   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213433   +end;
MPRINT(EM_DIAGRAM):   end;
1213434   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213435   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1213436   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1213437   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213438   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1213439   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1213440   +   end;
MPRINT(EM_DIAGRAM):   end;
1213441   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1213442   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1213443   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1213444   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1213445   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1213446   +   end;
MPRINT(EM_DIAGRAM):   end;
1213447   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1213448   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1213449   +   end;
MPRINT(EM_DIAGRAM):   end;
1213450   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1213451   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1213452   +   end;
MPRINT(EM_DIAGRAM):   end;
1213453   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1213454   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1213455   +   end;
MPRINT(EM_DIAGRAM):   end;
1213456   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213457   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1213458   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1213459   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1213460   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1213461   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213462   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213463   +   end;
MPRINT(EM_DIAGRAM):   end;
1213464   +end;
MPRINT(EM_DIAGRAM):   end;
1213465   +
1213466   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1213467   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1213468   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1213469   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1213470   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1213471   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1213472   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1213473   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1213474   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1213475   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1213476   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1213477   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1213478   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1213479   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213480   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213481   +end;
MPRINT(EM_DIAGRAM):   end;
1213482   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213483   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1213484   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1213485   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213486   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1213487   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1213488   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1213489   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1213490   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1213491   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1213492   +         end;
MPRINT(EM_DIAGRAM):   end;
1213493   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1213494   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1213495   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1213496   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1213497   +            end;
MPRINT(EM_DIAGRAM):   end;
1213498   +         end;
MPRINT(EM_DIAGRAM):   end;
1213499   +      end;
MPRINT(EM_DIAGRAM):   end;
1213500   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1213501   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1213502   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1213503   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1213504   +         end;
MPRINT(EM_DIAGRAM):   end;
1213505   +      end;
MPRINT(EM_DIAGRAM):   end;
1213506   +   end;
MPRINT(EM_DIAGRAM):   end;
1213507   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213508   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1213509   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1213510   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1213511   +      end;
MPRINT(EM_DIAGRAM):   end;
1213512   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1213513   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1213514   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1213515   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1213516   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1213517   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1213518   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1213519   +         end;
MPRINT(EM_DIAGRAM):   end;
1213520   +      end;
MPRINT(EM_DIAGRAM):   end;
1213521   +   end;
MPRINT(EM_DIAGRAM):   end;
1213522   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1213523   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1213524   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1213525   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1213526   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1213527   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213528   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213529   +   end;
MPRINT(EM_DIAGRAM):   end;
1213530   +end;
MPRINT(EM_DIAGRAM):   end;
1213531   +
1213532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213533   +*** Checking missing input Interval
1213534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1213535   +
1213536   +IF NMISS(
1213537   +   AcceptedCmpTotal ,
1213538   +   Age ,
1213539   +   Frq ,
1213540   +   Income ,
1213541   +   Kidhome ,
1213542   +   Mnt ,
1213543   +   MntFishProducts ,
1213544   +   MntFruits ,
1213545   +   MntGoldProds ,
1213546   +   MntMeatProducts ,
1213547   +   MntSweetProducts ,
1213548   +   MntWines ,
1213549   +   MonthsAsCustomer ,
1213550   +   NumCatalogPurchases ,
1213551   +   NumDealsPurchases ,
1213552   +   NumDistPurchases ,
1213553   +   NumStorePurchases ,
1213554   +   NumWebPurchases ,
1213555   +   NumWebVisitsMonth ,
1213556   +   RFMstat ,
1213557   +   RMntFrq ,
1213558   +   Recency ,
1213559   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1213560   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1213561   +
1213562   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213563   +END;
MPRINT(EM_DIAGRAM):   END;
1213564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213565   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1213566   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213567   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1213568   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1213569   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1213570   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1213571   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1213572   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1213573   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1213574   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1213575   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1213576   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1213577   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1213578   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1213579   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1213580   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1213581   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1213582   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1213583   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1213584   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1213585   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1213586   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1213587   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1213588   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1213589   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1213590   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1213591   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1213592   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1213593   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1213594   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1213595   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1213596   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1213597   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1213598   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1213599   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1213600   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1213601   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1213602   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1213603   +END;
MPRINT(EM_DIAGRAM):   END;
1213604   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1213605   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1213606   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1213607   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1213608   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1213609   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1213610   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1213611   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1213612   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1213613   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1213614   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1213615   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1213616   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1213617   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1213618   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1213619   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1213620   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1213621   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1213622   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1213623   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1213624   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1213625   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1213626   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1213627   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1213628   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1213629   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1213630   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1213631   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1213632   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1213633   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1213634   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1213635   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1213636   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1213637   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1213638   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1213639   +   ELSE S_NumCatalogPurchases
1213640   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1213641   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1213642   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1213643   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1213644   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1213645   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1213646   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1213647   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1213648   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1213649   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1213650   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1213651   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1213652   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1213653   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1213654   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1213655   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1213656   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1213657   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1213658   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1213659   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1213660   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1213661   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1213662   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1213663   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1213664   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1213665   +END;
MPRINT(EM_DIAGRAM):   END;
1213666   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213667   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1213668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213669   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213670   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1213671   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213673   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1213674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213675   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1213676   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
1213677   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
1213678   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
1213679   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
1213680   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
1213681   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
1213682   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
1213683   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
1213684   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
1213685   +          +     0.89422627895323 * S_NumDealsPurchases
1213686   +          +    -0.13304125929765 * S_NumDistPurchases
1213687   +          +    -1.04568442570811 * S_NumStorePurchases
1213688   +          +    -0.28677765126751 * S_NumWebPurchases
1213689   +          +      1.2327638737509 * S_NumWebVisitsMonth
1213690   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
1213691   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
1213692   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
1213693   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
1213694   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
1213695   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
1213696   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
1213697   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
1213698   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
1213699   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
1213700   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
1213701   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
1213702   +          +     0.04224590196535 * S_NumDealsPurchases
1213703   +          +     0.76554742700113 * S_NumDistPurchases
1213704   +          +    -0.49155496870812 * S_NumStorePurchases
1213705   +          +     0.59606812744403 * S_NumWebPurchases
1213706   +          +     1.86809286276405 * S_NumWebVisitsMonth
1213707   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
1213708   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
1213709   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
1213710   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
1213711   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
1213712   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
1213713   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
1213714   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
1213715   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
1213716   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
1213717   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
1213718   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
1213719   +          +    -0.04866536993486 * S_NumDealsPurchases
1213720   +          +    -0.53535979020214 * S_NumDistPurchases
1213721   +          +     2.20634071253676 * S_NumStorePurchases
1213722   +          +      0.6164564989007 * S_NumWebPurchases
1213723   +          +    -0.43396314395263 * S_NumWebVisitsMonth
1213724   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
1213725   +        S_RMntFrq  +     2.37293441098349 * S_Recency
1213726   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
1213727   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
1213728   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
1213729   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
1213730   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
1213731   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
1213732   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
1213733   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
1213734   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
1213735   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
1213736   +          +     1.37461255707863 * S_NumDealsPurchases
1213737   +          +    -0.17684775000818 * S_NumDistPurchases
1213738   +          +    -0.62755623855535 * S_NumStorePurchases
1213739   +          +    -1.46551649022657 * S_NumWebPurchases
1213740   +          +     3.35784247878638 * S_NumWebVisitsMonth
1213741   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
1213742   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
1213743   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
1213744   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
1213745   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
1213746   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
1213747   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
1213748   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
1213749   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
1213750   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
1213751   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
1213752   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
1213753   +          +    -0.76256677907121 * S_NumDealsPurchases
1213754   +          +    -0.31591571751692 * S_NumDistPurchases
1213755   +          +      0.0506832614089 * S_NumStorePurchases
1213756   +          +      1.4636796923764 * S_NumWebPurchases
1213757   +          +     0.37743519705036 * S_NumWebVisitsMonth
1213758   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
1213759   +        S_RMntFrq  +     0.16854775832723 * S_Recency
1213760   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
1213761   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
1213762   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
1213763   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
1213764   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
1213765   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
1213766   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
1213767   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
1213768   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
1213769   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
1213770   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
1213771   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
1213772   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
1213773   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
1213774   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
1213775   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
1213776   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
1213777   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
1213778   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
1213779   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
1213780   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
1213781   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
1213782   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
1213783   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
1213784   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
1213785   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
1213786   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
1213787   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
1213788   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
1213789   +          +     0.68641668264565 * Marital_StatusDivorced
1213790   +          +    -0.81586871439732 * Marital_StatusMarried
1213791   +          +     0.63758920518451 * Marital_StatusSingle
1213792   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
1213793   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
1213794   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
1213795   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
1213796   +          +     0.05137560133238 * Marital_StatusDivorced
1213797   +          +    -2.24401993266209 * Marital_StatusMarried
1213798   +          +     1.57359386216115 * Marital_StatusSingle
1213799   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
1213800   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
1213801   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
1213802   +        EducationGraduation  +     0.61492669859334 * EducationMaster
1213803   +          +     -1.0649987815942 * Marital_StatusDivorced
1213804   +          +     0.76065111692388 * Marital_StatusMarried
1213805   +          +    -0.21694149754801 * Marital_StatusSingle
1213806   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
1213807   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
1213808   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
1213809   +        EducationGraduation  +     0.04208620358211 * EducationMaster
1213810   +          +     2.02155453548328 * Marital_StatusDivorced
1213811   +          +    -2.60190649735306 * Marital_StatusMarried
1213812   +          +     1.09149388354927 * Marital_StatusSingle
1213813   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
1213814   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
1213815   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
1213816   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
1213817   +          +     0.66315970650309 * Marital_StatusDivorced
1213818   +          +    -1.20476729758152 * Marital_StatusMarried
1213819   +          +     0.56175027826397 * Marital_StatusSingle
1213820   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
1213821   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
1213822   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
1213823   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
1213824   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
1213825   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
1213826   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1213827   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1213828   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1213829   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1213830   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1213831   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1213832   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1213833   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1213834   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1213835   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1213836   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1213837   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1213838   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1213839   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1213840   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1213841   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1213842   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1213843   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1213844   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1213845   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1213846   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1213847   +END;
MPRINT(EM_DIAGRAM):   END;
1213848   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1213849   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1213850   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1213851   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1213852   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1213853   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1213854   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1213855   +END;
MPRINT(EM_DIAGRAM):   END;
1213856   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213857   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1213858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213859   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1213860   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
1213861   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
1213862   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
1213863   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
1213864   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
1213865   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
1213866   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
1213867   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
1213868   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
1213869   +          +     1.50005927423985 * S_NumDealsPurchases
1213870   +          +      0.5590536933569 * S_NumDistPurchases
1213871   +          +    -0.61757824339318 * S_NumStorePurchases
1213872   +          +     0.37259686538158 * S_NumWebPurchases
1213873   +          +     2.59725437895564 * S_NumWebVisitsMonth
1213874   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
1213875   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
1213876   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
1213877   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
1213878   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
1213879   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
1213880   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
1213881   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
1213882   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
1213883   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
1213884   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
1213885   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
1213886   +          +    -0.09282222088797 * S_NumDealsPurchases
1213887   +          +     0.10726247938321 * S_NumDistPurchases
1213888   +          +     -1.1235971458527 * S_NumStorePurchases
1213889   +          +    -0.78304387839877 * S_NumWebPurchases
1213890   +          +    -0.44139243179956 * S_NumWebVisitsMonth
1213891   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
1213892   +        S_RMntFrq  +     2.19072220135069 * S_Recency
1213893   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
1213894   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
1213895   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
1213896   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
1213897   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
1213898   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
1213899   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
1213900   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
1213901   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
1213902   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
1213903   +          +     0.35349185459988 * S_NumDealsPurchases
1213904   +          +     0.06853677714859 * S_NumDistPurchases
1213905   +          +    -1.47546012999338 * S_NumStorePurchases
1213906   +          +     0.20926435398916 * S_NumWebPurchases
1213907   +          +    -1.00535683639093 * S_NumWebVisitsMonth
1213908   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
1213909   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
1213910   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
1213911   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
1213912   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
1213913   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
1213914   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
1213915   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
1213916   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
1213917   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
1213918   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
1213919   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
1213920   +          +      0.3873586120272 * S_NumDealsPurchases
1213921   +          +     0.25911651157596 * S_NumDistPurchases
1213922   +          +     1.58922489084287 * S_NumStorePurchases
1213923   +          +     0.49041797743368 * S_NumWebPurchases
1213924   +          +     -1.5425586871929 * S_NumWebVisitsMonth
1213925   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
1213926   +        S_RMntFrq  +     1.03099569333498 * S_Recency
1213927   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
1213928   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
1213929   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
1213930   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
1213931   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
1213932   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
1213933   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
1213934   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
1213935   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
1213936   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
1213937   +          +    -0.60830880287865 * S_NumDealsPurchases
1213938   +          +      0.0745331267194 * S_NumDistPurchases
1213939   +          +    -1.39472448256952 * S_NumStorePurchases
1213940   +          +     1.95372179969087 * S_NumWebPurchases
1213941   +          +    -0.63307356390404 * S_NumWebVisitsMonth
1213942   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
1213943   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
1213944   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
1213945   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
1213946   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
1213947   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
1213948   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
1213949   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
1213950   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
1213951   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
1213952   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
1213953   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
1213954   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
1213955   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
1213956   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
1213957   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
1213958   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
1213959   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
1213960   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
1213961   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
1213962   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
1213963   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
1213964   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
1213965   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
1213966   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
1213967   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
1213968   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
1213969   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
1213970   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
1213971   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
1213972   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
1213973   +          +    -1.33377871643323 * Marital_StatusDivorced
1213974   +          +    -0.87184228840898 * Marital_StatusMarried
1213975   +          +     1.41223186340257 * Marital_StatusSingle
1213976   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
1213977   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
1213978   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
1213979   +        EducationGraduation  +     0.38341272155343 * EducationMaster
1213980   +          +    -0.21479890935233 * Marital_StatusDivorced
1213981   +          +     -0.0025459519579 * Marital_StatusMarried
1213982   +          +     1.33900491702264 * Marital_StatusSingle
1213983   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
1213984   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
1213985   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
1213986   +        EducationGraduation  +     0.60739269725685 * EducationMaster
1213987   +          +    -0.38307267471999 * Marital_StatusDivorced
1213988   +          +     0.97088969451415 * Marital_StatusMarried
1213989   +          +    -0.28578224473381 * Marital_StatusSingle
1213990   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
1213991   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
1213992   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
1213993   +        EducationGraduation  +     0.14160673378252 * EducationMaster
1213994   +          +    -1.42229401093569 * Marital_StatusDivorced
1213995   +          +      0.7234508382397 * Marital_StatusMarried
1213996   +          +    -0.29062202974628 * Marital_StatusSingle
1213997   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
1213998   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
1213999   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
1214000   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
1214001   +          +    -0.99067637207205 * Marital_StatusDivorced
1214002   +          +    -0.50245902142079 * Marital_StatusMarried
1214003   +          +     0.54214494533793 * Marital_StatusSingle
1214004   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
1214005   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
1214006   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
1214007   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
1214008   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
1214009   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
1214010   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1214011   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1214012   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1214013   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1214014   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1214015   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1214016   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1214017   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1214018   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1214019   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1214020   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1214021   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1214022   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1214023   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1214024   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1214025   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1214026   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1214027   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1214028   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1214029   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1214030   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1214031   +END;
MPRINT(EM_DIAGRAM):   END;
1214032   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214033   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1214034   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1214035   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1214036   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1214037   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1214038   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1214039   +END;
MPRINT(EM_DIAGRAM):   END;
1214040   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214041   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1214042   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214043   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1214044   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
1214045   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
1214046   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
1214047   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
1214048   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
1214049   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
1214050   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
1214051   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
1214052   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
1214053   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
1214054   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
1214055   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
1214056   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
1214057   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
1214058   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
1214059   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
1214060   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
1214061   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
1214062   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
1214063   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
1214064   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
1214065   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
1214066   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
1214067   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
1214068   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
1214069   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
1214070   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
1214071   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
1214072   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
1214073   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
1214074   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
1214075   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
1214076   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
1214077   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
1214078   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
1214079   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
1214080   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
1214081   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
1214082   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
1214083   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
1214084   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
1214085   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
1214086   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
1214087   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
1214088   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
1214089   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
1214090   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
1214091   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
1214092   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1214093   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1214094   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1214095   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1214096   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1214097   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1214098   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1214099   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1214100   +END;
MPRINT(EM_DIAGRAM):   END;
1214101   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214102   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1214103   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1214104   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1214105   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1214106   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1214107   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1214108   +END;
MPRINT(EM_DIAGRAM):   END;
1214109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214110   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1214111   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214112   +
1214113   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1214114   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1214115   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1214116   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1214117   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1214118   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214119   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1214120   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1214121   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1214122   +end;
MPRINT(EM_DIAGRAM):   end;
1214123   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214124   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1214125   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1214126   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1214127   +   end;
MPRINT(EM_DIAGRAM):   end;
1214128   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1214129   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1214130   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1214131   +   end;
MPRINT(EM_DIAGRAM):   end;
1214132   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214133   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1214134   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1214135   +   end;
MPRINT(EM_DIAGRAM):   end;
1214136   +end;
MPRINT(EM_DIAGRAM):   end;
1214137   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1214138   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
1214139   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
1214140   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
1214141   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
1214142   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1214143   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1214144   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1214145   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1214146   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1214147   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1214148   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1214149   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1214150   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1214151   +END;
MPRINT(EM_DIAGRAM):   END;
1214152   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214153   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1214154   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1214155   +END;
MPRINT(EM_DIAGRAM):   END;
1214156   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1214157   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1214158   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1214159   +END;
MPRINT(EM_DIAGRAM):   END;
1214160   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1214161   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1214162   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1214163   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1214164   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1214165   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1214166   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1214167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214168   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1214169   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214170   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1214171   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1214172   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1214173   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1214174   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1214175   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1214176   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1214177   +END;
MPRINT(EM_DIAGRAM):   END;
1214178   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1214179   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1214180   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1214181   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1214182   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
1214183   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214184   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
1214185   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214186   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
1214187   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
1214188   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
1214189   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
1214190   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214191   +* Renaming Into variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural11;
1214192   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214193   +length AutoNeural11_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural11_I_DepVar $32;
1214194   +drop AutoNeural11_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_I_DepVar;
1214195   +AutoNeural11_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural11_I_DepVar = I_DepVar;
1214196   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214197   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
1214198   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214199   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
1214200   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
1214201   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
1214202   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214203   +* Ensmbl47: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 5 of 5;
1214204   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214205   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214206   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1214207   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1214208   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
1214209   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214210   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1214211   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1214212   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1214213   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1214214   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1214215   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1214216   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1214217   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1214218   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1214219   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1214220   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1214221   +LENGTH _WARN_ $4
1214222   +      F_DepVar  $ 12
1214223   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1214224   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1214225   +
1214226   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1214227   +
1214228   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1214229   +
1214230   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1214231   +
1214232   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1214233   +
1214234   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1214235   +
1214236   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1214237   +
1214238   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1214239   +
1214240   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1214241   +
1214242   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1214243   +
1214244   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1214245   +
1214246   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1214247   +
1214248   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1214249   +
1214250   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1214251   +
1214252   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1214253   +
1214254   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1214255   +
1214256   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1214257   +
1214258   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1214259   +
1214260   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1214261   +
1214262   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1214263   +
1214264   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1214265   +
1214266   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1214267   +
1214268   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1214269   +
1214270   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1214271   +
1214272   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1214273   +
1214274   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1214275   +
1214276   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1214277   +
1214278   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1214279   +
1214280   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1214281   +
1214282   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1214283   +
1214284   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1214285   +
1214286   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1214287   +
1214288   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1214289   +
1214290   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1214291   +
1214292   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1214293   +
1214294   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1214295   +
1214296   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1214297   +
1214298   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1214299   +
1214300   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1214301   +
1214302   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1214303   +
1214304   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1214305   +
1214306   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1214307   +
1214308   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1214309   +
1214310   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1214311   +
1214312   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1214313   +
1214314   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1214315   +
1214316   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1214317   +
1214318   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1214319   +
1214320   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1214321   +
1214322   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1214323   +
1214324   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1214325   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1214326   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1214327   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1214328   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214329   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214330   +end;
MPRINT(EM_DIAGRAM):   end;
1214331   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214332   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214333   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1214334   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214335   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1214336   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1214337   +   end;
MPRINT(EM_DIAGRAM):   end;
1214338   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1214339   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1214340   +   end;
MPRINT(EM_DIAGRAM):   end;
1214341   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214342   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1214343   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214344   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214345   +   end;
MPRINT(EM_DIAGRAM):   end;
1214346   +end;
MPRINT(EM_DIAGRAM):   end;
1214347   +
1214348   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1214349   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1214350   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1214351   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1214352   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214353   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214354   +end;
MPRINT(EM_DIAGRAM):   end;
1214355   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214356   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214357   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1214358   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214359   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1214360   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1214361   +   end;
MPRINT(EM_DIAGRAM):   end;
1214362   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1214363   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1214364   +   end;
MPRINT(EM_DIAGRAM):   end;
1214365   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214366   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1214367   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214368   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214369   +   end;
MPRINT(EM_DIAGRAM):   end;
1214370   +end;
MPRINT(EM_DIAGRAM):   end;
1214371   +
1214372   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1214373   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1214374   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1214375   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1214376   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214377   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214378   +end;
MPRINT(EM_DIAGRAM):   end;
1214379   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214380   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214381   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1214382   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214383   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1214384   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1214385   +   end;
MPRINT(EM_DIAGRAM):   end;
1214386   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1214387   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1214388   +   end;
MPRINT(EM_DIAGRAM):   end;
1214389   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214390   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1214391   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214392   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214393   +   end;
MPRINT(EM_DIAGRAM):   end;
1214394   +end;
MPRINT(EM_DIAGRAM):   end;
1214395   +
1214396   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1214397   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1214398   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1214399   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1214400   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214401   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214402   +end;
MPRINT(EM_DIAGRAM):   end;
1214403   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214404   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214405   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1214406   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214407   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1214408   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1214409   +   end;
MPRINT(EM_DIAGRAM):   end;
1214410   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1214411   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1214412   +   end;
MPRINT(EM_DIAGRAM):   end;
1214413   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214414   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1214415   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214416   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214417   +   end;
MPRINT(EM_DIAGRAM):   end;
1214418   +end;
MPRINT(EM_DIAGRAM):   end;
1214419   +
1214420   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1214421   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1214422   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1214423   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1214424   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214425   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214426   +end;
MPRINT(EM_DIAGRAM):   end;
1214427   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214428   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214429   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1214430   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214431   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1214432   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1214433   +   end;
MPRINT(EM_DIAGRAM):   end;
1214434   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1214435   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1214436   +   end;
MPRINT(EM_DIAGRAM):   end;
1214437   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214438   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1214439   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214440   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214441   +   end;
MPRINT(EM_DIAGRAM):   end;
1214442   +end;
MPRINT(EM_DIAGRAM):   end;
1214443   +
1214444   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1214445   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1214446   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1214447   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1214448   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214449   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214450   +end;
MPRINT(EM_DIAGRAM):   end;
1214451   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214452   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214453   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1214454   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214455   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1214456   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1214457   +   end;
MPRINT(EM_DIAGRAM):   end;
1214458   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1214459   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1214460   +   end;
MPRINT(EM_DIAGRAM):   end;
1214461   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214462   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1214463   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214464   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214465   +   end;
MPRINT(EM_DIAGRAM):   end;
1214466   +end;
MPRINT(EM_DIAGRAM):   end;
1214467   +
1214468   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1214469   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1214470   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1214471   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1214472   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214473   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214474   +end;
MPRINT(EM_DIAGRAM):   end;
1214475   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214476   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214477   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1214478   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214479   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1214480   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1214481   +   end;
MPRINT(EM_DIAGRAM):   end;
1214482   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1214483   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1214484   +   end;
MPRINT(EM_DIAGRAM):   end;
1214485   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214486   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1214487   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214488   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214489   +   end;
MPRINT(EM_DIAGRAM):   end;
1214490   +end;
MPRINT(EM_DIAGRAM):   end;
1214491   +
1214492   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1214493   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1214494   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1214495   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1214496   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1214497   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1214498   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1214499   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1214500   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1214501   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1214502   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1214503   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1214504   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214505   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214506   +end;
MPRINT(EM_DIAGRAM):   end;
1214507   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214508   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1214509   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1214510   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214511   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1214512   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1214513   +   end;
MPRINT(EM_DIAGRAM):   end;
1214514   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1214515   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1214516   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1214517   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1214518   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1214519   +   end;
MPRINT(EM_DIAGRAM):   end;
1214520   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1214521   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1214522   +   end;
MPRINT(EM_DIAGRAM):   end;
1214523   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1214524   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1214525   +   end;
MPRINT(EM_DIAGRAM):   end;
1214526   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1214527   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1214528   +   end;
MPRINT(EM_DIAGRAM):   end;
1214529   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214530   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1214531   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1214532   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1214533   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1214534   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214535   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214536   +   end;
MPRINT(EM_DIAGRAM):   end;
1214537   +end;
MPRINT(EM_DIAGRAM):   end;
1214538   +
1214539   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1214540   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1214541   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1214542   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1214543   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1214544   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1214545   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1214546   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1214547   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1214548   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1214549   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1214550   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1214551   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1214552   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214553   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214554   +end;
MPRINT(EM_DIAGRAM):   end;
1214555   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214556   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1214557   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1214558   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214559   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1214560   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1214561   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1214562   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1214563   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1214564   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1214565   +         end;
MPRINT(EM_DIAGRAM):   end;
1214566   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1214567   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1214568   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1214569   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1214570   +            end;
MPRINT(EM_DIAGRAM):   end;
1214571   +         end;
MPRINT(EM_DIAGRAM):   end;
1214572   +      end;
MPRINT(EM_DIAGRAM):   end;
1214573   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1214574   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1214575   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1214576   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1214577   +         end;
MPRINT(EM_DIAGRAM):   end;
1214578   +      end;
MPRINT(EM_DIAGRAM):   end;
1214579   +   end;
MPRINT(EM_DIAGRAM):   end;
1214580   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214581   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1214582   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1214583   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1214584   +      end;
MPRINT(EM_DIAGRAM):   end;
1214585   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1214586   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1214587   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1214588   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1214589   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1214590   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1214591   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1214592   +         end;
MPRINT(EM_DIAGRAM):   end;
1214593   +      end;
MPRINT(EM_DIAGRAM):   end;
1214594   +   end;
MPRINT(EM_DIAGRAM):   end;
1214595   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1214596   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1214597   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1214598   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1214599   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1214600   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214601   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214602   +   end;
MPRINT(EM_DIAGRAM):   end;
1214603   +end;
MPRINT(EM_DIAGRAM):   end;
1214604   +
1214605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214606   +*** Checking missing input Interval
1214607   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1214608   +
1214609   +IF NMISS(
1214610   +   AcceptedCmpTotal ,
1214611   +   Age ,
1214612   +   Frq ,
1214613   +   Income ,
1214614   +   Kidhome ,
1214615   +   Mnt ,
1214616   +   MntFishProducts ,
1214617   +   MntFruits ,
1214618   +   MntGoldProds ,
1214619   +   MntMeatProducts ,
1214620   +   MntSweetProducts ,
1214621   +   MntWines ,
1214622   +   MonthsAsCustomer ,
1214623   +   NumCatalogPurchases ,
1214624   +   NumDealsPurchases ,
1214625   +   NumDistPurchases ,
1214626   +   NumStorePurchases ,
1214627   +   NumWebPurchases ,
1214628   +   NumWebVisitsMonth ,
1214629   +   RFMstat ,
1214630   +   RMntFrq ,
1214631   +   Recency ,
1214632   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1214633   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1214634   +
1214635   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214636   +END;
MPRINT(EM_DIAGRAM):   END;
1214637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214638   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1214639   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214640   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1214641   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1214642   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1214643   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1214644   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1214645   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1214646   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1214647   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1214648   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1214649   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1214650   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1214651   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1214652   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1214653   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1214654   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1214655   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1214656   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1214657   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1214658   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1214659   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1214660   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1214661   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1214662   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1214663   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1214664   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1214665   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1214666   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1214667   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1214668   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1214669   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1214670   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1214671   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1214672   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1214673   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1214674   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1214675   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1214676   +END;
MPRINT(EM_DIAGRAM):   END;
1214677   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214678   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1214679   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1214680   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1214681   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1214682   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1214683   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1214684   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1214685   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1214686   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1214687   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1214688   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1214689   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1214690   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1214691   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1214692   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1214693   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1214694   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1214695   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1214696   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1214697   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1214698   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1214699   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1214700   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1214701   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1214702   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1214703   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1214704   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1214705   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1214706   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1214707   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1214708   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1214709   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1214710   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1214711   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1214712   +   ELSE S_NumCatalogPurchases
1214713   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1214714   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1214715   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1214716   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1214717   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1214718   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1214719   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1214720   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1214721   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1214722   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1214723   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1214724   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1214725   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1214726   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1214727   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1214728   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1214729   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1214730   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1214731   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1214732   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1214733   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1214734   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1214735   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1214736   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1214737   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1214738   +END;
MPRINT(EM_DIAGRAM):   END;
1214739   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214740   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1214741   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214742   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214743   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1214744   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214745   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214746   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1214747   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214748   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1214749   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
1214750   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
1214751   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
1214752   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
1214753   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
1214754   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
1214755   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
1214756   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
1214757   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
1214758   +          +    -1.14704878034134 * S_NumDealsPurchases
1214759   +          +    -0.17763404274659 * S_NumDistPurchases
1214760   +          +     0.08894400267969 * S_NumStorePurchases
1214761   +          +     0.59283747891957 * S_NumWebPurchases
1214762   +          +     0.85268274682505 * S_NumWebVisitsMonth
1214763   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
1214764   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
1214765   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
1214766   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
1214767   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
1214768   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
1214769   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
1214770   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
1214771   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
1214772   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
1214773   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
1214774   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
1214775   +          +    -0.80841566068716 * S_NumDealsPurchases
1214776   +          +    -0.17995640033768 * S_NumDistPurchases
1214777   +          +     0.00713417460936 * S_NumStorePurchases
1214778   +          +     0.57881024323076 * S_NumWebPurchases
1214779   +          +    -1.35134224257365 * S_NumWebVisitsMonth
1214780   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
1214781   +        S_RMntFrq  +     1.16978656262499 * S_Recency
1214782   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
1214783   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
1214784   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
1214785   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
1214786   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
1214787   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
1214788   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
1214789   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
1214790   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
1214791   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
1214792   +          +     0.57891364118717 * S_NumDealsPurchases
1214793   +          +    -0.31024556838688 * S_NumDistPurchases
1214794   +          +    -1.48708542986704 * S_NumStorePurchases
1214795   +          +    -0.93009875249206 * S_NumWebPurchases
1214796   +          +     2.01900039122935 * S_NumWebVisitsMonth
1214797   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
1214798   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
1214799   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
1214800   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
1214801   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
1214802   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
1214803   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
1214804   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
1214805   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
1214806   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
1214807   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
1214808   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
1214809   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
1214810   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
1214811   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
1214812   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
1214813   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
1214814   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
1214815   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
1214816   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
1214817   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
1214818   +          +     0.55883606830033 * Marital_StatusDivorced
1214819   +          +    -0.54530037567066 * Marital_StatusMarried
1214820   +          +    -0.52994736075753 * Marital_StatusSingle
1214821   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
1214822   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
1214823   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
1214824   +        EducationGraduation  +     0.31201349236277 * EducationMaster
1214825   +          +    -1.07368484057033 * Marital_StatusDivorced
1214826   +          +     2.73313504711262 * Marital_StatusMarried
1214827   +          +    -2.18530462876058 * Marital_StatusSingle
1214828   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
1214829   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
1214830   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
1214831   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
1214832   +          +     0.49993144243043 * Marital_StatusDivorced
1214833   +          +    -0.38953339116829 * Marital_StatusMarried
1214834   +          +    -0.10836287319942 * Marital_StatusSingle
1214835   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
1214836   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
1214837   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
1214838   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
1214839   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1214840   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1214841   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1214842   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1214843   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1214844   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1214845   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1214846   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1214847   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1214848   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1214849   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1214850   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1214851   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1214852   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1214853   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1214854   +END;
MPRINT(EM_DIAGRAM):   END;
1214855   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214856   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1214857   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1214858   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1214859   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1214860   +END;
MPRINT(EM_DIAGRAM):   END;
1214861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214862   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1214863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214864   +
1214865   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1214866   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1214867   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1214868   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1214869   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1214870   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214871   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1214872   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1214873   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1214874   +end;
MPRINT(EM_DIAGRAM):   end;
1214875   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214876   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1214877   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1214878   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1214879   +   end;
MPRINT(EM_DIAGRAM):   end;
1214880   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1214881   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1214882   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1214883   +   end;
MPRINT(EM_DIAGRAM):   end;
1214884   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214885   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1214886   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1214887   +   end;
MPRINT(EM_DIAGRAM):   end;
1214888   +end;
MPRINT(EM_DIAGRAM):   end;
1214889   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1214890   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
1214891   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
1214892   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
1214893   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1214894   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1214895   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1214896   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1214897   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1214898   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1214899   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1214900   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1214901   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1214902   +END;
MPRINT(EM_DIAGRAM):   END;
1214903   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214904   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1214905   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1214906   +END;
MPRINT(EM_DIAGRAM):   END;
1214907   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1214908   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1214909   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1214910   +END;
MPRINT(EM_DIAGRAM):   END;
1214911   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1214912   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1214913   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1214914   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1214915   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1214916   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1214917   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1214918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214919   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1214920   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214921   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1214922   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1214923   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1214924   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1214925   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1214926   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1214927   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1214928   +END;
MPRINT(EM_DIAGRAM):   END;
1214929   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1214930   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1214931   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1214932   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1214933   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
1214934   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214935   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
1214936   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214937   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
1214938   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
1214939   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
1214940   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
1214941   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214942   +* Renaming Into variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural9;
1214943   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214944   +length AutoNeural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural9_I_DepVar $32;
1214945   +drop AutoNeural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_I_DepVar;
1214946   +AutoNeural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural9_I_DepVar = I_DepVar;
1214947   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214948   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
1214949   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214950   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
1214951   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
1214952   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
1214953   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214954   +* Ensmbl47: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Voting to produce predicted target;
1214955   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214956   +array Ensmbl47_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl47_post{2} _temporary_;
1214957   +array Ensmbl47_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl47_count{2} _temporary_;
1214958   +array Ensmbl47_level{2} $32 _temporary_ (
1214959   +"1"
1214960   +"0"
1214961   +);
MPRINT(EM_DIAGRAM):   array Ensmbl47_level{2} $32 _temporary_ ( "1" "0" );
1214962   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1214963   +Ensmbl47_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{i} = 0;
1214964   +Ensmbl47_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{i} = 0;
1214965   +end;
MPRINT(EM_DIAGRAM):   end;
1214966   +if AutoNeural10_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl47_level{1} then do;
1214967   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
1214968   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural10_P_DepVar1;
1214969   +end;
MPRINT(EM_DIAGRAM):   end;
1214970   +if AutoNeural7_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl47_level{1} then do;
1214971   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
1214972   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural7_P_DepVar1;
1214973   +end;
MPRINT(EM_DIAGRAM):   end;
1214974   +if AutoNeural12_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl47_level{1} then do;
1214975   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
1214976   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural12_P_DepVar1;
1214977   +end;
MPRINT(EM_DIAGRAM):   end;
1214978   +if AutoNeural11_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl47_level{1} then do;
1214979   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
1214980   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural11_P_DepVar1;
1214981   +end;
MPRINT(EM_DIAGRAM):   end;
1214982   +if AutoNeural9_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl47_level{1} then do;
1214983   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
1214984   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural9_P_DepVar1;
1214985   +end;
MPRINT(EM_DIAGRAM):   end;
1214986   +if AutoNeural10_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl47_level{2} then do;
1214987   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
1214988   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural10_P_DepVar0;
1214989   +end;
MPRINT(EM_DIAGRAM):   end;
1214990   +if AutoNeural7_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl47_level{2} then do;
1214991   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
1214992   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural7_P_DepVar0;
1214993   +end;
MPRINT(EM_DIAGRAM):   end;
1214994   +if AutoNeural12_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl47_level{2} then do;
1214995   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
1214996   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural12_P_DepVar0;
1214997   +end;
MPRINT(EM_DIAGRAM):   end;
1214998   +if AutoNeural11_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl47_level{2} then do;
1214999   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
1215000   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural11_P_DepVar0;
1215001   +end;
MPRINT(EM_DIAGRAM):   end;
1215002   +if AutoNeural9_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl47_level{2} then do;
1215003   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
1215004   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural9_P_DepVar0;
1215005   +end;
MPRINT(EM_DIAGRAM):   end;
1215006   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215007   +* Ensmbl47: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Determine Into Variable;
1215008   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215009   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1215010   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
1215011   +vote_count = max(
1215012   +Ensmbl47_count{1} ,
1215013   +Ensmbl47_count{2}
1215014   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl47_count{1} , Ensmbl47_count{2} );
1215015   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1215016   +if Ensmbl47_count{i}=vote_count and Ensmbl47_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl47_count{i}=vote_count and Ensmbl47_post{i}>vote_post then do;
1215017   +I_DepVar = Ensmbl47_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl47_level{i};
1215018   +vote_post = Ensmbl47_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl47_count{i};
1215019   +end;
MPRINT(EM_DIAGRAM):   end;
1215020   +end;
MPRINT(EM_DIAGRAM):   end;
1215021   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215022   +* Ensmbl47: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Compute posterior vars using models predicting the chosen 
level;
1215023   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215024   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1215025   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1215026   +if I_DepVar = AutoNeural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural10_I_DepVar then do;
1215027   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
1215028   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
1215029   +end;
MPRINT(EM_DIAGRAM):   end;
1215030   +if I_DepVar = AutoNeural7_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural7_I_DepVar then do;
1215031   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
1215032   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
1215033   +end;
MPRINT(EM_DIAGRAM):   end;
1215034   +if I_DepVar = AutoNeural12_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural12_I_DepVar then do;
1215035   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
1215036   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
1215037   +end;
MPRINT(EM_DIAGRAM):   end;
1215038   +if I_DepVar = AutoNeural11_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural11_I_DepVar then do;
1215039   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
1215040   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
1215041   +end;
MPRINT(EM_DIAGRAM):   end;
1215042   +if I_DepVar = AutoNeural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural9_I_DepVar then do;
1215043   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
1215044   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
1215045   +end;
MPRINT(EM_DIAGRAM):   end;
1215046   +* Ensmbl47: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Averaging posterior;
1215047   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
1215048   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
1215049   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215050   +* Ensmbl47: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Producing Unformatted variable;
1215051   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215052   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1215053   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1215054   +else
1215055   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1215056   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215057   +* Ensmbl47: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Computing _WARN_ Variable;
1215058   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215059   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1215060   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1215061   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1215062   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1215062  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1215063   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1215063  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1215064   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1215064  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1215065   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1215065  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1215066   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1215066  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1215067   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1215067  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1215068   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1215068  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1215069   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1215069  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1215070   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1215070  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1215071   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1215071  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1215072   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1215072  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1215073   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1215073  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1215074   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1215074  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1215075   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1215075  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1215076   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1215076  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1215077   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1215077  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1215078   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1215078  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1215079   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1215079  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1215080   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1215080  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1215081   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1215081  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1215082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215083   +* Ensmbl47: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Computing Residual Vars;
1215084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215085   +if
1215086   +F_DepVar NE '1'
1215087   +AND F_DepVar NE '0'
1215088   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1215089   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1215090   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1215091   +end;
MPRINT(EM_DIAGRAM):   end;
1215092   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215093   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1215094   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1215095   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1215096   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1215097   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1215098   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1215099   +END;
MPRINT(EM_DIAGRAM):   END;
1215100   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1215101    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL47_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1215102    quit;
1215103    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1215104    filename emflow
1215104  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring AUTONEURAL10_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215105    *------------------------------------------------------------*;
1215106    * Ensmbl47: Scoring AUTONEURAL10_VALIDATE data;
1215107    *------------------------------------------------------------*;
1215108    data EMWS8.Ensmbl47_VALIDATE
1215109    / view=EMWS8.Ensmbl47_VALIDATE
1215110    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_VALIDATE / view=EMWS8.Ensmbl47_VALIDATE ;
1215111    set EMWS8.AutoNeural10_VALIDATE
1215112    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_VALIDATE ;
1215113    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMFLOWSCORE.sas.
1215114   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215115   +* Ensmbl47: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Combine model for DepVar;
1215116   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215117   +* Ensmbl47: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 1 of 5;
1215118   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215119   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215120   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1215121   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1215122   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1215123   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215124   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215125   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1215126   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1215127   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1215128   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215129   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215130   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1215131   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1215132   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1215133   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215134   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215135   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1215136   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1215137   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1215138   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215139   +
1215140   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1215141   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1215141  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1215142   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1215143   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1215144   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1215145   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1215146   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1215147   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215148   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1215149   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1215150   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1215151   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215152   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215153   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1215154   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215155   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1215156   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1215157   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1215158   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215159   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1215160   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1215161   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1215162   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215163   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215164   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1215165   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1215166   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1215167   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215168   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215169   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1215170   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1215171   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
1215172   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215173   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1215174   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1215175   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1215176   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1215177   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1215178   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1215179   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1215180   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1215181   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1215182   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1215183   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1215184   +LENGTH _WARN_ $4
1215185   +      F_DepVar  $ 12
1215186   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1215187   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1215188   +
1215189   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1215190   +
1215191   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1215192   +
1215193   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1215194   +
1215195   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1215196   +
1215197   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1215198   +
1215199   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1215200   +
1215201   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1215202   +
1215203   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1215204   +
1215205   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1215206   +
1215207   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1215208   +
1215209   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1215210   +
1215211   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1215212   +
1215213   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1215214   +
1215215   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1215216   +
1215217   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1215218   +
1215219   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1215220   +
1215221   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1215222   +
1215223   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1215224   +
1215225   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1215226   +
1215227   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1215228   +
1215229   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1215230   +
1215231   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1215232   +
1215233   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1215234   +
1215235   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1215236   +
1215237   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1215238   +
1215239   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1215240   +
1215241   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1215242   +
1215243   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1215244   +
1215245   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1215246   +
1215247   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1215248   +
1215249   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1215250   +
1215251   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1215252   +
1215253   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1215254   +
1215255   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1215256   +
1215257   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1215258   +
1215259   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1215260   +
1215261   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1215262   +
1215263   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1215264   +
1215265   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1215266   +
1215267   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1215268   +
1215269   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1215270   +
1215271   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1215272   +
1215273   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1215274   +
1215275   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1215276   +
1215277   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1215278   +
1215279   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1215280   +
1215281   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1215282   +
1215283   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1215284   +
1215285   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1215286   +
1215287   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1215288   +
1215289   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1215290   +
1215291   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1215292   +
1215293   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1215294   +
1215295   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1215296   +
1215297   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1215298   +
1215299   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1215300   +
1215301   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1215302   +
1215303   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1215304   +
1215305   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1215306   +
1215307   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1215308   +
1215309   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1215310   +
1215311   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1215312   +
1215313   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1215314   +
1215315   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1215316   +
1215317   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1215318   +
1215319   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1215320   +
1215321   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1215322   +
1215323   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1215324   +
The SAS System

1215325   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1215326   +
1215327   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1215328   +
1215329   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1215330   +
1215331   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1215332   +
1215333   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1215334   +
1215335   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1215336   +
1215337   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1215338   +
1215339   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1215340   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1215341   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1215342   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1215343   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215344   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215345   +end;
MPRINT(EM_DIAGRAM):   end;
1215346   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215347   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215348   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1215349   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215350   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1215351   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1215352   +   end;
MPRINT(EM_DIAGRAM):   end;
1215353   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1215354   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1215355   +   end;
MPRINT(EM_DIAGRAM):   end;
1215356   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215357   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1215358   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215359   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215360   +   end;
MPRINT(EM_DIAGRAM):   end;
1215361   +end;
MPRINT(EM_DIAGRAM):   end;
1215362   +
1215363   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1215364   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1215365   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1215366   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1215367   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215368   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215369   +end;
MPRINT(EM_DIAGRAM):   end;
1215370   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215371   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215372   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1215373   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215374   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1215375   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1215376   +   end;
MPRINT(EM_DIAGRAM):   end;
1215377   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1215378   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1215379   +   end;
MPRINT(EM_DIAGRAM):   end;
1215380   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215381   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1215382   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215383   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215384   +   end;
MPRINT(EM_DIAGRAM):   end;
1215385   +end;
MPRINT(EM_DIAGRAM):   end;
1215386   +
1215387   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1215388   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1215389   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1215390   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1215391   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215392   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215393   +end;
MPRINT(EM_DIAGRAM):   end;
1215394   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215395   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215396   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1215397   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215398   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1215399   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1215400   +   end;
MPRINT(EM_DIAGRAM):   end;
1215401   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1215402   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1215403   +   end;
MPRINT(EM_DIAGRAM):   end;
1215404   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215405   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1215406   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215407   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215408   +   end;
MPRINT(EM_DIAGRAM):   end;
1215409   +end;
MPRINT(EM_DIAGRAM):   end;
1215410   +
1215411   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1215412   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1215413   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1215414   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1215415   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215416   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215417   +end;
MPRINT(EM_DIAGRAM):   end;
1215418   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215419   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215420   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1215421   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215422   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1215423   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1215424   +   end;
MPRINT(EM_DIAGRAM):   end;
1215425   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1215426   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1215427   +   end;
MPRINT(EM_DIAGRAM):   end;
1215428   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215429   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1215430   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215431   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215432   +   end;
MPRINT(EM_DIAGRAM):   end;
1215433   +end;
MPRINT(EM_DIAGRAM):   end;
1215434   +
1215435   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1215436   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1215437   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1215438   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1215439   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215440   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215441   +end;
MPRINT(EM_DIAGRAM):   end;
1215442   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215443   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215444   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1215445   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215446   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1215447   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1215448   +   end;
MPRINT(EM_DIAGRAM):   end;
1215449   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1215450   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1215451   +   end;
MPRINT(EM_DIAGRAM):   end;
1215452   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215453   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1215454   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215455   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215456   +   end;
MPRINT(EM_DIAGRAM):   end;
1215457   +end;
MPRINT(EM_DIAGRAM):   end;
1215458   +
1215459   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1215460   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1215461   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1215462   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1215463   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215464   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215465   +end;
MPRINT(EM_DIAGRAM):   end;
1215466   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215467   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215468   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1215469   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215470   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1215471   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1215472   +   end;
MPRINT(EM_DIAGRAM):   end;
1215473   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1215474   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1215475   +   end;
MPRINT(EM_DIAGRAM):   end;
1215476   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215477   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1215478   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215479   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215480   +   end;
MPRINT(EM_DIAGRAM):   end;
1215481   +end;
MPRINT(EM_DIAGRAM):   end;
1215482   +
1215483   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1215484   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1215485   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1215486   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1215487   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215488   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215489   +end;
MPRINT(EM_DIAGRAM):   end;
1215490   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215491   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215492   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1215493   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215494   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1215495   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1215496   +   end;
MPRINT(EM_DIAGRAM):   end;
1215497   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1215498   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1215499   +   end;
MPRINT(EM_DIAGRAM):   end;
1215500   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215501   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1215502   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215503   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215504   +   end;
MPRINT(EM_DIAGRAM):   end;
1215505   +end;
MPRINT(EM_DIAGRAM):   end;
1215506   +
1215507   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1215508   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1215509   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1215510   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1215511   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1215512   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1215513   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1215514   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1215515   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1215516   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1215517   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1215518   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1215519   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215520   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215521   +end;
MPRINT(EM_DIAGRAM):   end;
1215522   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215523   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1215524   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1215525   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215526   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1215527   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1215528   +   end;
MPRINT(EM_DIAGRAM):   end;
1215529   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1215530   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1215531   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1215532   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1215533   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1215534   +   end;
MPRINT(EM_DIAGRAM):   end;
1215535   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1215536   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1215537   +   end;
MPRINT(EM_DIAGRAM):   end;
1215538   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1215539   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1215540   +   end;
MPRINT(EM_DIAGRAM):   end;
1215541   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1215542   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1215543   +   end;
MPRINT(EM_DIAGRAM):   end;
1215544   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215545   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1215546   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1215547   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1215548   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1215549   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215550   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215551   +   end;
MPRINT(EM_DIAGRAM):   end;
1215552   +end;
MPRINT(EM_DIAGRAM):   end;
1215553   +
1215554   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1215555   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1215556   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1215557   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1215558   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1215559   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1215560   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1215561   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1215562   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1215563   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1215564   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1215565   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1215566   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1215567   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215568   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215569   +end;
MPRINT(EM_DIAGRAM):   end;
1215570   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215571   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1215572   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1215573   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215574   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1215575   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1215576   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1215577   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1215578   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1215579   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1215580   +         end;
MPRINT(EM_DIAGRAM):   end;
1215581   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1215582   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1215583   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1215584   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1215585   +            end;
MPRINT(EM_DIAGRAM):   end;
1215586   +         end;
MPRINT(EM_DIAGRAM):   end;
1215587   +      end;
MPRINT(EM_DIAGRAM):   end;
1215588   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1215589   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1215590   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1215591   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1215592   +         end;
MPRINT(EM_DIAGRAM):   end;
1215593   +      end;
MPRINT(EM_DIAGRAM):   end;
1215594   +   end;
MPRINT(EM_DIAGRAM):   end;
1215595   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215596   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1215597   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1215598   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1215599   +      end;
MPRINT(EM_DIAGRAM):   end;
1215600   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1215601   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1215602   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1215603   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1215604   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1215605   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1215606   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1215607   +         end;
MPRINT(EM_DIAGRAM):   end;
1215608   +      end;
MPRINT(EM_DIAGRAM):   end;
1215609   +   end;
MPRINT(EM_DIAGRAM):   end;
1215610   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1215611   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1215612   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1215613   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1215614   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1215615   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215616   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215617   +   end;
MPRINT(EM_DIAGRAM):   end;
1215618   +end;
MPRINT(EM_DIAGRAM):   end;
1215619   +
1215620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1215621   +*** Checking missing input Interval
1215622   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1215623   +
1215624   +IF NMISS(
1215625   +   AcceptedCmpTotal ,
1215626   +   Age ,
1215627   +   Frq ,
1215628   +   Income ,
1215629   +   Kidhome ,
1215630   +   Mnt ,
1215631   +   MntFishProducts ,
1215632   +   MntFruits ,
1215633   +   MntGoldProds ,
1215634   +   MntMeatProducts ,
1215635   +   MntSweetProducts ,
1215636   +   MntWines ,
1215637   +   MonthsAsCustomer ,
1215638   +   NumCatalogPurchases ,
1215639   +   NumDealsPurchases ,
1215640   +   NumDistPurchases ,
1215641   +   NumStorePurchases ,
1215642   +   NumWebPurchases ,
1215643   +   NumWebVisitsMonth ,
1215644   +   RFMstat ,
1215645   +   RMntFrq ,
1215646   +   Recency ,
1215647   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1215648   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1215649   +
1215650   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215651   +END;
MPRINT(EM_DIAGRAM):   END;
1215652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1215653   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1215654   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1215655   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1215656   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1215657   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1215658   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1215659   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1215660   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1215661   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1215662   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1215663   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1215664   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1215665   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1215666   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1215667   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1215668   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1215669   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1215670   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1215671   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1215672   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1215673   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1215674   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1215675   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1215676   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1215677   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1215678   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1215679   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1215680   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1215681   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1215682   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1215683   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1215684   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1215685   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1215686   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1215687   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1215688   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1215689   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1215690   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1215691   +END;
MPRINT(EM_DIAGRAM):   END;
1215692   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1215693   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1215694   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1215695   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1215696   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1215697   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1215698   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1215699   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1215700   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1215701   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1215702   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1215703   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1215704   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1215705   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1215706   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1215707   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1215708   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1215709   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1215710   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1215711   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1215712   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1215713   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1215714   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1215715   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1215716   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1215717   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1215718   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1215719   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1215720   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1215721   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1215722   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1215723   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1215724   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1215725   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1215726   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1215727   +   ELSE S_NumCatalogPurchases
1215728   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1215729   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1215730   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1215731   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1215732   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1215733   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1215734   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1215735   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1215736   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1215737   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1215738   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1215739   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1215740   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1215741   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1215742   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1215743   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1215744   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1215745   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1215746   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1215747   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1215748   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1215749   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1215750   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1215751   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1215752   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1215753   +END;
MPRINT(EM_DIAGRAM):   END;
1215754   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1215755   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1215756   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1215757   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1215758   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1215759   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1215760   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1215761   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1215762   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1215763   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1215764   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
1215765   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
1215766   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
1215767   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
1215768   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
1215769   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
1215770   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
1215771   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
1215772   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
1215773   +          +     3.45371614080196 * S_NumDealsPurchases
1215774   +          +     0.19118374544537 * S_NumDistPurchases
1215775   +          +    -2.45138001446793 * S_NumStorePurchases
1215776   +          +    -0.11424280244155 * S_NumWebPurchases
1215777   +          +    -2.31770357716565 * S_NumWebVisitsMonth
1215778   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
1215779   +        S_RMntFrq  +     0.26870809438679 * S_Recency
1215780   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 * 
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 * 
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts + 
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 * 
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines + 
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases + 
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases + 
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases + 
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 * 
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
1215781   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
1215782   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
1215783   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
1215784   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
1215785   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
1215786   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
1215787   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
1215788   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
1215789   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
1215790   +          +    -1.28390925647659 * S_NumDealsPurchases
1215791   +          +     0.82669177239926 * S_NumDistPurchases
1215792   +          +     1.71678585204511 * S_NumStorePurchases
1215793   +          +     1.49226295608046 * S_NumWebPurchases
1215794   +          +     -4.0105103018388 * S_NumWebVisitsMonth
1215795   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
1215796   +        S_RMntFrq  +     4.74241121363086 * S_Recency
1215797   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 * 
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome 
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 * 
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts + 
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 * 
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 * 
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 * 
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 * 
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq + 
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
1215798   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
1215799   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
1215800   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
1215801   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
1215802   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
1215803   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
1215804   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
1215805   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
1215806   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
1215807   +          +     0.22958626391725 * S_NumDealsPurchases
1215808   +          +    -0.02046515813996 * S_NumDistPurchases
1215809   +          +      0.8618502050837 * S_NumStorePurchases
1215810   +          +     1.45175370326009 * S_NumWebPurchases
1215811   +          +    -0.86122442436156 * S_NumWebVisitsMonth
1215812   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
1215813   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
1215814   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 * 
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome 
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 * 
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts + 
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 * 
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 * 
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 * 
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 * 
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq + 
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
1215815   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
1215816   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
1215817   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
1215818   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
1215819   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
1215820   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
1215821   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
1215822   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
1215823   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
1215824   +          +     1.25310034610344 * S_NumDealsPurchases
1215825   +          +     0.92141098602176 * S_NumDistPurchases
1215826   +          +    -0.08806509391473 * S_NumStorePurchases
1215827   +          +     -1.0533787624668 * S_NumWebPurchases
1215828   +          +     3.07050739830585 * S_NumWebVisitsMonth
1215829   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
1215830   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
1215831   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 * 
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome 
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 * 
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts + 
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 * 
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 * 
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 * 
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 * 
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq + 
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
1215832   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
1215833   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
1215834   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
1215835   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
1215836   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
1215837   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
1215838   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
1215839   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
1215840   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
1215841   +          +    -1.68259553608287 * S_NumDealsPurchases
1215842   +          +    -0.53835572290445 * S_NumDistPurchases
1215843   +          +     1.25833922835446 * S_NumStorePurchases
1215844   +          +     0.48300830623998 * S_NumWebPurchases
1215845   +          +    -2.20119275236582 * S_NumWebVisitsMonth
1215846   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
1215847   +        S_RMntFrq  +     0.35692712879409 * S_Recency
1215848   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 * 
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome 
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 * 
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts + 
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 * 
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 * 
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 * 
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 * 
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq + 
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
1215849   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
1215850   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
1215851   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
1215852   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
1215853   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 * 
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 + 
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 * 
HigherEducationBinary0 ;
1215854   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
1215855   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
1215856   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
1215857   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
1215858   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 * 
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 + 
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 * 
HigherEducationBinary0 ;
1215859   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
1215860   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
1215861   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
1215862   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
1215863   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 * 
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 + 
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 * 
HigherEducationBinary0 ;
1215864   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
1215865   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
1215866   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
1215867   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
1215868   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355 
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 + 
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 * 
HigherEducationBinary0 ;
1215869   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
1215870   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
1215871   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
1215872   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
1215873   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255 
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 + 
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 * 
HigherEducationBinary0 ;
1215874   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
1215875   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
1215876   +        EducationGraduation  +     1.25189584055994 * EducationMaster
1215877   +          +     0.26230568150721 * Marital_StatusDivorced
1215878   +          +     0.27563523967756 * Marital_StatusMarried
1215879   +          +     0.54464481618478 * Marital_StatusSingle
1215880   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931 
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster 
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried + 
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
1215881   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
1215882   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
1215883   +        EducationGraduation  +     0.29772013614284 * EducationMaster
1215884   +          +    -0.06750661313108 * Marital_StatusDivorced
1215885   +          +     1.48628445854207 * Marital_StatusMarried
1215886   +          +    -0.52197797291165 * Marital_StatusSingle
1215887   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle + 
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284 
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 * 
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 * 
Marital_StatusTogether ;
1215888   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
1215889   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
1215890   +        EducationGraduation  +     0.45665087056809 * EducationMaster
1215891   +          +     0.03219453957597 * Marital_StatusDivorced
1215892   +          +    -0.73835008216677 * Marital_StatusMarried
1215893   +          +     0.11212575818086 * Marital_StatusSingle
1215894   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle + 
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 * 
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 * 
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 * 
Marital_StatusTogether ;
1215895   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
1215896   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
1215897   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
1215898   +          +    -0.95055539413405 * Marital_StatusDivorced
1215899   +          +    -1.65922419336067 * Marital_StatusMarried
1215900   +          +     0.78727538125107 * Marital_StatusSingle
1215901   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle + 
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701 
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 * 
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 * 
Marital_StatusTogether ;
1215902   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
1215903   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
1215904   +        EducationGraduation  +     0.46710355433642 * EducationMaster
1215905   +          +     -4.1747415035634 * Marital_StatusDivorced
1215906   +          +     3.61194282451968 * Marital_StatusMarried
1215907   +          +     -3.2800495365546 * Marital_StatusSingle
1215908   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle + 
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642 
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 * 
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 * 
Marital_StatusTogether ;
1215909   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
1215910   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
1215911   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
1215912   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
1215913   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
1215914   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1215915   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1215916   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1215917   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1215918   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1215919   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1215920   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1215921   +END;
MPRINT(EM_DIAGRAM):   END;
1215922   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1215923   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1215924   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1215925   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1215926   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1215927   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1215928   +END;
MPRINT(EM_DIAGRAM):   END;
1215929   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1215930   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1215931   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1215932   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1215933   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
1215934   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
1215935   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
1215936   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
1215937   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
1215938   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
1215939   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
1215940   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
1215941   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
1215942   +          +     1.29727972396867 * S_NumDealsPurchases
1215943   +          +     -0.4796144286007 * S_NumDistPurchases
1215944   +          +     0.88365985808591 * S_NumStorePurchases
1215945   +          +     0.68522096892804 * S_NumWebPurchases
1215946   +          +     0.54931043107798 * S_NumWebVisitsMonth
1215947   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
1215948   +        S_RMntFrq  +     2.35704770144328 * S_Recency
1215949   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 * 
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome 
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 * 
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts + 
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 * 
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 * 
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 * 
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 * 
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq + 
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
1215950   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
1215951   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
1215952   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
1215953   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
1215954   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
1215955   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
1215956   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
1215957   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
1215958   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
1215959   +          +     0.26997834581422 * S_NumDealsPurchases
1215960   +          +      1.4974894627406 * S_NumDistPurchases
1215961   +          +     0.20577850505638 * S_NumStorePurchases
1215962   +          +     0.67578530037026 * S_NumWebPurchases
1215963   +          +     1.48893165613941 * S_NumWebVisitsMonth
1215964   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
1215965   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
1215966   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 * 
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 * 
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts + 
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 * 
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines + 
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases + 
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases + 
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases + 
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 * 
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
1215967   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
1215968   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
1215969   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
1215970   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
1215971   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
1215972   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
1215973   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
1215974   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
1215975   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
1215976   +          +    -0.75474919633886 * S_NumDealsPurchases
1215977   +          +     2.21872386475638 * S_NumDistPurchases
1215978   +          +    -0.36191460108989 * S_NumStorePurchases
1215979   +          +     0.03160010932412 * S_NumWebPurchases
1215980   +          +     0.00984650739909 * S_NumWebVisitsMonth
1215981   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
1215982   +        S_RMntFrq  +     0.97890474913417 * S_Recency
1215983   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 * 
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome + 
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 * 
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts + 
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 * 
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 * 
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 * 
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 * 
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq + 
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
1215984   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
1215985   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
1215986   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
1215987   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
1215988   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
1215989   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
1215990   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
1215991   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
1215992   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
1215993   +          +    -1.12057357865269 * S_NumDealsPurchases
1215994   +          +    -0.70841760614521 * S_NumDistPurchases
1215995   +          +    -1.39174816270404 * S_NumStorePurchases
1215996   +          +    -1.62343249380806 * S_NumWebPurchases
1215997   +          +    -0.73097954508465 * S_NumWebVisitsMonth
1215998   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
1215999   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
1216000   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 * 
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 * 
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658 
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts + 
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 * 
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 * 
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 * 
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 * 
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq + 
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
1216001   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
1216002   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
1216003   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
1216004   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
1216005   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
1216006   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
1216007   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
1216008   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
1216009   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
1216010   +          +     0.66880481485557 * S_NumDealsPurchases
1216011   +          +     0.69540174544859 * S_NumDistPurchases
1216012   +          +     1.68246546921736 * S_NumStorePurchases
1216013   +          +     1.85958176898295 * S_NumWebPurchases
1216014   +          +    -0.23815810306565 * S_NumWebVisitsMonth
1216015   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
1216016   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
1216017   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 * 
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome 
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 * 
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts + 
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 * 
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 * 
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 * 
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 * 
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq + 
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
1216018   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
1216019   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
1216020   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
1216021   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
1216022   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761 
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 + 
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 * 
HigherEducationBinary0 ;
1216023   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
1216024   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
1216025   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
1216026   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
1216027   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 * 
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 + 
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 * 
HigherEducationBinary0 ;
1216028   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
1216029   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
1216030   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
1216031   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
1216032   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 * 
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 + 
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 * 
HigherEducationBinary0 ;
1216033   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
1216034   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
1216035   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
1216036   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
1216037   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 * 
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 + 
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 * 
HigherEducationBinary0 ;
1216038   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
1216039   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
1216040   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
1216041   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
1216042   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 * 
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 + 
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 * 
HigherEducationBinary0 ;
1216043   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
1216044   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
1216045   +        EducationGraduation  +     0.32623787352656 * EducationMaster
1216046   +          +      0.2766977476799 * Marital_StatusDivorced
1216047   +          +     0.99585126449473 * Marital_StatusMarried
1216048   +          +    -0.71244490682808 * Marital_StatusSingle
1216049   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle + 
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656 
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 * 
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 * 
Marital_StatusTogether ;
1216050   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
1216051   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
1216052   +        EducationGraduation  +     0.47239961039918 * EducationMaster
1216053   +          +     0.04724779113048 * Marital_StatusDivorced
1216054   +          +    -0.80186231440666 * Marital_StatusMarried
1216055   +          +    -0.02226793584171 * Marital_StatusSingle
1216056   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle + 
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918 
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 * 
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 * 
Marital_StatusTogether ;
1216057   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
1216058   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
1216059   +        EducationGraduation  +     0.41284540548646 * EducationMaster
1216060   +          +     0.28206835683721 * Marital_StatusDivorced
1216061   +          +     0.46500886756532 * Marital_StatusMarried
1216062   +          +     0.35327545255503 * Marital_StatusSingle
1216063   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle + 
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation + 
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced + 
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle + 
0.58394650567036 * Marital_StatusTogether ;
1216064   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
1216065   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
1216066   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
1216067   +          +     1.22291788006392 * Marital_StatusDivorced
1216068   +          +    -2.27040720272432 * Marital_StatusMarried
1216069   +          +     1.13606780043773 * Marital_StatusSingle
1216070   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle + 
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479 
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 * 
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 * 
Marital_StatusTogether ;
1216071   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
1216072   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
1216073   +        EducationGraduation  +      0.4909097120378 * EducationMaster
1216074   +          +     -0.3999800759199 * Marital_StatusDivorced
1216075   +          +    -0.40978271635345 * Marital_StatusMarried
1216076   +          +    -0.55524279444227 * Marital_StatusSingle
1216077   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle + 
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 * 
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 * 
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 * 
Marital_StatusTogether ;
1216078   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
1216079   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
1216080   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
1216081   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
1216082   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
1216083   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1216084   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1216085   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1216086   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
1216087   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
1216088   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
1216089   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
1216090   +END;
MPRINT(EM_DIAGRAM):   END;
1216091   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1216092   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1216093   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1216094   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1216095   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1216096   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1216097   +END;
MPRINT(EM_DIAGRAM):   END;
1216098   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216099   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1216100   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216101   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1216102   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
1216103   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
1216104   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
1216105   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
1216106   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
1216107   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
1216108   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
1216109   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
1216110   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
1216111   +          +     0.15783958682465 * S_NumDealsPurchases
1216112   +          +     1.52124708558457 * S_NumDistPurchases
1216113   +          +     -1.3804418313581 * S_NumStorePurchases
1216114   +          +    -1.29570111649272 * S_NumWebPurchases
1216115   +          +    -0.64280706056547 * S_NumWebVisitsMonth
1216116   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
1216117   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
1216118   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 * 
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome 
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 * 
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts + 
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 * 
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 * 
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 * 
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 * 
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq + 
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
1216119   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
1216120   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
1216121   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
1216122   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
1216123   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
1216124   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
1216125   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
1216126   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
1216127   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
1216128   +          +     0.12337111358286 * S_NumDealsPurchases
1216129   +          +     -2.3848926094027 * S_NumDistPurchases
1216130   +          +    -1.20666646996433 * S_NumStorePurchases
1216131   +          +     0.89549302881365 * S_NumWebPurchases
1216132   +          +     0.95359042569947 * S_NumWebVisitsMonth
1216133   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
1216134   +        S_RMntFrq  +     0.17682790616815 * S_Recency
1216135   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 * 
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome 
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 * 
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts + 
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 * 
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 * 
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 * 
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 * 
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq + 
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
1216136   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
1216137   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
1216138   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
1216139   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
1216140   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
1216141   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
1216142   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
1216143   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
1216144   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
1216145   +          +    -1.05383642674948 * S_NumDealsPurchases
1216146   +          +     1.71861984509369 * S_NumDistPurchases
1216147   +          +     1.47595181536047 * S_NumStorePurchases
1216148   +          +    -1.64165005491178 * S_NumWebPurchases
1216149   +          +    -2.35130004742828 * S_NumWebVisitsMonth
1216150   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
1216151   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
1216152   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 * 
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 * 
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241 
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts + 
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 * 
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 * 
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 * 
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 * 
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq + 
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
1216153   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
1216154   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
1216155   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
1216156   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
1216157   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
1216158   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
1216159   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
1216160   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
1216161   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
1216162   +          +     0.13347794794222 * S_NumDealsPurchases
1216163   +          +     0.30533639886561 * S_NumDistPurchases
1216164   +          +     1.63892955540526 * S_NumStorePurchases
1216165   +          +     0.43734586516446 * S_NumWebPurchases
1216166   +          +     1.79260779802864 * S_NumWebVisitsMonth
1216167   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
1216168   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
1216169   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 * 
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome + 
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 * 
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts + 
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 * 
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 * 
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 * 
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 * 
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq + 
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
1216170   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
1216171   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
1216172   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
1216173   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
1216174   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
1216175   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
1216176   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
1216177   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
1216178   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
1216179   +          +     1.64209094349557 * S_NumDealsPurchases
1216180   +          +    -0.38876870460627 * S_NumDistPurchases
1216181   +          +    -0.48559309584971 * S_NumStorePurchases
1216182   +          +     0.21254626353218 * S_NumWebPurchases
1216183   +          +    -0.71484448532542 * S_NumWebVisitsMonth
1216184   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
1216185   +        S_RMntFrq  +     0.44893411588775 * S_Recency
1216186   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 * 
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome 
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 * 
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts + 
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 * 
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 * 
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 * 
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 * 
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq + 
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
1216187   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
1216188   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
1216189   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
1216190   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
1216191   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 * 
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 + 
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 * 
HigherEducationBinary0 ;
1216192   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
1216193   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
1216194   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
1216195   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
1216196   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 * 
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 + 
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 * 
HigherEducationBinary0 ;
1216197   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
1216198   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
1216199   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
1216200   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
1216201   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 * 
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 + 
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 * 
HigherEducationBinary0 ;
1216202   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
1216203   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
1216204   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
1216205   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
1216206   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334 
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 + 
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 * 
HigherEducationBinary0 ;
1216207   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
1216208   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
1216209   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
1216210   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
1216211   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 * 
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 + 
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 * 
HigherEducationBinary0 ;
1216212   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
1216213   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
1216214   +        EducationGraduation  +     0.46887304015863 * EducationMaster
1216215   +          +     1.33953173091973 * Marital_StatusDivorced
1216216   +          +    -0.26253208073262 * Marital_StatusMarried
1216217   +          +    -0.00960552682431 * Marital_StatusSingle
1216218   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle + 
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation + 
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced + 
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle + 
1.02851334153667 * Marital_StatusTogether ;
1216219   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
1216220   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
1216221   +        EducationGraduation  +     1.05325310300372 * EducationMaster
1216222   +          +     1.43150850334311 * Marital_StatusDivorced
1216223   +          +    -0.69239127844934 * Marital_StatusMarried
1216224   +          +     2.08477562471559 * Marital_StatusSingle
1216225   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle + 
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372 
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 * 
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 * 
Marital_StatusTogether ;
1216226   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
1216227   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
1216228   +        EducationGraduation  +     1.80436924796338 * EducationMaster
1216229   +          +     1.08387556786168 * Marital_StatusDivorced
1216230   +          +      1.0283506000217 * Marital_StatusMarried
1216231   +          +    -0.87069431107983 * Marital_StatusSingle
1216232   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle + 
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338 
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 * 
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 * 
Marital_StatusTogether ;
1216233   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
1216234   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
1216235   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
1216236   +          +      -1.347780188307 * Marital_StatusDivorced
1216237   +          +    -0.53911983240372 * Marital_StatusMarried
1216238   +          +     0.22083074159185 * Marital_StatusSingle
1216239   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle + 
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation + 
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced + 
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle + 
0.46023807391468 * Marital_StatusTogether ;
1216240   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
1216241   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
1216242   +        EducationGraduation  +      1.6087631135774 * EducationMaster
1216243   +          +     1.46582538311384 * Marital_StatusDivorced
1216244   +          +     0.05256161016002 * Marital_StatusMarried
1216245   +          +    -1.21402967626877 * Marital_StatusSingle
1216246   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle + 
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 * 
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 * 
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 * 
Marital_StatusTogether ;
1216247   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
1216248   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
1216249   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
1216250   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
1216251   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
1216252   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1216253   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1216254   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1216255   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
1216256   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
1216257   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
1216258   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
1216259   +END;
MPRINT(EM_DIAGRAM):   END;
1216260   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1216261   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1216262   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1216263   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1216264   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1216265   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1216266   +END;
MPRINT(EM_DIAGRAM):   END;
1216267   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216268   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1216269   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216270   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1216271   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
1216272   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
1216273   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 + 
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
1216274   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
1216275   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
1216276   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 + 
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
1216277   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
1216278   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
1216279   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 + 
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
1216280   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
1216281   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
1216282   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 + 
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
1216283   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
1216284   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
1216285   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2 
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
1216286   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
1216287   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
1216288   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2 
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
1216289   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
1216290   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
1216291   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2 
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
1216292   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
1216293   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
1216294   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2 
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
1216295   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
1216296   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
1216297   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2 
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
1216298   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
1216299   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
1216300   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 + 
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
1216301   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
1216302   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
1216303   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2 
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
1216304   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
1216305   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
1216306   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2 
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
1216307   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
1216308   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
1216309   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
1216310   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
1216311   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
1216312   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
1216313   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1216314   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1216315   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1216316   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1216317   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1216318   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1216319   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1216320   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1216321   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1216322   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1216323   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1216324   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1216325   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1216326   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1216327   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1216328   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1216329   +END;
MPRINT(EM_DIAGRAM):   END;
1216330   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1216331   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1216332   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1216333   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1216334   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1216335   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1216336   +END;
MPRINT(EM_DIAGRAM):   END;
1216337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216338   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1216339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216340   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1216341   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
1216342   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
1216343   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 + 
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
1216344   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
1216345   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
1216346   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 + 
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
1216347   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
1216348   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
1216349   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 + 
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
1216350   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
1216351   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
1216352   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 + 
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
1216353   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
1216354   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
1216355   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 + 
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
1216356   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
1216357   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
1216358   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2 
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
1216359   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
1216360   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
1216361   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2 
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
1216362   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
1216363   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
1216364   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2 
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
1216365   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
1216366   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
1216367   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2 
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
1216368   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
1216369   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
1216370   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 * 
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
1216371   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
1216372   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
1216373   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2 
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
1216374   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
1216375   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
1216376   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2 
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
1216377   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
1216378   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
1216379   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
1216380   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
1216381   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
1216382   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
1216383   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1216384   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1216385   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1216386   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1216387   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1216388   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1216389   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1216390   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
1216391   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
1216392   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
1216393   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
1216394   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1216395   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1216396   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1216397   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
1216398   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
1216399   +END;
MPRINT(EM_DIAGRAM):   END;
1216400   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1216401   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1216402   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1216403   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1216404   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1216405   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1216406   +END;
MPRINT(EM_DIAGRAM):   END;
1216407   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216408   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1216409   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216410   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1216411   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
1216412   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
1216413   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 + 
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
1216414   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
1216415   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
1216416   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 + 
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
1216417   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
1216418   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
1216419   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 + 
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
1216420   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
1216421   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
1216422   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 + 
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
1216423   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
1216424   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
1216425   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2 
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
1216426   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
1216427   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
1216428   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2 
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
1216429   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
1216430   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
1216431   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2 
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
1216432   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
1216433   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
1216434   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 * 
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
1216435   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
1216436   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
1216437   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
1216438   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
1216439   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
1216440   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
1216441   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1216442   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1216443   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1216444   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1216445   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1216446   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
1216447   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
1216448   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
1216449   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
1216450   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
1216451   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
1216452   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1216453   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1216454   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
1216455   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
1216456   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
1216457   +END;
MPRINT(EM_DIAGRAM):   END;
1216458   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1216459   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1216460   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1216461   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1216462   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1216463   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1216464   +END;
MPRINT(EM_DIAGRAM):   END;
1216465   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216466   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1216467   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216468   +
1216469   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1216470   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1216471   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1216472   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1216473   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1216474   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216475   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1216476   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1216477   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1216478   +end;
MPRINT(EM_DIAGRAM):   end;
1216479   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216480   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1216481   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1216482   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1216483   +   end;
MPRINT(EM_DIAGRAM):   end;
1216484   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1216485   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1216486   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1216487   +   end;
MPRINT(EM_DIAGRAM):   end;
1216488   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216489   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1216490   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1216491   +   end;
MPRINT(EM_DIAGRAM):   end;
1216492   +end;
MPRINT(EM_DIAGRAM):   end;
1216493   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1216494   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
1216495   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
1216496   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 + 
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
1216497   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
1216498   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1216499   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1216500   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1216501   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1216502   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1216503   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1216504   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1216505   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1216506   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1216507   +END;
MPRINT(EM_DIAGRAM):   END;
1216508   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1216509   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1216510   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1216511   +END;
MPRINT(EM_DIAGRAM):   END;
1216512   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1216513   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1216514   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1216515   +END;
MPRINT(EM_DIAGRAM):   END;
1216516   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1216517   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1216518   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1216519   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1216520   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1216521   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1216522   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1216523   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216524   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1216525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216526   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1216527   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1216528   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1216529   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1216530   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1216531   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1216532   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1216533   +END;
MPRINT(EM_DIAGRAM):   END;
1216534   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1216535   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1216536   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1216537   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1216538   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
1216539   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216540   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
1216541   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216542   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
1216543   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
1216544   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
1216545   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
1216546   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216547   +* Renaming Into variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural10;
1216548   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216549   +length AutoNeural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural10_I_DepVar $32;
1216550   +drop AutoNeural10_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_I_DepVar;
1216551   +AutoNeural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural10_I_DepVar = I_DepVar;
1216552   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216553   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
1216554   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216555   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
1216556   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
1216557   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
1216558   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216559   +* Ensmbl47: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 2 of 5;
1216560   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216561   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216562   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1216563   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1216564   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
1216565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216566   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1216567   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1216568   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1216569   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1216570   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1216571   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1216572   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1216573   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1216574   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1216575   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1216576   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1216577   +LENGTH _WARN_ $4
1216578   +      F_DepVar  $ 12
1216579   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1216580   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1216581   +
1216582   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1216583   +
1216584   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1216585   +
1216586   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1216587   +
1216588   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1216589   +
1216590   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1216591   +
1216592   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1216593   +
1216594   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1216595   +
1216596   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1216597   +
1216598   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1216599   +
1216600   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1216601   +
1216602   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1216603   +
1216604   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1216605   +
1216606   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1216607   +
1216608   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1216609   +
1216610   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1216611   +
1216612   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1216613   +
1216614   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1216615   +
1216616   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1216617   +
1216618   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1216619   +
1216620   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1216621   +
1216622   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1216623   +
1216624   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1216625   +
1216626   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1216627   +
1216628   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1216629   +
1216630   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1216631   +
1216632   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1216633   +
1216634   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1216635   +
1216636   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1216637   +
1216638   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1216639   +
1216640   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1216641   +
1216642   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1216643   +
1216644   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1216645   +
1216646   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1216647   +
1216648   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1216649   +
1216650   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1216651   +
1216652   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1216653   +
1216654   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1216655   +
1216656   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1216657   +
1216658   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1216659   +
1216660   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1216661   +
1216662   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1216663   +
1216664   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1216665   +
1216666   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1216667   +
1216668   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1216669   +
1216670   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1216671   +
1216672   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1216673   +
1216674   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1216675   +
1216676   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1216677   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1216678   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1216679   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1216680   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216681   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216682   +end;
MPRINT(EM_DIAGRAM):   end;
1216683   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216684   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1216685   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1216686   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216687   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1216688   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1216689   +   end;
MPRINT(EM_DIAGRAM):   end;
1216690   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1216691   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1216692   +   end;
MPRINT(EM_DIAGRAM):   end;
1216693   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216694   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1216695   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216696   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216697   +   end;
MPRINT(EM_DIAGRAM):   end;
1216698   +end;
MPRINT(EM_DIAGRAM):   end;
1216699   +
1216700   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1216701   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1216702   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1216703   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1216704   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216705   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216706   +end;
MPRINT(EM_DIAGRAM):   end;
1216707   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216708   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1216709   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1216710   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216711   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1216712   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1216713   +   end;
MPRINT(EM_DIAGRAM):   end;
1216714   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1216715   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1216716   +   end;
MPRINT(EM_DIAGRAM):   end;
1216717   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216718   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1216719   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216720   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216721   +   end;
MPRINT(EM_DIAGRAM):   end;
1216722   +end;
MPRINT(EM_DIAGRAM):   end;
1216723   +
1216724   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1216725   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1216726   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1216727   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1216728   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216729   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216730   +end;
MPRINT(EM_DIAGRAM):   end;
1216731   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216732   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1216733   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1216734   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216735   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1216736   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1216737   +   end;
MPRINT(EM_DIAGRAM):   end;
1216738   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1216739   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1216740   +   end;
MPRINT(EM_DIAGRAM):   end;
1216741   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216742   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1216743   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216744   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216745   +   end;
MPRINT(EM_DIAGRAM):   end;
1216746   +end;
MPRINT(EM_DIAGRAM):   end;
1216747   +
1216748   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1216749   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1216750   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1216751   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1216752   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216753   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216754   +end;
MPRINT(EM_DIAGRAM):   end;
1216755   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216756   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1216757   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1216758   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216759   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1216760   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1216761   +   end;
MPRINT(EM_DIAGRAM):   end;
1216762   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1216763   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1216764   +   end;
MPRINT(EM_DIAGRAM):   end;
1216765   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216766   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1216767   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216768   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216769   +   end;
MPRINT(EM_DIAGRAM):   end;
1216770   +end;
MPRINT(EM_DIAGRAM):   end;
1216771   +
1216772   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1216773   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1216774   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1216775   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1216776   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216777   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216778   +end;
MPRINT(EM_DIAGRAM):   end;
1216779   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216780   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1216781   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1216782   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216783   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1216784   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1216785   +   end;
MPRINT(EM_DIAGRAM):   end;
1216786   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1216787   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1216788   +   end;
MPRINT(EM_DIAGRAM):   end;
1216789   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216790   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1216791   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216792   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216793   +   end;
MPRINT(EM_DIAGRAM):   end;
1216794   +end;
MPRINT(EM_DIAGRAM):   end;
1216795   +
1216796   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1216797   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1216798   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1216799   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1216800   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216801   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216802   +end;
MPRINT(EM_DIAGRAM):   end;
1216803   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216804   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1216805   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1216806   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216807   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1216808   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1216809   +   end;
MPRINT(EM_DIAGRAM):   end;
1216810   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1216811   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1216812   +   end;
MPRINT(EM_DIAGRAM):   end;
1216813   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216814   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1216815   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216816   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216817   +   end;
MPRINT(EM_DIAGRAM):   end;
1216818   +end;
MPRINT(EM_DIAGRAM):   end;
1216819   +
1216820   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1216821   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1216822   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1216823   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1216824   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216825   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216826   +end;
MPRINT(EM_DIAGRAM):   end;
1216827   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216828   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1216829   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1216830   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216831   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1216832   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1216833   +   end;
MPRINT(EM_DIAGRAM):   end;
1216834   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1216835   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1216836   +   end;
MPRINT(EM_DIAGRAM):   end;
1216837   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216838   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1216839   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216840   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216841   +   end;
MPRINT(EM_DIAGRAM):   end;
1216842   +end;
MPRINT(EM_DIAGRAM):   end;
1216843   +
1216844   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1216845   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1216846   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1216847   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1216848   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1216849   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1216850   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1216851   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1216852   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1216853   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1216854   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1216855   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1216856   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216857   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216858   +end;
MPRINT(EM_DIAGRAM):   end;
1216859   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216860   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1216861   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1216862   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216863   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1216864   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1216865   +   end;
MPRINT(EM_DIAGRAM):   end;
1216866   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1216867   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1216868   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1216869   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1216870   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1216871   +   end;
MPRINT(EM_DIAGRAM):   end;
1216872   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1216873   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1216874   +   end;
MPRINT(EM_DIAGRAM):   end;
1216875   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1216876   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1216877   +   end;
MPRINT(EM_DIAGRAM):   end;
1216878   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1216879   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1216880   +   end;
MPRINT(EM_DIAGRAM):   end;
1216881   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216882   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1216883   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1216884   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1216885   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1216886   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216887   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216888   +   end;
MPRINT(EM_DIAGRAM):   end;
1216889   +end;
MPRINT(EM_DIAGRAM):   end;
1216890   +
1216891   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1216892   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1216893   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1216894   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1216895   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1216896   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1216897   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1216898   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1216899   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1216900   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1216901   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1216902   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1216903   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1216904   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216905   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216906   +end;
MPRINT(EM_DIAGRAM):   end;
1216907   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216908   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1216909   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1216910   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216911   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1216912   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1216913   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1216914   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1216915   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1216916   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1216917   +         end;
MPRINT(EM_DIAGRAM):   end;
1216918   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1216919   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1216920   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1216921   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1216922   +            end;
MPRINT(EM_DIAGRAM):   end;
1216923   +         end;
MPRINT(EM_DIAGRAM):   end;
1216924   +      end;
MPRINT(EM_DIAGRAM):   end;
1216925   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1216926   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1216927   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1216928   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1216929   +         end;
MPRINT(EM_DIAGRAM):   end;
1216930   +      end;
MPRINT(EM_DIAGRAM):   end;
1216931   +   end;
MPRINT(EM_DIAGRAM):   end;
1216932   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216933   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1216934   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1216935   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1216936   +      end;
MPRINT(EM_DIAGRAM):   end;
1216937   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1216938   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1216939   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1216940   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1216941   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1216942   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1216943   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1216944   +         end;
MPRINT(EM_DIAGRAM):   end;
1216945   +      end;
MPRINT(EM_DIAGRAM):   end;
1216946   +   end;
MPRINT(EM_DIAGRAM):   end;
1216947   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1216948   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1216949   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1216950   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1216951   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1216952   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216953   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216954   +   end;
MPRINT(EM_DIAGRAM):   end;
1216955   +end;
MPRINT(EM_DIAGRAM):   end;
1216956   +
1216957   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216958   +*** Checking missing input Interval
1216959   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1216960   +
1216961   +IF NMISS(
1216962   +   AcceptedCmpTotal ,
1216963   +   Age ,
1216964   +   Frq ,
1216965   +   Income ,
1216966   +   Kidhome ,
1216967   +   Mnt ,
1216968   +   MntFishProducts ,
1216969   +   MntFruits ,
1216970   +   MntGoldProds ,
1216971   +   MntMeatProducts ,
1216972   +   MntSweetProducts ,
1216973   +   MntWines ,
1216974   +   MonthsAsCustomer ,
1216975   +   NumCatalogPurchases ,
1216976   +   NumDealsPurchases ,
1216977   +   NumDistPurchases ,
1216978   +   NumStorePurchases ,
1216979   +   NumWebPurchases ,
1216980   +   NumWebVisitsMonth ,
1216981   +   RFMstat ,
1216982   +   RMntFrq ,
1216983   +   Recency ,
1216984   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1216985   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1216986   +
1216987   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216988   +END;
MPRINT(EM_DIAGRAM):   END;
1216989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216990   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1216991   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216992   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1216993   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1216994   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1216995   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1216996   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1216997   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1216998   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1216999   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1217000   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1217001   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1217002   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1217003   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1217004   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1217005   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1217006   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1217007   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1217008   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1217009   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1217010   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1217011   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1217012   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1217013   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1217014   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1217015   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1217016   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1217017   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1217018   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1217019   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1217020   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1217021   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1217022   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1217023   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1217024   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1217025   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1217026   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1217027   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1217028   +END;
MPRINT(EM_DIAGRAM):   END;
1217029   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1217030   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1217031   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1217032   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1217033   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1217034   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1217035   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1217036   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1217037   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1217038   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1217039   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1217040   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1217041   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1217042   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1217043   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1217044   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1217045   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1217046   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1217047   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1217048   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1217049   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1217050   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1217051   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1217052   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1217053   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1217054   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1217055   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1217056   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1217057   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1217058   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1217059   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1217060   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1217061   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1217062   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1217063   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1217064   +   ELSE S_NumCatalogPurchases
1217065   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1217066   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1217067   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1217068   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1217069   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1217070   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1217071   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1217072   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1217073   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1217074   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1217075   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1217076   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1217077   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1217078   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1217079   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1217080   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1217081   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1217082   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1217083   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1217084   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1217085   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1217086   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1217087   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1217088   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1217089   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1217090   +END;
MPRINT(EM_DIAGRAM):   END;
1217091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217092   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1217093   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217095   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1217096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217097   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217098   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1217099   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217100   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1217101   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
1217102   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
1217103   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
1217104   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
1217105   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
1217106   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
1217107   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
1217108   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
1217109   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
1217110   +          +     0.09708841024031 * S_NumDealsPurchases
1217111   +          +    -0.29075561032014 * S_NumDistPurchases
1217112   +          +    -0.14495394259873 * S_NumStorePurchases
1217113   +          +     0.11890705145732 * S_NumWebPurchases
1217114   +          +    -0.16954189911344 * S_NumWebVisitsMonth
1217115   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
1217116   +        S_RMntFrq  +     0.17150719398884 * S_Recency
1217117   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
1217118   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
1217119   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
1217120   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
1217121   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
1217122   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
1217123   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
1217124   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
1217125   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
1217126   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
1217127   +          +     0.16274478997892 * S_NumDealsPurchases
1217128   +          +     0.03966958784582 * S_NumDistPurchases
1217129   +          +    -0.04714110726598 * S_NumStorePurchases
1217130   +          +    -0.02124229528082 * S_NumWebPurchases
1217131   +          +     0.29753299776832 * S_NumWebVisitsMonth
1217132   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
1217133   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
1217134   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
1217135   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
1217136   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
1217137   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
1217138   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
1217139   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
1217140   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
1217141   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
1217142   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
1217143   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
1217144   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
1217145   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
1217146   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
1217147   +        EducationGraduation  +     0.00619669837452 * EducationMaster
1217148   +          +    -0.05037639679806 * Marital_StatusDivorced
1217149   +          +     0.28781968727878 * Marital_StatusMarried
1217150   +          +    -0.20382417074384 * Marital_StatusSingle
1217151   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
1217152   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
1217153   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
1217154   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
1217155   +          +     0.06970969219123 * Marital_StatusDivorced
1217156   +          +    -0.15787475744986 * Marital_StatusMarried
1217157   +          +     0.14345344072192 * Marital_StatusSingle
1217158   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
1217159   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
1217160   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
1217161   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1217162   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1217163   +END;
MPRINT(EM_DIAGRAM):   END;
1217164   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1217165   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1217166   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1217167   +END;
MPRINT(EM_DIAGRAM):   END;
1217168   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217169   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1217170   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217171   +
1217172   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1217173   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1217174   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1217175   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1217176   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1217177   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217178   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1217179   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1217180   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1217181   +end;
MPRINT(EM_DIAGRAM):   end;
1217182   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217183   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1217184   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1217185   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1217186   +   end;
MPRINT(EM_DIAGRAM):   end;
1217187   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1217188   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1217189   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1217190   +   end;
MPRINT(EM_DIAGRAM):   end;
1217191   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217192   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1217193   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1217194   +   end;
MPRINT(EM_DIAGRAM):   end;
1217195   +end;
MPRINT(EM_DIAGRAM):   end;
1217196   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1217197   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
1217198   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
1217199   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
1217200   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1217201   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1217202   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1217203   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1217204   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1217205   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1217206   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1217207   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1217208   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1217209   +END;
MPRINT(EM_DIAGRAM):   END;
1217210   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1217211   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1217212   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1217213   +END;
MPRINT(EM_DIAGRAM):   END;
1217214   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1217215   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1217216   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1217217   +END;
MPRINT(EM_DIAGRAM):   END;
1217218   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1217219   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1217220   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1217221   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1217222   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1217223   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1217224   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1217225   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217226   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1217227   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217228   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1217229   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1217230   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1217231   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1217232   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1217233   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1217234   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1217235   +END;
MPRINT(EM_DIAGRAM):   END;
1217236   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1217237   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1217238   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1217239   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1217240   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
1217241   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1217242   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
1217243   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1217244   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
1217245   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
1217246   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
1217247   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
1217248   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1217249   +* Renaming Into variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural7;
1217250   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1217251   +length AutoNeural7_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural7_I_DepVar $32;
1217252   +drop AutoNeural7_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_I_DepVar;
1217253   +AutoNeural7_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural7_I_DepVar = I_DepVar;
1217254   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1217255   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
1217256   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1217257   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
1217258   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
1217259   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
1217260   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1217261   +* Ensmbl47: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 3 of 5;
1217262   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1217263   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1217264   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1217265   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1217266   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
1217267   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1217268   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1217269   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1217270   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1217271   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1217272   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1217273   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1217274   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1217275   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1217276   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1217277   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1217278   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1217279   +LENGTH _WARN_ $4
1217280   +      F_DepVar  $ 12
1217281   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1217282   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1217283   +
1217284   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1217285   +
1217286   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1217287   +
1217288   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1217289   +
1217290   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1217291   +
1217292   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1217293   +
1217294   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1217295   +
1217296   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1217297   +
1217298   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1217299   +
1217300   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1217301   +
1217302   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1217303   +
1217304   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1217305   +
1217306   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1217307   +
1217308   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1217309   +
1217310   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1217311   +
1217312   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1217313   +
1217314   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1217315   +
1217316   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1217317   +
1217318   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1217319   +
1217320   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1217321   +
1217322   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1217323   +
1217324   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1217325   +
1217326   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1217327   +
1217328   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1217329   +
1217330   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1217331   +
1217332   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1217333   +
1217334   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1217335   +
1217336   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1217337   +
1217338   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1217339   +
1217340   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1217341   +
1217342   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1217343   +
1217344   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1217345   +
1217346   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1217347   +
1217348   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1217349   +
1217350   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1217351   +
1217352   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1217353   +
1217354   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1217355   +
1217356   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1217357   +
1217358   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1217359   +
1217360   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1217361   +
1217362   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1217363   +
1217364   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1217365   +
1217366   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1217367   +
1217368   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1217369   +
1217370   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1217371   +
1217372   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1217373   +
1217374   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1217375   +
1217376   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1217377   +
1217378   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1217379   +
1217380   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1217381   +
1217382   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1217383   +
1217384   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
1217385   +
1217386   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1217387   +
1217388   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1217389   +
1217390   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1217391   +
1217392   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1217393   +
1217394   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1217395   +
1217396   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1217397   +
1217398   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
1217399   +
1217400   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1217401   +
1217402   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1217403   +
1217404   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1217405   +
1217406   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1217407   +
1217408   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1217409   +
1217410   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1217411   +
1217412   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1217413   +
1217414   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1217415   +
1217416   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1217417   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1217418   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1217419   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1217420   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217421   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217422   +end;
MPRINT(EM_DIAGRAM):   end;
1217423   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217424   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1217425   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1217426   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217427   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1217428   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1217429   +   end;
MPRINT(EM_DIAGRAM):   end;
1217430   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1217431   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1217432   +   end;
MPRINT(EM_DIAGRAM):   end;
1217433   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217434   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1217435   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1217436   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217437   +   end;
MPRINT(EM_DIAGRAM):   end;
1217438   +end;
MPRINT(EM_DIAGRAM):   end;
1217439   +
1217440   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1217441   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1217442   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1217443   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1217444   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217445   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217446   +end;
MPRINT(EM_DIAGRAM):   end;
1217447   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217448   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1217449   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1217450   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217451   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1217452   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1217453   +   end;
MPRINT(EM_DIAGRAM):   end;
1217454   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1217455   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1217456   +   end;
MPRINT(EM_DIAGRAM):   end;
1217457   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217458   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1217459   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1217460   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217461   +   end;
MPRINT(EM_DIAGRAM):   end;
1217462   +end;
MPRINT(EM_DIAGRAM):   end;
1217463   +
1217464   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1217465   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1217466   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1217467   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1217468   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217469   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217470   +end;
MPRINT(EM_DIAGRAM):   end;
1217471   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217472   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1217473   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1217474   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217475   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1217476   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1217477   +   end;
MPRINT(EM_DIAGRAM):   end;
1217478   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1217479   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1217480   +   end;
MPRINT(EM_DIAGRAM):   end;
1217481   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217482   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1217483   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1217484   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217485   +   end;
MPRINT(EM_DIAGRAM):   end;
1217486   +end;
MPRINT(EM_DIAGRAM):   end;
1217487   +
1217488   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1217489   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1217490   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1217491   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1217492   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217493   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217494   +end;
MPRINT(EM_DIAGRAM):   end;
1217495   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217496   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1217497   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1217498   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217499   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1217500   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1217501   +   end;
MPRINT(EM_DIAGRAM):   end;
1217502   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1217503   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1217504   +   end;
MPRINT(EM_DIAGRAM):   end;
1217505   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217506   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1217507   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1217508   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217509   +   end;
MPRINT(EM_DIAGRAM):   end;
1217510   +end;
MPRINT(EM_DIAGRAM):   end;
1217511   +
1217512   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1217513   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1217514   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1217515   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1217516   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217517   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217518   +end;
MPRINT(EM_DIAGRAM):   end;
1217519   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217520   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1217521   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1217522   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217523   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1217524   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1217525   +   end;
MPRINT(EM_DIAGRAM):   end;
1217526   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1217527   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1217528   +   end;
MPRINT(EM_DIAGRAM):   end;
1217529   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217530   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1217531   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1217532   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217533   +   end;
MPRINT(EM_DIAGRAM):   end;
1217534   +end;
MPRINT(EM_DIAGRAM):   end;
1217535   +
1217536   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1217537   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1217538   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1217539   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1217540   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217541   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217542   +end;
MPRINT(EM_DIAGRAM):   end;
1217543   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217544   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1217545   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1217546   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217547   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1217548   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1217549   +   end;
MPRINT(EM_DIAGRAM):   end;
1217550   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1217551   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1217552   +   end;
MPRINT(EM_DIAGRAM):   end;
1217553   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217554   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1217555   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1217556   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217557   +   end;
MPRINT(EM_DIAGRAM):   end;
1217558   +end;
MPRINT(EM_DIAGRAM):   end;
1217559   +
1217560   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1217561   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1217562   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1217563   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1217564   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217565   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217566   +end;
MPRINT(EM_DIAGRAM):   end;
1217567   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217568   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1217569   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1217570   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217571   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1217572   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1217573   +   end;
MPRINT(EM_DIAGRAM):   end;
1217574   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1217575   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1217576   +   end;
MPRINT(EM_DIAGRAM):   end;
1217577   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217578   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1217579   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1217580   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217581   +   end;
MPRINT(EM_DIAGRAM):   end;
1217582   +end;
MPRINT(EM_DIAGRAM):   end;
1217583   +
1217584   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1217585   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1217586   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1217587   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1217588   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1217589   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1217590   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1217591   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1217592   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1217593   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1217594   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1217595   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1217596   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217597   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217598   +end;
MPRINT(EM_DIAGRAM):   end;
1217599   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217600   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1217601   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1217602   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217603   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1217604   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1217605   +   end;
MPRINT(EM_DIAGRAM):   end;
1217606   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1217607   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1217608   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1217609   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1217610   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1217611   +   end;
MPRINT(EM_DIAGRAM):   end;
1217612   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1217613   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1217614   +   end;
MPRINT(EM_DIAGRAM):   end;
1217615   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1217616   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1217617   +   end;
MPRINT(EM_DIAGRAM):   end;
1217618   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1217619   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1217620   +   end;
MPRINT(EM_DIAGRAM):   end;
1217621   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217622   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1217623   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1217624   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1217625   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1217626   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1217627   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217628   +   end;
MPRINT(EM_DIAGRAM):   end;
1217629   +end;
MPRINT(EM_DIAGRAM):   end;
1217630   +
1217631   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1217632   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1217633   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1217634   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1217635   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1217636   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1217637   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1217638   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1217639   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1217640   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1217641   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1217642   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1217643   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1217644   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217645   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217646   +end;
MPRINT(EM_DIAGRAM):   end;
1217647   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217648   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1217649   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1217650   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217651   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1217652   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1217653   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1217654   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1217655   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1217656   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1217657   +         end;
MPRINT(EM_DIAGRAM):   end;
1217658   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1217659   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1217660   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1217661   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1217662   +            end;
MPRINT(EM_DIAGRAM):   end;
1217663   +         end;
MPRINT(EM_DIAGRAM):   end;
1217664   +      end;
MPRINT(EM_DIAGRAM):   end;
1217665   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1217666   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1217667   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1217668   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1217669   +         end;
MPRINT(EM_DIAGRAM):   end;
1217670   +      end;
MPRINT(EM_DIAGRAM):   end;
1217671   +   end;
MPRINT(EM_DIAGRAM):   end;
1217672   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217673   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1217674   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1217675   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1217676   +      end;
MPRINT(EM_DIAGRAM):   end;
1217677   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1217678   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1217679   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1217680   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1217681   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1217682   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1217683   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1217684   +         end;
MPRINT(EM_DIAGRAM):   end;
1217685   +      end;
MPRINT(EM_DIAGRAM):   end;
1217686   +   end;
MPRINT(EM_DIAGRAM):   end;
1217687   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1217688   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1217689   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1217690   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1217691   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1217692   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1217693   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217694   +   end;
MPRINT(EM_DIAGRAM):   end;
1217695   +end;
MPRINT(EM_DIAGRAM):   end;
1217696   +
1217697   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217698   +*** Checking missing input Interval
1217699   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1217700   +
1217701   +IF NMISS(
1217702   +   AcceptedCmpTotal ,
1217703   +   Age ,
1217704   +   Frq ,
1217705   +   Income ,
1217706   +   Kidhome ,
1217707   +   Mnt ,
1217708   +   MntFishProducts ,
1217709   +   MntFruits ,
1217710   +   MntGoldProds ,
1217711   +   MntMeatProducts ,
1217712   +   MntSweetProducts ,
1217713   +   MntWines ,
1217714   +   MonthsAsCustomer ,
1217715   +   NumCatalogPurchases ,
1217716   +   NumDealsPurchases ,
1217717   +   NumDistPurchases ,
1217718   +   NumStorePurchases ,
1217719   +   NumWebPurchases ,
1217720   +   NumWebVisitsMonth ,
1217721   +   RFMstat ,
1217722   +   RMntFrq ,
1217723   +   Recency ,
1217724   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1217725   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1217726   +
1217727   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217728   +END;
MPRINT(EM_DIAGRAM):   END;
1217729   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217730   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1217731   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217732   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1217733   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1217734   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1217735   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1217736   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1217737   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1217738   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1217739   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1217740   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1217741   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1217742   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1217743   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1217744   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1217745   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1217746   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1217747   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1217748   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1217749   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1217750   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1217751   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1217752   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1217753   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1217754   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1217755   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1217756   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1217757   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1217758   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1217759   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1217760   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1217761   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1217762   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1217763   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1217764   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1217765   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1217766   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1217767   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1217768   +END;
MPRINT(EM_DIAGRAM):   END;
1217769   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1217770   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1217771   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1217772   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1217773   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1217774   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1217775   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1217776   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1217777   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1217778   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1217779   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1217780   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1217781   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1217782   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1217783   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1217784   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1217785   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1217786   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1217787   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1217788   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1217789   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1217790   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1217791   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1217792   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1217793   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1217794   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1217795   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1217796   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1217797   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1217798   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1217799   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1217800   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1217801   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1217802   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1217803   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1217804   +   ELSE S_NumCatalogPurchases
1217805   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1217806   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1217807   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1217808   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1217809   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1217810   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1217811   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1217812   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1217813   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1217814   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1217815   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1217816   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1217817   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1217818   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1217819   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1217820   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1217821   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1217822   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1217823   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1217824   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1217825   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1217826   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1217827   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1217828   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1217829   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1217830   +END;
MPRINT(EM_DIAGRAM):   END;
1217831   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217832   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1217833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217834   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217835   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1217836   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217837   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217838   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1217839   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217840   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1217841   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
1217842   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
1217843   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
1217844   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
1217845   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
1217846   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
1217847   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
1217848   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
1217849   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
1217850   +          +     1.17276395296242 * S_NumDealsPurchases
1217851   +          +     0.26632768295477 * S_NumDistPurchases
1217852   +          +    -1.26575615903579 * S_NumStorePurchases
1217853   +          +    -0.95316107557927 * S_NumWebPurchases
1217854   +          +     1.01828574356487 * S_NumWebVisitsMonth
1217855   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
1217856   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
1217857   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
1217858   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
1217859   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
1217860   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
1217861   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
1217862   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
1217863   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
1217864   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
1217865   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
1217866   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
1217867   +          +     1.14485571201233 * S_NumDealsPurchases
1217868   +          +     0.21414266588987 * S_NumDistPurchases
1217869   +          +    -0.10530090074297 * S_NumStorePurchases
1217870   +          +    -0.41712321238458 * S_NumWebPurchases
1217871   +          +    -0.99760766791108 * S_NumWebVisitsMonth
1217872   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
1217873   +        S_RMntFrq  +     1.10040128548883 * S_Recency
1217874   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
1217875   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
1217876   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
1217877   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
1217878   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
1217879   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
1217880   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
1217881   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
1217882   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
1217883   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
1217884   +          +      0.7196418967437 * S_NumDealsPurchases
1217885   +          +     0.69035286374177 * S_NumDistPurchases
1217886   +          +     0.38027656631135 * S_NumStorePurchases
1217887   +          +    -0.18878358997924 * S_NumWebPurchases
1217888   +          +     1.61962062004798 * S_NumWebVisitsMonth
1217889   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
1217890   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
1217891   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
1217892   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
1217893   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
1217894   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
1217895   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
1217896   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
1217897   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
1217898   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
1217899   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
1217900   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
1217901   +          +    -0.00642902007204 * S_NumDealsPurchases
1217902   +          +     0.29785069480367 * S_NumDistPurchases
1217903   +          +    -0.42243322063147 * S_NumStorePurchases
1217904   +          +     0.54880896338383 * S_NumWebPurchases
1217905   +          +    -0.12525846016886 * S_NumWebVisitsMonth
1217906   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
1217907   +        S_RMntFrq  +     0.10252211581449 * S_Recency
1217908   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
1217909   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
1217910   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
1217911   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
1217912   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
1217913   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
1217914   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
1217915   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
1217916   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
1217917   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
1217918   +          +    -0.48404738328225 * S_NumDealsPurchases
1217919   +          +    -0.02464180457879 * S_NumDistPurchases
1217920   +          +     1.17201831082067 * S_NumStorePurchases
1217921   +          +     0.57453655167516 * S_NumWebPurchases
1217922   +          +    -1.94417019790248 * S_NumWebVisitsMonth
1217923   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
1217924   +        S_RMntFrq  +      1.6169916658132 * S_Recency
1217925   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
1217926   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
1217927   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
1217928   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
1217929   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
1217930   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
1217931   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
1217932   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
1217933   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
1217934   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
1217935   +          +    -1.49850531967483 * S_NumDealsPurchases
1217936   +          +    -0.82105466264223 * S_NumDistPurchases
1217937   +          +     0.29984603642824 * S_NumStorePurchases
1217938   +          +     0.06557123721611 * S_NumWebPurchases
1217939   +          +     1.04754749365002 * S_NumWebVisitsMonth
1217940   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
1217941   +        S_RMntFrq  +     0.12396789666359 * S_Recency
1217942   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
1217943   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
1217944   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
1217945   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
1217946   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
1217947   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
1217948   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
1217949   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
1217950   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
1217951   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
1217952   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
1217953   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
1217954   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
1217955   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
1217956   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
1217957   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
1217958   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
1217959   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
1217960   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
1217961   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
1217962   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
1217963   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
1217964   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
1217965   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
1217966   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
1217967   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
1217968   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
1217969   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
1217970   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
1217971   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
1217972   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
1217973   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
1217974   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
1217975   +        EducationGraduation  +     0.07595631354847 * EducationMaster
1217976   +          +     0.24583509957712 * Marital_StatusDivorced
1217977   +          +    -0.22681931588361 * Marital_StatusMarried
1217978   +          +    -0.12924106229536 * Marital_StatusSingle
1217979   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
1217980   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
1217981   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
1217982   +        EducationGraduation  +     0.23015089246655 * EducationMaster
1217983   +          +    -0.12585334311068 * Marital_StatusDivorced
1217984   +          +    -0.20835502467207 * Marital_StatusMarried
1217985   +          +    -0.13839534449368 * Marital_StatusSingle
1217986   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
1217987   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
1217988   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
1217989   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
1217990   +          +     0.35106363238113 * Marital_StatusDivorced
1217991   +          +     -1.3414808583918 * Marital_StatusMarried
1217992   +          +     1.40835320798486 * Marital_StatusSingle
1217993   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
1217994   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
1217995   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
1217996   +        EducationGraduation  +      0.1746658332011 * EducationMaster
1217997   +          +     0.48174546958393 * Marital_StatusDivorced
1217998   +          +    -0.41416978858191 * Marital_StatusMarried
1217999   +          +    -0.23376801546265 * Marital_StatusSingle
1218000   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
1218001   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
1218002   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
1218003   +        EducationGraduation  +     0.68875064631577 * EducationMaster
1218004   +          +    -0.67557643774246 * Marital_StatusDivorced
1218005   +          +     1.63844045917367 * Marital_StatusMarried
1218006   +          +    -0.70320960247699 * Marital_StatusSingle
1218007   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
1218008   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
1218009   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
1218010   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
1218011   +          +    -0.11371453086883 * Marital_StatusDivorced
1218012   +          +    -0.34226997176291 * Marital_StatusMarried
1218013   +          +    -1.01568676685754 * Marital_StatusSingle
1218014   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
1218015   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
1218016   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
1218017   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
1218018   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
1218019   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
1218020   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
1218021   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
1218022   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
1218023   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
1218024   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1218025   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1218026   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1218027   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1218028   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1218029   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1218030   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1218031   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1218032   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1218033   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1218034   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1218035   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1218036   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1218037   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
1218038   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
1218039   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1218040   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1218041   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1218042   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1218043   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1218044   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1218045   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
1218046   +END;
MPRINT(EM_DIAGRAM):   END;
1218047   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1218048   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1218049   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1218050   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1218051   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1218052   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1218053   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1218054   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1218055   +END;
MPRINT(EM_DIAGRAM):   END;
1218056   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218057   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1218058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218059   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1218060   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
1218061   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
1218062   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
1218063   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
1218064   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
1218065   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
1218066   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
1218067   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
1218068   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
1218069   +          +    -0.87259051567474 * S_NumDealsPurchases
1218070   +          +    -0.36454149529139 * S_NumDistPurchases
1218071   +          +     0.12447759925061 * S_NumStorePurchases
1218072   +          +    -1.08133487947367 * S_NumWebPurchases
1218073   +          +    -0.49882157745454 * S_NumWebVisitsMonth
1218074   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
1218075   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
1218076   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
1218077   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
1218078   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
1218079   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
1218080   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
1218081   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
1218082   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
1218083   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
1218084   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
1218085   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
1218086   +          +     2.23121497416403 * S_NumDealsPurchases
1218087   +          +    -0.48674842191071 * S_NumDistPurchases
1218088   +          +     1.77510728607544 * S_NumStorePurchases
1218089   +          +     0.14647433155436 * S_NumWebPurchases
1218090   +          +    -0.95892686924419 * S_NumWebVisitsMonth
1218091   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
1218092   +        S_RMntFrq  +     2.46497777428475 * S_Recency
1218093   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
1218094   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
1218095   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
1218096   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
1218097   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
1218098   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
1218099   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
1218100   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
1218101   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
1218102   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
1218103   +          +     0.14338855349611 * S_NumDealsPurchases
1218104   +          +    -2.21071010829235 * S_NumDistPurchases
1218105   +          +    -0.21795889348002 * S_NumStorePurchases
1218106   +          +     1.98825087883535 * S_NumWebPurchases
1218107   +          +     1.02482442531149 * S_NumWebVisitsMonth
1218108   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
1218109   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
1218110   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
1218111   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
1218112   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
1218113   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
1218114   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
1218115   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
1218116   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
1218117   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
1218118   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
1218119   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
1218120   +          +     0.30041205661012 * S_NumDealsPurchases
1218121   +          +    -0.63499849986918 * S_NumDistPurchases
1218122   +          +    -0.34155713433714 * S_NumStorePurchases
1218123   +          +    -1.14183354933936 * S_NumWebPurchases
1218124   +          +    -0.42681980262973 * S_NumWebVisitsMonth
1218125   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
1218126   +        S_RMntFrq  +     1.25852246467612 * S_Recency
1218127   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
1218128   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
1218129   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
1218130   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
1218131   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
1218132   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
1218133   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
1218134   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
1218135   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
1218136   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
1218137   +          +    -0.21237915559831 * S_NumDealsPurchases
1218138   +          +     0.48256923764182 * S_NumDistPurchases
1218139   +          +    -0.45553093140641 * S_NumStorePurchases
1218140   +          +      0.5593655963659 * S_NumWebPurchases
1218141   +          +     0.27943768691188 * S_NumWebVisitsMonth
1218142   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
1218143   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
1218144   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
1218145   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
1218146   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
1218147   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
1218148   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
1218149   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
1218150   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
1218151   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
1218152   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
1218153   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
1218154   +          +     2.38967021388062 * S_NumDealsPurchases
1218155   +          +    -0.97722398866481 * S_NumDistPurchases
1218156   +          +     1.57612333191312 * S_NumStorePurchases
1218157   +          +    -0.75968679115983 * S_NumWebPurchases
1218158   +          +    -0.64207187757251 * S_NumWebVisitsMonth
1218159   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
1218160   +        S_RMntFrq  +     1.71313869798331 * S_Recency
1218161   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
1218162   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
1218163   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
1218164   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
1218165   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
1218166   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
1218167   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
1218168   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
1218169   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
1218170   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
1218171   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
1218172   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
1218173   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
1218174   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
1218175   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
1218176   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
1218177   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
1218178   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
1218179   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
1218180   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
1218181   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
1218182   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
1218183   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
1218184   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
1218185   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
1218186   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
1218187   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
1218188   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
1218189   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
1218190   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
1218191   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
1218192   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
1218193   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
1218194   +        EducationGraduation  +      0.1073450284316 * EducationMaster
1218195   +          +     0.96470902298142 * Marital_StatusDivorced
1218196   +          +     0.94805959268314 * Marital_StatusMarried
1218197   +          +     -0.6523948769616 * Marital_StatusSingle
1218198   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
1218199   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
1218200   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
1218201   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
1218202   +          +      0.3918249505531 * Marital_StatusDivorced
1218203   +          +    -0.00968091979586 * Marital_StatusMarried
1218204   +          +     0.84615379885071 * Marital_StatusSingle
1218205   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
1218206   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
1218207   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
1218208   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
1218209   +          +     1.14335160313191 * Marital_StatusDivorced
1218210   +          +     0.50580517192175 * Marital_StatusMarried
1218211   +          +     0.17264295020921 * Marital_StatusSingle
1218212   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
1218213   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
1218214   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
1218215   +        EducationGraduation  +     1.95818378342783 * EducationMaster
1218216   +          +    -0.11238504444225 * Marital_StatusDivorced
1218217   +          +    -0.81348274043749 * Marital_StatusMarried
1218218   +          +     0.46075415610001 * Marital_StatusSingle
1218219   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
1218220   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
1218221   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
1218222   +        EducationGraduation  +     0.08396135672504 * EducationMaster
1218223   +          +    -0.46342068701431 * Marital_StatusDivorced
1218224   +          +    -0.41667845270204 * Marital_StatusMarried
1218225   +          +    -0.47166707496281 * Marital_StatusSingle
1218226   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
1218227   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
1218228   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
1218229   +        EducationGraduation  +     0.36656103863186 * EducationMaster
1218230   +          +    -0.45376613787812 * Marital_StatusDivorced
1218231   +          +     0.01337046049801 * Marital_StatusMarried
1218232   +          +    -0.92811489484121 * Marital_StatusSingle
1218233   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
1218234   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
1218235   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
1218236   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
1218237   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
1218238   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
1218239   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
1218240   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
1218241   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
1218242   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
1218243   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1218244   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1218245   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1218246   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1218247   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1218248   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1218249   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1218250   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1218251   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1218252   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1218253   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1218254   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1218255   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1218256   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
1218257   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
1218258   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1218259   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1218260   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1218261   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1218262   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1218263   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1218264   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
1218265   +END;
MPRINT(EM_DIAGRAM):   END;
1218266   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1218267   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1218268   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1218269   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1218270   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1218271   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1218272   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1218273   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
1218274   +END;
MPRINT(EM_DIAGRAM):   END;
1218275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218276   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1218277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218278   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1218279   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
1218280   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
1218281   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
1218282   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
1218283   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
1218284   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
1218285   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
1218286   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
1218287   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
1218288   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
1218289   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
1218290   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
1218291   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
1218292   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
1218293   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
1218294   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
1218295   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
1218296   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
1218297   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
1218298   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
1218299   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
1218300   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
1218301   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
1218302   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
1218303   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
1218304   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
1218305   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
1218306   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
1218307   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
1218308   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
1218309   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
1218310   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
1218311   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
1218312   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
1218313   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
1218314   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
1218315   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
1218316   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
1218317   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
1218318   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
1218319   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
1218320   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
1218321   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
1218322   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
1218323   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
1218324   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
1218325   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
1218326   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
1218327   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
1218328   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
1218329   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
1218330   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
1218331   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
1218332   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
1218333   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
1218334   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
1218335   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
1218336   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1218337   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1218338   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1218339   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1218340   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1218341   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1218342   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1218343   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1218344   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1218345   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1218346   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1218347   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1218348   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1218349   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
1218350   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
1218351   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1218352   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1218353   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1218354   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1218355   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1218356   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1218357   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
1218358   +END;
MPRINT(EM_DIAGRAM):   END;
1218359   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1218360   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1218361   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1218362   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1218363   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1218364   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1218365   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1218366   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
1218367   +END;
MPRINT(EM_DIAGRAM):   END;
1218368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218369   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1218370   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218371   +
1218372   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1218373   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1218374   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1218375   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1218376   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1218377   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218378   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1218379   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1218380   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1218381   +end;
MPRINT(EM_DIAGRAM):   end;
1218382   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218383   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1218384   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1218385   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1218386   +   end;
MPRINT(EM_DIAGRAM):   end;
1218387   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1218388   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1218389   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1218390   +   end;
MPRINT(EM_DIAGRAM):   end;
1218391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218392   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1218393   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1218394   +   end;
MPRINT(EM_DIAGRAM):   end;
1218395   +end;
MPRINT(EM_DIAGRAM):   end;
1218396   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1218397   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
1218398   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
1218399   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
1218400   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
1218401   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
1218402   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1218403   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1218404   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1218405   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1218406   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1218407   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1218408   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1218409   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1218410   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1218411   +END;
MPRINT(EM_DIAGRAM):   END;
1218412   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1218413   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1218414   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1218415   +END;
MPRINT(EM_DIAGRAM):   END;
1218416   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1218417   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1218418   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1218419   +END;
MPRINT(EM_DIAGRAM):   END;
1218420   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1218421   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1218422   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1218423   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1218424   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1218425   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1218426   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1218427   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218428   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1218429   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218430   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1218431   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1218432   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1218433   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1218434   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1218435   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1218436   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1218437   +END;
MPRINT(EM_DIAGRAM):   END;
1218438   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1218439   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1218440   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1218441   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1218442   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
1218443   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1218444   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
1218445   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1218446   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
1218447   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
1218448   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
1218449   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
1218450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1218451   +* Renaming Into variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural12;
1218452   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1218453   +length AutoNeural12_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural12_I_DepVar $32;
1218454   +drop AutoNeural12_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_I_DepVar;
1218455   +AutoNeural12_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural12_I_DepVar = I_DepVar;
1218456   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1218457   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
1218458   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1218459   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
1218460   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
1218461   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
1218462   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1218463   +* Ensmbl47: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 4 of 5;
1218464   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1218465   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1218466   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1218467   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1218468   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
1218469   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1218470   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1218471   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1218472   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1218473   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1218474   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1218475   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1218476   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1218477   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1218478   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1218479   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1218480   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1218481   +LENGTH _WARN_ $4
1218482   +      F_DepVar  $ 12
1218483   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1218484   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1218485   +
1218486   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1218487   +
1218488   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1218489   +
1218490   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1218491   +
1218492   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1218493   +
1218494   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1218495   +
1218496   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1218497   +
1218498   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1218499   +
1218500   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1218501   +
1218502   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1218503   +
1218504   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1218505   +
1218506   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1218507   +
1218508   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1218509   +
1218510   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1218511   +
1218512   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1218513   +
1218514   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1218515   +
1218516   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1218517   +
1218518   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1218519   +
1218520   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1218521   +
1218522   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1218523   +
1218524   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1218525   +
1218526   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1218527   +
1218528   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1218529   +
1218530   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1218531   +
1218532   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1218533   +
1218534   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1218535   +
1218536   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1218537   +
1218538   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1218539   +
1218540   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1218541   +
1218542   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1218543   +
1218544   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1218545   +
1218546   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1218547   +
1218548   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1218549   +
1218550   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1218551   +
1218552   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1218553   +
1218554   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1218555   +
1218556   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1218557   +
1218558   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1218559   +
1218560   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1218561   +
1218562   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1218563   +
1218564   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1218565   +
1218566   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1218567   +
1218568   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1218569   +
1218570   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1218571   +
1218572   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1218573   +
1218574   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1218575   +
1218576   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1218577   +
1218578   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1218579   +
1218580   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1218581   +
1218582   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1218583   +
1218584   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1218585   +
1218586   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1218587   +
1218588   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1218589   +
1218590   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1218591   +
1218592   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1218593   +
1218594   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1218595   +
1218596   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1218597   +
1218598   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1218599   +
1218600   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1218601   +
1218602   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1218603   +
1218604   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1218605   +
1218606   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1218607   +
1218608   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1218609   +
1218610   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1218611   +
1218612   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1218613   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1218614   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1218615   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1218616   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1218617   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218618   +end;
MPRINT(EM_DIAGRAM):   end;
1218619   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218620   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1218621   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1218622   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218623   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1218624   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1218625   +   end;
MPRINT(EM_DIAGRAM):   end;
1218626   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1218627   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1218628   +   end;
MPRINT(EM_DIAGRAM):   end;
1218629   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218630   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1218631   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218632   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218633   +   end;
MPRINT(EM_DIAGRAM):   end;
1218634   +end;
MPRINT(EM_DIAGRAM):   end;
1218635   +
1218636   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1218637   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1218638   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1218639   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1218640   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1218641   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218642   +end;
MPRINT(EM_DIAGRAM):   end;
1218643   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218644   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1218645   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1218646   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218647   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1218648   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1218649   +   end;
MPRINT(EM_DIAGRAM):   end;
1218650   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1218651   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1218652   +   end;
MPRINT(EM_DIAGRAM):   end;
1218653   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218654   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1218655   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218656   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218657   +   end;
MPRINT(EM_DIAGRAM):   end;
1218658   +end;
MPRINT(EM_DIAGRAM):   end;
1218659   +
1218660   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1218661   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1218662   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1218663   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1218664   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1218665   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218666   +end;
MPRINT(EM_DIAGRAM):   end;
1218667   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218668   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1218669   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1218670   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218671   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1218672   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1218673   +   end;
MPRINT(EM_DIAGRAM):   end;
1218674   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1218675   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1218676   +   end;
MPRINT(EM_DIAGRAM):   end;
1218677   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218678   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1218679   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218680   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218681   +   end;
MPRINT(EM_DIAGRAM):   end;
1218682   +end;
MPRINT(EM_DIAGRAM):   end;
1218683   +
1218684   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1218685   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1218686   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1218687   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1218688   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1218689   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218690   +end;
MPRINT(EM_DIAGRAM):   end;
1218691   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218692   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1218693   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1218694   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218695   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1218696   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1218697   +   end;
MPRINT(EM_DIAGRAM):   end;
1218698   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1218699   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1218700   +   end;
MPRINT(EM_DIAGRAM):   end;
1218701   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218702   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1218703   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218704   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218705   +   end;
MPRINT(EM_DIAGRAM):   end;
1218706   +end;
MPRINT(EM_DIAGRAM):   end;
1218707   +
1218708   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1218709   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1218710   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1218711   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1218712   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1218713   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218714   +end;
MPRINT(EM_DIAGRAM):   end;
1218715   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218716   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1218717   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1218718   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218719   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1218720   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1218721   +   end;
MPRINT(EM_DIAGRAM):   end;
1218722   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1218723   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1218724   +   end;
MPRINT(EM_DIAGRAM):   end;
1218725   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218726   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1218727   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218728   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218729   +   end;
MPRINT(EM_DIAGRAM):   end;
1218730   +end;
MPRINT(EM_DIAGRAM):   end;
1218731   +
1218732   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1218733   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1218734   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1218735   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1218736   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1218737   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218738   +end;
MPRINT(EM_DIAGRAM):   end;
1218739   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218740   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1218741   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1218742   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218743   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1218744   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1218745   +   end;
MPRINT(EM_DIAGRAM):   end;
1218746   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1218747   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1218748   +   end;
MPRINT(EM_DIAGRAM):   end;
1218749   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218750   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1218751   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218752   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218753   +   end;
MPRINT(EM_DIAGRAM):   end;
1218754   +end;
MPRINT(EM_DIAGRAM):   end;
1218755   +
1218756   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1218757   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1218758   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1218759   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1218760   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1218761   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218762   +end;
MPRINT(EM_DIAGRAM):   end;
1218763   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218764   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1218765   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1218766   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218767   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1218768   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1218769   +   end;
MPRINT(EM_DIAGRAM):   end;
1218770   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1218771   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1218772   +   end;
MPRINT(EM_DIAGRAM):   end;
1218773   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218774   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1218775   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218776   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218777   +   end;
MPRINT(EM_DIAGRAM):   end;
1218778   +end;
MPRINT(EM_DIAGRAM):   end;
1218779   +
1218780   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1218781   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1218782   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1218783   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1218784   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1218785   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1218786   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1218787   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1218788   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1218789   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1218790   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1218791   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1218792   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1218793   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218794   +end;
MPRINT(EM_DIAGRAM):   end;
1218795   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218796   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1218797   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1218798   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218799   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1218800   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1218801   +   end;
MPRINT(EM_DIAGRAM):   end;
1218802   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1218803   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1218804   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1218805   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1218806   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1218807   +   end;
MPRINT(EM_DIAGRAM):   end;
1218808   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1218809   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1218810   +   end;
MPRINT(EM_DIAGRAM):   end;
1218811   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1218812   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1218813   +   end;
MPRINT(EM_DIAGRAM):   end;
1218814   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1218815   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1218816   +   end;
MPRINT(EM_DIAGRAM):   end;
1218817   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218818   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1218819   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1218820   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1218821   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1218822   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218823   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218824   +   end;
MPRINT(EM_DIAGRAM):   end;
1218825   +end;
MPRINT(EM_DIAGRAM):   end;
1218826   +
1218827   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1218828   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1218829   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1218830   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1218831   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1218832   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1218833   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1218834   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1218835   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1218836   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1218837   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1218838   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1218839   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1218840   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1218841   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218842   +end;
MPRINT(EM_DIAGRAM):   end;
1218843   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218844   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1218845   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1218846   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218847   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1218848   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1218849   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1218850   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1218851   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1218852   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1218853   +         end;
MPRINT(EM_DIAGRAM):   end;
1218854   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1218855   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1218856   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1218857   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1218858   +            end;
MPRINT(EM_DIAGRAM):   end;
1218859   +         end;
MPRINT(EM_DIAGRAM):   end;
1218860   +      end;
MPRINT(EM_DIAGRAM):   end;
1218861   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1218862   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1218863   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1218864   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1218865   +         end;
MPRINT(EM_DIAGRAM):   end;
1218866   +      end;
MPRINT(EM_DIAGRAM):   end;
1218867   +   end;
MPRINT(EM_DIAGRAM):   end;
1218868   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218869   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1218870   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1218871   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1218872   +      end;
MPRINT(EM_DIAGRAM):   end;
1218873   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1218874   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1218875   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1218876   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1218877   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1218878   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1218879   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1218880   +         end;
MPRINT(EM_DIAGRAM):   end;
1218881   +      end;
MPRINT(EM_DIAGRAM):   end;
1218882   +   end;
MPRINT(EM_DIAGRAM):   end;
1218883   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1218884   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1218885   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1218886   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1218887   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1218888   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218889   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218890   +   end;
MPRINT(EM_DIAGRAM):   end;
1218891   +end;
MPRINT(EM_DIAGRAM):   end;
1218892   +
1218893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218894   +*** Checking missing input Interval
1218895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1218896   +
1218897   +IF NMISS(
1218898   +   AcceptedCmpTotal ,
1218899   +   Age ,
1218900   +   Frq ,
1218901   +   Income ,
1218902   +   Kidhome ,
1218903   +   Mnt ,
1218904   +   MntFishProducts ,
1218905   +   MntFruits ,
1218906   +   MntGoldProds ,
1218907   +   MntMeatProducts ,
1218908   +   MntSweetProducts ,
1218909   +   MntWines ,
1218910   +   MonthsAsCustomer ,
1218911   +   NumCatalogPurchases ,
1218912   +   NumDealsPurchases ,
1218913   +   NumDistPurchases ,
1218914   +   NumStorePurchases ,
1218915   +   NumWebPurchases ,
1218916   +   NumWebVisitsMonth ,
1218917   +   RFMstat ,
1218918   +   RMntFrq ,
1218919   +   Recency ,
1218920   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1218921   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1218922   +
1218923   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218924   +END;
MPRINT(EM_DIAGRAM):   END;
1218925   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218926   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1218927   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218928   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1218929   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1218930   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1218931   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1218932   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1218933   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1218934   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1218935   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1218936   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1218937   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1218938   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1218939   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1218940   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1218941   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1218942   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1218943   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1218944   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1218945   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1218946   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1218947   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1218948   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1218949   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1218950   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1218951   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1218952   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1218953   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1218954   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1218955   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1218956   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1218957   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1218958   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1218959   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1218960   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1218961   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1218962   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1218963   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1218964   +END;
MPRINT(EM_DIAGRAM):   END;
1218965   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1218966   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1218967   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1218968   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1218969   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1218970   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1218971   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1218972   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1218973   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1218974   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1218975   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1218976   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1218977   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1218978   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1218979   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1218980   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1218981   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1218982   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1218983   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1218984   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1218985   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1218986   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1218987   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1218988   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1218989   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1218990   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1218991   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1218992   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1218993   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1218994   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1218995   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1218996   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1218997   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1218998   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1218999   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1219000   +   ELSE S_NumCatalogPurchases
1219001   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1219002   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1219003   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1219004   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1219005   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1219006   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1219007   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1219008   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1219009   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1219010   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1219011   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1219012   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1219013   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1219014   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1219015   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1219016   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1219017   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1219018   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1219019   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1219020   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1219021   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1219022   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1219023   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1219024   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1219025   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1219026   +END;
MPRINT(EM_DIAGRAM):   END;
1219027   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219028   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1219029   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219031   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1219032   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219033   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219034   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1219035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219036   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1219037   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
1219038   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
1219039   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
1219040   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
1219041   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
1219042   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
1219043   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
1219044   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
1219045   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
1219046   +          +     0.89422627895323 * S_NumDealsPurchases
1219047   +          +    -0.13304125929765 * S_NumDistPurchases
1219048   +          +    -1.04568442570811 * S_NumStorePurchases
1219049   +          +    -0.28677765126751 * S_NumWebPurchases
1219050   +          +      1.2327638737509 * S_NumWebVisitsMonth
1219051   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
1219052   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
1219053   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
1219054   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
1219055   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
1219056   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
1219057   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
1219058   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
1219059   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
1219060   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
1219061   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
1219062   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
1219063   +          +     0.04224590196535 * S_NumDealsPurchases
1219064   +          +     0.76554742700113 * S_NumDistPurchases
1219065   +          +    -0.49155496870812 * S_NumStorePurchases
1219066   +          +     0.59606812744403 * S_NumWebPurchases
1219067   +          +     1.86809286276405 * S_NumWebVisitsMonth
1219068   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
1219069   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
1219070   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
1219071   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
1219072   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
1219073   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
1219074   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
1219075   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
1219076   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
1219077   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
1219078   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
1219079   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
1219080   +          +    -0.04866536993486 * S_NumDealsPurchases
1219081   +          +    -0.53535979020214 * S_NumDistPurchases
1219082   +          +     2.20634071253676 * S_NumStorePurchases
1219083   +          +      0.6164564989007 * S_NumWebPurchases
1219084   +          +    -0.43396314395263 * S_NumWebVisitsMonth
1219085   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
1219086   +        S_RMntFrq  +     2.37293441098349 * S_Recency
1219087   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
1219088   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
1219089   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
1219090   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
1219091   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
1219092   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
1219093   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
1219094   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
1219095   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
1219096   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
1219097   +          +     1.37461255707863 * S_NumDealsPurchases
1219098   +          +    -0.17684775000818 * S_NumDistPurchases
1219099   +          +    -0.62755623855535 * S_NumStorePurchases
1219100   +          +    -1.46551649022657 * S_NumWebPurchases
1219101   +          +     3.35784247878638 * S_NumWebVisitsMonth
1219102   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
1219103   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
1219104   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
1219105   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
1219106   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
1219107   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
1219108   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
1219109   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
1219110   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
1219111   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
1219112   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
1219113   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
1219114   +          +    -0.76256677907121 * S_NumDealsPurchases
1219115   +          +    -0.31591571751692 * S_NumDistPurchases
1219116   +          +      0.0506832614089 * S_NumStorePurchases
1219117   +          +      1.4636796923764 * S_NumWebPurchases
1219118   +          +     0.37743519705036 * S_NumWebVisitsMonth
1219119   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
1219120   +        S_RMntFrq  +     0.16854775832723 * S_Recency
1219121   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
1219122   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
1219123   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
1219124   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
1219125   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
1219126   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
1219127   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
1219128   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
1219129   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
1219130   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
1219131   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
1219132   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
1219133   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
1219134   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
1219135   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
1219136   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
1219137   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
1219138   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
1219139   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
1219140   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
1219141   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
1219142   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
1219143   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
1219144   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
1219145   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
1219146   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
1219147   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
1219148   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
1219149   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
1219150   +          +     0.68641668264565 * Marital_StatusDivorced
1219151   +          +    -0.81586871439732 * Marital_StatusMarried
1219152   +          +     0.63758920518451 * Marital_StatusSingle
1219153   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
1219154   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
1219155   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
1219156   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
1219157   +          +     0.05137560133238 * Marital_StatusDivorced
1219158   +          +    -2.24401993266209 * Marital_StatusMarried
1219159   +          +     1.57359386216115 * Marital_StatusSingle
1219160   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
1219161   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
1219162   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
1219163   +        EducationGraduation  +     0.61492669859334 * EducationMaster
1219164   +          +     -1.0649987815942 * Marital_StatusDivorced
1219165   +          +     0.76065111692388 * Marital_StatusMarried
1219166   +          +    -0.21694149754801 * Marital_StatusSingle
1219167   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
1219168   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
1219169   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
1219170   +        EducationGraduation  +     0.04208620358211 * EducationMaster
1219171   +          +     2.02155453548328 * Marital_StatusDivorced
1219172   +          +    -2.60190649735306 * Marital_StatusMarried
1219173   +          +     1.09149388354927 * Marital_StatusSingle
1219174   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
1219175   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
1219176   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
1219177   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
1219178   +          +     0.66315970650309 * Marital_StatusDivorced
1219179   +          +    -1.20476729758152 * Marital_StatusMarried
1219180   +          +     0.56175027826397 * Marital_StatusSingle
1219181   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
1219182   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
1219183   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
1219184   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
1219185   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
1219186   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
1219187   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1219188   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1219189   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1219190   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1219191   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1219192   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1219193   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1219194   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1219195   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1219196   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1219197   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1219198   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1219199   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1219200   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1219201   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1219202   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1219203   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1219204   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1219205   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1219206   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1219207   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1219208   +END;
MPRINT(EM_DIAGRAM):   END;
1219209   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1219210   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1219211   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1219212   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1219213   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1219214   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1219215   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1219216   +END;
MPRINT(EM_DIAGRAM):   END;
1219217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219218   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1219219   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219220   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1219221   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
1219222   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
1219223   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
1219224   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
1219225   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
1219226   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
1219227   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
1219228   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
1219229   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
1219230   +          +     1.50005927423985 * S_NumDealsPurchases
1219231   +          +      0.5590536933569 * S_NumDistPurchases
1219232   +          +    -0.61757824339318 * S_NumStorePurchases
1219233   +          +     0.37259686538158 * S_NumWebPurchases
1219234   +          +     2.59725437895564 * S_NumWebVisitsMonth
1219235   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
1219236   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
1219237   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
1219238   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
1219239   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
1219240   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
1219241   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
1219242   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
1219243   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
1219244   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
1219245   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
1219246   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
1219247   +          +    -0.09282222088797 * S_NumDealsPurchases
1219248   +          +     0.10726247938321 * S_NumDistPurchases
1219249   +          +     -1.1235971458527 * S_NumStorePurchases
1219250   +          +    -0.78304387839877 * S_NumWebPurchases
1219251   +          +    -0.44139243179956 * S_NumWebVisitsMonth
1219252   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
1219253   +        S_RMntFrq  +     2.19072220135069 * S_Recency
1219254   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
1219255   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
1219256   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
1219257   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
1219258   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
1219259   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
1219260   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
1219261   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
1219262   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
1219263   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
1219264   +          +     0.35349185459988 * S_NumDealsPurchases
1219265   +          +     0.06853677714859 * S_NumDistPurchases
1219266   +          +    -1.47546012999338 * S_NumStorePurchases
1219267   +          +     0.20926435398916 * S_NumWebPurchases
1219268   +          +    -1.00535683639093 * S_NumWebVisitsMonth
1219269   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
1219270   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
1219271   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
1219272   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
1219273   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
1219274   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
1219275   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
1219276   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
1219277   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
1219278   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
1219279   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
1219280   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
1219281   +          +      0.3873586120272 * S_NumDealsPurchases
1219282   +          +     0.25911651157596 * S_NumDistPurchases
1219283   +          +     1.58922489084287 * S_NumStorePurchases
1219284   +          +     0.49041797743368 * S_NumWebPurchases
1219285   +          +     -1.5425586871929 * S_NumWebVisitsMonth
1219286   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
1219287   +        S_RMntFrq  +     1.03099569333498 * S_Recency
1219288   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
1219289   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
1219290   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
1219291   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
1219292   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
1219293   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
1219294   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
1219295   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
1219296   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
1219297   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
1219298   +          +    -0.60830880287865 * S_NumDealsPurchases
1219299   +          +      0.0745331267194 * S_NumDistPurchases
1219300   +          +    -1.39472448256952 * S_NumStorePurchases
1219301   +          +     1.95372179969087 * S_NumWebPurchases
1219302   +          +    -0.63307356390404 * S_NumWebVisitsMonth
1219303   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
1219304   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
1219305   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
1219306   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
1219307   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
1219308   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
1219309   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
1219310   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
1219311   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
1219312   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
1219313   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
1219314   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
1219315   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
1219316   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
1219317   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
1219318   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
1219319   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
1219320   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
1219321   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
1219322   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
1219323   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
1219324   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
1219325   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
1219326   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
1219327   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
1219328   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
1219329   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
1219330   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
1219331   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
1219332   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
1219333   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
1219334   +          +    -1.33377871643323 * Marital_StatusDivorced
1219335   +          +    -0.87184228840898 * Marital_StatusMarried
1219336   +          +     1.41223186340257 * Marital_StatusSingle
1219337   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
1219338   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
1219339   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
1219340   +        EducationGraduation  +     0.38341272155343 * EducationMaster
1219341   +          +    -0.21479890935233 * Marital_StatusDivorced
1219342   +          +     -0.0025459519579 * Marital_StatusMarried
1219343   +          +     1.33900491702264 * Marital_StatusSingle
1219344   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
1219345   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
1219346   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
1219347   +        EducationGraduation  +     0.60739269725685 * EducationMaster
1219348   +          +    -0.38307267471999 * Marital_StatusDivorced
1219349   +          +     0.97088969451415 * Marital_StatusMarried
1219350   +          +    -0.28578224473381 * Marital_StatusSingle
1219351   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
1219352   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
1219353   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
1219354   +        EducationGraduation  +     0.14160673378252 * EducationMaster
1219355   +          +    -1.42229401093569 * Marital_StatusDivorced
1219356   +          +      0.7234508382397 * Marital_StatusMarried
1219357   +          +    -0.29062202974628 * Marital_StatusSingle
1219358   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
1219359   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
1219360   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
1219361   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
1219362   +          +    -0.99067637207205 * Marital_StatusDivorced
1219363   +          +    -0.50245902142079 * Marital_StatusMarried
1219364   +          +     0.54214494533793 * Marital_StatusSingle
1219365   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
1219366   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
1219367   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
1219368   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
1219369   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
1219370   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
1219371   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1219372   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1219373   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1219374   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1219375   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1219376   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1219377   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1219378   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1219379   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1219380   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1219381   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1219382   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1219383   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1219384   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1219385   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1219386   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1219387   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1219388   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1219389   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1219390   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1219391   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1219392   +END;
MPRINT(EM_DIAGRAM):   END;
1219393   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1219394   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1219395   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1219396   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1219397   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1219398   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1219399   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1219400   +END;
MPRINT(EM_DIAGRAM):   END;
1219401   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219402   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1219403   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219404   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1219405   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
1219406   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
1219407   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
1219408   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
1219409   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
1219410   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
1219411   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
1219412   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
1219413   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
1219414   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
1219415   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
1219416   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
1219417   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
1219418   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
1219419   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
1219420   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
1219421   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
1219422   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
1219423   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
1219424   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
1219425   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
1219426   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
1219427   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
1219428   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
1219429   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
1219430   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
1219431   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
1219432   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
1219433   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
1219434   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
1219435   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
1219436   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
1219437   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
1219438   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
1219439   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
1219440   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
1219441   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
1219442   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
1219443   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
1219444   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
1219445   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
1219446   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
1219447   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
1219448   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
1219449   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
1219450   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
1219451   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
1219452   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
1219453   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1219454   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1219455   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1219456   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1219457   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1219458   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1219459   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1219460   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1219461   +END;
MPRINT(EM_DIAGRAM):   END;
1219462   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1219463   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1219464   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1219465   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1219466   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1219467   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1219468   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1219469   +END;
MPRINT(EM_DIAGRAM):   END;
1219470   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219471   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1219472   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219473   +
1219474   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1219475   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1219476   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1219477   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1219478   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1219479   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219480   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1219481   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1219482   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1219483   +end;
MPRINT(EM_DIAGRAM):   end;
1219484   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219485   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1219486   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1219487   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1219488   +   end;
MPRINT(EM_DIAGRAM):   end;
1219489   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1219490   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1219491   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1219492   +   end;
MPRINT(EM_DIAGRAM):   end;
1219493   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219494   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1219495   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1219496   +   end;
MPRINT(EM_DIAGRAM):   end;
1219497   +end;
MPRINT(EM_DIAGRAM):   end;
1219498   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1219499   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
1219500   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
1219501   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
1219502   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
1219503   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1219504   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1219505   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1219506   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1219507   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1219508   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1219509   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1219510   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1219511   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1219512   +END;
MPRINT(EM_DIAGRAM):   END;
1219513   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1219514   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1219515   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1219516   +END;
MPRINT(EM_DIAGRAM):   END;
1219517   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1219518   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1219519   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1219520   +END;
MPRINT(EM_DIAGRAM):   END;
1219521   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1219522   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1219523   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1219524   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1219525   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1219526   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1219527   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1219528   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219529   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1219530   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219531   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1219532   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1219533   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1219534   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1219535   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1219536   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1219537   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1219538   +END;
MPRINT(EM_DIAGRAM):   END;
1219539   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1219540   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1219541   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1219542   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1219543   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
1219544   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1219545   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
1219546   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1219547   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
1219548   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
1219549   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
1219550   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
1219551   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1219552   +* Renaming Into variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural11;
1219553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1219554   +length AutoNeural11_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural11_I_DepVar $32;
1219555   +drop AutoNeural11_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_I_DepVar;
1219556   +AutoNeural11_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural11_I_DepVar = I_DepVar;
1219557   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1219558   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
1219559   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1219560   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
1219561   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
1219562   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
1219563   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1219564   +* Ensmbl47: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 5 of 5;
1219565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1219566   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1219567   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1219568   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1219569   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
1219570   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1219571   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1219572   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1219573   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1219574   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1219575   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1219576   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1219577   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1219578   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1219579   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1219580   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1219581   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1219582   +LENGTH _WARN_ $4
1219583   +      F_DepVar  $ 12
1219584   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1219585   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1219586   +
1219587   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1219588   +
1219589   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1219590   +
1219591   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1219592   +
1219593   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1219594   +
1219595   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1219596   +
1219597   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1219598   +
1219599   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1219600   +
1219601   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1219602   +
1219603   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1219604   +
1219605   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1219606   +
1219607   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1219608   +
1219609   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1219610   +
1219611   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1219612   +
1219613   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1219614   +
1219615   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1219616   +
1219617   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1219618   +
1219619   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1219620   +
1219621   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1219622   +
1219623   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1219624   +
1219625   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1219626   +
1219627   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1219628   +
1219629   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1219630   +
1219631   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1219632   +
1219633   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1219634   +
1219635   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1219636   +
1219637   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1219638   +
1219639   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1219640   +
1219641   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1219642   +
1219643   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1219644   +
1219645   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1219646   +
1219647   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1219648   +
1219649   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1219650   +
1219651   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1219652   +
1219653   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1219654   +
1219655   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1219656   +
1219657   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1219658   +
1219659   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1219660   +
1219661   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1219662   +
1219663   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1219664   +
1219665   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1219666   +
1219667   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1219668   +
1219669   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1219670   +
1219671   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1219672   +
1219673   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1219674   +
1219675   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1219676   +
1219677   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1219678   +
1219679   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1219680   +
1219681   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1219682   +
1219683   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1219684   +
1219685   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1219686   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1219687   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1219688   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1219689   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219690   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219691   +end;
MPRINT(EM_DIAGRAM):   end;
1219692   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219693   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219694   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1219695   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219696   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1219697   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1219698   +   end;
MPRINT(EM_DIAGRAM):   end;
1219699   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1219700   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1219701   +   end;
MPRINT(EM_DIAGRAM):   end;
1219702   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219703   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1219704   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219705   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219706   +   end;
MPRINT(EM_DIAGRAM):   end;
1219707   +end;
MPRINT(EM_DIAGRAM):   end;
1219708   +
1219709   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1219710   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1219711   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1219712   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1219713   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219714   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219715   +end;
MPRINT(EM_DIAGRAM):   end;
1219716   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219717   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219718   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1219719   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219720   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1219721   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1219722   +   end;
MPRINT(EM_DIAGRAM):   end;
1219723   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1219724   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1219725   +   end;
MPRINT(EM_DIAGRAM):   end;
1219726   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219727   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1219728   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219729   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219730   +   end;
MPRINT(EM_DIAGRAM):   end;
1219731   +end;
MPRINT(EM_DIAGRAM):   end;
1219732   +
1219733   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1219734   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1219735   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1219736   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1219737   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219738   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219739   +end;
MPRINT(EM_DIAGRAM):   end;
1219740   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219741   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219742   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1219743   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219744   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1219745   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1219746   +   end;
MPRINT(EM_DIAGRAM):   end;
1219747   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1219748   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1219749   +   end;
MPRINT(EM_DIAGRAM):   end;
1219750   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219751   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1219752   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219753   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219754   +   end;
MPRINT(EM_DIAGRAM):   end;
1219755   +end;
MPRINT(EM_DIAGRAM):   end;
1219756   +
1219757   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1219758   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1219759   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1219760   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1219761   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219762   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219763   +end;
MPRINT(EM_DIAGRAM):   end;
1219764   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219765   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219766   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1219767   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219768   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1219769   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1219770   +   end;
MPRINT(EM_DIAGRAM):   end;
1219771   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1219772   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1219773   +   end;
MPRINT(EM_DIAGRAM):   end;
1219774   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219775   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1219776   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219777   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219778   +   end;
MPRINT(EM_DIAGRAM):   end;
1219779   +end;
MPRINT(EM_DIAGRAM):   end;
1219780   +
1219781   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1219782   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1219783   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1219784   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1219785   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219786   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219787   +end;
MPRINT(EM_DIAGRAM):   end;
1219788   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219789   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219790   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1219791   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219792   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1219793   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1219794   +   end;
MPRINT(EM_DIAGRAM):   end;
1219795   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1219796   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1219797   +   end;
MPRINT(EM_DIAGRAM):   end;
1219798   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219799   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1219800   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219801   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219802   +   end;
MPRINT(EM_DIAGRAM):   end;
1219803   +end;
MPRINT(EM_DIAGRAM):   end;
1219804   +
1219805   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1219806   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1219807   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1219808   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1219809   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219810   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219811   +end;
MPRINT(EM_DIAGRAM):   end;
1219812   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219813   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219814   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1219815   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219816   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1219817   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1219818   +   end;
MPRINT(EM_DIAGRAM):   end;
1219819   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1219820   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1219821   +   end;
MPRINT(EM_DIAGRAM):   end;
1219822   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219823   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1219824   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219825   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219826   +   end;
MPRINT(EM_DIAGRAM):   end;
1219827   +end;
MPRINT(EM_DIAGRAM):   end;
1219828   +
1219829   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1219830   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1219831   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1219832   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1219833   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219834   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219835   +end;
MPRINT(EM_DIAGRAM):   end;
1219836   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219837   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219838   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1219839   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219840   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1219841   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1219842   +   end;
MPRINT(EM_DIAGRAM):   end;
1219843   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1219844   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1219845   +   end;
MPRINT(EM_DIAGRAM):   end;
1219846   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219847   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1219848   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219849   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219850   +   end;
MPRINT(EM_DIAGRAM):   end;
1219851   +end;
MPRINT(EM_DIAGRAM):   end;
1219852   +
1219853   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1219854   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1219855   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1219856   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1219857   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1219858   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1219859   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1219860   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1219861   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1219862   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1219863   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1219864   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1219865   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219866   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219867   +end;
MPRINT(EM_DIAGRAM):   end;
1219868   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219869   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1219870   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1219871   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219872   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1219873   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1219874   +   end;
MPRINT(EM_DIAGRAM):   end;
1219875   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1219876   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1219877   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1219878   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1219879   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1219880   +   end;
MPRINT(EM_DIAGRAM):   end;
1219881   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1219882   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1219883   +   end;
MPRINT(EM_DIAGRAM):   end;
1219884   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1219885   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1219886   +   end;
MPRINT(EM_DIAGRAM):   end;
1219887   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1219888   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1219889   +   end;
MPRINT(EM_DIAGRAM):   end;
1219890   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219891   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1219892   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1219893   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1219894   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1219895   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219896   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219897   +   end;
MPRINT(EM_DIAGRAM):   end;
1219898   +end;
MPRINT(EM_DIAGRAM):   end;
1219899   +
1219900   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1219901   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1219902   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1219903   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1219904   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1219905   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1219906   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1219907   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1219908   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1219909   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1219910   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1219911   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1219912   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1219913   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219914   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219915   +end;
MPRINT(EM_DIAGRAM):   end;
1219916   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219917   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1219918   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1219919   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219920   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1219921   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1219922   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1219923   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1219924   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1219925   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1219926   +         end;
MPRINT(EM_DIAGRAM):   end;
1219927   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1219928   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1219929   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1219930   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1219931   +            end;
MPRINT(EM_DIAGRAM):   end;
1219932   +         end;
MPRINT(EM_DIAGRAM):   end;
1219933   +      end;
MPRINT(EM_DIAGRAM):   end;
1219934   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1219935   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1219936   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1219937   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1219938   +         end;
MPRINT(EM_DIAGRAM):   end;
1219939   +      end;
MPRINT(EM_DIAGRAM):   end;
1219940   +   end;
MPRINT(EM_DIAGRAM):   end;
1219941   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219942   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1219943   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1219944   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1219945   +      end;
MPRINT(EM_DIAGRAM):   end;
1219946   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1219947   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1219948   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1219949   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1219950   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1219951   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1219952   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1219953   +         end;
MPRINT(EM_DIAGRAM):   end;
1219954   +      end;
MPRINT(EM_DIAGRAM):   end;
1219955   +   end;
MPRINT(EM_DIAGRAM):   end;
1219956   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1219957   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1219958   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1219959   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1219960   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1219961   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219962   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219963   +   end;
MPRINT(EM_DIAGRAM):   end;
1219964   +end;
MPRINT(EM_DIAGRAM):   end;
1219965   +
1219966   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219967   +*** Checking missing input Interval
1219968   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1219969   +
1219970   +IF NMISS(
1219971   +   AcceptedCmpTotal ,
1219972   +   Age ,
1219973   +   Frq ,
1219974   +   Income ,
1219975   +   Kidhome ,
1219976   +   Mnt ,
1219977   +   MntFishProducts ,
1219978   +   MntFruits ,
1219979   +   MntGoldProds ,
1219980   +   MntMeatProducts ,
1219981   +   MntSweetProducts ,
1219982   +   MntWines ,
1219983   +   MonthsAsCustomer ,
1219984   +   NumCatalogPurchases ,
1219985   +   NumDealsPurchases ,
1219986   +   NumDistPurchases ,
1219987   +   NumStorePurchases ,
1219988   +   NumWebPurchases ,
1219989   +   NumWebVisitsMonth ,
1219990   +   RFMstat ,
1219991   +   RMntFrq ,
1219992   +   Recency ,
1219993   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1219994   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1219995   +
1219996   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219997   +END;
MPRINT(EM_DIAGRAM):   END;
1219998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219999   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1220000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220001   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1220002   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1220003   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1220004   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1220005   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1220006   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1220007   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1220008   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1220009   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1220010   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1220011   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1220012   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1220013   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1220014   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1220015   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1220016   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1220017   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1220018   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1220019   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1220020   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1220021   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1220022   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1220023   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1220024   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1220025   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1220026   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1220027   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1220028   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1220029   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1220030   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1220031   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1220032   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1220033   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1220034   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1220035   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1220036   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1220037   +END;
MPRINT(EM_DIAGRAM):   END;
1220038   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1220039   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1220040   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1220041   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1220042   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1220043   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1220044   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1220045   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1220046   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1220047   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1220048   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1220049   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1220050   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1220051   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1220052   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1220053   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1220054   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1220055   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1220056   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1220057   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1220058   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1220059   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1220060   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1220061   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1220062   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1220063   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1220064   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1220065   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1220066   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1220067   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1220068   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1220069   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1220070   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1220071   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1220072   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1220073   +   ELSE S_NumCatalogPurchases
1220074   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1220075   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1220076   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1220077   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1220078   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1220079   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1220080   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1220081   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1220082   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1220083   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1220084   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1220085   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1220086   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1220087   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1220088   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1220089   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1220090   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1220091   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1220092   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1220093   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1220094   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1220095   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1220096   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1220097   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1220098   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1220099   +END;
MPRINT(EM_DIAGRAM):   END;
1220100   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220101   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1220102   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220103   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220104   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1220105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220107   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1220108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220109   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1220110   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
1220111   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
1220112   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
1220113   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
1220114   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
1220115   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
1220116   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
1220117   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
1220118   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
1220119   +          +    -1.14704878034134 * S_NumDealsPurchases
1220120   +          +    -0.17763404274659 * S_NumDistPurchases
1220121   +          +     0.08894400267969 * S_NumStorePurchases
1220122   +          +     0.59283747891957 * S_NumWebPurchases
1220123   +          +     0.85268274682505 * S_NumWebVisitsMonth
1220124   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
1220125   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
1220126   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
1220127   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
1220128   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
1220129   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
1220130   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
1220131   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
1220132   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
1220133   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
1220134   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
1220135   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
1220136   +          +    -0.80841566068716 * S_NumDealsPurchases
1220137   +          +    -0.17995640033768 * S_NumDistPurchases
1220138   +          +     0.00713417460936 * S_NumStorePurchases
1220139   +          +     0.57881024323076 * S_NumWebPurchases
1220140   +          +    -1.35134224257365 * S_NumWebVisitsMonth
1220141   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
1220142   +        S_RMntFrq  +     1.16978656262499 * S_Recency
1220143   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
1220144   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
1220145   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
1220146   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
1220147   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
1220148   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
1220149   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
1220150   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
1220151   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
1220152   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
1220153   +          +     0.57891364118717 * S_NumDealsPurchases
1220154   +          +    -0.31024556838688 * S_NumDistPurchases
1220155   +          +    -1.48708542986704 * S_NumStorePurchases
1220156   +          +    -0.93009875249206 * S_NumWebPurchases
1220157   +          +     2.01900039122935 * S_NumWebVisitsMonth
1220158   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
1220159   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
1220160   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
1220161   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
1220162   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
1220163   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
1220164   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
1220165   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
1220166   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
1220167   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
1220168   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
1220169   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
1220170   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
1220171   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
1220172   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
1220173   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
1220174   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
1220175   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
1220176   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
1220177   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
1220178   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
1220179   +          +     0.55883606830033 * Marital_StatusDivorced
1220180   +          +    -0.54530037567066 * Marital_StatusMarried
1220181   +          +    -0.52994736075753 * Marital_StatusSingle
1220182   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
1220183   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
1220184   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
1220185   +        EducationGraduation  +     0.31201349236277 * EducationMaster
1220186   +          +    -1.07368484057033 * Marital_StatusDivorced
1220187   +          +     2.73313504711262 * Marital_StatusMarried
1220188   +          +    -2.18530462876058 * Marital_StatusSingle
1220189   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
1220190   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
1220191   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
1220192   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
1220193   +          +     0.49993144243043 * Marital_StatusDivorced
1220194   +          +    -0.38953339116829 * Marital_StatusMarried
1220195   +          +    -0.10836287319942 * Marital_StatusSingle
1220196   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
1220197   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
1220198   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
1220199   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
1220200   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1220201   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1220202   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1220203   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1220204   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1220205   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1220206   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1220207   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1220208   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1220209   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1220210   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1220211   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1220212   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1220213   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1220214   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1220215   +END;
MPRINT(EM_DIAGRAM):   END;
1220216   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1220217   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1220218   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1220219   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1220220   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1220221   +END;
MPRINT(EM_DIAGRAM):   END;
1220222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220223   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1220224   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220225   +
1220226   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1220227   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1220228   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1220229   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1220230   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1220231   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220232   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1220233   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1220234   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1220235   +end;
MPRINT(EM_DIAGRAM):   end;
1220236   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220237   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1220238   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1220239   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1220240   +   end;
MPRINT(EM_DIAGRAM):   end;
1220241   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1220242   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1220243   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1220244   +   end;
MPRINT(EM_DIAGRAM):   end;
1220245   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220246   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1220247   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1220248   +   end;
MPRINT(EM_DIAGRAM):   end;
1220249   +end;
MPRINT(EM_DIAGRAM):   end;
1220250   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1220251   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
1220252   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
1220253   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
1220254   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1220255   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1220256   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1220257   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1220258   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1220259   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1220260   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1220261   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1220262   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1220263   +END;
MPRINT(EM_DIAGRAM):   END;
1220264   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1220265   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1220266   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1220267   +END;
MPRINT(EM_DIAGRAM):   END;
1220268   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1220269   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1220270   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1220271   +END;
MPRINT(EM_DIAGRAM):   END;
1220272   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1220273   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1220274   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1220275   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1220276   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1220277   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1220278   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1220279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220280   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1220281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220282   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1220283   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1220284   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1220285   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1220286   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1220287   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1220288   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1220289   +END;
MPRINT(EM_DIAGRAM):   END;
1220290   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1220291   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1220292   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1220293   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1220294   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
1220295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220296   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
1220297   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220298   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
1220299   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
1220300   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
1220301   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
1220302   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220303   +* Renaming Into variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural9;
1220304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220305   +length AutoNeural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural9_I_DepVar $32;
1220306   +drop AutoNeural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_I_DepVar;
1220307   +AutoNeural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural9_I_DepVar = I_DepVar;
1220308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220309   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
1220310   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220311   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
1220312   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
1220313   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
1220314   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220315   +* Ensmbl47: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Voting to produce predicted target;
1220316   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220317   +array Ensmbl47_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl47_post{2} _temporary_;
1220318   +array Ensmbl47_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl47_count{2} _temporary_;
1220319   +array Ensmbl47_level{2} $32 _temporary_ (
1220320   +"1"
1220321   +"0"
1220322   +);
MPRINT(EM_DIAGRAM):   array Ensmbl47_level{2} $32 _temporary_ ( "1" "0" );
1220323   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1220324   +Ensmbl47_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{i} = 0;
1220325   +Ensmbl47_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{i} = 0;
1220326   +end;
MPRINT(EM_DIAGRAM):   end;
1220327   +if AutoNeural10_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl47_level{1} then do;
1220328   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
1220329   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural10_P_DepVar1;
1220330   +end;
MPRINT(EM_DIAGRAM):   end;
1220331   +if AutoNeural7_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl47_level{1} then do;
1220332   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
1220333   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural7_P_DepVar1;
1220334   +end;
MPRINT(EM_DIAGRAM):   end;
1220335   +if AutoNeural12_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl47_level{1} then do;
1220336   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
1220337   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural12_P_DepVar1;
1220338   +end;
MPRINT(EM_DIAGRAM):   end;
1220339   +if AutoNeural11_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl47_level{1} then do;
1220340   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
1220341   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural11_P_DepVar1;
1220342   +end;
MPRINT(EM_DIAGRAM):   end;
1220343   +if AutoNeural9_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl47_level{1} then do;
1220344   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
1220345   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural9_P_DepVar1;
1220346   +end;
MPRINT(EM_DIAGRAM):   end;
1220347   +if AutoNeural10_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl47_level{2} then do;
1220348   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
1220349   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural10_P_DepVar0;
1220350   +end;
MPRINT(EM_DIAGRAM):   end;
1220351   +if AutoNeural7_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl47_level{2} then do;
1220352   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
1220353   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural7_P_DepVar0;
1220354   +end;
MPRINT(EM_DIAGRAM):   end;
1220355   +if AutoNeural12_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl47_level{2} then do;
1220356   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
1220357   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural12_P_DepVar0;
1220358   +end;
MPRINT(EM_DIAGRAM):   end;
1220359   +if AutoNeural11_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl47_level{2} then do;
1220360   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
1220361   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural11_P_DepVar0;
1220362   +end;
MPRINT(EM_DIAGRAM):   end;
1220363   +if AutoNeural9_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl47_level{2} then do;
1220364   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
1220365   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural9_P_DepVar0;
1220366   +end;
MPRINT(EM_DIAGRAM):   end;
1220367   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220368   +* Ensmbl47: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Determine Into Variable;
1220369   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220370   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1220371   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
1220372   +vote_count = max(
1220373   +Ensmbl47_count{1} ,
1220374   +Ensmbl47_count{2}
1220375   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl47_count{1} , Ensmbl47_count{2} );
1220376   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1220377   +if Ensmbl47_count{i}=vote_count and Ensmbl47_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl47_count{i}=vote_count and Ensmbl47_post{i}>vote_post then do;
1220378   +I_DepVar = Ensmbl47_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl47_level{i};
1220379   +vote_post = Ensmbl47_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl47_count{i};
1220380   +end;
MPRINT(EM_DIAGRAM):   end;
1220381   +end;
MPRINT(EM_DIAGRAM):   end;
1220382   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220383   +* Ensmbl47: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Compute posterior vars using models predicting the chosen 
level;
1220384   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220385   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1220386   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1220387   +if I_DepVar = AutoNeural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural10_I_DepVar then do;
1220388   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
1220389   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
1220390   +end;
MPRINT(EM_DIAGRAM):   end;
1220391   +if I_DepVar = AutoNeural7_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural7_I_DepVar then do;
1220392   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
1220393   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
1220394   +end;
MPRINT(EM_DIAGRAM):   end;
1220395   +if I_DepVar = AutoNeural12_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural12_I_DepVar then do;
1220396   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
1220397   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
1220398   +end;
MPRINT(EM_DIAGRAM):   end;
1220399   +if I_DepVar = AutoNeural11_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural11_I_DepVar then do;
1220400   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
1220401   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
1220402   +end;
MPRINT(EM_DIAGRAM):   end;
1220403   +if I_DepVar = AutoNeural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural9_I_DepVar then do;
1220404   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
1220405   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
1220406   +end;
MPRINT(EM_DIAGRAM):   end;
1220407   +* Ensmbl47: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Averaging posterior;
1220408   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
1220409   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
1220410   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220411   +* Ensmbl47: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Producing Unformatted variable;
1220412   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220413   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1220414   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1220415   +else
1220416   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1220417   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220418   +* Ensmbl47: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Computing _WARN_ Variable;
1220419   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220420   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1220421   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1220422   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1220423   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1220423  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1220424   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1220424  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1220425   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1220425  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1220426   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1220426  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1220427   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1220427  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1220428   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1220428  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1220429   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1220429  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1220430   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1220430  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1220431   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1220431  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1220432   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1220432  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1220433   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1220433  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1220434   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1220434  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1220435   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1220435  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1220436   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1220436  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1220437   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1220437  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1220438   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1220438  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1220439   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1220439  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1220440   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1220440  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1220441   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1220441  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1220442   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1220442  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1220443   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220444   +* Ensmbl47: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Computing Residual Vars;
1220445   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220446   +if
1220447   +F_DepVar NE '1'
1220448   +AND F_DepVar NE '0'
1220449   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1220450   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1220451   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1220452   +end;
MPRINT(EM_DIAGRAM):   end;
1220453   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220454   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1220455   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1220456   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1220457   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1220458   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1220459   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1220460   +END;
MPRINT(EM_DIAGRAM):   END;
1220461   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1220462    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL47_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL10_VALIDATE.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1220463    quit;
1220464    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl47_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl47_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl47_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1220524    filename _pref
1220524  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
1220525    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1220526    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas.
1220527   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1220528   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1220529   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1220530   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1220531   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1220532   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1220533   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1220534   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1220535   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1220536   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1220537   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1220538   +LENGTH _WARN_ $4
1220539   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1220540   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1220541   +
1220542   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1220543   +
1220544   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1220545   +
1220546   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1220547   +
1220548   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1220549   +
1220550   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1220551   +
1220552   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1220553   +
1220554   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1220555   +
1220556   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1220557   +
1220558   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1220559   +
1220560   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1220561   +
1220562   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1220563   +
1220564   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1220565   +
1220566   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1220567   +
1220568   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1220569   +
1220570   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1220571   +
1220572   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1220573   +
1220574   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1220575   +
1220576   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1220577   +
1220578   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1220579   +
1220580   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1220581   +
1220582   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1220583   +
1220584   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1220585   +
1220586   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1220587   +
1220588   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1220589   +
1220590   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1220591   +
1220592   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1220593   +
1220594   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1220595   +
1220596   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1220597   +
1220598   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1220599   +
1220600   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1220601   +
1220602   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1220603   +
1220604   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1220605   +
1220606   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1220607   +
1220608   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1220609   +
1220610   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1220611   +
1220612   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1220613   +
1220614   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1220615   +
1220616   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1220617   +
1220618   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1220619   +
1220620   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1220621   +
1220622   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1220623   +
1220624   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1220625   +
1220626   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1220627   +
1220628   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1220629   +
1220630   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1220631   +
1220632   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1220633   +
1220634   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1220635   +
1220636   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1220637   +
1220638   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1220639   +
1220640   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1220641   +
1220642   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1220643   +
1220644   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1220645   +
1220646   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1220647   +
1220648   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1220649   +
1220650   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1220651   +
1220652   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1220653   +
1220654   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1220655   +
1220656   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1220657   +
1220658   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1220659   +
1220660   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1220661   +
1220662   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1220663   +
1220664   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1220665   +
1220666   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1220667   +
1220668   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1220669   +
1220670   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1220671   +
1220672   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1220673   +
1220674   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1220675   +
1220676   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1220677   +
1220678   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1220679   +
1220680   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1220681   +
1220682   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1220683   +
1220684   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1220685   +
1220686   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1220687   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1220688   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1220689   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1220690   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220691   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220692   +end;
MPRINT(EM_DIAGRAM):   end;
1220693   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220694   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220695   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1220696   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220697   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1220698   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1220699   +   end;
MPRINT(EM_DIAGRAM):   end;
1220700   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1220701   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1220702   +   end;
MPRINT(EM_DIAGRAM):   end;
1220703   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220704   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1220705   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220706   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220707   +   end;
MPRINT(EM_DIAGRAM):   end;
1220708   +end;
MPRINT(EM_DIAGRAM):   end;
1220709   +
1220710   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1220711   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
The SAS System

1220712   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1220713   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1220714   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220715   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220716   +end;
MPRINT(EM_DIAGRAM):   end;
1220717   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220718   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220719   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1220720   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220721   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1220722   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1220723   +   end;
MPRINT(EM_DIAGRAM):   end;
1220724   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1220725   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1220726   +   end;
MPRINT(EM_DIAGRAM):   end;
1220727   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220728   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1220729   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220730   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220731   +   end;
MPRINT(EM_DIAGRAM):   end;
1220732   +end;
MPRINT(EM_DIAGRAM):   end;
1220733   +
1220734   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1220735   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1220736   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1220737   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1220738   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220739   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220740   +end;
MPRINT(EM_DIAGRAM):   end;
1220741   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220742   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220743   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1220744   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220745   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1220746   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1220747   +   end;
MPRINT(EM_DIAGRAM):   end;
1220748   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1220749   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1220750   +   end;
MPRINT(EM_DIAGRAM):   end;
1220751   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220752   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1220753   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220754   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220755   +   end;
MPRINT(EM_DIAGRAM):   end;
1220756   +end;
MPRINT(EM_DIAGRAM):   end;
1220757   +
1220758   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1220759   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1220760   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1220761   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1220762   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220763   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220764   +end;
MPRINT(EM_DIAGRAM):   end;
1220765   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220766   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220767   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1220768   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220769   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1220770   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1220771   +   end;
MPRINT(EM_DIAGRAM):   end;
1220772   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1220773   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1220774   +   end;
MPRINT(EM_DIAGRAM):   end;
1220775   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220776   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1220777   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220778   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220779   +   end;
MPRINT(EM_DIAGRAM):   end;
1220780   +end;
MPRINT(EM_DIAGRAM):   end;
1220781   +
1220782   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1220783   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1220784   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1220785   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1220786   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220787   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220788   +end;
MPRINT(EM_DIAGRAM):   end;
1220789   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220790   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220791   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1220792   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220793   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1220794   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1220795   +   end;
MPRINT(EM_DIAGRAM):   end;
1220796   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1220797   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1220798   +   end;
MPRINT(EM_DIAGRAM):   end;
1220799   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220800   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1220801   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220802   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220803   +   end;
MPRINT(EM_DIAGRAM):   end;
1220804   +end;
MPRINT(EM_DIAGRAM):   end;
1220805   +
1220806   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1220807   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1220808   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1220809   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1220810   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220811   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220812   +end;
MPRINT(EM_DIAGRAM):   end;
1220813   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220814   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220815   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1220816   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220817   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1220818   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1220819   +   end;
MPRINT(EM_DIAGRAM):   end;
1220820   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1220821   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1220822   +   end;
MPRINT(EM_DIAGRAM):   end;
1220823   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220824   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1220825   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220826   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220827   +   end;
MPRINT(EM_DIAGRAM):   end;
1220828   +end;
MPRINT(EM_DIAGRAM):   end;
1220829   +
1220830   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1220831   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1220832   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1220833   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1220834   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220835   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220836   +end;
MPRINT(EM_DIAGRAM):   end;
1220837   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220838   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220839   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1220840   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220841   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1220842   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1220843   +   end;
MPRINT(EM_DIAGRAM):   end;
1220844   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1220845   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1220846   +   end;
MPRINT(EM_DIAGRAM):   end;
1220847   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220848   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1220849   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220850   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220851   +   end;
MPRINT(EM_DIAGRAM):   end;
1220852   +end;
MPRINT(EM_DIAGRAM):   end;
1220853   +
1220854   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1220855   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1220856   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1220857   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1220858   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1220859   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1220860   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1220861   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1220862   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1220863   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1220864   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1220865   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1220866   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220867   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220868   +end;
MPRINT(EM_DIAGRAM):   end;
1220869   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220870   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1220871   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1220872   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220873   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1220874   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1220875   +   end;
MPRINT(EM_DIAGRAM):   end;
1220876   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1220877   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1220878   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1220879   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1220880   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1220881   +   end;
MPRINT(EM_DIAGRAM):   end;
1220882   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1220883   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1220884   +   end;
MPRINT(EM_DIAGRAM):   end;
1220885   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1220886   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1220887   +   end;
MPRINT(EM_DIAGRAM):   end;
1220888   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1220889   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1220890   +   end;
MPRINT(EM_DIAGRAM):   end;
1220891   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220892   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1220893   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1220894   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1220895   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1220896   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220897   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220898   +   end;
MPRINT(EM_DIAGRAM):   end;
1220899   +end;
MPRINT(EM_DIAGRAM):   end;
1220900   +
1220901   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1220902   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1220903   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1220904   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1220905   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1220906   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1220907   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1220908   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1220909   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1220910   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1220911   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1220912   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1220913   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1220914   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220915   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220916   +end;
MPRINT(EM_DIAGRAM):   end;
1220917   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220918   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1220919   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1220920   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220921   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1220922   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1220923   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1220924   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1220925   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1220926   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1220927   +         end;
MPRINT(EM_DIAGRAM):   end;
1220928   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1220929   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1220930   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1220931   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1220932   +            end;
MPRINT(EM_DIAGRAM):   end;
1220933   +         end;
MPRINT(EM_DIAGRAM):   end;
1220934   +      end;
MPRINT(EM_DIAGRAM):   end;
1220935   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1220936   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1220937   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1220938   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1220939   +         end;
MPRINT(EM_DIAGRAM):   end;
1220940   +      end;
MPRINT(EM_DIAGRAM):   end;
1220941   +   end;
MPRINT(EM_DIAGRAM):   end;
1220942   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220943   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1220944   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1220945   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1220946   +      end;
MPRINT(EM_DIAGRAM):   end;
1220947   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1220948   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1220949   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1220950   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1220951   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1220952   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1220953   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1220954   +         end;
MPRINT(EM_DIAGRAM):   end;
1220955   +      end;
MPRINT(EM_DIAGRAM):   end;
1220956   +   end;
MPRINT(EM_DIAGRAM):   end;
1220957   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1220958   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1220959   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1220960   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1220961   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1220962   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220963   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220964   +   end;
MPRINT(EM_DIAGRAM):   end;
1220965   +end;
MPRINT(EM_DIAGRAM):   end;
1220966   +
1220967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220968   +*** Checking missing input Interval
1220969   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1220970   +
1220971   +IF NMISS(
1220972   +   AcceptedCmpTotal ,
1220973   +   Age ,
1220974   +   Frq ,
1220975   +   Income ,
1220976   +   Kidhome ,
1220977   +   Mnt ,
1220978   +   MntFishProducts ,
1220979   +   MntFruits ,
1220980   +   MntGoldProds ,
1220981   +   MntMeatProducts ,
1220982   +   MntSweetProducts ,
1220983   +   MntWines ,
1220984   +   MonthsAsCustomer ,
1220985   +   NumCatalogPurchases ,
1220986   +   NumDealsPurchases ,
1220987   +   NumDistPurchases ,
1220988   +   NumStorePurchases ,
1220989   +   NumWebPurchases ,
1220990   +   NumWebVisitsMonth ,
1220991   +   RFMstat ,
1220992   +   RMntFrq ,
1220993   +   Recency ,
1220994   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1220995   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1220996   +
1220997   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220998   +END;
MPRINT(EM_DIAGRAM):   END;
1220999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221000   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1221001   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221002   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1221003   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1221004   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1221005   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1221006   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1221007   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1221008   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1221009   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1221010   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1221011   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1221012   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1221013   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1221014   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1221015   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1221016   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1221017   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1221018   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1221019   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1221020   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1221021   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1221022   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1221023   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1221024   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1221025   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1221026   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1221027   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1221028   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1221029   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1221030   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1221031   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1221032   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1221033   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1221034   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1221035   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1221036   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1221037   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1221038   +END;
MPRINT(EM_DIAGRAM):   END;
1221039   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1221040   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1221041   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1221042   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1221043   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1221044   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1221045   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1221046   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1221047   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1221048   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1221049   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1221050   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1221051   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1221052   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1221053   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1221054   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1221055   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1221056   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1221057   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1221058   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1221059   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1221060   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1221061   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1221062   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1221063   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1221064   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1221065   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1221066   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1221067   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1221068   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1221069   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1221070   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1221071   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1221072   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1221073   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1221074   +   ELSE S_NumCatalogPurchases
1221075   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1221076   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1221077   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1221078   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1221079   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1221080   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1221081   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1221082   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1221083   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1221084   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1221085   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1221086   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1221087   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1221088   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1221089   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1221090   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1221091   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1221092   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1221093   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1221094   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1221095   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1221096   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1221097   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1221098   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1221099   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1221100   +END;
MPRINT(EM_DIAGRAM):   END;
1221101   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221102   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1221103   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221105   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1221106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221108   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1221109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221110   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1221111   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
1221112   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
1221113   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
1221114   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
1221115   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
1221116   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
1221117   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
1221118   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
1221119   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
1221120   +          +     3.45371614080196 * S_NumDealsPurchases
1221121   +          +     0.19118374544537 * S_NumDistPurchases
1221122   +          +    -2.45138001446793 * S_NumStorePurchases
1221123   +          +    -0.11424280244155 * S_NumWebPurchases
1221124   +          +    -2.31770357716565 * S_NumWebVisitsMonth
1221125   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
1221126   +        S_RMntFrq  +     0.26870809438679 * S_Recency
1221127   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 * 
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 * 
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts + 
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 * 
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines + 
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases + 
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases + 
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases + 
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 * 
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
1221128   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
1221129   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
1221130   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
1221131   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
1221132   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
1221133   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
1221134   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
1221135   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
1221136   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
1221137   +          +    -1.28390925647659 * S_NumDealsPurchases
1221138   +          +     0.82669177239926 * S_NumDistPurchases
1221139   +          +     1.71678585204511 * S_NumStorePurchases
1221140   +          +     1.49226295608046 * S_NumWebPurchases
1221141   +          +     -4.0105103018388 * S_NumWebVisitsMonth
1221142   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
1221143   +        S_RMntFrq  +     4.74241121363086 * S_Recency
1221144   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 * 
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome 
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 * 
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts + 
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 * 
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 * 
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 * 
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 * 
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq + 
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
1221145   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
1221146   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
1221147   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
1221148   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
1221149   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
1221150   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
1221151   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
1221152   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
1221153   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
1221154   +          +     0.22958626391725 * S_NumDealsPurchases
1221155   +          +    -0.02046515813996 * S_NumDistPurchases
1221156   +          +      0.8618502050837 * S_NumStorePurchases
1221157   +          +     1.45175370326009 * S_NumWebPurchases
1221158   +          +    -0.86122442436156 * S_NumWebVisitsMonth
1221159   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
1221160   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
1221161   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 * 
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome 
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 * 
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts + 
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 * 
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 * 
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 * 
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 * 
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq + 
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
1221162   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
1221163   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
1221164   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
1221165   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
1221166   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
1221167   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
1221168   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
1221169   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
1221170   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
1221171   +          +     1.25310034610344 * S_NumDealsPurchases
1221172   +          +     0.92141098602176 * S_NumDistPurchases
1221173   +          +    -0.08806509391473 * S_NumStorePurchases
1221174   +          +     -1.0533787624668 * S_NumWebPurchases
1221175   +          +     3.07050739830585 * S_NumWebVisitsMonth
1221176   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
1221177   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
1221178   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 * 
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome 
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 * 
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts + 
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 * 
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 * 
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 * 
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 * 
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq + 
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
1221179   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
1221180   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
1221181   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
1221182   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
1221183   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
1221184   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
1221185   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
1221186   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
1221187   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
1221188   +          +    -1.68259553608287 * S_NumDealsPurchases
1221189   +          +    -0.53835572290445 * S_NumDistPurchases
1221190   +          +     1.25833922835446 * S_NumStorePurchases
1221191   +          +     0.48300830623998 * S_NumWebPurchases
1221192   +          +    -2.20119275236582 * S_NumWebVisitsMonth
1221193   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
1221194   +        S_RMntFrq  +     0.35692712879409 * S_Recency
1221195   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 * 
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome 
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 * 
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts + 
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 * 
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 * 
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 * 
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 * 
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq + 
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
1221196   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
1221197   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
1221198   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
1221199   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
1221200   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 * 
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 + 
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 * 
HigherEducationBinary0 ;
1221201   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
1221202   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
1221203   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
1221204   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
1221205   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 * 
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 + 
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 * 
HigherEducationBinary0 ;
1221206   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
1221207   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
1221208   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
1221209   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
1221210   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 * 
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 + 
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 * 
HigherEducationBinary0 ;
1221211   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
1221212   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
1221213   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
1221214   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
1221215   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355 
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 + 
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 * 
HigherEducationBinary0 ;
1221216   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
1221217   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
1221218   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
1221219   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
1221220   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255 
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 + 
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 * 
HigherEducationBinary0 ;
1221221   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
1221222   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
1221223   +        EducationGraduation  +     1.25189584055994 * EducationMaster
1221224   +          +     0.26230568150721 * Marital_StatusDivorced
1221225   +          +     0.27563523967756 * Marital_StatusMarried
1221226   +          +     0.54464481618478 * Marital_StatusSingle
1221227   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931 
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster 
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried + 
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
1221228   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
1221229   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
1221230   +        EducationGraduation  +     0.29772013614284 * EducationMaster
1221231   +          +    -0.06750661313108 * Marital_StatusDivorced
1221232   +          +     1.48628445854207 * Marital_StatusMarried
1221233   +          +    -0.52197797291165 * Marital_StatusSingle
1221234   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle + 
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284 
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 * 
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 * 
Marital_StatusTogether ;
1221235   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
1221236   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
1221237   +        EducationGraduation  +     0.45665087056809 * EducationMaster
1221238   +          +     0.03219453957597 * Marital_StatusDivorced
1221239   +          +    -0.73835008216677 * Marital_StatusMarried
1221240   +          +     0.11212575818086 * Marital_StatusSingle
1221241   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle + 
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 * 
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 * 
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 * 
Marital_StatusTogether ;
1221242   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
1221243   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
1221244   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
1221245   +          +    -0.95055539413405 * Marital_StatusDivorced
1221246   +          +    -1.65922419336067 * Marital_StatusMarried
1221247   +          +     0.78727538125107 * Marital_StatusSingle
1221248   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle + 
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701 
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 * 
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 * 
Marital_StatusTogether ;
1221249   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
1221250   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
1221251   +        EducationGraduation  +     0.46710355433642 * EducationMaster
1221252   +          +     -4.1747415035634 * Marital_StatusDivorced
1221253   +          +     3.61194282451968 * Marital_StatusMarried
1221254   +          +     -3.2800495365546 * Marital_StatusSingle
1221255   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle + 
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642 
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 * 
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 * 
Marital_StatusTogether ;
1221256   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
1221257   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
1221258   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
1221259   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
1221260   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
1221261   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1221262   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1221263   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1221264   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1221265   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1221266   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1221267   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1221268   +END;
MPRINT(EM_DIAGRAM):   END;
1221269   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1221270   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1221271   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1221272   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1221273   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1221274   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1221275   +END;
MPRINT(EM_DIAGRAM):   END;
1221276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221277   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1221278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221279   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1221280   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
1221281   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
1221282   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
1221283   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
1221284   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
1221285   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
1221286   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
1221287   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
1221288   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
1221289   +          +     1.29727972396867 * S_NumDealsPurchases
1221290   +          +     -0.4796144286007 * S_NumDistPurchases
1221291   +          +     0.88365985808591 * S_NumStorePurchases
1221292   +          +     0.68522096892804 * S_NumWebPurchases
1221293   +          +     0.54931043107798 * S_NumWebVisitsMonth
1221294   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
1221295   +        S_RMntFrq  +     2.35704770144328 * S_Recency
1221296   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 * 
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome 
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 * 
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts + 
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 * 
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 * 
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 * 
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 * 
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq + 
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
1221297   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
1221298   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
1221299   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
1221300   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
1221301   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
1221302   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
1221303   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
1221304   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
1221305   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
1221306   +          +     0.26997834581422 * S_NumDealsPurchases
1221307   +          +      1.4974894627406 * S_NumDistPurchases
1221308   +          +     0.20577850505638 * S_NumStorePurchases
1221309   +          +     0.67578530037026 * S_NumWebPurchases
1221310   +          +     1.48893165613941 * S_NumWebVisitsMonth
1221311   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
1221312   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
1221313   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 * 
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 * 
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts + 
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 * 
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines + 
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases + 
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases + 
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases + 
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 * 
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
1221314   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
1221315   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
1221316   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
1221317   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
1221318   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
1221319   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
1221320   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
1221321   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
1221322   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
1221323   +          +    -0.75474919633886 * S_NumDealsPurchases
1221324   +          +     2.21872386475638 * S_NumDistPurchases
1221325   +          +    -0.36191460108989 * S_NumStorePurchases
1221326   +          +     0.03160010932412 * S_NumWebPurchases
1221327   +          +     0.00984650739909 * S_NumWebVisitsMonth
1221328   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
1221329   +        S_RMntFrq  +     0.97890474913417 * S_Recency
1221330   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 * 
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome + 
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 * 
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts + 
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 * 
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 * 
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 * 
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 * 
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq + 
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
1221331   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
1221332   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
1221333   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
1221334   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
1221335   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
1221336   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
1221337   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
1221338   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
1221339   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
1221340   +          +    -1.12057357865269 * S_NumDealsPurchases
1221341   +          +    -0.70841760614521 * S_NumDistPurchases
1221342   +          +    -1.39174816270404 * S_NumStorePurchases
1221343   +          +    -1.62343249380806 * S_NumWebPurchases
1221344   +          +    -0.73097954508465 * S_NumWebVisitsMonth
1221345   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
1221346   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
1221347   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 * 
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 * 
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658 
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts + 
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 * 
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 * 
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 * 
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 * 
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq + 
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
1221348   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
1221349   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
1221350   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
1221351   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
1221352   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
1221353   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
1221354   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
1221355   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
1221356   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
1221357   +          +     0.66880481485557 * S_NumDealsPurchases
1221358   +          +     0.69540174544859 * S_NumDistPurchases
1221359   +          +     1.68246546921736 * S_NumStorePurchases
1221360   +          +     1.85958176898295 * S_NumWebPurchases
1221361   +          +    -0.23815810306565 * S_NumWebVisitsMonth
1221362   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
1221363   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
1221364   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 * 
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome 
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 * 
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts + 
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 * 
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 * 
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 * 
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 * 
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq + 
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
1221365   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
1221366   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
1221367   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
1221368   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
1221369   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761 
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 + 
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 * 
HigherEducationBinary0 ;
1221370   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
1221371   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
1221372   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
1221373   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
1221374   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 * 
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 + 
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 * 
HigherEducationBinary0 ;
1221375   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
1221376   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
1221377   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
1221378   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
1221379   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 * 
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 + 
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 * 
HigherEducationBinary0 ;
1221380   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
1221381   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
1221382   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
1221383   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
1221384   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 * 
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 + 
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 * 
HigherEducationBinary0 ;
1221385   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
1221386   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
1221387   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
1221388   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
1221389   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 * 
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 + 
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 * 
HigherEducationBinary0 ;
1221390   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
1221391   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
1221392   +        EducationGraduation  +     0.32623787352656 * EducationMaster
1221393   +          +      0.2766977476799 * Marital_StatusDivorced
1221394   +          +     0.99585126449473 * Marital_StatusMarried
1221395   +          +    -0.71244490682808 * Marital_StatusSingle
1221396   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle + 
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656 
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 * 
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 * 
Marital_StatusTogether ;
1221397   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
1221398   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
1221399   +        EducationGraduation  +     0.47239961039918 * EducationMaster
1221400   +          +     0.04724779113048 * Marital_StatusDivorced
1221401   +          +    -0.80186231440666 * Marital_StatusMarried
1221402   +          +    -0.02226793584171 * Marital_StatusSingle
1221403   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle + 
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918 
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 * 
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 * 
Marital_StatusTogether ;
1221404   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
1221405   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
1221406   +        EducationGraduation  +     0.41284540548646 * EducationMaster
1221407   +          +     0.28206835683721 * Marital_StatusDivorced
1221408   +          +     0.46500886756532 * Marital_StatusMarried
1221409   +          +     0.35327545255503 * Marital_StatusSingle
1221410   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle + 
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation + 
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced + 
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle + 
0.58394650567036 * Marital_StatusTogether ;
1221411   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
1221412   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
1221413   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
1221414   +          +     1.22291788006392 * Marital_StatusDivorced
1221415   +          +    -2.27040720272432 * Marital_StatusMarried
1221416   +          +     1.13606780043773 * Marital_StatusSingle
1221417   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle + 
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479 
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 * 
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 * 
Marital_StatusTogether ;
1221418   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
1221419   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
1221420   +        EducationGraduation  +      0.4909097120378 * EducationMaster
1221421   +          +     -0.3999800759199 * Marital_StatusDivorced
1221422   +          +    -0.40978271635345 * Marital_StatusMarried
1221423   +          +    -0.55524279444227 * Marital_StatusSingle
1221424   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle + 
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 * 
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 * 
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 * 
Marital_StatusTogether ;
1221425   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
1221426   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
1221427   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
1221428   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
1221429   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
1221430   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1221431   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1221432   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1221433   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
1221434   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
1221435   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
1221436   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
1221437   +END;
MPRINT(EM_DIAGRAM):   END;
1221438   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1221439   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1221440   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1221441   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1221442   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1221443   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1221444   +END;
MPRINT(EM_DIAGRAM):   END;
1221445   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221446   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1221447   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221448   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1221449   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
1221450   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
1221451   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
1221452   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
1221453   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
1221454   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
1221455   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
1221456   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
1221457   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
1221458   +          +     0.15783958682465 * S_NumDealsPurchases
1221459   +          +     1.52124708558457 * S_NumDistPurchases
1221460   +          +     -1.3804418313581 * S_NumStorePurchases
1221461   +          +    -1.29570111649272 * S_NumWebPurchases
1221462   +          +    -0.64280706056547 * S_NumWebVisitsMonth
1221463   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
1221464   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
1221465   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 * 
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome 
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 * 
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts + 
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 * 
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 * 
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 * 
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 * 
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq + 
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
1221466   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
1221467   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
1221468   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
1221469   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
1221470   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
1221471   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
1221472   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
1221473   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
1221474   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
1221475   +          +     0.12337111358286 * S_NumDealsPurchases
1221476   +          +     -2.3848926094027 * S_NumDistPurchases
1221477   +          +    -1.20666646996433 * S_NumStorePurchases
1221478   +          +     0.89549302881365 * S_NumWebPurchases
1221479   +          +     0.95359042569947 * S_NumWebVisitsMonth
1221480   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
1221481   +        S_RMntFrq  +     0.17682790616815 * S_Recency
1221482   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 * 
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome 
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 * 
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts + 
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 * 
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 * 
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 * 
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 * 
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq + 
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
1221483   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
1221484   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
1221485   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
1221486   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
1221487   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
1221488   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
1221489   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
1221490   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
1221491   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
1221492   +          +    -1.05383642674948 * S_NumDealsPurchases
1221493   +          +     1.71861984509369 * S_NumDistPurchases
1221494   +          +     1.47595181536047 * S_NumStorePurchases
1221495   +          +    -1.64165005491178 * S_NumWebPurchases
1221496   +          +    -2.35130004742828 * S_NumWebVisitsMonth
1221497   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
1221498   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
1221499   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 * 
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 * 
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241 
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts + 
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 * 
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 * 
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 * 
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 * 
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq + 
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
1221500   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
1221501   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
1221502   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
1221503   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
1221504   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
1221505   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
1221506   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
1221507   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
1221508   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
1221509   +          +     0.13347794794222 * S_NumDealsPurchases
1221510   +          +     0.30533639886561 * S_NumDistPurchases
1221511   +          +     1.63892955540526 * S_NumStorePurchases
1221512   +          +     0.43734586516446 * S_NumWebPurchases
1221513   +          +     1.79260779802864 * S_NumWebVisitsMonth
1221514   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
1221515   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
1221516   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 * 
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome + 
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 * 
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts + 
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 * 
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 * 
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 * 
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 * 
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq + 
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
1221517   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
1221518   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
1221519   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
1221520   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
1221521   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
1221522   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
1221523   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
1221524   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
1221525   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
1221526   +          +     1.64209094349557 * S_NumDealsPurchases
1221527   +          +    -0.38876870460627 * S_NumDistPurchases
1221528   +          +    -0.48559309584971 * S_NumStorePurchases
1221529   +          +     0.21254626353218 * S_NumWebPurchases
1221530   +          +    -0.71484448532542 * S_NumWebVisitsMonth
1221531   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
1221532   +        S_RMntFrq  +     0.44893411588775 * S_Recency
1221533   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 * 
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome 
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 * 
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts + 
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 * 
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 * 
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 * 
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 * 
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq + 
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
1221534   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
1221535   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
1221536   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
1221537   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
1221538   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 * 
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 + 
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 * 
HigherEducationBinary0 ;
1221539   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
1221540   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
1221541   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
1221542   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
1221543   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 * 
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 + 
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 * 
HigherEducationBinary0 ;
1221544   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
1221545   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
1221546   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
1221547   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
1221548   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 * 
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 + 
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 * 
HigherEducationBinary0 ;
1221549   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
1221550   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
1221551   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
1221552   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
1221553   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334 
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 + 
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 * 
HigherEducationBinary0 ;
1221554   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
1221555   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
1221556   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
1221557   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
1221558   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 * 
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 + 
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 * 
HigherEducationBinary0 ;
1221559   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
1221560   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
1221561   +        EducationGraduation  +     0.46887304015863 * EducationMaster
1221562   +          +     1.33953173091973 * Marital_StatusDivorced
1221563   +          +    -0.26253208073262 * Marital_StatusMarried
1221564   +          +    -0.00960552682431 * Marital_StatusSingle
1221565   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle + 
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation + 
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced + 
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle + 
1.02851334153667 * Marital_StatusTogether ;
1221566   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
1221567   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
1221568   +        EducationGraduation  +     1.05325310300372 * EducationMaster
1221569   +          +     1.43150850334311 * Marital_StatusDivorced
1221570   +          +    -0.69239127844934 * Marital_StatusMarried
1221571   +          +     2.08477562471559 * Marital_StatusSingle
1221572   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle + 
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372 
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 * 
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 * 
Marital_StatusTogether ;
1221573   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
1221574   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
1221575   +        EducationGraduation  +     1.80436924796338 * EducationMaster
1221576   +          +     1.08387556786168 * Marital_StatusDivorced
1221577   +          +      1.0283506000217 * Marital_StatusMarried
1221578   +          +    -0.87069431107983 * Marital_StatusSingle
1221579   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle + 
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338 
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 * 
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 * 
Marital_StatusTogether ;
1221580   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
1221581   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
1221582   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
1221583   +          +      -1.347780188307 * Marital_StatusDivorced
1221584   +          +    -0.53911983240372 * Marital_StatusMarried
1221585   +          +     0.22083074159185 * Marital_StatusSingle
1221586   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle + 
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation + 
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced + 
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle + 
0.46023807391468 * Marital_StatusTogether ;
1221587   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
1221588   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
1221589   +        EducationGraduation  +      1.6087631135774 * EducationMaster
1221590   +          +     1.46582538311384 * Marital_StatusDivorced
1221591   +          +     0.05256161016002 * Marital_StatusMarried
1221592   +          +    -1.21402967626877 * Marital_StatusSingle
1221593   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle + 
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 * 
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 * 
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 * 
Marital_StatusTogether ;
1221594   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
1221595   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
1221596   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
1221597   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
1221598   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
1221599   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1221600   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1221601   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1221602   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
1221603   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
1221604   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
1221605   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
1221606   +END;
MPRINT(EM_DIAGRAM):   END;
1221607   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1221608   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1221609   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1221610   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1221611   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1221612   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1221613   +END;
MPRINT(EM_DIAGRAM):   END;
1221614   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221615   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1221616   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221617   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1221618   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
1221619   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
1221620   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 + 
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
1221621   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
1221622   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
1221623   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 + 
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
1221624   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
1221625   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
1221626   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 + 
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
1221627   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
1221628   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
1221629   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 + 
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
1221630   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
1221631   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
1221632   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2 
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
1221633   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
1221634   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
1221635   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2 
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
1221636   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
1221637   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
1221638   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2 
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
1221639   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
1221640   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
1221641   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2 
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
1221642   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
1221643   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
1221644   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2 
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
1221645   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
1221646   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
1221647   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 + 
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
1221648   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
1221649   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
1221650   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2 
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
1221651   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
1221652   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
1221653   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2 
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
1221654   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
1221655   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
1221656   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
1221657   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
1221658   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
1221659   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
1221660   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1221661   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1221662   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1221663   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1221664   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1221665   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1221666   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1221667   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1221668   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1221669   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1221670   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1221671   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1221672   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1221673   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1221674   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1221675   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1221676   +END;
MPRINT(EM_DIAGRAM):   END;
1221677   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1221678   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1221679   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1221680   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1221681   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1221682   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1221683   +END;
MPRINT(EM_DIAGRAM):   END;
1221684   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221685   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1221686   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221687   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1221688   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
1221689   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
1221690   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 + 
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
1221691   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
1221692   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
1221693   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 + 
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
1221694   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
1221695   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
1221696   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 + 
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
1221697   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
1221698   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
1221699   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 + 
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
1221700   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
1221701   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
1221702   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 + 
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
1221703   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
1221704   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
1221705   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2 
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
1221706   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
1221707   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
1221708   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2 
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
1221709   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
1221710   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
1221711   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2 
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
1221712   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
1221713   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
1221714   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2 
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
1221715   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
1221716   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
1221717   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 * 
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
1221718   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
1221719   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
1221720   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2 
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
1221721   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
1221722   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
1221723   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2 
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
1221724   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
1221725   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
1221726   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
1221727   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
1221728   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
1221729   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
1221730   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1221731   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1221732   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1221733   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1221734   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1221735   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1221736   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1221737   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
1221738   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
1221739   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
1221740   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
1221741   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1221742   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1221743   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1221744   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
1221745   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
1221746   +END;
MPRINT(EM_DIAGRAM):   END;
1221747   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1221748   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1221749   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1221750   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1221751   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1221752   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1221753   +END;
MPRINT(EM_DIAGRAM):   END;
1221754   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221755   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1221756   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221757   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1221758   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
1221759   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
1221760   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 + 
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
1221761   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
1221762   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
1221763   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 + 
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
1221764   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
1221765   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
1221766   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 + 
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
1221767   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
1221768   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
1221769   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 + 
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
1221770   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
1221771   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
1221772   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2 
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
1221773   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
1221774   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
1221775   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2 
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
1221776   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
1221777   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
1221778   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2 
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
1221779   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
1221780   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
1221781   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 * 
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
1221782   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
1221783   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
1221784   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
1221785   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
1221786   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
1221787   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
1221788   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1221789   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1221790   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1221791   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1221792   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1221793   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
1221794   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
1221795   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
1221796   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
1221797   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
1221798   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
1221799   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1221800   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1221801   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
1221802   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
1221803   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
1221804   +END;
MPRINT(EM_DIAGRAM):   END;
1221805   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1221806   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1221807   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1221808   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1221809   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1221810   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1221811   +END;
MPRINT(EM_DIAGRAM):   END;
1221812   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221813   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1221814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221815   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1221816   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
1221817   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
1221818   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 + 
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
1221819   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
1221820   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1221821   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1221822   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1221823   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1221824   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1221825   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1221826   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1221827   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1221828   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1221829   +END;
MPRINT(EM_DIAGRAM):   END;
1221830   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1221831   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1221832   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1221833   +END;
MPRINT(EM_DIAGRAM):   END;
1221834   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1221835   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1221836   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1221837   +END;
MPRINT(EM_DIAGRAM):   END;
1221838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221839   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1221840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221841   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1221842   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1221843   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1221844   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1221845   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1221846   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1221847   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1221848   +END;
MPRINT(EM_DIAGRAM):   END;
1221849   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1221850   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1221851   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1221852   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1221853    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1221854    quit;
1221855    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1221856    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1221857    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1221858    retain ID 2 Node "AutoNeural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural10";
1221859    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1221860    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9109 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 9109 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1221861    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1221862    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221863    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9109 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 9109 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1221864    proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME 
CREATOR);
1221865    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221866    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221867    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1221868    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1221869    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1221870    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221871    proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
1221872    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 83 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1221873    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1221874    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221875    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 83 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 83 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221876    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1221877    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1221878    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221879    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 83 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 83 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1221880    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1221881    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1221881  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4449 rows and 5 columns.

1221882    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221883    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1221884    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 4449 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 4449 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1221885    filename _pref
1221885  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1221886    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1221887    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1221888   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1221889   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1221890   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1221891   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1221892   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1221893   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1221894    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1221895    quit;
1221896    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1221897    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1221898    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1221899    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1221900    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1221901    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

1221902    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1221903    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221904    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221905    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1221906    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221907    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221908    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1221909    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1221910    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1221911    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221912    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1221913    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

1221914    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1221915    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221916    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221917    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1221918    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1221919    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221920    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221921    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1221922    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1221922  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1221923    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221924    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1221925    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 4453 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1221926    filename _pref
1221926  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1221927    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1221928    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1221929   +
1221930   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1221931   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1221931  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1221932   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1221933   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1221934   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1221935   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1221936   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1221937    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1221938    quit;
1221939    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1221940    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1221941    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1221942    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1221943    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1221944    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1221945    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1221946    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221947    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221948    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1221949    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221950    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221951    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1221952    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1221953    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1221954    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221955    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1221956    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1221957    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1221958    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221959    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221960    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1221961    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1221962    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221963    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221964    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1221965    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1221965  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1221966    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1221967    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1221968    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 4492 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221969    filename _pref
1221969  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1221970    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1221971    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1221972   +
1221973   +
1221974   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1221975   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1221976   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1221977   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1221978   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1221979   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1221980   +
1221981   +
1221982   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1221983   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1221984   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1221985   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1221986   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1221987   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1221988   +
1221989   +
1221990   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1221991   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1221992   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1221993   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1221994   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1221995   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1221996   +
1221997   +
1221998   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1221999   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1222000   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1222001   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1222002   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1222003   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1222004   +
1222005   +
1222006   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1222007   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1222008   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1222009   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1222010   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1222011   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1222012   +
1222013   +
1222014   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1222015   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1222016   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1222017   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1222018   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1222019   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1222020   +
1222021   +
1222022   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1222023   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1222024   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1222025   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1222026   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1222027   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1222028   +
1222029   +
1222030   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1222031   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1222032   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1222033   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1222034   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1222035   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1222036   +if
1222037   +_FILTERNORM1 not in ( '.')
1222038   + and
1222039   +_FILTERNORM2 not in ( '.')
1222040   + and
1222041   +_FILTERNORM3 not in ( '.')
1222042   + and
1222043   +_FILTERNORM4 not in ( '.')
1222044   + and
1222045   +_FILTERNORM5 not in ( '.')
1222046   + and
1222047   +_FILTERNORM6 not in ( '.')
1222048   + and
1222049   +_FILTERNORM7 not in ( ' ')
1222050   + and
1222051   +_FILTERNORM8 not in ( ' ')
1222052   +and
1222053   +( Dt_Customer ne .)
1222054   +and ( Income ne . and (Income<=107000))
1222055   +and ( Kidhome ne .)
1222056   +and ( MntFishProducts ne .)
1222057   +and ( MntFruits ne .)
1222058   +and ( MntGoldProds ne .)
1222059   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1222060   +and ( MntSweetProducts ne .)
1222061   +and ( MntWines ne .)
1222062   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1222063   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1222064   +and ( NumStorePurchases ne .)
1222065   +and ( NumWebPurchases ne .)
1222066   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1222067   +and ( Recency ne .)
1222068   +and ( Teenhome ne .)
1222069   +and ( Year_Birth ne .)
1222070   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1222071   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1222072   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1222073   +end;
MPRINT(EM_DIAGRAM):   end;
1222074   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1222075   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1222076    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1222077    quit;
1222078    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1222079    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1222080    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1222081    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1222082    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1222083    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222084    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1222085    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222086    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1222087    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1222088    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222089    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222090    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1222091    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1222092    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1222093    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222094    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1222095    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1222096    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1222097    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222098    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222099    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1222100    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1222101    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222102    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1222103    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1222104    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1222104  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1222105    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222106    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1222107    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 4558 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222108    %macro varDept(fcmpdata=,id=);
1222109    %global nobs&id scoreFlag&id;
1222110    %let scoreFlag&id = 0;
1222111    %if &id=1 or ^&fcmpStart %then %do;
1222112    proc sort data=&fcmpdata out=_temp&id nodupkey;
1222113    by NAME;
1222114    where id=&id and LHS in( %let j=1;
1222115    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1222116    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1222117    "&var" %let j = %eval(&j+1);
1222118    %end;
1222119    );
1222120    run;
1222121    %let dsid = %sysfunc(open(_temp&id));
1222122    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1222123    %let dsid = %sysfunc(close(&dsid));
1222124    %if &&nobs&id %then %do;
1222125    %let scoreFlag&id = 1;
1222126    %let fcmpStart = 1;
1222127    %end;
1222128    %else %let fcmpStart = 0;
1222129    %end;
1222130    %else %do;
1222131    proc sort data=&fcmpdata out=_tempid;
1222132    where id=&id;
1222133    by LHS;
1222134    run;
1222135    %let dsid = %sysfunc(open(_tempid));
1222136    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1222137    %let dsid = %sysfunc(close(&dsid));
1222138    %if ^&&nobs&id %then %do;
1222139    proc datasets lib=work nolist;
1222140    delete _tempid;
1222141    run;
1222142    quit;
1222143    %end;
1222144    %else %do;
1222145    data _tempAll;
1222146    set %let j=%eval(&id-1);
1222147    %do x=1 %to &j;
1222148    %if &&nobs&x %then %do;
1222149    _temp&x %end;
1222150    %end;
1222151    ;
1222152    run;
1222153    proc sql;
1222154    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1222154  ! work._tempid p2 where p.name=p2.lhs;
1222155    quit;
1222156    data _temp&id;
1222157    set _temp&id;
1222158    where LHS ne '' and NAME ne '' and Node ne '';
1222159    run;
1222160    proc datasets lib=work nolist;
1222161    delete _tempAll;
1222162    run;
1222163    %let dsid = %sysfunc(open(_temp&id));
1222164    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1222165    %let dsid = %sysfunc(close(&dsid));
1222166    %if ^&&nobs&id %then %do;
1222167    proc datasets lib=work nolist;
1222168    delete _temp&id;
1222169    run;
1222170    quit;
1222171    %end;
1222172    %else %do;
1222173    %let scoreFlag&id = 1;
1222174    data _temp&id;
1222175    set _temp&id;
1222176    where LHS ne NAME and node ne '';
1222177    run;
1222178    %let dsid = %sysfunc(open(_temp&id));
1222179    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1222180    %let dsid = %sysfunc(close(&dsid));
1222181    %if ^&&nobs&id %then %do;
1222182    proc datasets lib=work nolist;
1222183    delete _temp&id;
1222184    run;
1222185    quit;
1222186    %end;
1222187    %else %do;
1222188    proc sort data=_temp&id nodupkey;
1222189    by LHS NAME;
1222190    run;
1222191    %end;
1222192    %end;
1222193    %end;
1222194    %end;
1222195    %mend varDept;
1222196    %macro optCode(outdata=fcmpdata);
1222197    %global fcmpStart;
1222198    %let fcmpStart = 0;
1222199    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1222200    %let NumNodes=9;
1222201    %do k=1 %to &NumNodes;
1222202    %vardept(fcmpdata=&outdata, id=&k);
1222203    %end;
1222204    %mend optCode;
1222205    %optcode(outData=EMWS8.Ensmbl47_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 224 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 160 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 64 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 64 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 64 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 68 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 64 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 107 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1222206    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1222207    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1222208    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1222209    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222210    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1222211    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1222212    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1222213    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222214    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1222215    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1222215  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1222216    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1222217    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1222218    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1222219    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222220    filename _pref
1222220  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
1222221    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1222222    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
1222223   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1222224   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1222225   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1222226   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1222227   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1222228   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1222229   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1222230   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1222231   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1222232   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1222233   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1222234   +LENGTH _WARN_ $4
1222235   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1222236   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1222237   +
1222238   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1222239   +
1222240   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1222241   +
1222242   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1222243   +
1222244   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1222245   +
1222246   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1222247   +
1222248   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1222249   +
1222250   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1222251   +
1222252   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1222253   +
1222254   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1222255   +
1222256   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1222257   +
1222258   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1222259   +
1222260   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1222261   +
1222262   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1222263   +
1222264   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1222265   +
1222266   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1222267   +
1222268   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1222269   +
1222270   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1222271   +
1222272   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1222273   +
1222274   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1222275   +
1222276   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1222277   +
1222278   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1222279   +
1222280   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1222281   +
1222282   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1222283   +
1222284   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1222285   +
1222286   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1222287   +
1222288   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1222289   +
1222290   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1222291   +
1222292   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1222293   +
1222294   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1222295   +
1222296   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1222297   +
1222298   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1222299   +
1222300   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1222301   +
1222302   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1222303   +
1222304   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1222305   +
1222306   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1222307   +
1222308   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1222309   +
1222310   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1222311   +
1222312   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1222313   +
1222314   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1222315   +
1222316   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1222317   +
1222318   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1222319   +
1222320   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1222321   +
1222322   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1222323   +
1222324   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1222325   +
1222326   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1222327   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1222328   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1222329   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1222330   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1222331   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222332   +end;
MPRINT(EM_DIAGRAM):   end;
1222333   +else do;
MPRINT(EM_DIAGRAM):   else do;
1222334   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1222335   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1222336   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1222337   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1222338   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1222339   +   end;
MPRINT(EM_DIAGRAM):   end;
1222340   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1222341   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1222342   +   end;
MPRINT(EM_DIAGRAM):   end;
1222343   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1222344   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1222345   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1222346   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222347   +   end;
MPRINT(EM_DIAGRAM):   end;
1222348   +end;
MPRINT(EM_DIAGRAM):   end;
1222349   +
1222350   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1222351   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1222352   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1222353   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1222354   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1222355   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222356   +end;
MPRINT(EM_DIAGRAM):   end;
1222357   +else do;
MPRINT(EM_DIAGRAM):   else do;
1222358   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1222359   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1222360   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1222361   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1222362   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1222363   +   end;
MPRINT(EM_DIAGRAM):   end;
1222364   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1222365   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1222366   +   end;
MPRINT(EM_DIAGRAM):   end;
1222367   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1222368   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1222369   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1222370   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222371   +   end;
MPRINT(EM_DIAGRAM):   end;
1222372   +end;
MPRINT(EM_DIAGRAM):   end;
1222373   +
1222374   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1222375   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1222376   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1222377   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1222378   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1222379   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222380   +end;
MPRINT(EM_DIAGRAM):   end;
1222381   +else do;
MPRINT(EM_DIAGRAM):   else do;
1222382   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1222383   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1222384   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1222385   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1222386   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1222387   +   end;
MPRINT(EM_DIAGRAM):   end;
1222388   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1222389   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1222390   +   end;
MPRINT(EM_DIAGRAM):   end;
1222391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1222392   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1222393   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1222394   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222395   +   end;
MPRINT(EM_DIAGRAM):   end;
1222396   +end;
MPRINT(EM_DIAGRAM):   end;
1222397   +
1222398   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1222399   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1222400   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1222401   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1222402   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1222403   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222404   +end;
MPRINT(EM_DIAGRAM):   end;
1222405   +else do;
MPRINT(EM_DIAGRAM):   else do;
1222406   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1222407   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1222408   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1222409   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1222410   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1222411   +   end;
MPRINT(EM_DIAGRAM):   end;
1222412   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1222413   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1222414   +   end;
MPRINT(EM_DIAGRAM):   end;
1222415   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1222416   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1222417   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1222418   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222419   +   end;
MPRINT(EM_DIAGRAM):   end;
1222420   +end;
MPRINT(EM_DIAGRAM):   end;
1222421   +
1222422   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1222423   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1222424   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1222425   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1222426   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1222427   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222428   +end;
MPRINT(EM_DIAGRAM):   end;
1222429   +else do;
MPRINT(EM_DIAGRAM):   else do;
1222430   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1222431   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1222432   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1222433   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1222434   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1222435   +   end;
MPRINT(EM_DIAGRAM):   end;
1222436   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1222437   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1222438   +   end;
MPRINT(EM_DIAGRAM):   end;
1222439   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1222440   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1222441   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1222442   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222443   +   end;
MPRINT(EM_DIAGRAM):   end;
1222444   +end;
MPRINT(EM_DIAGRAM):   end;
1222445   +
1222446   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1222447   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1222448   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1222449   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1222450   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1222451   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222452   +end;
MPRINT(EM_DIAGRAM):   end;
1222453   +else do;
MPRINT(EM_DIAGRAM):   else do;
1222454   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1222455   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1222456   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1222457   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1222458   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1222459   +   end;
MPRINT(EM_DIAGRAM):   end;
1222460   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1222461   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1222462   +   end;
MPRINT(EM_DIAGRAM):   end;
1222463   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1222464   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1222465   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1222466   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222467   +   end;
MPRINT(EM_DIAGRAM):   end;
1222468   +end;
MPRINT(EM_DIAGRAM):   end;
1222469   +
1222470   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1222471   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1222472   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1222473   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1222474   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1222475   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222476   +end;
MPRINT(EM_DIAGRAM):   end;
1222477   +else do;
MPRINT(EM_DIAGRAM):   else do;
1222478   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1222479   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1222480   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1222481   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1222482   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1222483   +   end;
MPRINT(EM_DIAGRAM):   end;
1222484   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1222485   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1222486   +   end;
MPRINT(EM_DIAGRAM):   end;
1222487   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1222488   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1222489   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1222490   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222491   +   end;
MPRINT(EM_DIAGRAM):   end;
1222492   +end;
MPRINT(EM_DIAGRAM):   end;
1222493   +
1222494   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1222495   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1222496   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1222497   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1222498   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1222499   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1222500   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1222501   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1222502   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1222503   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1222504   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1222505   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1222506   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1222507   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222508   +end;
MPRINT(EM_DIAGRAM):   end;
1222509   +else do;
MPRINT(EM_DIAGRAM):   else do;
1222510   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1222511   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1222512   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1222513   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1222514   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1222515   +   end;
MPRINT(EM_DIAGRAM):   end;
1222516   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1222517   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1222518   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1222519   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1222520   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1222521   +   end;
MPRINT(EM_DIAGRAM):   end;
1222522   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1222523   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1222524   +   end;
MPRINT(EM_DIAGRAM):   end;
1222525   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1222526   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1222527   +   end;
MPRINT(EM_DIAGRAM):   end;
1222528   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1222529   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1222530   +   end;
MPRINT(EM_DIAGRAM):   end;
1222531   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1222532   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1222533   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1222534   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1222535   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1222536   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1222537   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222538   +   end;
MPRINT(EM_DIAGRAM):   end;
1222539   +end;
MPRINT(EM_DIAGRAM):   end;
1222540   +
1222541   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1222542   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1222543   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1222544   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1222545   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1222546   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1222547   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1222548   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1222549   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1222550   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1222551   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1222552   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1222553   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1222554   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1222555   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222556   +end;
MPRINT(EM_DIAGRAM):   end;
1222557   +else do;
MPRINT(EM_DIAGRAM):   else do;
1222558   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1222559   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1222560   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1222561   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1222562   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1222563   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1222564   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1222565   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1222566   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1222567   +         end;
MPRINT(EM_DIAGRAM):   end;
1222568   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1222569   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1222570   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1222571   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1222572   +            end;
MPRINT(EM_DIAGRAM):   end;
1222573   +         end;
MPRINT(EM_DIAGRAM):   end;
1222574   +      end;
MPRINT(EM_DIAGRAM):   end;
1222575   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1222576   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1222577   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1222578   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1222579   +         end;
MPRINT(EM_DIAGRAM):   end;
1222580   +      end;
MPRINT(EM_DIAGRAM):   end;
1222581   +   end;
MPRINT(EM_DIAGRAM):   end;
1222582   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1222583   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1222584   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1222585   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1222586   +      end;
MPRINT(EM_DIAGRAM):   end;
1222587   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1222588   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1222589   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1222590   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1222591   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1222592   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1222593   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1222594   +         end;
MPRINT(EM_DIAGRAM):   end;
1222595   +      end;
MPRINT(EM_DIAGRAM):   end;
1222596   +   end;
MPRINT(EM_DIAGRAM):   end;
1222597   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1222598   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1222599   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1222600   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1222601   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1222602   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1222603   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222604   +   end;
MPRINT(EM_DIAGRAM):   end;
1222605   +end;
MPRINT(EM_DIAGRAM):   end;
1222606   +
1222607   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222608   +*** Checking missing input Interval
1222609   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1222610   +
1222611   +IF NMISS(
1222612   +   AcceptedCmpTotal ,
1222613   +   Age ,
1222614   +   Frq ,
1222615   +   Income ,
1222616   +   Kidhome ,
1222617   +   Mnt ,
1222618   +   MntFishProducts ,
1222619   +   MntFruits ,
1222620   +   MntGoldProds ,
1222621   +   MntMeatProducts ,
1222622   +   MntSweetProducts ,
1222623   +   MntWines ,
1222624   +   MonthsAsCustomer ,
1222625   +   NumCatalogPurchases ,
1222626   +   NumDealsPurchases ,
1222627   +   NumDistPurchases ,
1222628   +   NumStorePurchases ,
1222629   +   NumWebPurchases ,
1222630   +   NumWebVisitsMonth ,
1222631   +   RFMstat ,
1222632   +   RMntFrq ,
1222633   +   Recency ,
1222634   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1222635   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1222636   +
1222637   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222638   +END;
MPRINT(EM_DIAGRAM):   END;
1222639   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222640   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1222641   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222642   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1222643   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1222644   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1222645   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1222646   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1222647   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1222648   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1222649   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1222650   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1222651   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1222652   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1222653   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1222654   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1222655   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1222656   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1222657   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1222658   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1222659   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1222660   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1222661   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1222662   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1222663   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1222664   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1222665   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1222666   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1222667   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1222668   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1222669   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1222670   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1222671   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1222672   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1222673   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1222674   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1222675   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1222676   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1222677   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1222678   +END;
MPRINT(EM_DIAGRAM):   END;
1222679   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1222680   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1222681   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1222682   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1222683   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1222684   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1222685   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1222686   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1222687   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1222688   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1222689   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1222690   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1222691   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1222692   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1222693   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1222694   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1222695   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1222696   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1222697   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1222698   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1222699   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1222700   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1222701   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1222702   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1222703   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1222704   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1222705   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1222706   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1222707   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1222708   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1222709   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1222710   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1222711   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1222712   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1222713   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1222714   +   ELSE S_NumCatalogPurchases
1222715   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1222716   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1222717   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1222718   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1222719   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1222720   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1222721   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1222722   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1222723   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1222724   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1222725   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1222726   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1222727   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1222728   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1222729   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1222730   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1222731   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1222732   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1222733   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1222734   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1222735   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1222736   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1222737   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1222738   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1222739   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1222740   +END;
MPRINT(EM_DIAGRAM):   END;
1222741   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222742   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1222743   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222744   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222745   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1222746   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222747   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222748   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1222749   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222750   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1222751   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
1222752   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
1222753   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
1222754   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
1222755   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
1222756   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
1222757   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
1222758   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
1222759   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
1222760   +          +     0.09708841024031 * S_NumDealsPurchases
1222761   +          +    -0.29075561032014 * S_NumDistPurchases
1222762   +          +    -0.14495394259873 * S_NumStorePurchases
1222763   +          +     0.11890705145732 * S_NumWebPurchases
1222764   +          +    -0.16954189911344 * S_NumWebVisitsMonth
1222765   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
1222766   +        S_RMntFrq  +     0.17150719398884 * S_Recency
1222767   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
1222768   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
1222769   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
1222770   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
1222771   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
1222772   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
1222773   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
1222774   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
1222775   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
1222776   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
1222777   +          +     0.16274478997892 * S_NumDealsPurchases
1222778   +          +     0.03966958784582 * S_NumDistPurchases
1222779   +          +    -0.04714110726598 * S_NumStorePurchases
1222780   +          +    -0.02124229528082 * S_NumWebPurchases
1222781   +          +     0.29753299776832 * S_NumWebVisitsMonth
1222782   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
1222783   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
1222784   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
1222785   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
1222786   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
1222787   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
1222788   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
1222789   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
1222790   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
1222791   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
1222792   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
1222793   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
1222794   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
1222795   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
1222796   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
1222797   +        EducationGraduation  +     0.00619669837452 * EducationMaster
1222798   +          +    -0.05037639679806 * Marital_StatusDivorced
1222799   +          +     0.28781968727878 * Marital_StatusMarried
1222800   +          +    -0.20382417074384 * Marital_StatusSingle
1222801   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
1222802   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
1222803   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
1222804   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
1222805   +          +     0.06970969219123 * Marital_StatusDivorced
1222806   +          +    -0.15787475744986 * Marital_StatusMarried
1222807   +          +     0.14345344072192 * Marital_StatusSingle
1222808   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
1222809   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
1222810   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
1222811   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1222812   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1222813   +END;
MPRINT(EM_DIAGRAM):   END;
1222814   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1222815   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1222816   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1222817   +END;
MPRINT(EM_DIAGRAM):   END;
1222818   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222819   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1222820   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222821   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1222822   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
1222823   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
1222824   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
1222825   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1222826   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1222827   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1222828   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1222829   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1222830   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1222831   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1222832   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1222833   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1222834   +END;
MPRINT(EM_DIAGRAM):   END;
1222835   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1222836   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1222837   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1222838   +END;
MPRINT(EM_DIAGRAM):   END;
1222839   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1222840   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1222841   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1222842   +END;
MPRINT(EM_DIAGRAM):   END;
1222843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222844   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1222845   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222846   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1222847   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1222848   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1222849   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1222850   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1222851   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1222852   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1222853   +END;
MPRINT(EM_DIAGRAM):   END;
1222854   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1222855   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1222856   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1222857   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1222858    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1222859    quit;
1222860    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1222861    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1222862    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1222863    retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
1222864    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1222865    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1222866    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1222867    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222868    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222869    proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME 
CREATOR);
1222870    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222871    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222872    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1222873    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1222874    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1222875    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1222876    proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
1222877    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1222878    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1222879    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222880    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222881    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1222882    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1222883    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222884    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222885    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1222886    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1222886  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1359 rows and 5 columns.

1222887    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1222888    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1222889    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1359 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1359 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222890    filename _pref
1222890  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1222891    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1222892    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1222893   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1222894   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1222895   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1222896   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1222897   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1222898   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1222899    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1222900    quit;
1222901    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1222902    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1222903    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1222904    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1222905    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1222906    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1222907    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1222908    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222909    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222910    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1222911    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222912    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222913    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1222914    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1222915    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1222916    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1222917    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1222918    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1222919    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1222920    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222921    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1222922    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1222923    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1222924    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222925    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222926    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1222927    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1222927  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1222928    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222929    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1222930    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1363 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222931    filename _pref
1222931  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1222932    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1222933    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1222934   +
1222935   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1222936   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1222936  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1222937   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1222938   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1222939   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1222940   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1222941   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1222942    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1222943    quit;
1222944    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1222945    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1222946    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1222947    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1222948    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1222949    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222950    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1222951    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222952    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222953    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1222954    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222955    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222956    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1222957    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1222958    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1222959    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222960    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1222961    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1222962    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1222963    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222964    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222965    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1222966    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1222967    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222968    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222969    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1222970    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1222970  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1222971    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222972    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1222973    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1402 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222974    filename _pref
1222974  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1222975    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1222976    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1222977   +
1222978   +
1222979   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1222980   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1222981   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1222982   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1222983   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1222984   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1222985   +
1222986   +
1222987   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1222988   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1222989   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1222990   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1222991   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1222992   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1222993   +
1222994   +
1222995   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1222996   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1222997   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1222998   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1222999   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1223000   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223001   +
1223002   +
1223003   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1223004   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1223005   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1223006   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1223007   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1223008   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223009   +
1223010   +
1223011   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1223012   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1223013   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1223014   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1223015   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1223016   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223017   +
1223018   +
1223019   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1223020   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1223021   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1223022   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1223023   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1223024   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223025   +
1223026   +
1223027   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1223028   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1223029   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1223030   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1223031   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1223032   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223033   +
1223034   +
1223035   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1223036   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1223037   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1223038   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1223039   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1223040   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223041   +if
1223042   +_FILTERNORM1 not in ( '.')
1223043   + and
1223044   +_FILTERNORM2 not in ( '.')
1223045   + and
1223046   +_FILTERNORM3 not in ( '.')
1223047   + and
1223048   +_FILTERNORM4 not in ( '.')
1223049   + and
1223050   +_FILTERNORM5 not in ( '.')
1223051   + and
1223052   +_FILTERNORM6 not in ( '.')
1223053   + and
1223054   +_FILTERNORM7 not in ( ' ')
1223055   + and
1223056   +_FILTERNORM8 not in ( ' ')
1223057   +and
1223058   +( Dt_Customer ne .)
1223059   +and ( Income ne . and (Income<=107000))
1223060   +and ( Kidhome ne .)
1223061   +and ( MntFishProducts ne .)
1223062   +and ( MntFruits ne .)
1223063   +and ( MntGoldProds ne .)
1223064   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1223065   +and ( MntSweetProducts ne .)
1223066   +and ( MntWines ne .)
1223067   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1223068   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1223069   +and ( NumStorePurchases ne .)
1223070   +and ( NumWebPurchases ne .)
1223071   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1223072   +and ( Recency ne .)
1223073   +and ( Teenhome ne .)
1223074   +and ( Year_Birth ne .)
1223075   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1223076   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1223077   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1223078   +end;
MPRINT(EM_DIAGRAM):   end;
1223079   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1223080   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1223081    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1223082    quit;
1223083    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1223084    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1223085    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1223086    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1223087    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1223088    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223089    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1223090    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223091    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223092    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1223093    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223094    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223095    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1223096    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1223097    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1223098    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223099    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1223100    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223101    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1223102    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223103    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223104    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1223105    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1223106    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223107    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223108    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1223109    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1223109  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1223110    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223111    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1223112    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1468 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223113    %macro varDept(fcmpdata=,id=);
1223114    %global nobs&id scoreFlag&id;
1223115    %let scoreFlag&id = 0;
1223116    %if &id=1 or ^&fcmpStart %then %do;
1223117    proc sort data=&fcmpdata out=_temp&id nodupkey;
1223118    by NAME;
1223119    where id=&id and LHS in( %let j=1;
1223120    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1223121    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1223122    "&var" %let j = %eval(&j+1);
1223123    %end;
1223124    );
1223125    run;
1223126    %let dsid = %sysfunc(open(_temp&id));
1223127    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1223128    %let dsid = %sysfunc(close(&dsid));
1223129    %if &&nobs&id %then %do;
1223130    %let scoreFlag&id = 1;
1223131    %let fcmpStart = 1;
1223132    %end;
1223133    %else %let fcmpStart = 0;
1223134    %end;
1223135    %else %do;
1223136    proc sort data=&fcmpdata out=_tempid;
1223137    where id=&id;
1223138    by LHS;
1223139    run;
1223140    %let dsid = %sysfunc(open(_tempid));
1223141    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1223142    %let dsid = %sysfunc(close(&dsid));
1223143    %if ^&&nobs&id %then %do;
1223144    proc datasets lib=work nolist;
1223145    delete _tempid;
1223146    run;
1223147    quit;
1223148    %end;
1223149    %else %do;
1223150    data _tempAll;
1223151    set %let j=%eval(&id-1);
1223152    %do x=1 %to &j;
1223153    %if &&nobs&x %then %do;
1223154    _temp&x %end;
1223155    %end;
1223156    ;
1223157    run;
1223158    proc sql;
1223159    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1223159  ! work._tempid p2 where p.name=p2.lhs;
1223160    quit;
1223161    data _temp&id;
1223162    set _temp&id;
1223163    where LHS ne '' and NAME ne '' and Node ne '';
1223164    run;
1223165    proc datasets lib=work nolist;
1223166    delete _tempAll;
1223167    run;
1223168    %let dsid = %sysfunc(open(_temp&id));
1223169    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1223170    %let dsid = %sysfunc(close(&dsid));
1223171    %if ^&&nobs&id %then %do;
1223172    proc datasets lib=work nolist;
1223173    delete _temp&id;
1223174    run;
1223175    quit;
1223176    %end;
1223177    %else %do;
1223178    %let scoreFlag&id = 1;
1223179    data _temp&id;
1223180    set _temp&id;
1223181    where LHS ne NAME and node ne '';
1223182    run;
1223183    %let dsid = %sysfunc(open(_temp&id));
1223184    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1223185    %let dsid = %sysfunc(close(&dsid));
1223186    %if ^&&nobs&id %then %do;
1223187    proc datasets lib=work nolist;
1223188    delete _temp&id;
1223189    run;
1223190    quit;
1223191    %end;
1223192    %else %do;
1223193    proc sort data=_temp&id nodupkey;
1223194    by LHS NAME;
1223195    run;
1223196    %end;
1223197    %end;
1223198    %end;
1223199    %end;
1223200    %mend varDept;
1223201    %macro optCode(outdata=fcmpdata);
1223202    %global fcmpStart;
1223203    %let fcmpStart = 0;
1223204    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1223205    %let NumNodes=9;
1223206    %do k=1 %to &NumNodes;
1223207    %vardept(fcmpdata=&outdata, id=&k);
1223208    %end;
1223209    %mend optCode;
1223210    %optcode(outData=EMWS8.Ensmbl47_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 140 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 104 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 36 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 79 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1223211    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1223212    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1223213    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1223214    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223215    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1223216    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1223217    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1223218    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223219    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1223220    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1223220  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1223221    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223222    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1223223    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1223224    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223225    filename _pref
1223225  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
1223226    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1223227    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
1223228   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1223229   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1223230   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1223231   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1223232   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1223233   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1223234   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1223235   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1223236   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1223237   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1223238   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1223239   +LENGTH _WARN_ $4
1223240   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1223241   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1223242   +
1223243   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1223244   +
1223245   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1223246   +
1223247   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1223248   +
1223249   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1223250   +
1223251   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1223252   +
1223253   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1223254   +
1223255   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1223256   +
1223257   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1223258   +
1223259   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1223260   +
1223261   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1223262   +
1223263   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1223264   +
1223265   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1223266   +
1223267   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1223268   +
1223269   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1223270   +
1223271   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1223272   +
1223273   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1223274   +
1223275   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1223276   +
1223277   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1223278   +
1223279   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1223280   +
1223281   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1223282   +
1223283   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1223284   +
1223285   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1223286   +
1223287   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1223288   +
1223289   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1223290   +
1223291   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1223292   +
1223293   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1223294   +
1223295   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1223296   +
1223297   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1223298   +
1223299   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1223300   +
1223301   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1223302   +
1223303   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1223304   +
1223305   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1223306   +
1223307   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1223308   +
1223309   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1223310   +
1223311   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1223312   +
1223313   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1223314   +
1223315   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1223316   +
1223317   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1223318   +
1223319   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1223320   +
1223321   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1223322   +
1223323   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1223324   +
1223325   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1223326   +
1223327   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1223328   +
1223329   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1223330   +
1223331   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1223332   +
1223333   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1223334   +
1223335   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1223336   +
1223337   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1223338   +
1223339   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1223340   +
1223341   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1223342   +
1223343   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
1223344   +
1223345   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1223346   +
1223347   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1223348   +
1223349   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1223350   +
1223351   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1223352   +
1223353   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1223354   +
1223355   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1223356   +
1223357   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
1223358   +
1223359   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1223360   +
1223361   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1223362   +
1223363   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1223364   +
1223365   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1223366   +
1223367   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1223368   +
1223369   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1223370   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1223371   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1223372   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1223373   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223374   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223375   +end;
MPRINT(EM_DIAGRAM):   end;
1223376   +else do;
MPRINT(EM_DIAGRAM):   else do;
1223377   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1223378   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1223379   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1223380   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1223381   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1223382   +   end;
MPRINT(EM_DIAGRAM):   end;
1223383   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1223384   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1223385   +   end;
MPRINT(EM_DIAGRAM):   end;
1223386   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1223387   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1223388   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1223389   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223390   +   end;
MPRINT(EM_DIAGRAM):   end;
1223391   +end;
MPRINT(EM_DIAGRAM):   end;
1223392   +
1223393   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1223394   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1223395   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1223396   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1223397   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223398   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223399   +end;
MPRINT(EM_DIAGRAM):   end;
1223400   +else do;
MPRINT(EM_DIAGRAM):   else do;
1223401   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1223402   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1223403   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1223404   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1223405   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1223406   +   end;
MPRINT(EM_DIAGRAM):   end;
1223407   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1223408   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1223409   +   end;
MPRINT(EM_DIAGRAM):   end;
1223410   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1223411   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1223412   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1223413   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223414   +   end;
MPRINT(EM_DIAGRAM):   end;
1223415   +end;
MPRINT(EM_DIAGRAM):   end;
1223416   +
1223417   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1223418   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1223419   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1223420   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1223421   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223422   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223423   +end;
MPRINT(EM_DIAGRAM):   end;
1223424   +else do;
MPRINT(EM_DIAGRAM):   else do;
1223425   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1223426   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1223427   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1223428   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1223429   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1223430   +   end;
MPRINT(EM_DIAGRAM):   end;
1223431   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1223432   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1223433   +   end;
MPRINT(EM_DIAGRAM):   end;
1223434   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1223435   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1223436   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1223437   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223438   +   end;
MPRINT(EM_DIAGRAM):   end;
1223439   +end;
MPRINT(EM_DIAGRAM):   end;
1223440   +
1223441   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1223442   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1223443   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1223444   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1223445   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223446   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223447   +end;
MPRINT(EM_DIAGRAM):   end;
1223448   +else do;
MPRINT(EM_DIAGRAM):   else do;
1223449   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1223450   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1223451   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1223452   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1223453   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1223454   +   end;
MPRINT(EM_DIAGRAM):   end;
1223455   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1223456   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1223457   +   end;
MPRINT(EM_DIAGRAM):   end;
1223458   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1223459   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1223460   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1223461   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223462   +   end;
MPRINT(EM_DIAGRAM):   end;
1223463   +end;
MPRINT(EM_DIAGRAM):   end;
1223464   +
1223465   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1223466   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1223467   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1223468   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1223469   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223470   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223471   +end;
MPRINT(EM_DIAGRAM):   end;
1223472   +else do;
MPRINT(EM_DIAGRAM):   else do;
1223473   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1223474   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1223475   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1223476   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1223477   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1223478   +   end;
MPRINT(EM_DIAGRAM):   end;
1223479   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1223480   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1223481   +   end;
MPRINT(EM_DIAGRAM):   end;
1223482   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1223483   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1223484   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1223485   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223486   +   end;
MPRINT(EM_DIAGRAM):   end;
1223487   +end;
MPRINT(EM_DIAGRAM):   end;
1223488   +
1223489   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1223490   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1223491   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1223492   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1223493   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223494   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223495   +end;
MPRINT(EM_DIAGRAM):   end;
1223496   +else do;
MPRINT(EM_DIAGRAM):   else do;
1223497   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1223498   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1223499   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1223500   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1223501   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1223502   +   end;
MPRINT(EM_DIAGRAM):   end;
1223503   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1223504   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1223505   +   end;
MPRINT(EM_DIAGRAM):   end;
1223506   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1223507   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1223508   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1223509   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223510   +   end;
MPRINT(EM_DIAGRAM):   end;
1223511   +end;
MPRINT(EM_DIAGRAM):   end;
1223512   +
1223513   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1223514   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1223515   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1223516   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1223517   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223518   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223519   +end;
MPRINT(EM_DIAGRAM):   end;
1223520   +else do;
MPRINT(EM_DIAGRAM):   else do;
1223521   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1223522   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1223523   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1223524   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1223525   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1223526   +   end;
MPRINT(EM_DIAGRAM):   end;
1223527   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1223528   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1223529   +   end;
MPRINT(EM_DIAGRAM):   end;
1223530   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1223531   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1223532   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1223533   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223534   +   end;
MPRINT(EM_DIAGRAM):   end;
1223535   +end;
MPRINT(EM_DIAGRAM):   end;
1223536   +
1223537   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1223538   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1223539   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1223540   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1223541   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1223542   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1223543   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1223544   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1223545   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1223546   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1223547   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1223548   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1223549   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223550   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223551   +end;
MPRINT(EM_DIAGRAM):   end;
1223552   +else do;
MPRINT(EM_DIAGRAM):   else do;
1223553   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1223554   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1223555   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1223556   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1223557   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1223558   +   end;
MPRINT(EM_DIAGRAM):   end;
1223559   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1223560   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1223561   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1223562   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1223563   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1223564   +   end;
MPRINT(EM_DIAGRAM):   end;
1223565   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1223566   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1223567   +   end;
MPRINT(EM_DIAGRAM):   end;
1223568   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1223569   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1223570   +   end;
MPRINT(EM_DIAGRAM):   end;
1223571   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1223572   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1223573   +   end;
MPRINT(EM_DIAGRAM):   end;
1223574   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1223575   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1223576   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1223577   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1223578   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1223579   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1223580   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223581   +   end;
MPRINT(EM_DIAGRAM):   end;
1223582   +end;
MPRINT(EM_DIAGRAM):   end;
1223583   +
1223584   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1223585   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1223586   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1223587   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1223588   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1223589   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1223590   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1223591   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1223592   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1223593   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1223594   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1223595   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1223596   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1223597   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223598   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223599   +end;
MPRINT(EM_DIAGRAM):   end;
1223600   +else do;
MPRINT(EM_DIAGRAM):   else do;
1223601   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1223602   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1223603   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1223604   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1223605   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1223606   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1223607   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1223608   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1223609   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1223610   +         end;
MPRINT(EM_DIAGRAM):   end;
1223611   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1223612   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1223613   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1223614   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1223615   +            end;
MPRINT(EM_DIAGRAM):   end;
1223616   +         end;
MPRINT(EM_DIAGRAM):   end;
1223617   +      end;
MPRINT(EM_DIAGRAM):   end;
1223618   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1223619   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1223620   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1223621   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1223622   +         end;
MPRINT(EM_DIAGRAM):   end;
1223623   +      end;
MPRINT(EM_DIAGRAM):   end;
1223624   +   end;
MPRINT(EM_DIAGRAM):   end;
1223625   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1223626   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1223627   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1223628   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1223629   +      end;
MPRINT(EM_DIAGRAM):   end;
1223630   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1223631   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1223632   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1223633   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1223634   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1223635   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1223636   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1223637   +         end;
MPRINT(EM_DIAGRAM):   end;
1223638   +      end;
MPRINT(EM_DIAGRAM):   end;
1223639   +   end;
MPRINT(EM_DIAGRAM):   end;
1223640   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1223641   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1223642   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1223643   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1223644   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1223645   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1223646   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223647   +   end;
MPRINT(EM_DIAGRAM):   end;
1223648   +end;
MPRINT(EM_DIAGRAM):   end;
1223649   +
1223650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1223651   +*** Checking missing input Interval
1223652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1223653   +
1223654   +IF NMISS(
1223655   +   AcceptedCmpTotal ,
1223656   +   Age ,
1223657   +   Frq ,
1223658   +   Income ,
1223659   +   Kidhome ,
1223660   +   Mnt ,
1223661   +   MntFishProducts ,
1223662   +   MntFruits ,
1223663   +   MntGoldProds ,
1223664   +   MntMeatProducts ,
1223665   +   MntSweetProducts ,
1223666   +   MntWines ,
1223667   +   MonthsAsCustomer ,
1223668   +   NumCatalogPurchases ,
1223669   +   NumDealsPurchases ,
1223670   +   NumDistPurchases ,
1223671   +   NumStorePurchases ,
1223672   +   NumWebPurchases ,
1223673   +   NumWebVisitsMonth ,
1223674   +   RFMstat ,
1223675   +   RMntFrq ,
1223676   +   Recency ,
1223677   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1223678   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1223679   +
1223680   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223681   +END;
MPRINT(EM_DIAGRAM):   END;
1223682   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1223683   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1223684   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1223685   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1223686   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1223687   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1223688   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1223689   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1223690   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1223691   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1223692   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1223693   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1223694   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1223695   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1223696   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1223697   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1223698   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1223699   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1223700   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1223701   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1223702   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1223703   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1223704   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1223705   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1223706   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1223707   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1223708   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1223709   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1223710   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1223711   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1223712   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1223713   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1223714   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1223715   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1223716   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1223717   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1223718   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1223719   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1223720   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1223721   +END;
MPRINT(EM_DIAGRAM):   END;
1223722   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1223723   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1223724   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1223725   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1223726   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1223727   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1223728   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1223729   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1223730   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1223731   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1223732   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1223733   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1223734   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1223735   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1223736   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1223737   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1223738   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1223739   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1223740   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1223741   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1223742   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1223743   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1223744   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1223745   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1223746   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1223747   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1223748   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1223749   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1223750   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1223751   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1223752   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1223753   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1223754   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1223755   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1223756   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1223757   +   ELSE S_NumCatalogPurchases
1223758   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1223759   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1223760   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1223761   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1223762   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1223763   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1223764   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1223765   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1223766   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1223767   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1223768   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1223769   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1223770   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1223771   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1223772   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1223773   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1223774   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1223775   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1223776   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1223777   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1223778   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1223779   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1223780   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1223781   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1223782   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1223783   +END;
MPRINT(EM_DIAGRAM):   END;
1223784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1223785   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1223786   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1223787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1223788   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1223789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1223790   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1223791   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1223792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1223793   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1223794   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
1223795   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
1223796   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
1223797   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
1223798   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
1223799   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
1223800   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
1223801   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
1223802   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
1223803   +          +     1.17276395296242 * S_NumDealsPurchases
1223804   +          +     0.26632768295477 * S_NumDistPurchases
1223805   +          +    -1.26575615903579 * S_NumStorePurchases
1223806   +          +    -0.95316107557927 * S_NumWebPurchases
1223807   +          +     1.01828574356487 * S_NumWebVisitsMonth
1223808   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
1223809   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
1223810   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
1223811   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
1223812   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
1223813   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
1223814   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
1223815   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
1223816   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
1223817   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
1223818   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
1223819   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
1223820   +          +     1.14485571201233 * S_NumDealsPurchases
1223821   +          +     0.21414266588987 * S_NumDistPurchases
1223822   +          +    -0.10530090074297 * S_NumStorePurchases
1223823   +          +    -0.41712321238458 * S_NumWebPurchases
1223824   +          +    -0.99760766791108 * S_NumWebVisitsMonth
1223825   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
1223826   +        S_RMntFrq  +     1.10040128548883 * S_Recency
1223827   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
1223828   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
1223829   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
1223830   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
1223831   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
1223832   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
1223833   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
1223834   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
1223835   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
1223836   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
1223837   +          +      0.7196418967437 * S_NumDealsPurchases
1223838   +          +     0.69035286374177 * S_NumDistPurchases
1223839   +          +     0.38027656631135 * S_NumStorePurchases
1223840   +          +    -0.18878358997924 * S_NumWebPurchases
1223841   +          +     1.61962062004798 * S_NumWebVisitsMonth
1223842   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
1223843   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
1223844   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
1223845   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
1223846   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
1223847   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
1223848   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
1223849   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
1223850   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
1223851   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
1223852   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
1223853   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
1223854   +          +    -0.00642902007204 * S_NumDealsPurchases
1223855   +          +     0.29785069480367 * S_NumDistPurchases
1223856   +          +    -0.42243322063147 * S_NumStorePurchases
1223857   +          +     0.54880896338383 * S_NumWebPurchases
1223858   +          +    -0.12525846016886 * S_NumWebVisitsMonth
1223859   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
1223860   +        S_RMntFrq  +     0.10252211581449 * S_Recency
1223861   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
1223862   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
1223863   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
1223864   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
1223865   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
1223866   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
1223867   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
1223868   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
1223869   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
1223870   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
1223871   +          +    -0.48404738328225 * S_NumDealsPurchases
1223872   +          +    -0.02464180457879 * S_NumDistPurchases
1223873   +          +     1.17201831082067 * S_NumStorePurchases
1223874   +          +     0.57453655167516 * S_NumWebPurchases
1223875   +          +    -1.94417019790248 * S_NumWebVisitsMonth
1223876   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
1223877   +        S_RMntFrq  +      1.6169916658132 * S_Recency
1223878   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
1223879   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
1223880   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
1223881   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
1223882   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
1223883   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
1223884   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
1223885   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
1223886   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
1223887   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
1223888   +          +    -1.49850531967483 * S_NumDealsPurchases
1223889   +          +    -0.82105466264223 * S_NumDistPurchases
1223890   +          +     0.29984603642824 * S_NumStorePurchases
1223891   +          +     0.06557123721611 * S_NumWebPurchases
1223892   +          +     1.04754749365002 * S_NumWebVisitsMonth
1223893   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
1223894   +        S_RMntFrq  +     0.12396789666359 * S_Recency
1223895   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
1223896   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
1223897   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
1223898   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
1223899   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
1223900   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
1223901   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
1223902   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
1223903   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
1223904   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
1223905   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
1223906   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
1223907   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
1223908   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
1223909   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
1223910   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
1223911   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
1223912   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
1223913   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
1223914   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
1223915   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
1223916   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
1223917   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
1223918   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
1223919   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
1223920   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
1223921   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
1223922   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
1223923   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
1223924   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
1223925   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
1223926   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
1223927   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
1223928   +        EducationGraduation  +     0.07595631354847 * EducationMaster
1223929   +          +     0.24583509957712 * Marital_StatusDivorced
1223930   +          +    -0.22681931588361 * Marital_StatusMarried
1223931   +          +    -0.12924106229536 * Marital_StatusSingle
1223932   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
1223933   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
1223934   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
1223935   +        EducationGraduation  +     0.23015089246655 * EducationMaster
1223936   +          +    -0.12585334311068 * Marital_StatusDivorced
1223937   +          +    -0.20835502467207 * Marital_StatusMarried
1223938   +          +    -0.13839534449368 * Marital_StatusSingle
1223939   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
1223940   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
1223941   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
1223942   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
1223943   +          +     0.35106363238113 * Marital_StatusDivorced
1223944   +          +     -1.3414808583918 * Marital_StatusMarried
1223945   +          +     1.40835320798486 * Marital_StatusSingle
1223946   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
1223947   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
1223948   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
1223949   +        EducationGraduation  +      0.1746658332011 * EducationMaster
1223950   +          +     0.48174546958393 * Marital_StatusDivorced
1223951   +          +    -0.41416978858191 * Marital_StatusMarried
1223952   +          +    -0.23376801546265 * Marital_StatusSingle
1223953   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
1223954   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
1223955   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
1223956   +        EducationGraduation  +     0.68875064631577 * EducationMaster
1223957   +          +    -0.67557643774246 * Marital_StatusDivorced
1223958   +          +     1.63844045917367 * Marital_StatusMarried
1223959   +          +    -0.70320960247699 * Marital_StatusSingle
1223960   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
1223961   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
1223962   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
1223963   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
1223964   +          +    -0.11371453086883 * Marital_StatusDivorced
1223965   +          +    -0.34226997176291 * Marital_StatusMarried
1223966   +          +    -1.01568676685754 * Marital_StatusSingle
1223967   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
1223968   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
1223969   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
1223970   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
1223971   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
1223972   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
1223973   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
1223974   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
1223975   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
1223976   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
1223977   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1223978   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1223979   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1223980   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1223981   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1223982   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1223983   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1223984   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1223985   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1223986   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1223987   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1223988   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1223989   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1223990   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
1223991   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
1223992   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1223993   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1223994   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1223995   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1223996   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1223997   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1223998   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
1223999   +END;
MPRINT(EM_DIAGRAM):   END;
1224000   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1224001   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1224002   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1224003   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1224004   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1224005   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1224006   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1224007   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1224008   +END;
MPRINT(EM_DIAGRAM):   END;
1224009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1224010   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1224011   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1224012   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1224013   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
1224014   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
1224015   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
1224016   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
1224017   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
1224018   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
1224019   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
1224020   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
1224021   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
1224022   +          +    -0.87259051567474 * S_NumDealsPurchases
1224023   +          +    -0.36454149529139 * S_NumDistPurchases
1224024   +          +     0.12447759925061 * S_NumStorePurchases
1224025   +          +    -1.08133487947367 * S_NumWebPurchases
1224026   +          +    -0.49882157745454 * S_NumWebVisitsMonth
1224027   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
1224028   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
1224029   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
1224030   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
1224031   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
1224032   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
1224033   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
1224034   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
1224035   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
1224036   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
1224037   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
1224038   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
1224039   +          +     2.23121497416403 * S_NumDealsPurchases
1224040   +          +    -0.48674842191071 * S_NumDistPurchases
1224041   +          +     1.77510728607544 * S_NumStorePurchases
1224042   +          +     0.14647433155436 * S_NumWebPurchases
1224043   +          +    -0.95892686924419 * S_NumWebVisitsMonth
1224044   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
1224045   +        S_RMntFrq  +     2.46497777428475 * S_Recency
1224046   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
1224047   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
1224048   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
1224049   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
1224050   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
1224051   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
1224052   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
1224053   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
1224054   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
1224055   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
1224056   +          +     0.14338855349611 * S_NumDealsPurchases
1224057   +          +    -2.21071010829235 * S_NumDistPurchases
1224058   +          +    -0.21795889348002 * S_NumStorePurchases
1224059   +          +     1.98825087883535 * S_NumWebPurchases
1224060   +          +     1.02482442531149 * S_NumWebVisitsMonth
1224061   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
1224062   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
1224063   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
1224064   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
1224065   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
1224066   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
1224067   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
1224068   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
1224069   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
1224070   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
1224071   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
1224072   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
1224073   +          +     0.30041205661012 * S_NumDealsPurchases
1224074   +          +    -0.63499849986918 * S_NumDistPurchases
1224075   +          +    -0.34155713433714 * S_NumStorePurchases
1224076   +          +    -1.14183354933936 * S_NumWebPurchases
1224077   +          +    -0.42681980262973 * S_NumWebVisitsMonth
1224078   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
1224079   +        S_RMntFrq  +     1.25852246467612 * S_Recency
1224080   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
1224081   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
1224082   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
1224083   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
1224084   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
1224085   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
1224086   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
1224087   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
1224088   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
1224089   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
1224090   +          +    -0.21237915559831 * S_NumDealsPurchases
1224091   +          +     0.48256923764182 * S_NumDistPurchases
1224092   +          +    -0.45553093140641 * S_NumStorePurchases
1224093   +          +      0.5593655963659 * S_NumWebPurchases
1224094   +          +     0.27943768691188 * S_NumWebVisitsMonth
1224095   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
1224096   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
1224097   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
1224098   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
1224099   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
1224100   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
1224101   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
1224102   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
1224103   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
1224104   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
1224105   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
1224106   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
1224107   +          +     2.38967021388062 * S_NumDealsPurchases
1224108   +          +    -0.97722398866481 * S_NumDistPurchases
1224109   +          +     1.57612333191312 * S_NumStorePurchases
1224110   +          +    -0.75968679115983 * S_NumWebPurchases
1224111   +          +    -0.64207187757251 * S_NumWebVisitsMonth
1224112   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
1224113   +        S_RMntFrq  +     1.71313869798331 * S_Recency
1224114   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
1224115   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
1224116   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
1224117   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
1224118   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
1224119   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
1224120   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
1224121   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
1224122   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
1224123   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
1224124   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
1224125   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
1224126   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
1224127   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
1224128   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
1224129   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
1224130   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
1224131   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
1224132   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
1224133   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
1224134   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
1224135   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
1224136   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
1224137   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
1224138   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
1224139   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
1224140   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
1224141   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
1224142   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
1224143   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
1224144   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
1224145   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
1224146   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
1224147   +        EducationGraduation  +      0.1073450284316 * EducationMaster
1224148   +          +     0.96470902298142 * Marital_StatusDivorced
1224149   +          +     0.94805959268314 * Marital_StatusMarried
1224150   +          +     -0.6523948769616 * Marital_StatusSingle
1224151   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
1224152   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
1224153   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
1224154   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
1224155   +          +      0.3918249505531 * Marital_StatusDivorced
1224156   +          +    -0.00968091979586 * Marital_StatusMarried
1224157   +          +     0.84615379885071 * Marital_StatusSingle
1224158   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
1224159   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
1224160   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
1224161   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
1224162   +          +     1.14335160313191 * Marital_StatusDivorced
1224163   +          +     0.50580517192175 * Marital_StatusMarried
1224164   +          +     0.17264295020921 * Marital_StatusSingle
1224165   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
1224166   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
1224167   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
1224168   +        EducationGraduation  +     1.95818378342783 * EducationMaster
1224169   +          +    -0.11238504444225 * Marital_StatusDivorced
1224170   +          +    -0.81348274043749 * Marital_StatusMarried
1224171   +          +     0.46075415610001 * Marital_StatusSingle
1224172   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
1224173   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
1224174   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
1224175   +        EducationGraduation  +     0.08396135672504 * EducationMaster
1224176   +          +    -0.46342068701431 * Marital_StatusDivorced
1224177   +          +    -0.41667845270204 * Marital_StatusMarried
1224178   +          +    -0.47166707496281 * Marital_StatusSingle
1224179   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
1224180   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
1224181   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
1224182   +        EducationGraduation  +     0.36656103863186 * EducationMaster
1224183   +          +    -0.45376613787812 * Marital_StatusDivorced
1224184   +          +     0.01337046049801 * Marital_StatusMarried
1224185   +          +    -0.92811489484121 * Marital_StatusSingle
1224186   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
1224187   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
1224188   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
1224189   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
1224190   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
1224191   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
1224192   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
1224193   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
1224194   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
1224195   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
1224196   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1224197   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1224198   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1224199   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1224200   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1224201   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1224202   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1224203   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1224204   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1224205   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1224206   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1224207   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1224208   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1224209   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
1224210   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
1224211   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1224212   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1224213   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1224214   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1224215   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1224216   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1224217   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
1224218   +END;
MPRINT(EM_DIAGRAM):   END;
1224219   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1224220   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1224221   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1224222   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1224223   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1224224   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1224225   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1224226   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
1224227   +END;
MPRINT(EM_DIAGRAM):   END;
1224228   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1224229   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1224230   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1224231   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1224232   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
1224233   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
1224234   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
1224235   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
1224236   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
1224237   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
1224238   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
1224239   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
1224240   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
1224241   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
1224242   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
1224243   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
1224244   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
1224245   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
1224246   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
1224247   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
1224248   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
1224249   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
1224250   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
1224251   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
1224252   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
1224253   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
1224254   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
1224255   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
1224256   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
1224257   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
1224258   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
1224259   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
1224260   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
1224261   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
1224262   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
1224263   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
1224264   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
1224265   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
1224266   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
1224267   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
1224268   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
1224269   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
1224270   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
1224271   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
1224272   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
1224273   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
1224274   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
1224275   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
1224276   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
1224277   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
1224278   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
1224279   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
1224280   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
1224281   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
1224282   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
1224283   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
1224284   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
1224285   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
1224286   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
1224287   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
1224288   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
1224289   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1224290   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1224291   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1224292   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1224293   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1224294   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1224295   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1224296   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1224297   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1224298   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1224299   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1224300   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1224301   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1224302   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
1224303   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
1224304   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1224305   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1224306   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1224307   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1224308   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1224309   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1224310   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
1224311   +END;
MPRINT(EM_DIAGRAM):   END;
1224312   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1224313   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1224314   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1224315   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1224316   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1224317   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1224318   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1224319   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
1224320   +END;
MPRINT(EM_DIAGRAM):   END;
1224321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1224322   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1224323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1224324   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1224325   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
1224326   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
1224327   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
1224328   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
1224329   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
1224330   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1224331   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1224332   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1224333   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1224334   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1224335   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1224336   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1224337   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1224338   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1224339   +END;
MPRINT(EM_DIAGRAM):   END;
1224340   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1224341   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1224342   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1224343   +END;
MPRINT(EM_DIAGRAM):   END;
1224344   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1224345   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1224346   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1224347   +END;
MPRINT(EM_DIAGRAM):   END;
1224348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1224349   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1224350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1224351   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1224352   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1224353   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1224354   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1224355   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1224356   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1224357   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1224358   +END;
MPRINT(EM_DIAGRAM):   END;
1224359   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1224360   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1224361   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1224362   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1224363    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1224364    quit;
1224365    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1224366    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1224367    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1224368    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
1224369    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1224370    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224371    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1224372    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224373    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1224374    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME 
CREATOR);
1224375    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224376    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224377    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1224378    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1224379    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1224380    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224381    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
1224382    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1224383    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1224384    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224385    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1224386    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1224387    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1224388    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224389    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 74 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224390    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1224391    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1224391  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3727 rows and 5 columns.

1224392    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1224393    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1224394    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3727 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 3727 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224395    filename _pref
1224395  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1224396    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1224397    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1224398   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1224399   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1224400   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1224401   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1224402   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1224403   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1224404    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1224405    quit;
1224406    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1224407    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1224408    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1224409    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1224410    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1224411    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224412    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1224413    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224414    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224415    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1224416    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224417    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1224418    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1224419    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1224420    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1224421    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224422    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1224423    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1224424    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1224425    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224426    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224427    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1224428    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1224429    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224430    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224431    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1224432    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1224432  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1224433    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224434    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1224435    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 3731 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1224436    filename _pref
1224436  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1224437    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1224438    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1224439   +
1224440   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1224441   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1224441  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1224442   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1224443   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1224444   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1224445   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1224446   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1224447    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1224448    quit;
1224449    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1224450    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1224451    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1224452    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1224453    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1224454    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1224455    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1224456    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224457    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224458    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1224459    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224460    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224461    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1224462    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1224463    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1224464    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224465    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1224466    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224467    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1224468    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224469    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224470    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1224471    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1224472    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224473    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224474    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1224475    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1224475  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1224476    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1224477    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1224478    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 3770 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224479    filename _pref
1224479  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1224480    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1224481    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1224482   +
1224483   +
1224484   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1224485   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1224486   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1224487   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1224488   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1224489   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1224490   +
1224491   +
1224492   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1224493   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1224494   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1224495   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1224496   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1224497   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1224498   +
1224499   +
1224500   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1224501   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1224502   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1224503   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1224504   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1224505   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1224506   +
1224507   +
1224508   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1224509   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1224510   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1224511   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1224512   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1224513   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1224514   +
1224515   +
1224516   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1224517   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1224518   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1224519   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1224520   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1224521   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1224522   +
1224523   +
1224524   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1224525   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1224526   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1224527   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1224528   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1224529   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1224530   +
1224531   +
1224532   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1224533   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1224534   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1224535   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1224536   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1224537   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1224538   +
1224539   +
1224540   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1224541   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1224542   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1224543   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1224544   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1224545   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1224546   +if
1224547   +_FILTERNORM1 not in ( '.')
1224548   + and
1224549   +_FILTERNORM2 not in ( '.')
1224550   + and
1224551   +_FILTERNORM3 not in ( '.')
1224552   + and
1224553   +_FILTERNORM4 not in ( '.')
1224554   + and
1224555   +_FILTERNORM5 not in ( '.')
1224556   + and
1224557   +_FILTERNORM6 not in ( '.')
1224558   + and
1224559   +_FILTERNORM7 not in ( ' ')
1224560   + and
1224561   +_FILTERNORM8 not in ( ' ')
1224562   +and
1224563   +( Dt_Customer ne .)
1224564   +and ( Income ne . and (Income<=107000))
1224565   +and ( Kidhome ne .)
1224566   +and ( MntFishProducts ne .)
1224567   +and ( MntFruits ne .)
1224568   +and ( MntGoldProds ne .)
1224569   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1224570   +and ( MntSweetProducts ne .)
1224571   +and ( MntWines ne .)
1224572   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1224573   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1224574   +and ( NumStorePurchases ne .)
1224575   +and ( NumWebPurchases ne .)
1224576   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1224577   +and ( Recency ne .)
1224578   +and ( Teenhome ne .)
1224579   +and ( Year_Birth ne .)
1224580   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1224581   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1224582   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1224583   +end;
MPRINT(EM_DIAGRAM):   end;
1224584   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1224585   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1224586    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1224587    quit;
1224588    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1224589    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1224590    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1224591    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1224592    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1224593    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224594    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1224595    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224596    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224597    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1224598    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224599    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224600    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1224601    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1224602    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1224603    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224604    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1224605    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1224606    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1224607    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224608    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224609    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1224610    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1224611    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224612    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224613    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1224614    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1224614  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1224615    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1224616    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1224617    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 3836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224618    %macro varDept(fcmpdata=,id=);
1224619    %global nobs&id scoreFlag&id;
1224620    %let scoreFlag&id = 0;
1224621    %if &id=1 or ^&fcmpStart %then %do;
1224622    proc sort data=&fcmpdata out=_temp&id nodupkey;
1224623    by NAME;
1224624    where id=&id and LHS in( %let j=1;
1224625    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1224626    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1224627    "&var" %let j = %eval(&j+1);
1224628    %end;
1224629    );
1224630    run;
1224631    %let dsid = %sysfunc(open(_temp&id));
1224632    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1224633    %let dsid = %sysfunc(close(&dsid));
1224634    %if &&nobs&id %then %do;
1224635    %let scoreFlag&id = 1;
1224636    %let fcmpStart = 1;
1224637    %end;
1224638    %else %let fcmpStart = 0;
1224639    %end;
1224640    %else %do;
1224641    proc sort data=&fcmpdata out=_tempid;
1224642    where id=&id;
1224643    by LHS;
1224644    run;
1224645    %let dsid = %sysfunc(open(_tempid));
1224646    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1224647    %let dsid = %sysfunc(close(&dsid));
1224648    %if ^&&nobs&id %then %do;
1224649    proc datasets lib=work nolist;
1224650    delete _tempid;
1224651    run;
1224652    quit;
1224653    %end;
1224654    %else %do;
1224655    data _tempAll;
1224656    set %let j=%eval(&id-1);
1224657    %do x=1 %to &j;
1224658    %if &&nobs&x %then %do;
1224659    _temp&x %end;
1224660    %end;
1224661    ;
1224662    run;
1224663    proc sql;
1224664    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1224664  ! work._tempid p2 where p.name=p2.lhs;
1224665    quit;
1224666    data _temp&id;
1224667    set _temp&id;
1224668    where LHS ne '' and NAME ne '' and Node ne '';
1224669    run;
1224670    proc datasets lib=work nolist;
1224671    delete _tempAll;
1224672    run;
1224673    %let dsid = %sysfunc(open(_temp&id));
1224674    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1224675    %let dsid = %sysfunc(close(&dsid));
1224676    %if ^&&nobs&id %then %do;
1224677    proc datasets lib=work nolist;
1224678    delete _temp&id;
1224679    run;
1224680    quit;
1224681    %end;
1224682    %else %do;
1224683    %let scoreFlag&id = 1;
1224684    data _temp&id;
1224685    set _temp&id;
1224686    where LHS ne NAME and node ne '';
1224687    run;
1224688    %let dsid = %sysfunc(open(_temp&id));
1224689    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1224690    %let dsid = %sysfunc(close(&dsid));
1224691    %if ^&&nobs&id %then %do;
1224692    proc datasets lib=work nolist;
1224693    delete _temp&id;
1224694    run;
1224695    quit;
1224696    %end;
1224697    %else %do;
1224698    proc sort data=_temp&id nodupkey;
1224699    by LHS NAME;
1224700    run;
1224701    %end;
1224702    %end;
1224703    %end;
1224704    %end;
1224705    %mend varDept;
1224706    %macro optCode(outdata=fcmpdata);
1224707    %global fcmpStart;
1224708    %let fcmpStart = 0;
1224709    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1224710    %let NumNodes=9;
1224711    %do k=1 %to &NumNodes;
1224712    %vardept(fcmpdata=&outdata, id=&k);
1224713    %end;
1224714    %mend optCode;
1224715    %optcode(outData=EMWS8.Ensmbl47_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 197 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 142 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 55 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 55 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 59 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 98 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1224716    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1224717    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1224718    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1224719    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224720    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1224721    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1224722    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1224723    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224724    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1224725    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1224725  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1224726    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1224727    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1224728    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1224729    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224730    filename _pref
1224730  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
1224731    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1224732    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
1224733   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1224734   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1224735   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1224736   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1224737   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1224738   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1224739   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1224740   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1224741   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1224742   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1224743   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1224744   +LENGTH _WARN_ $4
1224745   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1224746   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1224747   +
1224748   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1224749   +
1224750   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1224751   +
1224752   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1224753   +
1224754   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1224755   +
1224756   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1224757   +
1224758   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1224759   +
1224760   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1224761   +
1224762   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1224763   +
1224764   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1224765   +
1224766   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1224767   +
1224768   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1224769   +
1224770   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1224771   +
1224772   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1224773   +
1224774   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1224775   +
1224776   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1224777   +
1224778   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1224779   +
1224780   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1224781   +
1224782   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1224783   +
1224784   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1224785   +
1224786   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1224787   +
1224788   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1224789   +
1224790   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1224791   +
1224792   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1224793   +
1224794   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1224795   +
1224796   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1224797   +
1224798   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1224799   +
1224800   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1224801   +
1224802   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1224803   +
1224804   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1224805   +
1224806   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1224807   +
1224808   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1224809   +
1224810   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1224811   +
1224812   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1224813   +
1224814   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1224815   +
1224816   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1224817   +
1224818   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1224819   +
1224820   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1224821   +
1224822   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1224823   +
1224824   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1224825   +
1224826   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1224827   +
1224828   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1224829   +
1224830   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1224831   +
1224832   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1224833   +
1224834   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1224835   +
1224836   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1224837   +
1224838   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1224839   +
1224840   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1224841   +
1224842   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1224843   +
1224844   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1224845   +
1224846   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1224847   +
1224848   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1224849   +
1224850   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1224851   +
1224852   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1224853   +
1224854   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1224855   +
1224856   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1224857   +
1224858   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1224859   +
1224860   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1224861   +
1224862   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1224863   +
1224864   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1224865   +
1224866   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1224867   +
1224868   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1224869   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1224870   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1224871   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1224872   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224873   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224874   +end;
MPRINT(EM_DIAGRAM):   end;
1224875   +else do;
MPRINT(EM_DIAGRAM):   else do;
1224876   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1224877   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1224878   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1224879   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1224880   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1224881   +   end;
MPRINT(EM_DIAGRAM):   end;
1224882   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1224883   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1224884   +   end;
MPRINT(EM_DIAGRAM):   end;
1224885   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1224886   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1224887   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1224888   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224889   +   end;
MPRINT(EM_DIAGRAM):   end;
1224890   +end;
MPRINT(EM_DIAGRAM):   end;
1224891   +
1224892   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1224893   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1224894   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1224895   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1224896   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224897   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224898   +end;
MPRINT(EM_DIAGRAM):   end;
1224899   +else do;
MPRINT(EM_DIAGRAM):   else do;
1224900   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1224901   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1224902   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1224903   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1224904   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1224905   +   end;
MPRINT(EM_DIAGRAM):   end;
1224906   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1224907   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1224908   +   end;
MPRINT(EM_DIAGRAM):   end;
1224909   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1224910   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1224911   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1224912   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224913   +   end;
MPRINT(EM_DIAGRAM):   end;
1224914   +end;
MPRINT(EM_DIAGRAM):   end;
1224915   +
1224916   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1224917   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1224918   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1224919   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1224920   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224921   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224922   +end;
MPRINT(EM_DIAGRAM):   end;
1224923   +else do;
MPRINT(EM_DIAGRAM):   else do;
1224924   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1224925   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1224926   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1224927   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1224928   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1224929   +   end;
MPRINT(EM_DIAGRAM):   end;
1224930   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1224931   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1224932   +   end;
MPRINT(EM_DIAGRAM):   end;
1224933   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1224934   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1224935   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1224936   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224937   +   end;
MPRINT(EM_DIAGRAM):   end;
1224938   +end;
MPRINT(EM_DIAGRAM):   end;
1224939   +
1224940   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1224941   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1224942   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1224943   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1224944   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224945   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224946   +end;
MPRINT(EM_DIAGRAM):   end;
1224947   +else do;
MPRINT(EM_DIAGRAM):   else do;
1224948   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1224949   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1224950   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1224951   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1224952   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1224953   +   end;
MPRINT(EM_DIAGRAM):   end;
1224954   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1224955   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1224956   +   end;
MPRINT(EM_DIAGRAM):   end;
1224957   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1224958   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1224959   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1224960   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224961   +   end;
MPRINT(EM_DIAGRAM):   end;
1224962   +end;
MPRINT(EM_DIAGRAM):   end;
1224963   +
1224964   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1224965   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1224966   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1224967   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
The SAS System

1224968   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224969   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224970   +end;
MPRINT(EM_DIAGRAM):   end;
1224971   +else do;
MPRINT(EM_DIAGRAM):   else do;
1224972   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1224973   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1224974   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1224975   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1224976   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1224977   +   end;
MPRINT(EM_DIAGRAM):   end;
1224978   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1224979   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1224980   +   end;
MPRINT(EM_DIAGRAM):   end;
1224981   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1224982   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1224983   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1224984   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224985   +   end;
MPRINT(EM_DIAGRAM):   end;
1224986   +end;
MPRINT(EM_DIAGRAM):   end;
1224987   +
1224988   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1224989   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1224990   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1224991   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1224992   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224993   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224994   +end;
MPRINT(EM_DIAGRAM):   end;
1224995   +else do;
MPRINT(EM_DIAGRAM):   else do;
1224996   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1224997   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1224998   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1224999   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1225000   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1225001   +   end;
MPRINT(EM_DIAGRAM):   end;
1225002   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1225003   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1225004   +   end;
MPRINT(EM_DIAGRAM):   end;
1225005   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1225006   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1225007   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1225008   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1225009   +   end;
MPRINT(EM_DIAGRAM):   end;
1225010   +end;
MPRINT(EM_DIAGRAM):   end;
1225011   +
1225012   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1225013   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1225014   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1225015   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1225016   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1225017   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1225018   +end;
MPRINT(EM_DIAGRAM):   end;
1225019   +else do;
MPRINT(EM_DIAGRAM):   else do;
1225020   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1225021   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1225022   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1225023   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1225024   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1225025   +   end;
MPRINT(EM_DIAGRAM):   end;
1225026   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1225027   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1225028   +   end;
MPRINT(EM_DIAGRAM):   end;
1225029   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1225030   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1225031   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1225032   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1225033   +   end;
MPRINT(EM_DIAGRAM):   end;
1225034   +end;
MPRINT(EM_DIAGRAM):   end;
1225035   +
1225036   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1225037   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1225038   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1225039   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1225040   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1225041   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1225042   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1225043   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1225044   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1225045   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1225046   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1225047   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1225048   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1225049   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1225050   +end;
MPRINT(EM_DIAGRAM):   end;
1225051   +else do;
MPRINT(EM_DIAGRAM):   else do;
1225052   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1225053   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1225054   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1225055   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1225056   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1225057   +   end;
MPRINT(EM_DIAGRAM):   end;
1225058   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1225059   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1225060   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1225061   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1225062   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1225063   +   end;
MPRINT(EM_DIAGRAM):   end;
1225064   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1225065   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1225066   +   end;
MPRINT(EM_DIAGRAM):   end;
1225067   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1225068   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1225069   +   end;
MPRINT(EM_DIAGRAM):   end;
1225070   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1225071   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1225072   +   end;
MPRINT(EM_DIAGRAM):   end;
1225073   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1225074   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1225075   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1225076   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1225077   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1225078   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1225079   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1225080   +   end;
MPRINT(EM_DIAGRAM):   end;
1225081   +end;
MPRINT(EM_DIAGRAM):   end;
1225082   +
1225083   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1225084   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1225085   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1225086   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1225087   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1225088   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1225089   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1225090   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1225091   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1225092   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1225093   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1225094   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1225095   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1225096   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1225097   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1225098   +end;
MPRINT(EM_DIAGRAM):   end;
1225099   +else do;
MPRINT(EM_DIAGRAM):   else do;
1225100   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1225101   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1225102   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1225103   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1225104   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1225105   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1225106   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1225107   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1225108   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1225109   +         end;
MPRINT(EM_DIAGRAM):   end;
1225110   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1225111   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1225112   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1225113   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1225114   +            end;
MPRINT(EM_DIAGRAM):   end;
1225115   +         end;
MPRINT(EM_DIAGRAM):   end;
1225116   +      end;
MPRINT(EM_DIAGRAM):   end;
1225117   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1225118   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1225119   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1225120   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1225121   +         end;
MPRINT(EM_DIAGRAM):   end;
1225122   +      end;
MPRINT(EM_DIAGRAM):   end;
1225123   +   end;
MPRINT(EM_DIAGRAM):   end;
1225124   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1225125   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1225126   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1225127   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1225128   +      end;
MPRINT(EM_DIAGRAM):   end;
1225129   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1225130   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1225131   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1225132   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1225133   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1225134   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1225135   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1225136   +         end;
MPRINT(EM_DIAGRAM):   end;
1225137   +      end;
MPRINT(EM_DIAGRAM):   end;
1225138   +   end;
MPRINT(EM_DIAGRAM):   end;
1225139   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1225140   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1225141   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1225142   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1225143   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1225144   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1225145   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1225146   +   end;
MPRINT(EM_DIAGRAM):   end;
1225147   +end;
MPRINT(EM_DIAGRAM):   end;
1225148   +
1225149   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1225150   +*** Checking missing input Interval
1225151   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1225152   +
1225153   +IF NMISS(
1225154   +   AcceptedCmpTotal ,
1225155   +   Age ,
1225156   +   Frq ,
1225157   +   Income ,
1225158   +   Kidhome ,
1225159   +   Mnt ,
1225160   +   MntFishProducts ,
1225161   +   MntFruits ,
1225162   +   MntGoldProds ,
1225163   +   MntMeatProducts ,
1225164   +   MntSweetProducts ,
1225165   +   MntWines ,
1225166   +   MonthsAsCustomer ,
1225167   +   NumCatalogPurchases ,
1225168   +   NumDealsPurchases ,
1225169   +   NumDistPurchases ,
1225170   +   NumStorePurchases ,
1225171   +   NumWebPurchases ,
1225172   +   NumWebVisitsMonth ,
1225173   +   RFMstat ,
1225174   +   RMntFrq ,
1225175   +   Recency ,
1225176   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1225177   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1225178   +
1225179   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1225180   +END;
MPRINT(EM_DIAGRAM):   END;
1225181   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1225182   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1225183   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1225184   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1225185   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1225186   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1225187   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1225188   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1225189   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1225190   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1225191   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1225192   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1225193   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1225194   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1225195   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1225196   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1225197   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1225198   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1225199   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1225200   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1225201   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1225202   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1225203   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1225204   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1225205   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1225206   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1225207   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1225208   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1225209   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1225210   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1225211   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1225212   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1225213   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1225214   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1225215   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1225216   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1225217   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1225218   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1225219   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1225220   +END;
MPRINT(EM_DIAGRAM):   END;
1225221   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1225222   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1225223   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1225224   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1225225   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1225226   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1225227   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1225228   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1225229   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1225230   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1225231   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1225232   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1225233   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1225234   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1225235   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1225236   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1225237   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1225238   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1225239   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1225240   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1225241   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1225242   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1225243   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1225244   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1225245   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1225246   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1225247   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1225248   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1225249   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1225250   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1225251   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1225252   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1225253   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1225254   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1225255   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1225256   +   ELSE S_NumCatalogPurchases
1225257   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1225258   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1225259   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1225260   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1225261   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1225262   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1225263   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1225264   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1225265   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1225266   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1225267   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1225268   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1225269   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1225270   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1225271   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1225272   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1225273   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1225274   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1225275   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1225276   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1225277   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1225278   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1225279   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1225280   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1225281   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1225282   +END;
MPRINT(EM_DIAGRAM):   END;
1225283   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1225284   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1225285   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1225286   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1225287   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1225288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1225289   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1225290   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1225291   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1225292   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1225293   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
1225294   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
1225295   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
1225296   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
1225297   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
1225298   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
1225299   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
1225300   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
1225301   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
1225302   +          +     0.89422627895323 * S_NumDealsPurchases
1225303   +          +    -0.13304125929765 * S_NumDistPurchases
1225304   +          +    -1.04568442570811 * S_NumStorePurchases
1225305   +          +    -0.28677765126751 * S_NumWebPurchases
1225306   +          +      1.2327638737509 * S_NumWebVisitsMonth
1225307   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
1225308   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
1225309   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
1225310   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
1225311   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
1225312   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
1225313   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
1225314   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
1225315   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
1225316   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
1225317   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
1225318   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
1225319   +          +     0.04224590196535 * S_NumDealsPurchases
1225320   +          +     0.76554742700113 * S_NumDistPurchases
1225321   +          +    -0.49155496870812 * S_NumStorePurchases
1225322   +          +     0.59606812744403 * S_NumWebPurchases
1225323   +          +     1.86809286276405 * S_NumWebVisitsMonth
1225324   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
1225325   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
1225326   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
1225327   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
1225328   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
1225329   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
1225330   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
1225331   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
1225332   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
1225333   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
1225334   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
1225335   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
1225336   +          +    -0.04866536993486 * S_NumDealsPurchases
1225337   +          +    -0.53535979020214 * S_NumDistPurchases
1225338   +          +     2.20634071253676 * S_NumStorePurchases
1225339   +          +      0.6164564989007 * S_NumWebPurchases
1225340   +          +    -0.43396314395263 * S_NumWebVisitsMonth
1225341   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
1225342   +        S_RMntFrq  +     2.37293441098349 * S_Recency
1225343   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
1225344   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
1225345   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
1225346   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
1225347   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
1225348   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
1225349   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
1225350   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
1225351   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
1225352   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
1225353   +          +     1.37461255707863 * S_NumDealsPurchases
1225354   +          +    -0.17684775000818 * S_NumDistPurchases
1225355   +          +    -0.62755623855535 * S_NumStorePurchases
1225356   +          +    -1.46551649022657 * S_NumWebPurchases
1225357   +          +     3.35784247878638 * S_NumWebVisitsMonth
1225358   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
1225359   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
1225360   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
1225361   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
1225362   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
1225363   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
1225364   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
1225365   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
1225366   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
1225367   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
1225368   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
1225369   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
1225370   +          +    -0.76256677907121 * S_NumDealsPurchases
1225371   +          +    -0.31591571751692 * S_NumDistPurchases
1225372   +          +      0.0506832614089 * S_NumStorePurchases
1225373   +          +      1.4636796923764 * S_NumWebPurchases
1225374   +          +     0.37743519705036 * S_NumWebVisitsMonth
1225375   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
1225376   +        S_RMntFrq  +     0.16854775832723 * S_Recency
1225377   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
1225378   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
1225379   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
1225380   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
1225381   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
1225382   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
1225383   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
1225384   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
1225385   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
1225386   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
1225387   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
1225388   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
1225389   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
1225390   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
1225391   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
1225392   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
1225393   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
1225394   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
1225395   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
1225396   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
1225397   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
1225398   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
1225399   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
1225400   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
1225401   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
1225402   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
1225403   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
1225404   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
1225405   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
1225406   +          +     0.68641668264565 * Marital_StatusDivorced
1225407   +          +    -0.81586871439732 * Marital_StatusMarried
1225408   +          +     0.63758920518451 * Marital_StatusSingle
1225409   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
1225410   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
1225411   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
1225412   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
1225413   +          +     0.05137560133238 * Marital_StatusDivorced
1225414   +          +    -2.24401993266209 * Marital_StatusMarried
1225415   +          +     1.57359386216115 * Marital_StatusSingle
1225416   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
1225417   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
1225418   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
1225419   +        EducationGraduation  +     0.61492669859334 * EducationMaster
1225420   +          +     -1.0649987815942 * Marital_StatusDivorced
1225421   +          +     0.76065111692388 * Marital_StatusMarried
1225422   +          +    -0.21694149754801 * Marital_StatusSingle
1225423   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
1225424   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
1225425   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
1225426   +        EducationGraduation  +     0.04208620358211 * EducationMaster
1225427   +          +     2.02155453548328 * Marital_StatusDivorced
1225428   +          +    -2.60190649735306 * Marital_StatusMarried
1225429   +          +     1.09149388354927 * Marital_StatusSingle
1225430   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
1225431   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
1225432   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
1225433   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
1225434   +          +     0.66315970650309 * Marital_StatusDivorced
1225435   +          +    -1.20476729758152 * Marital_StatusMarried
1225436   +          +     0.56175027826397 * Marital_StatusSingle
1225437   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
1225438   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
1225439   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
1225440   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
1225441   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
1225442   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
1225443   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1225444   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1225445   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1225446   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1225447   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1225448   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1225449   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1225450   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1225451   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1225452   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1225453   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1225454   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1225455   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1225456   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1225457   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1225458   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1225459   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1225460   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1225461   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1225462   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1225463   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1225464   +END;
MPRINT(EM_DIAGRAM):   END;
1225465   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1225466   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1225467   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1225468   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1225469   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1225470   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1225471   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1225472   +END;
MPRINT(EM_DIAGRAM):   END;
1225473   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1225474   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1225475   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1225476   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1225477   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
1225478   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
1225479   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
1225480   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
1225481   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
1225482   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
1225483   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
1225484   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
1225485   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
1225486   +          +     1.50005927423985 * S_NumDealsPurchases
1225487   +          +      0.5590536933569 * S_NumDistPurchases
1225488   +          +    -0.61757824339318 * S_NumStorePurchases
1225489   +          +     0.37259686538158 * S_NumWebPurchases
1225490   +          +     2.59725437895564 * S_NumWebVisitsMonth
1225491   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
1225492   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
1225493   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
1225494   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
1225495   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
1225496   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
1225497   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
1225498   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
1225499   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
1225500   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
1225501   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
1225502   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
1225503   +          +    -0.09282222088797 * S_NumDealsPurchases
1225504   +          +     0.10726247938321 * S_NumDistPurchases
1225505   +          +     -1.1235971458527 * S_NumStorePurchases
1225506   +          +    -0.78304387839877 * S_NumWebPurchases
1225507   +          +    -0.44139243179956 * S_NumWebVisitsMonth
1225508   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
1225509   +        S_RMntFrq  +     2.19072220135069 * S_Recency
1225510   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
1225511   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
1225512   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
1225513   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
1225514   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
1225515   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
1225516   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
1225517   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
1225518   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
1225519   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
1225520   +          +     0.35349185459988 * S_NumDealsPurchases
1225521   +          +     0.06853677714859 * S_NumDistPurchases
1225522   +          +    -1.47546012999338 * S_NumStorePurchases
1225523   +          +     0.20926435398916 * S_NumWebPurchases
1225524   +          +    -1.00535683639093 * S_NumWebVisitsMonth
1225525   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
1225526   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
1225527   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
1225528   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
1225529   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
1225530   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
1225531   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
1225532   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
1225533   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
1225534   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
1225535   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
1225536   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
1225537   +          +      0.3873586120272 * S_NumDealsPurchases
1225538   +          +     0.25911651157596 * S_NumDistPurchases
1225539   +          +     1.58922489084287 * S_NumStorePurchases
1225540   +          +     0.49041797743368 * S_NumWebPurchases
1225541   +          +     -1.5425586871929 * S_NumWebVisitsMonth
1225542   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
1225543   +        S_RMntFrq  +     1.03099569333498 * S_Recency
1225544   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
1225545   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
1225546   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
1225547   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
1225548   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
1225549   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
1225550   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
1225551   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
1225552   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
1225553   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
1225554   +          +    -0.60830880287865 * S_NumDealsPurchases
1225555   +          +      0.0745331267194 * S_NumDistPurchases
1225556   +          +    -1.39472448256952 * S_NumStorePurchases
1225557   +          +     1.95372179969087 * S_NumWebPurchases
1225558   +          +    -0.63307356390404 * S_NumWebVisitsMonth
1225559   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
1225560   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
1225561   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
1225562   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
1225563   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
1225564   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
1225565   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
1225566   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
1225567   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
1225568   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
1225569   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
1225570   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
1225571   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
1225572   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
1225573   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
1225574   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
1225575   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
1225576   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
1225577   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
1225578   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
1225579   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
1225580   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
1225581   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
1225582   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
1225583   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
1225584   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
1225585   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
1225586   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
1225587   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
1225588   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
1225589   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
1225590   +          +    -1.33377871643323 * Marital_StatusDivorced
1225591   +          +    -0.87184228840898 * Marital_StatusMarried
1225592   +          +     1.41223186340257 * Marital_StatusSingle
1225593   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
1225594   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
1225595   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
1225596   +        EducationGraduation  +     0.38341272155343 * EducationMaster
1225597   +          +    -0.21479890935233 * Marital_StatusDivorced
1225598   +          +     -0.0025459519579 * Marital_StatusMarried
1225599   +          +     1.33900491702264 * Marital_StatusSingle
1225600   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
1225601   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
1225602   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
1225603   +        EducationGraduation  +     0.60739269725685 * EducationMaster
1225604   +          +    -0.38307267471999 * Marital_StatusDivorced
1225605   +          +     0.97088969451415 * Marital_StatusMarried
1225606   +          +    -0.28578224473381 * Marital_StatusSingle
1225607   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
1225608   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
1225609   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
1225610   +        EducationGraduation  +     0.14160673378252 * EducationMaster
1225611   +          +    -1.42229401093569 * Marital_StatusDivorced
1225612   +          +      0.7234508382397 * Marital_StatusMarried
1225613   +          +    -0.29062202974628 * Marital_StatusSingle
1225614   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
1225615   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
1225616   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
1225617   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
1225618   +          +    -0.99067637207205 * Marital_StatusDivorced
1225619   +          +    -0.50245902142079 * Marital_StatusMarried
1225620   +          +     0.54214494533793 * Marital_StatusSingle
1225621   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
1225622   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
1225623   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
1225624   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
1225625   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
1225626   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
1225627   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1225628   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1225629   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1225630   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1225631   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1225632   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1225633   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1225634   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1225635   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1225636   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1225637   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1225638   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1225639   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1225640   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1225641   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1225642   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1225643   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1225644   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1225645   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1225646   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1225647   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1225648   +END;
MPRINT(EM_DIAGRAM):   END;
1225649   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1225650   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1225651   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1225652   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1225653   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1225654   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1225655   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1225656   +END;
MPRINT(EM_DIAGRAM):   END;
1225657   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1225658   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1225659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1225660   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1225661   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
1225662   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
1225663   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
1225664   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
1225665   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
1225666   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
1225667   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
1225668   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
1225669   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
1225670   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
1225671   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
1225672   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
1225673   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
1225674   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
1225675   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
1225676   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
1225677   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
1225678   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
1225679   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
1225680   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
1225681   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
1225682   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
1225683   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
1225684   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
1225685   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
1225686   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
1225687   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
1225688   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
1225689   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
1225690   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
1225691   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
1225692   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
1225693   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
1225694   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
1225695   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
1225696   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
1225697   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
1225698   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
1225699   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
1225700   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
1225701   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
1225702   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
1225703   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
1225704   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
1225705   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
1225706   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
1225707   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
1225708   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
1225709   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1225710   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1225711   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1225712   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1225713   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1225714   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1225715   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1225716   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1225717   +END;
MPRINT(EM_DIAGRAM):   END;
1225718   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1225719   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1225720   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1225721   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1225722   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1225723   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1225724   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1225725   +END;
MPRINT(EM_DIAGRAM):   END;
1225726   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1225727   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1225728   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1225729   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1225730   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
1225731   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
1225732   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
1225733   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
1225734   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1225735   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1225736   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1225737   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1225738   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1225739   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1225740   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1225741   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1225742   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1225743   +END;
MPRINT(EM_DIAGRAM):   END;
1225744   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1225745   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1225746   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1225747   +END;
MPRINT(EM_DIAGRAM):   END;
1225748   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1225749   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1225750   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1225751   +END;
MPRINT(EM_DIAGRAM):   END;
1225752   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1225753   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1225754   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1225755   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1225756   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1225757   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1225758   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1225759   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1225760   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1225761   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1225762   +END;
MPRINT(EM_DIAGRAM):   END;
1225763   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1225764   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1225765   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1225766   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1225767    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1225768    quit;
1225769    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1225770    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1225771    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1225772    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
1225773    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1225774    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225775    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1225776    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1225777    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1225778    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME 
CREATOR);
1225779    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1225780    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225781    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1225782    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1225783    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1225784    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225785    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
1225786    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1225787    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1225788    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1225789    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225790    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1225791    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1225792    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1225793    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225794    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1225795    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1225795  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.

1225796    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1225797    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1225798    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 3291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225799    filename _pref
1225799  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1225800    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1225801    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1225802   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1225803   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1225804   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1225805   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1225806   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1225807   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1225808    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1225809    quit;
1225810    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1225811    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1225812    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1225813    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1225814    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1225815    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225816    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1225817    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1225818    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1225819    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1225820    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1225821    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225822    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1225823    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1225824    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1225825    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225826    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1225827    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1225828    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1225829    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1225830    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225831    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1225832    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1225833    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1225834    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225835    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1225836    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1225836  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1225837    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1225838    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1225839    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 3295 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225840    filename _pref
1225840  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1225841    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1225842    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1225843   +
1225844   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1225845   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1225845  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1225846   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1225847   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1225848   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1225849   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1225850   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1225851    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1225852    quit;
1225853    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1225854    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1225855    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1225856    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1225857    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1225858    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225859    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1225860    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1225861    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225862    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1225863    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1225864    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225865    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1225866    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1225867    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1225868    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225869    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1225870    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225871    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1225872    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1225873    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225874    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1225875    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1225876    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1225877    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1225878    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1225879    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1225879  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1225880    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225881    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1225882    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 3334 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225883    filename _pref
1225883  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1225884    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1225885    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1225886   +
1225887   +
1225888   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1225889   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1225890   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1225891   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1225892   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1225893   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1225894   +
1225895   +
1225896   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1225897   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1225898   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1225899   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1225900   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1225901   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1225902   +
1225903   +
1225904   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1225905   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1225906   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1225907   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1225908   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1225909   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1225910   +
1225911   +
1225912   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1225913   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1225914   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1225915   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1225916   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1225917   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1225918   +
1225919   +
1225920   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1225921   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1225922   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1225923   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1225924   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1225925   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1225926   +
1225927   +
1225928   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1225929   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1225930   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1225931   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1225932   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1225933   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1225934   +
1225935   +
1225936   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1225937   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1225938   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1225939   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1225940   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1225941   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1225942   +
1225943   +
1225944   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1225945   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1225946   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1225947   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1225948   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1225949   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1225950   +if
1225951   +_FILTERNORM1 not in ( '.')
1225952   + and
1225953   +_FILTERNORM2 not in ( '.')
1225954   + and
1225955   +_FILTERNORM3 not in ( '.')
1225956   + and
1225957   +_FILTERNORM4 not in ( '.')
1225958   + and
1225959   +_FILTERNORM5 not in ( '.')
1225960   + and
1225961   +_FILTERNORM6 not in ( '.')
1225962   + and
1225963   +_FILTERNORM7 not in ( ' ')
1225964   + and
1225965   +_FILTERNORM8 not in ( ' ')
1225966   +and
1225967   +( Dt_Customer ne .)
1225968   +and ( Income ne . and (Income<=107000))
1225969   +and ( Kidhome ne .)
1225970   +and ( MntFishProducts ne .)
1225971   +and ( MntFruits ne .)
1225972   +and ( MntGoldProds ne .)
1225973   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1225974   +and ( MntSweetProducts ne .)
1225975   +and ( MntWines ne .)
1225976   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1225977   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1225978   +and ( NumStorePurchases ne .)
1225979   +and ( NumWebPurchases ne .)
1225980   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1225981   +and ( Recency ne .)
1225982   +and ( Teenhome ne .)
1225983   +and ( Year_Birth ne .)
1225984   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1225985   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1225986   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1225987   +end;
MPRINT(EM_DIAGRAM):   end;
1225988   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1225989   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1225990    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1225991    quit;
1225992    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1225993    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1225994    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1225995    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1225996    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1225997    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1225998    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1225999    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1226000    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226001    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1226002    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1226003    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226004    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1226005    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1226006    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1226007    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226008    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1226009    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1226010    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1226011    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1226012    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1226013    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1226014    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1226015    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1226016    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226017    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1226018    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1226018  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1226019    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226020    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1226021    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 3400 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226022    %macro varDept(fcmpdata=,id=);
1226023    %global nobs&id scoreFlag&id;
1226024    %let scoreFlag&id = 0;
1226025    %if &id=1 or ^&fcmpStart %then %do;
1226026    proc sort data=&fcmpdata out=_temp&id nodupkey;
1226027    by NAME;
1226028    where id=&id and LHS in( %let j=1;
1226029    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1226030    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1226031    "&var" %let j = %eval(&j+1);
1226032    %end;
1226033    );
1226034    run;
1226035    %let dsid = %sysfunc(open(_temp&id));
1226036    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1226037    %let dsid = %sysfunc(close(&dsid));
1226038    %if &&nobs&id %then %do;
1226039    %let scoreFlag&id = 1;
1226040    %let fcmpStart = 1;
1226041    %end;
1226042    %else %let fcmpStart = 0;
1226043    %end;
1226044    %else %do;
1226045    proc sort data=&fcmpdata out=_tempid;
1226046    where id=&id;
1226047    by LHS;
1226048    run;
1226049    %let dsid = %sysfunc(open(_tempid));
1226050    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1226051    %let dsid = %sysfunc(close(&dsid));
1226052    %if ^&&nobs&id %then %do;
1226053    proc datasets lib=work nolist;
1226054    delete _tempid;
1226055    run;
1226056    quit;
1226057    %end;
1226058    %else %do;
1226059    data _tempAll;
1226060    set %let j=%eval(&id-1);
1226061    %do x=1 %to &j;
1226062    %if &&nobs&x %then %do;
1226063    _temp&x %end;
1226064    %end;
1226065    ;
1226066    run;
1226067    proc sql;
1226068    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1226068  ! work._tempid p2 where p.name=p2.lhs;
1226069    quit;
1226070    data _temp&id;
1226071    set _temp&id;
1226072    where LHS ne '' and NAME ne '' and Node ne '';
1226073    run;
1226074    proc datasets lib=work nolist;
1226075    delete _tempAll;
1226076    run;
1226077    %let dsid = %sysfunc(open(_temp&id));
1226078    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1226079    %let dsid = %sysfunc(close(&dsid));
1226080    %if ^&&nobs&id %then %do;
1226081    proc datasets lib=work nolist;
1226082    delete _temp&id;
1226083    run;
1226084    quit;
1226085    %end;
1226086    %else %do;
1226087    %let scoreFlag&id = 1;
1226088    data _temp&id;
1226089    set _temp&id;
1226090    where LHS ne NAME and node ne '';
1226091    run;
1226092    %let dsid = %sysfunc(open(_temp&id));
1226093    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1226094    %let dsid = %sysfunc(close(&dsid));
1226095    %if ^&&nobs&id %then %do;
1226096    proc datasets lib=work nolist;
1226097    delete _temp&id;
1226098    run;
1226099    quit;
1226100    %end;
1226101    %else %do;
1226102    proc sort data=_temp&id nodupkey;
1226103    by LHS NAME;
1226104    run;
1226105    %end;
1226106    %end;
1226107    %end;
1226108    %end;
1226109    %mend varDept;
1226110    %macro optCode(outdata=fcmpdata);
1226111    %global fcmpStart;
1226112    %let fcmpStart = 0;
1226113    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1226114    %let NumNodes=9;
1226115    %do k=1 %to &NumNodes;
1226116    %vardept(fcmpdata=&outdata, id=&k);
1226117    %end;
1226118    %mend optCode;
1226119    %optcode(outData=EMWS8.Ensmbl47_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 188 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 136 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 52 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 56 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 95 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1226120    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1226121    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1226122    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1226123    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1226124    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1226125    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1226126    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1226127    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226128    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1226129    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1226129  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1226130    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1226131    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1226132    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1226133    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226134    filename _pref
1226134  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
1226135    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1226136    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
1226137   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1226138   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1226139   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1226140   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1226141   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1226142   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1226143   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1226144   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1226145   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1226146   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1226147   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1226148   +LENGTH _WARN_ $4
1226149   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1226150   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1226151   +
1226152   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1226153   +
1226154   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1226155   +
1226156   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1226157   +
1226158   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1226159   +
1226160   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1226161   +
1226162   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1226163   +
1226164   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1226165   +
1226166   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1226167   +
1226168   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1226169   +
1226170   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1226171   +
1226172   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1226173   +
1226174   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1226175   +
1226176   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1226177   +
1226178   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1226179   +
1226180   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1226181   +
1226182   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1226183   +
1226184   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1226185   +
1226186   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1226187   +
1226188   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1226189   +
1226190   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1226191   +
1226192   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1226193   +
1226194   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1226195   +
1226196   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1226197   +
1226198   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1226199   +
1226200   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1226201   +
1226202   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1226203   +
1226204   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1226205   +
1226206   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1226207   +
1226208   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1226209   +
1226210   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1226211   +
1226212   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1226213   +
1226214   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1226215   +
1226216   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1226217   +
1226218   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1226219   +
1226220   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1226221   +
1226222   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1226223   +
1226224   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1226225   +
1226226   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1226227   +
1226228   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1226229   +
1226230   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1226231   +
1226232   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1226233   +
1226234   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1226235   +
1226236   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1226237   +
1226238   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1226239   +
1226240   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1226241   +
1226242   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1226243   +
1226244   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1226245   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1226246   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1226247   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1226248   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1226249   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226250   +end;
MPRINT(EM_DIAGRAM):   end;
1226251   +else do;
MPRINT(EM_DIAGRAM):   else do;
1226252   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1226253   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1226254   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1226255   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1226256   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1226257   +   end;
MPRINT(EM_DIAGRAM):   end;
1226258   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1226259   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1226260   +   end;
MPRINT(EM_DIAGRAM):   end;
1226261   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1226262   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1226263   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1226264   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226265   +   end;
MPRINT(EM_DIAGRAM):   end;
1226266   +end;
MPRINT(EM_DIAGRAM):   end;
1226267   +
1226268   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1226269   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1226270   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1226271   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1226272   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1226273   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226274   +end;
MPRINT(EM_DIAGRAM):   end;
1226275   +else do;
MPRINT(EM_DIAGRAM):   else do;
1226276   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1226277   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1226278   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1226279   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1226280   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1226281   +   end;
MPRINT(EM_DIAGRAM):   end;
1226282   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1226283   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1226284   +   end;
MPRINT(EM_DIAGRAM):   end;
1226285   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1226286   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1226287   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1226288   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226289   +   end;
MPRINT(EM_DIAGRAM):   end;
1226290   +end;
MPRINT(EM_DIAGRAM):   end;
1226291   +
1226292   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1226293   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1226294   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1226295   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1226296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1226297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226298   +end;
MPRINT(EM_DIAGRAM):   end;
1226299   +else do;
MPRINT(EM_DIAGRAM):   else do;
1226300   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1226301   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1226302   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1226303   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1226304   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1226305   +   end;
MPRINT(EM_DIAGRAM):   end;
1226306   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1226307   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1226308   +   end;
MPRINT(EM_DIAGRAM):   end;
1226309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1226310   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1226311   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1226312   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226313   +   end;
MPRINT(EM_DIAGRAM):   end;
1226314   +end;
MPRINT(EM_DIAGRAM):   end;
1226315   +
1226316   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1226317   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1226318   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1226319   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1226320   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1226321   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226322   +end;
MPRINT(EM_DIAGRAM):   end;
1226323   +else do;
MPRINT(EM_DIAGRAM):   else do;
1226324   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1226325   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1226326   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1226327   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1226328   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1226329   +   end;
MPRINT(EM_DIAGRAM):   end;
1226330   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1226331   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1226332   +   end;
MPRINT(EM_DIAGRAM):   end;
1226333   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1226334   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1226335   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1226336   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226337   +   end;
MPRINT(EM_DIAGRAM):   end;
1226338   +end;
MPRINT(EM_DIAGRAM):   end;
1226339   +
1226340   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1226341   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1226342   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1226343   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1226344   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1226345   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226346   +end;
MPRINT(EM_DIAGRAM):   end;
1226347   +else do;
MPRINT(EM_DIAGRAM):   else do;
1226348   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1226349   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1226350   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1226351   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1226352   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1226353   +   end;
MPRINT(EM_DIAGRAM):   end;
1226354   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1226355   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1226356   +   end;
MPRINT(EM_DIAGRAM):   end;
1226357   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1226358   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1226359   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1226360   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226361   +   end;
MPRINT(EM_DIAGRAM):   end;
1226362   +end;
MPRINT(EM_DIAGRAM):   end;
1226363   +
1226364   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1226365   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1226366   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1226367   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1226368   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1226369   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226370   +end;
MPRINT(EM_DIAGRAM):   end;
1226371   +else do;
MPRINT(EM_DIAGRAM):   else do;
1226372   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1226373   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1226374   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1226375   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1226376   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1226377   +   end;
MPRINT(EM_DIAGRAM):   end;
1226378   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1226379   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1226380   +   end;
MPRINT(EM_DIAGRAM):   end;
1226381   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1226382   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1226383   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1226384   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226385   +   end;
MPRINT(EM_DIAGRAM):   end;
1226386   +end;
MPRINT(EM_DIAGRAM):   end;
1226387   +
1226388   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1226389   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1226390   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1226391   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1226392   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1226393   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226394   +end;
MPRINT(EM_DIAGRAM):   end;
1226395   +else do;
MPRINT(EM_DIAGRAM):   else do;
1226396   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1226397   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1226398   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1226399   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1226400   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1226401   +   end;
MPRINT(EM_DIAGRAM):   end;
1226402   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1226403   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1226404   +   end;
MPRINT(EM_DIAGRAM):   end;
1226405   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1226406   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1226407   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1226408   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226409   +   end;
MPRINT(EM_DIAGRAM):   end;
1226410   +end;
MPRINT(EM_DIAGRAM):   end;
1226411   +
1226412   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1226413   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1226414   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1226415   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1226416   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1226417   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1226418   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1226419   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1226420   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1226421   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1226422   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1226423   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1226424   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1226425   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226426   +end;
MPRINT(EM_DIAGRAM):   end;
1226427   +else do;
MPRINT(EM_DIAGRAM):   else do;
1226428   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1226429   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1226430   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1226431   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1226432   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1226433   +   end;
MPRINT(EM_DIAGRAM):   end;
1226434   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1226435   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1226436   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1226437   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1226438   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1226439   +   end;
MPRINT(EM_DIAGRAM):   end;
1226440   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1226441   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1226442   +   end;
MPRINT(EM_DIAGRAM):   end;
1226443   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1226444   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1226445   +   end;
MPRINT(EM_DIAGRAM):   end;
1226446   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1226447   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1226448   +   end;
MPRINT(EM_DIAGRAM):   end;
1226449   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1226450   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1226451   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1226452   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1226453   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1226454   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1226455   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226456   +   end;
MPRINT(EM_DIAGRAM):   end;
1226457   +end;
MPRINT(EM_DIAGRAM):   end;
1226458   +
1226459   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1226460   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1226461   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1226462   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1226463   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1226464   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1226465   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1226466   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1226467   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1226468   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1226469   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1226470   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1226471   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1226472   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1226473   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226474   +end;
MPRINT(EM_DIAGRAM):   end;
1226475   +else do;
MPRINT(EM_DIAGRAM):   else do;
1226476   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1226477   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1226478   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1226479   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1226480   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1226481   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1226482   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1226483   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1226484   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1226485   +         end;
MPRINT(EM_DIAGRAM):   end;
1226486   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1226487   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1226488   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1226489   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1226490   +            end;
MPRINT(EM_DIAGRAM):   end;
1226491   +         end;
MPRINT(EM_DIAGRAM):   end;
1226492   +      end;
MPRINT(EM_DIAGRAM):   end;
1226493   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1226494   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1226495   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1226496   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1226497   +         end;
MPRINT(EM_DIAGRAM):   end;
1226498   +      end;
MPRINT(EM_DIAGRAM):   end;
1226499   +   end;
MPRINT(EM_DIAGRAM):   end;
1226500   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1226501   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1226502   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1226503   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1226504   +      end;
MPRINT(EM_DIAGRAM):   end;
1226505   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1226506   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1226507   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1226508   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1226509   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1226510   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1226511   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1226512   +         end;
MPRINT(EM_DIAGRAM):   end;
1226513   +      end;
MPRINT(EM_DIAGRAM):   end;
1226514   +   end;
MPRINT(EM_DIAGRAM):   end;
1226515   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1226516   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1226517   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1226518   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1226519   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1226520   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1226521   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226522   +   end;
MPRINT(EM_DIAGRAM):   end;
1226523   +end;
MPRINT(EM_DIAGRAM):   end;
1226524   +
1226525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1226526   +*** Checking missing input Interval
1226527   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1226528   +
1226529   +IF NMISS(
1226530   +   AcceptedCmpTotal ,
1226531   +   Age ,
1226532   +   Frq ,
1226533   +   Income ,
1226534   +   Kidhome ,
1226535   +   Mnt ,
1226536   +   MntFishProducts ,
1226537   +   MntFruits ,
1226538   +   MntGoldProds ,
1226539   +   MntMeatProducts ,
1226540   +   MntSweetProducts ,
1226541   +   MntWines ,
1226542   +   MonthsAsCustomer ,
1226543   +   NumCatalogPurchases ,
1226544   +   NumDealsPurchases ,
1226545   +   NumDistPurchases ,
1226546   +   NumStorePurchases ,
1226547   +   NumWebPurchases ,
1226548   +   NumWebVisitsMonth ,
1226549   +   RFMstat ,
1226550   +   RMntFrq ,
1226551   +   Recency ,
1226552   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1226553   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1226554   +
1226555   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1226556   +END;
MPRINT(EM_DIAGRAM):   END;
1226557   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1226558   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1226559   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1226560   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1226561   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1226562   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1226563   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1226564   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1226565   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1226566   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1226567   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1226568   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1226569   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1226570   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1226571   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1226572   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1226573   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1226574   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1226575   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1226576   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1226577   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1226578   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1226579   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1226580   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1226581   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1226582   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1226583   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1226584   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1226585   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1226586   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1226587   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1226588   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1226589   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1226590   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1226591   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1226592   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1226593   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1226594   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1226595   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1226596   +END;
MPRINT(EM_DIAGRAM):   END;
1226597   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1226598   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1226599   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1226600   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1226601   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1226602   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1226603   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1226604   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1226605   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1226606   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1226607   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1226608   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1226609   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1226610   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1226611   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1226612   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1226613   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1226614   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1226615   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1226616   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1226617   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1226618   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1226619   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1226620   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1226621   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1226622   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1226623   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1226624   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1226625   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1226626   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1226627   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1226628   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1226629   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1226630   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1226631   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1226632   +   ELSE S_NumCatalogPurchases
1226633   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1226634   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1226635   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1226636   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1226637   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1226638   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1226639   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1226640   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1226641   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1226642   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1226643   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1226644   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1226645   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1226646   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1226647   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1226648   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1226649   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1226650   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1226651   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1226652   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1226653   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1226654   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1226655   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1226656   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1226657   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1226658   +END;
MPRINT(EM_DIAGRAM):   END;
1226659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1226660   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1226661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1226662   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1226663   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1226664   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1226665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1226666   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1226667   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1226668   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1226669   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
1226670   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
1226671   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
1226672   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
1226673   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
1226674   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
1226675   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
1226676   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
1226677   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
1226678   +          +    -1.14704878034134 * S_NumDealsPurchases
1226679   +          +    -0.17763404274659 * S_NumDistPurchases
1226680   +          +     0.08894400267969 * S_NumStorePurchases
1226681   +          +     0.59283747891957 * S_NumWebPurchases
1226682   +          +     0.85268274682505 * S_NumWebVisitsMonth
1226683   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
1226684   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
1226685   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
1226686   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
1226687   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
1226688   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
1226689   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
1226690   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
1226691   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
1226692   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
1226693   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
1226694   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
1226695   +          +    -0.80841566068716 * S_NumDealsPurchases
1226696   +          +    -0.17995640033768 * S_NumDistPurchases
1226697   +          +     0.00713417460936 * S_NumStorePurchases
1226698   +          +     0.57881024323076 * S_NumWebPurchases
1226699   +          +    -1.35134224257365 * S_NumWebVisitsMonth
1226700   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
1226701   +        S_RMntFrq  +     1.16978656262499 * S_Recency
1226702   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
1226703   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
1226704   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
1226705   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
1226706   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
1226707   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
1226708   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
1226709   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
1226710   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
1226711   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
1226712   +          +     0.57891364118717 * S_NumDealsPurchases
1226713   +          +    -0.31024556838688 * S_NumDistPurchases
1226714   +          +    -1.48708542986704 * S_NumStorePurchases
1226715   +          +    -0.93009875249206 * S_NumWebPurchases
1226716   +          +     2.01900039122935 * S_NumWebVisitsMonth
1226717   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
1226718   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
1226719   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
1226720   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
1226721   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
1226722   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
1226723   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
1226724   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
1226725   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
1226726   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
1226727   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
1226728   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
1226729   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
1226730   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
1226731   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
1226732   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
1226733   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
1226734   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
1226735   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
1226736   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
1226737   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
1226738   +          +     0.55883606830033 * Marital_StatusDivorced
1226739   +          +    -0.54530037567066 * Marital_StatusMarried
1226740   +          +    -0.52994736075753 * Marital_StatusSingle
1226741   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
1226742   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
1226743   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
1226744   +        EducationGraduation  +     0.31201349236277 * EducationMaster
1226745   +          +    -1.07368484057033 * Marital_StatusDivorced
1226746   +          +     2.73313504711262 * Marital_StatusMarried
1226747   +          +    -2.18530462876058 * Marital_StatusSingle
1226748   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
1226749   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
1226750   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
1226751   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
1226752   +          +     0.49993144243043 * Marital_StatusDivorced
1226753   +          +    -0.38953339116829 * Marital_StatusMarried
1226754   +          +    -0.10836287319942 * Marital_StatusSingle
1226755   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
1226756   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
1226757   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
1226758   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
1226759   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1226760   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1226761   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1226762   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1226763   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1226764   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1226765   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1226766   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1226767   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1226768   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1226769   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1226770   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1226771   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1226772   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1226773   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1226774   +END;
MPRINT(EM_DIAGRAM):   END;
1226775   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1226776   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1226777   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1226778   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1226779   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1226780   +END;
MPRINT(EM_DIAGRAM):   END;
1226781   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1226782   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1226783   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1226784   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1226785   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
1226786   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
1226787   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
1226788   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1226789   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1226790   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1226791   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1226792   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1226793   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1226794   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1226795   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1226796   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1226797   +END;
MPRINT(EM_DIAGRAM):   END;
1226798   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1226799   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1226800   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1226801   +END;
MPRINT(EM_DIAGRAM):   END;
1226802   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1226803   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1226804   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1226805   +END;
MPRINT(EM_DIAGRAM):   END;
1226806   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1226807   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1226808   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1226809   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1226810   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1226811   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1226812   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1226813   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1226814   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1226815   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1226816   +END;
MPRINT(EM_DIAGRAM):   END;
1226817   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1226818   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1226819   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1226820   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1226821    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1226822    quit;
1226823    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1226824    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1226825    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1226826    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
1226827    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1226828    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1226829    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1226830    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1226831    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226832    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME 
CREATOR);
1226833    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1226834    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226835    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1226836    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1226837    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1226838    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1226839    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
1226840    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1226841    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1226842    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1226843    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1226844    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1226845    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1226846    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1226847    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226848    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1226849    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1226849  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.

1226850    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226851    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1226852    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1226853    filename _pref
1226853  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1226854    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1226855    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1226856   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1226857   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1226858   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1226859   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1226860   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1226861   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1226862    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1226863    quit;
1226864    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1226865    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1226866    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1226867    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1226868    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1226869    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1226870    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1226871    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1226872    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226873    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1226874    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1226875    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226876    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1226877    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1226878    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1226879    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226880    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1226881    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

1226882    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1226883    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1226884    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226885    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1226886    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1226887    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1226888    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1226889    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1226890    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1226890  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1226891    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226892    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1226893    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226894    filename _pref
1226894  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1226895    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1226896    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1226897   +
1226898   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1226899   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1226899  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1226900   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1226901   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1226902   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1226903   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1226904   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1226905    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1226906    quit;
1226907    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1226908    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1226909    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1226910    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1226911    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1226912    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226913    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1226914    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1226915    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1226916    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1226917    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1226918    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226919    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1226920    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1226921    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1226922    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226923    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1226924    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226925    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1226926    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1226927    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1226928    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1226929    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1226930    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1226931    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226932    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1226933    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1226933  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1226934    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226935    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1226936    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1226937    filename _pref
1226937  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1226938    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1226939    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1226940   +
1226941   +
1226942   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1226943   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1226944   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1226945   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1226946   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1226947   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1226948   +
1226949   +
1226950   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1226951   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1226952   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1226953   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1226954   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1226955   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1226956   +
1226957   +
1226958   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1226959   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1226960   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1226961   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1226962   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1226963   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1226964   +
1226965   +
1226966   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1226967   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1226968   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1226969   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1226970   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1226971   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1226972   +
1226973   +
1226974   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1226975   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1226976   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1226977   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1226978   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1226979   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1226980   +
1226981   +
1226982   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1226983   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1226984   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1226985   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1226986   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1226987   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1226988   +
1226989   +
1226990   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1226991   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1226992   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1226993   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1226994   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1226995   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1226996   +
1226997   +
1226998   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1226999   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1227000   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1227001   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1227002   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1227003   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1227004   +if
1227005   +_FILTERNORM1 not in ( '.')
1227006   + and
1227007   +_FILTERNORM2 not in ( '.')
1227008   + and
1227009   +_FILTERNORM3 not in ( '.')
1227010   + and
1227011   +_FILTERNORM4 not in ( '.')
1227012   + and
1227013   +_FILTERNORM5 not in ( '.')
1227014   + and
1227015   +_FILTERNORM6 not in ( '.')
1227016   + and
1227017   +_FILTERNORM7 not in ( ' ')
1227018   + and
1227019   +_FILTERNORM8 not in ( ' ')
1227020   +and
1227021   +( Dt_Customer ne .)
1227022   +and ( Income ne . and (Income<=107000))
1227023   +and ( Kidhome ne .)
1227024   +and ( MntFishProducts ne .)
1227025   +and ( MntFruits ne .)
1227026   +and ( MntGoldProds ne .)
1227027   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1227028   +and ( MntSweetProducts ne .)
1227029   +and ( MntWines ne .)
1227030   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1227031   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1227032   +and ( NumStorePurchases ne .)
1227033   +and ( NumWebPurchases ne .)
1227034   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1227035   +and ( Recency ne .)
1227036   +and ( Teenhome ne .)
1227037   +and ( Year_Birth ne .)
1227038   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1227039   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1227040   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1227041   +end;
MPRINT(EM_DIAGRAM):   end;
1227042   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1227043   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1227044    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1227045    quit;
1227046    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1227047    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1227048    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1227049    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1227050    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1227051    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1227052    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1227053    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1227054    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1227055    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1227056    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1227057    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1227058    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1227059    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1227060    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1227061    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1227062    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1227063    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1227064    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1227065    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1227066    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1227067    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1227068    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1227069    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1227070    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1227071    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1227072    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1227072  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1227073    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1227074    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
1227075    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1227076    %macro varDept(fcmpdata=,id=);
1227077    %global nobs&id scoreFlag&id;
1227078    %let scoreFlag&id = 0;
1227079    %if &id=1 or ^&fcmpStart %then %do;
1227080    proc sort data=&fcmpdata out=_temp&id nodupkey;
1227081    by NAME;
1227082    where id=&id and LHS in( %let j=1;
1227083    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1227084    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1227085    "&var" %let j = %eval(&j+1);
1227086    %end;
1227087    );
1227088    run;
1227089    %let dsid = %sysfunc(open(_temp&id));
1227090    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1227091    %let dsid = %sysfunc(close(&dsid));
1227092    %if &&nobs&id %then %do;
1227093    %let scoreFlag&id = 1;
1227094    %let fcmpStart = 1;
1227095    %end;
1227096    %else %let fcmpStart = 0;
1227097    %end;
1227098    %else %do;
1227099    proc sort data=&fcmpdata out=_tempid;
1227100    where id=&id;
1227101    by LHS;
1227102    run;
1227103    %let dsid = %sysfunc(open(_tempid));
1227104    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1227105    %let dsid = %sysfunc(close(&dsid));
1227106    %if ^&&nobs&id %then %do;
1227107    proc datasets lib=work nolist;
1227108    delete _tempid;
1227109    run;
1227110    quit;
1227111    %end;
1227112    %else %do;
1227113    data _tempAll;
1227114    set %let j=%eval(&id-1);
1227115    %do x=1 %to &j;
1227116    %if &&nobs&x %then %do;
1227117    _temp&x %end;
1227118    %end;
1227119    ;
1227120    run;
1227121    proc sql;
1227122    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1227122  ! work._tempid p2 where p.name=p2.lhs;
1227123    quit;
1227124    data _temp&id;
1227125    set _temp&id;
1227126    where LHS ne '' and NAME ne '' and Node ne '';
1227127    run;
1227128    proc datasets lib=work nolist;
1227129    delete _tempAll;
1227130    run;
1227131    %let dsid = %sysfunc(open(_temp&id));
1227132    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1227133    %let dsid = %sysfunc(close(&dsid));
1227134    %if ^&&nobs&id %then %do;
1227135    proc datasets lib=work nolist;
1227136    delete _temp&id;
1227137    run;
1227138    quit;
1227139    %end;
1227140    %else %do;
1227141    %let scoreFlag&id = 1;
1227142    data _temp&id;
1227143    set _temp&id;
1227144    where LHS ne NAME and node ne '';
1227145    run;
1227146    %let dsid = %sysfunc(open(_temp&id));
1227147    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1227148    %let dsid = %sysfunc(close(&dsid));
1227149    %if ^&&nobs&id %then %do;
1227150    proc datasets lib=work nolist;
1227151    delete _temp&id;
1227152    run;
1227153    quit;
1227154    %end;
1227155    %else %do;
1227156    proc sort data=_temp&id nodupkey;
1227157    by LHS NAME;
1227158    run;
1227159    %end;
1227160    %end;
1227161    %end;
1227162    %end;
1227163    %mend varDept;
1227164    %macro optCode(outdata=fcmpdata);
1227165    %global fcmpStart;
1227166    %let fcmpStart = 0;
1227167    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1227168    %let NumNodes=9;
1227169    %do k=1 %to &NumNodes;
1227170    %vardept(fcmpdata=&outdata, id=&k);
1227171    %end;
1227172    %mend optCode;
1227173    %optcode(outData=EMWS8.Ensmbl47_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 146 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1227174    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1227175    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1227176    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1227177    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1227178    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1227179    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1227180    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1227181    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1227182    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1227183    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1227183  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1227184    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1227185    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1227186    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1227187    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1227188    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1227189    * Ensmbl47: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Computing metadata for TRAIN data;
1227190    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL47_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl47_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl47_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl47_TRAIN out=WORK.M2XKPGK2 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2XKPGK2;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2XKPGK2(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2XKPGK2;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2XKPGK2;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0CMD5ZM NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0CMD5ZM;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CMD5ZM;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3V77LAW(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CMD5ZM;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0CMD5ZM;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CMD5ZM;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0CMD5ZM;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CMD5ZM;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_TRAIN noprint 
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl47";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl47";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1227510    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1227511    set EMWS8.Ensmbl47_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMINFO;
1227512    where DATA='Ensmbl47' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl47' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1227513    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_EMINFO.
      WHERE (DATA='Ensmbl47') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1227514    data EMWS8.Ensmbl47_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl47_EMINFO;
1227515    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1227516    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1227517    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL47_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1227521    run;
1227522    data EMWS8.Ensmbl47_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMINFO;
1227523    set EMWS8.Ensmbl47_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMINFO WORK.MODELTEMP_INFO;
1227524    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL47_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL47_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1227525    proc sort data = EMWS8.Ensmbl47_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl47_EMINFO NOTHREADS;
1227526    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1227527    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL47_EMINFO.
NOTE: The data set EMWS8.ENSMBL47_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1227528    proc sort data = EMWS8.AutoNeural10_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural10_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
1227529    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1227530    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1227531    proc sort data = EMWS8.Ensmbl47_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl47_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1227532    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1227533    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL47_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1227534    data EMWS8.Ensmbl47_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMINFO;
1227535    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1227536    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1227537    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL47_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1227538    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1227539    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1227540    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1227541    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.ENSMBL47_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL47_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
