*------------------------------------------------------------*
User:                Lukas Fahr
Date:                21. April 2016
Time:                19.06 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.06 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                21. April 2016
Time:                19.06 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3092CP1
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3092CP1 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.06 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.06 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[300975] MAX=1 EXCEEDMAXVALUE='' )[300979] )[300973]
VALIDCHOICES=(CHOICE1='Y' )[300977] )[301261] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[300983]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[300987] )[300985] )[300981] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[300991]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[300997] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[300995] )[300993] )[300989] )[300971]
2489555    proc freq data=EMWS8.Ensmbl47_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl47_VariableSet noprint;
2489556    table ROLE*LEVEL/out=WORK.Ensmbl47META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl47META;
2489557    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 38 observations read from the data set EMWS8.ENSMBL47_VARIABLESET.
NOTE: The data set WORK.ENSMBL47META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2489558    proc print data=WORK.Ensmbl47META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl47META label noobs;
2489559    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2489560    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
2489560  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
2489560  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
2489561    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2489562    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2489563    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL47META.
NOTE: The PROCEDURE PRINT printed page 1630.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2489564    title10;
MPRINT(EM_DIAGRAM):   title10;
2489565    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN EMWS8 AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN EMWS8 AutoNeural9_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.AutoNeural9_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural9_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2489594    data WORK.Ensmbl47_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl47_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
2489595    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2489596    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
2489596  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
2489596  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2489597       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
2489597  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
2489597  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2489598    set EMWS8.AUTONEURAL9_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL9_DEPVAR_DM( where=(_TYPE_="TARGET"));
2489599    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2489600    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2489601    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2489602    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2489603    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2489604    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2489605    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2489606    end;
MPRINT(EM_DIAGRAM):   end;
2489607    output;
MPRINT(EM_DIAGRAM):   output;
2489608    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL9_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL47_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2489609    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2489610    proc print data=WORK.Ensmbl47_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl47_EVENT noobs label;
2489611    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2489612    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2489613    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2489614    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL47_EVENT.
NOTE: The PROCEDURE PRINT printed page 1631.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2489615    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2489616    proc print data = EMWS8.AutoNeural9_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural9_DepVar_DM noobs label;
2489617    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2489618    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
2489619    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
2489619  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
2489619  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2489620    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2489621    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2489622    run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL9_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1632.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2489623    title10;
MPRINT(EM_DIAGRAM):   title10;
2489624    %let groupid =;
2489625    %let endGroupid =;
2489626    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2489627    set EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_EMINFO;
2489628    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2489628  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2489629    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2489630    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2489631    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2489632    %let groupid =;
2489633    %let endGroupid =;
2489634    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2489635    set EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO;
2489636    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2489636  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2489637    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2489638    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2489639    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2489640    %let groupid =;
2489641    %let endGroupid =;
2489642    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2489643    set EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMINFO;
2489644    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2489644  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2489645    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2489646    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2489647    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2489648    %let groupid =;
2489649    %let endGroupid =;
2489650    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2489651    set EMWS8.AutoNeural7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_EMINFO;
2489652    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2489652  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2489653    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2489654    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2489655    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2489656    %let groupid =;
2489657    %let endGroupid =;
2489658    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2489659    set EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO;
2489660    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2489660  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2489661    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2489662    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2489663    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2489664    data WORK.Ensmbl47;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl47;
2489665    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
2489666    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
2489666  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
2489667    nodeid="AUTONEURAL9";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL9";
2489668    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2489669    output;
MPRINT(EM_DIAGRAM):   output;
2489670    nodeid="AUTONEURAL11";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL11";
2489671    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2489672    output;
MPRINT(EM_DIAGRAM):   output;
2489673    nodeid="AUTONEURAL12";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL12";
2489674    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2489675    output;
MPRINT(EM_DIAGRAM):   output;
2489676    nodeid="AUTONEURAL7";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL7";
2489677    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2489678    output;
MPRINT(EM_DIAGRAM):   output;
2489679    nodeid="AUTONEURAL10";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL10";
2489680    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2489681    output;
MPRINT(EM_DIAGRAM):   output;
2489682    ;
MPRINT(EM_DIAGRAM):   ;
2489683    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL47 has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2489684    title;
MPRINT(EM_DIAGRAM):   title;
2489685    proc print data=WORK.Ensmbl47 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl47 label noobs;
2489686    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
2489687    title10 "Probability Function: Voting";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Voting";
MPRINT(EM_DIAGRAM):   run;
2489688    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL47.
NOTE: The PROCEDURE PRINT printed page 1633.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2489689    title9;
MPRINT(EM_DIAGRAM):   title9;
2489690    title10;
MPRINT(EM_DIAGRAM):   title10;
2489691    data WORK.M122_1X5;
MPRINT(EM_DIAGRAM):    data WORK.M122_1X5;
2489692    set WORK.M122_1X5;
MPRINT(EM_DIAGRAM):   set WORK.M122_1X5;
2489693    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
2489694    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M122_1X5.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M122_1X5 has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2489695    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
2489696    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
2489697    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2489698    %macro DMDBClass;
2489699        DepVar(DESC)
2489700    %mend DMDBClass;
2489701    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2489702    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
2489703    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2489704    %macro DMDBVar;
2489705
2489706    %mend DMDBVar;
2489707    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489708    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
2489709    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489710    proc dmdb batch data=EMWS8.AutoNeural9_TRAIN
2489711    dmdbcat=WORK.EM_DMDB
2489712    maxlevel = 513
2489713    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.AutoNeural9_TRAIN dmdbcat=WORK.EM_DMDB
maxlevel = 513 ;
2489714    class %DMDBClass;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
2489715    target
2489716    DepVar
2489717    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
2489718    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL9_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
2489719    quit;
2489720    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.06 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                19.06 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2B4K8HM
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2B4K8HM new;
MPRINT(EM_DIAGRAM):   run;
2489822    filename emflow
2489822  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring AUTONEURAL9_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489823    *------------------------------------------------------------*;
2489824    * Ensmbl47: Scoring AUTONEURAL9_TRAIN data;
2489825    *------------------------------------------------------------*;
2489826    data EMWS8.Ensmbl47_TRAIN
2489827    / view=EMWS8.Ensmbl47_TRAIN
2489828    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_TRAIN / view=EMWS8.Ensmbl47_TRAIN ;
2489829    set EMWS8.AutoNeural9_TRAIN
2489830    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_TRAIN ;
2489831    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMFLOWSCORE.sas.
2489832   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489833   +* Ensmbl47: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Combine model for DepVar;
2489834   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489835   +* Ensmbl47: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 1 of 5;
2489836   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489838   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2489839   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2489840   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2489841   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489842   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489843   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2489844   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2489845   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2489846   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489847   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489848   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2489849   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2489850   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2489851   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489852   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489853   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2489854   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2489855   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2489856   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489857   +
2489858   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2489859   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2489859  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2489860   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2489861   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2489862   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2489863   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2489864   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2489865   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489866   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2489867   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2489868   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2489869   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489870   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489871   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2489872   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489873   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2489874   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2489875   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2489876   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489877   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2489878   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2489879   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2489880   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489881   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489882   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2489883   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2489884   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2489885   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489886   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489887   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2489888   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2489889   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2489890   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2489891   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2489892   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2489893   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2489894   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2489895   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2489896   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2489897   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2489898   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2489899   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2489900   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2489901   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2489902   +LENGTH _WARN_ $4
2489903   +      F_DepVar  $ 12
2489904   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2489905   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2489906   +
2489907   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2489908   +
2489909   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2489910   +
2489911   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2489912   +
2489913   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2489914   +
2489915   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2489916   +
2489917   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2489918   +
2489919   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2489920   +
2489921   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2489922   +
2489923   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2489924   +
2489925   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2489926   +
2489927   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2489928   +
2489929   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2489930   +
2489931   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2489932   +
2489933   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2489934   +
2489935   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2489936   +
2489937   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2489938   +
2489939   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2489940   +
2489941   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2489942   +
2489943   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2489944   +
2489945   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2489946   +
2489947   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2489948   +
2489949   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2489950   +
2489951   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2489952   +
2489953   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2489954   +
2489955   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2489956   +
2489957   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2489958   +
2489959   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2489960   +
2489961   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2489962   +
2489963   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2489964   +
2489965   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2489966   +
2489967   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2489968   +
2489969   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2489970   +
2489971   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2489972   +
2489973   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2489974   +
2489975   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2489976   +
2489977   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2489978   +
2489979   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2489980   +
2489981   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2489982   +
2489983   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2489984   +
2489985   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2489986   +
2489987   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2489988   +
2489989   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2489990   +
2489991   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2489992   +
2489993   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2489994   +
2489995   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2489996   +
2489997   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2489998   +
2489999   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2490000   +
2490001   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2490002   +
2490003   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2490004   +
2490005   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2490006   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2490007   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2490008   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2490009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2490010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490011   +end;
MPRINT(EM_DIAGRAM):   end;
2490012   +else do;
MPRINT(EM_DIAGRAM):   else do;
2490013   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2490014   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2490015   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2490016   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2490017   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2490018   +   end;
MPRINT(EM_DIAGRAM):   end;
2490019   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2490020   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2490021   +   end;
MPRINT(EM_DIAGRAM):   end;
2490022   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2490023   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2490024   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2490025   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490026   +   end;
MPRINT(EM_DIAGRAM):   end;
2490027   +end;
MPRINT(EM_DIAGRAM):   end;
2490028   +
2490029   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2490030   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2490031   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2490032   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2490033   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2490034   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490035   +end;
MPRINT(EM_DIAGRAM):   end;
2490036   +else do;
MPRINT(EM_DIAGRAM):   else do;
2490037   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2490038   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2490039   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2490040   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2490041   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2490042   +   end;
MPRINT(EM_DIAGRAM):   end;
2490043   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2490044   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2490045   +   end;
MPRINT(EM_DIAGRAM):   end;
2490046   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2490047   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2490048   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2490049   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490050   +   end;
MPRINT(EM_DIAGRAM):   end;
2490051   +end;
MPRINT(EM_DIAGRAM):   end;
2490052   +
2490053   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2490054   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2490055   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2490056   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2490057   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2490058   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490059   +end;
MPRINT(EM_DIAGRAM):   end;
2490060   +else do;
MPRINT(EM_DIAGRAM):   else do;
2490061   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2490062   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2490063   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2490064   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2490065   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2490066   +   end;
MPRINT(EM_DIAGRAM):   end;
2490067   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2490068   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2490069   +   end;
MPRINT(EM_DIAGRAM):   end;
2490070   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2490071   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2490072   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2490073   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490074   +   end;
MPRINT(EM_DIAGRAM):   end;
2490075   +end;
MPRINT(EM_DIAGRAM):   end;
2490076   +
2490077   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2490078   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2490079   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2490080   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2490081   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2490082   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490083   +end;
MPRINT(EM_DIAGRAM):   end;
2490084   +else do;
MPRINT(EM_DIAGRAM):   else do;
2490085   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2490086   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2490087   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2490088   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2490089   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2490090   +   end;
MPRINT(EM_DIAGRAM):   end;
2490091   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2490092   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2490093   +   end;
MPRINT(EM_DIAGRAM):   end;
2490094   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2490095   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2490096   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2490097   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490098   +   end;
MPRINT(EM_DIAGRAM):   end;
2490099   +end;
MPRINT(EM_DIAGRAM):   end;
2490100   +
2490101   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2490102   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2490103   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2490104   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2490105   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2490106   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490107   +end;
MPRINT(EM_DIAGRAM):   end;
2490108   +else do;
MPRINT(EM_DIAGRAM):   else do;
2490109   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2490110   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2490111   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2490112   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2490113   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2490114   +   end;
MPRINT(EM_DIAGRAM):   end;
2490115   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2490116   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2490117   +   end;
MPRINT(EM_DIAGRAM):   end;
2490118   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2490119   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2490120   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2490121   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490122   +   end;
MPRINT(EM_DIAGRAM):   end;
2490123   +end;
MPRINT(EM_DIAGRAM):   end;
2490124   +
2490125   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2490126   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2490127   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2490128   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2490129   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2490130   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490131   +end;
MPRINT(EM_DIAGRAM):   end;
2490132   +else do;
MPRINT(EM_DIAGRAM):   else do;
2490133   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2490134   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2490135   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2490136   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2490137   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2490138   +   end;
MPRINT(EM_DIAGRAM):   end;
2490139   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2490140   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2490141   +   end;
MPRINT(EM_DIAGRAM):   end;
2490142   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2490143   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2490144   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2490145   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490146   +   end;
MPRINT(EM_DIAGRAM):   end;
2490147   +end;
MPRINT(EM_DIAGRAM):   end;
2490148   +
2490149   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2490150   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2490151   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2490152   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2490153   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2490154   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490155   +end;
MPRINT(EM_DIAGRAM):   end;
2490156   +else do;
MPRINT(EM_DIAGRAM):   else do;
2490157   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2490158   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2490159   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2490160   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2490161   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2490162   +   end;
MPRINT(EM_DIAGRAM):   end;
2490163   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2490164   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2490165   +   end;
MPRINT(EM_DIAGRAM):   end;
2490166   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2490167   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2490168   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2490169   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490170   +   end;
MPRINT(EM_DIAGRAM):   end;
2490171   +end;
MPRINT(EM_DIAGRAM):   end;
2490172   +
2490173   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2490174   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2490175   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2490176   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2490177   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2490178   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2490179   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2490180   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2490181   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2490182   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2490183   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2490184   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2490185   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2490186   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490187   +end;
MPRINT(EM_DIAGRAM):   end;
2490188   +else do;
MPRINT(EM_DIAGRAM):   else do;
2490189   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2490190   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2490191   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2490192   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2490193   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2490194   +   end;
MPRINT(EM_DIAGRAM):   end;
2490195   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2490196   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2490197   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2490198   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2490199   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2490200   +   end;
MPRINT(EM_DIAGRAM):   end;
2490201   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2490202   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2490203   +   end;
MPRINT(EM_DIAGRAM):   end;
2490204   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2490205   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2490206   +   end;
MPRINT(EM_DIAGRAM):   end;
2490207   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2490208   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2490209   +   end;
MPRINT(EM_DIAGRAM):   end;
2490210   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2490211   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2490212   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2490213   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2490214   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2490215   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2490216   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490217   +   end;
MPRINT(EM_DIAGRAM):   end;
2490218   +end;
MPRINT(EM_DIAGRAM):   end;
2490219   +
2490220   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2490221   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2490222   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2490223   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2490224   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2490225   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2490226   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2490227   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2490228   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2490229   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2490230   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2490231   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2490232   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2490233   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2490234   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490235   +end;
MPRINT(EM_DIAGRAM):   end;
2490236   +else do;
MPRINT(EM_DIAGRAM):   else do;
2490237   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2490238   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2490239   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2490240   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2490241   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2490242   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2490243   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2490244   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2490245   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2490246   +         end;
MPRINT(EM_DIAGRAM):   end;
2490247   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2490248   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2490249   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2490250   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2490251   +            end;
MPRINT(EM_DIAGRAM):   end;
2490252   +         end;
MPRINT(EM_DIAGRAM):   end;
2490253   +      end;
MPRINT(EM_DIAGRAM):   end;
2490254   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2490255   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2490256   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2490257   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2490258   +         end;
MPRINT(EM_DIAGRAM):   end;
2490259   +      end;
MPRINT(EM_DIAGRAM):   end;
2490260   +   end;
MPRINT(EM_DIAGRAM):   end;
2490261   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2490262   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2490263   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2490264   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2490265   +      end;
MPRINT(EM_DIAGRAM):   end;
2490266   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2490267   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2490268   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2490269   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2490270   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2490271   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2490272   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2490273   +         end;
MPRINT(EM_DIAGRAM):   end;
2490274   +      end;
MPRINT(EM_DIAGRAM):   end;
2490275   +   end;
MPRINT(EM_DIAGRAM):   end;
2490276   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2490277   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2490278   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2490279   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2490280   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2490281   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2490282   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490283   +   end;
MPRINT(EM_DIAGRAM):   end;
2490284   +end;
MPRINT(EM_DIAGRAM):   end;
2490285   +
2490286   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2490287   +*** Checking missing input Interval
2490288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2490289   +
2490290   +IF NMISS(
2490291   +   AcceptedCmpTotal ,
2490292   +   Age ,
2490293   +   Frq ,
2490294   +   Income ,
2490295   +   Kidhome ,
2490296   +   Mnt ,
2490297   +   MntFishProducts ,
2490298   +   MntFruits ,
2490299   +   MntGoldProds ,
2490300   +   MntMeatProducts ,
2490301   +   MntSweetProducts ,
2490302   +   MntWines ,
2490303   +   MonthsAsCustomer ,
2490304   +   NumCatalogPurchases ,
2490305   +   NumDealsPurchases ,
2490306   +   NumDistPurchases ,
2490307   +   NumStorePurchases ,
2490308   +   NumWebPurchases ,
2490309   +   NumWebVisitsMonth ,
2490310   +   RFMstat ,
2490311   +   RMntFrq ,
2490312   +   Recency ,
2490313   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2490314   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2490315   +
2490316   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490317   +END;
MPRINT(EM_DIAGRAM):   END;
2490318   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2490319   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2490320   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2490321   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2490322   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2490323   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2490324   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2490325   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2490326   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2490327   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2490328   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2490329   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2490330   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2490331   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2490332   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2490333   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2490334   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2490335   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2490336   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2490337   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2490338   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2490339   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2490340   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2490341   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2490342   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2490343   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2490344   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2490345   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2490346   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2490347   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2490348   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2490349   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2490350   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2490351   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2490352   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2490353   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2490354   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2490355   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2490356   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2490357   +END;
MPRINT(EM_DIAGRAM):   END;
2490358   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2490359   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2490360   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2490361   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2490362   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2490363   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2490364   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2490365   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2490366   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2490367   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2490368   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2490369   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2490370   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2490371   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2490372   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2490373   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2490374   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2490375   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2490376   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2490377   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2490378   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2490379   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2490380   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2490381   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2490382   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2490383   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2490384   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2490385   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2490386   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2490387   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2490388   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2490389   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2490390   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2490391   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2490392   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2490393   +   ELSE S_NumCatalogPurchases
2490394   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2490395   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2490396   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2490397   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2490398   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2490399   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2490400   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2490401   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2490402   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2490403   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2490404   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2490405   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2490406   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2490407   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2490408   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2490409   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2490410   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2490411   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2490412   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2490413   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2490414   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2490415   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2490416   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2490417   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2490418   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2490419   +END;
MPRINT(EM_DIAGRAM):   END;
2490420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2490421   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2490422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2490423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2490424   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2490425   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2490426   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2490427   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2490428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2490429   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2490430   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2490431   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2490432   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2490433   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2490434   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2490435   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2490436   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2490437   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2490438   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2490439   +          +    -1.12130210731541 * S_NumDealsPurchases
2490440   +          +    -0.12343505299726 * S_NumDistPurchases
2490441   +          +     0.11863092868196 * S_NumStorePurchases
2490442   +          +       0.583917993314 * S_NumWebPurchases
2490443   +          +     0.75529732848146 * S_NumWebVisitsMonth
2490444   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2490445   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2490446   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 *
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 *
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts +
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 *
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 *
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 *
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 *
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq +
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2490447   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2490448   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2490449   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2490450   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2490451   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2490452   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2490453   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2490454   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2490455   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2490456   +          +    -0.84113790640734 * S_NumDealsPurchases
2490457   +          +    -0.10512672747147 * S_NumDistPurchases
2490458   +          +     0.07268711782494 * S_NumStorePurchases
2490459   +          +     0.57578331257439 * S_NumWebPurchases
2490460   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2490461   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2490462   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2490463   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 *
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 *
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts +
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 *
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines +
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases +
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases +
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases +
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 *
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2490464   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2490465   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2490466   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2490467   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2490468   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2490469   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2490470   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2490471   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2490472   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2490473   +          +     0.45924983504762 * S_NumDealsPurchases
2490474   +          +    -0.25508041581692 * S_NumDistPurchases
2490475   +          +    -1.34901283858526 * S_NumStorePurchases
2490476   +          +    -0.86388975031663 * S_NumWebPurchases
2490477   +          +     1.86136110391797 * S_NumWebVisitsMonth
2490478   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2490479   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2490480   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome +
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 *
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts +
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 *
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 *
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 *
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 *
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq +
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2490481   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2490482   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2490483   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2490484   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2490485   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 *
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 +
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 *
HigherEducationBinary0 ;
2490486   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2490487   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2490488   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2490489   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2490490   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 +
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 *
HigherEducationBinary0 ;
2490491   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2490492   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2490493   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2490494   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2490495   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 +
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 *
HigherEducationBinary0 ;
2490496   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2490497   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2490498   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2490499   +          +     0.48853068455666 * Marital_StatusDivorced
2490500   +          +    -0.54903474026465 * Marital_StatusMarried
2490501   +          +    -0.34079188373939 * Marital_StatusSingle
2490502   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle +
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation +
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced +
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle +
-0.64602969938868 * Marital_StatusTogether ;
2490503   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2490504   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2490505   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2490506   +          +    -1.03547689902027 * Marital_StatusDivorced
2490507   +          +     2.42164864610471 * Marital_StatusMarried
2490508   +          +    -1.95342561304942 * Marital_StatusSingle
2490509   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle +
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 *
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 *
Marital_StatusTogether ;
2490510   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2490511   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2490512   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2490513   +          +      0.4337638747935 * Marital_StatusDivorced
2490514   +          +    -0.38508657017615 * Marital_StatusMarried
2490515   +          +     -0.0160269708326 * Marital_StatusSingle
2490516   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle +
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation +
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced +
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle +
-0.57491004270903 * Marital_StatusTogether ;
2490517   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2490518   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2490519   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2490520   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2490521   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2490522   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2490523   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2490524   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2490525   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2490526   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2490527   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2490528   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2490529   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2490530   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2490531   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2490532   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2490533   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2490534   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2490535   +END;
MPRINT(EM_DIAGRAM):   END;
2490536   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2490537   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2490538   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2490539   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2490540   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2490541   +END;
MPRINT(EM_DIAGRAM):   END;
2490542   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2490543   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2490544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2490545   +
2490546   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2490547   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2490548   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2490549   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2490550   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2490551   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2490552   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2490553   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2490554   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2490555   +end;
MPRINT(EM_DIAGRAM):   end;
2490556   +else do;
MPRINT(EM_DIAGRAM):   else do;
2490557   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2490558   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2490559   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2490560   +   end;
MPRINT(EM_DIAGRAM):   end;
2490561   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2490562   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2490563   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2490564   +   end;
MPRINT(EM_DIAGRAM):   end;
2490565   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2490566   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2490567   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2490568   +   end;
MPRINT(EM_DIAGRAM):   end;
2490569   +end;
MPRINT(EM_DIAGRAM):   end;
2490570   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2490571   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2490572   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 +
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2490573   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2490574   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2490575   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2490576   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2490577   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2490578   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2490579   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2490580   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2490581   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2490582   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2490583   +END;
MPRINT(EM_DIAGRAM):   END;
2490584   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2490585   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2490586   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2490587   +END;
MPRINT(EM_DIAGRAM):   END;
2490588   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2490589   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2490590   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2490591   +END;
MPRINT(EM_DIAGRAM):   END;
2490592   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2490593   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2490594   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2490595   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2490596   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2490597   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2490598   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2490599   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2490600   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2490601   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2490602   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2490603   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2490604   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2490605   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2490606   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2490607   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2490608   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2490609   +END;
MPRINT(EM_DIAGRAM):   END;
2490610   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2490611   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2490612   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2490613   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2490614   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2490615   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2490616   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2490617   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2490618   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2490619   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2490620   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2490621   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2490622   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2490623   +* Renaming Into variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural9;
2490624   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2490625   +length AutoNeural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural9_I_DepVar $32;
2490626   +drop AutoNeural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_I_DepVar;
2490627   +AutoNeural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural9_I_DepVar = I_DepVar;
2490628   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2490629   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2490630   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2490631   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2490632   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2490633   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2490634   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2490635   +* Ensmbl47: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 2 of 5;
2490636   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2490637   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2490638   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2490639   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2490640   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2490641   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2490642   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2490643   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2490644   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2490645   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2490646   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2490647   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2490648   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2490649   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2490650   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2490651   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2490652   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2490653   +LENGTH _WARN_ $4
2490654   +      F_DepVar  $ 12
2490655   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2490656   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2490657   +
2490658   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2490659   +
2490660   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2490661   +
2490662   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2490663   +
2490664   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2490665   +
2490666   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2490667   +
2490668   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2490669   +
2490670   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2490671   +
2490672   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2490673   +
2490674   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2490675   +
2490676   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2490677   +
2490678   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2490679   +
2490680   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2490681   +
2490682   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2490683   +
2490684   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2490685   +
2490686   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2490687   +
2490688   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2490689   +
2490690   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2490691   +
2490692   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2490693   +
2490694   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2490695   +
2490696   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2490697   +
2490698   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2490699   +
2490700   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2490701   +
2490702   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2490703   +
2490704   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2490705   +
2490706   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2490707   +
2490708   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2490709   +
2490710   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2490711   +
2490712   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2490713   +
2490714   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2490715   +
2490716   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2490717   +
2490718   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2490719   +
2490720   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2490721   +
2490722   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2490723   +
2490724   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2490725   +
2490726   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2490727   +
2490728   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2490729   +
2490730   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2490731   +
2490732   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2490733   +
2490734   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2490735   +
2490736   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2490737   +
2490738   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2490739   +
2490740   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2490741   +
2490742   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2490743   +
2490744   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2490745   +
2490746   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2490747   +
2490748   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2490749   +
2490750   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2490751   +
2490752   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2490753   +
2490754   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2490755   +
2490756   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2490757   +
2490758   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2490759   +
2490760   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2490761   +
2490762   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2490763   +
2490764   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2490765   +
2490766   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2490767   +
2490768   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2490769   +
2490770   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2490771   +
2490772   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2490773   +
2490774   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2490775   +
2490776   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2490777   +
2490778   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2490779   +
2490780   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2490781   +
2490782   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2490783   +
2490784   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2490785   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2490786   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2490787   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2490788   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2490789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490790   +end;
MPRINT(EM_DIAGRAM):   end;
2490791   +else do;
MPRINT(EM_DIAGRAM):   else do;
2490792   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2490793   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2490794   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2490795   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2490796   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2490797   +   end;
MPRINT(EM_DIAGRAM):   end;
2490798   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2490799   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2490800   +   end;
MPRINT(EM_DIAGRAM):   end;
2490801   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2490802   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2490803   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2490804   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490805   +   end;
MPRINT(EM_DIAGRAM):   end;
2490806   +end;
MPRINT(EM_DIAGRAM):   end;
2490807   +
2490808   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2490809   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2490810   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2490811   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2490812   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2490813   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490814   +end;
MPRINT(EM_DIAGRAM):   end;
2490815   +else do;
MPRINT(EM_DIAGRAM):   else do;
2490816   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2490817   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2490818   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2490819   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2490820   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2490821   +   end;
MPRINT(EM_DIAGRAM):   end;
2490822   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2490823   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2490824   +   end;
MPRINT(EM_DIAGRAM):   end;
2490825   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2490826   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2490827   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2490828   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490829   +   end;
MPRINT(EM_DIAGRAM):   end;
2490830   +end;
MPRINT(EM_DIAGRAM):   end;
2490831   +
2490832   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2490833   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2490834   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2490835   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2490836   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2490837   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490838   +end;
MPRINT(EM_DIAGRAM):   end;
2490839   +else do;
MPRINT(EM_DIAGRAM):   else do;
2490840   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2490841   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2490842   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2490843   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2490844   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2490845   +   end;
MPRINT(EM_DIAGRAM):   end;
2490846   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2490847   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2490848   +   end;
MPRINT(EM_DIAGRAM):   end;
2490849   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2490850   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2490851   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2490852   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490853   +   end;
MPRINT(EM_DIAGRAM):   end;
2490854   +end;
MPRINT(EM_DIAGRAM):   end;
2490855   +
2490856   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2490857   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2490858   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2490859   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2490860   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2490861   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490862   +end;
MPRINT(EM_DIAGRAM):   end;
2490863   +else do;
MPRINT(EM_DIAGRAM):   else do;
2490864   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2490865   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2490866   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2490867   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2490868   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2490869   +   end;
MPRINT(EM_DIAGRAM):   end;
2490870   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2490871   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2490872   +   end;
MPRINT(EM_DIAGRAM):   end;
2490873   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2490874   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2490875   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2490876   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490877   +   end;
MPRINT(EM_DIAGRAM):   end;
2490878   +end;
MPRINT(EM_DIAGRAM):   end;
2490879   +
2490880   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2490881   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2490882   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2490883   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2490884   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2490885   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490886   +end;
MPRINT(EM_DIAGRAM):   end;
2490887   +else do;
MPRINT(EM_DIAGRAM):   else do;
2490888   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2490889   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2490890   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2490891   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2490892   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2490893   +   end;
MPRINT(EM_DIAGRAM):   end;
2490894   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2490895   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2490896   +   end;
MPRINT(EM_DIAGRAM):   end;
2490897   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2490898   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2490899   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2490900   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490901   +   end;
MPRINT(EM_DIAGRAM):   end;
2490902   +end;
MPRINT(EM_DIAGRAM):   end;
2490903   +
2490904   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2490905   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2490906   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2490907   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2490908   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2490909   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490910   +end;
MPRINT(EM_DIAGRAM):   end;
2490911   +else do;
MPRINT(EM_DIAGRAM):   else do;
2490912   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2490913   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2490914   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2490915   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2490916   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2490917   +   end;
MPRINT(EM_DIAGRAM):   end;
2490918   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2490919   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2490920   +   end;
MPRINT(EM_DIAGRAM):   end;
2490921   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2490922   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2490923   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2490924   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490925   +   end;
MPRINT(EM_DIAGRAM):   end;
2490926   +end;
MPRINT(EM_DIAGRAM):   end;
2490927   +
2490928   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2490929   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2490930   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2490931   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2490932   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2490933   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490934   +end;
MPRINT(EM_DIAGRAM):   end;
2490935   +else do;
MPRINT(EM_DIAGRAM):   else do;
2490936   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2490937   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2490938   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2490939   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2490940   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2490941   +   end;
MPRINT(EM_DIAGRAM):   end;
2490942   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2490943   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2490944   +   end;
MPRINT(EM_DIAGRAM):   end;
2490945   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2490946   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2490947   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2490948   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490949   +   end;
MPRINT(EM_DIAGRAM):   end;
2490950   +end;
MPRINT(EM_DIAGRAM):   end;
2490951   +
2490952   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2490953   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2490954   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2490955   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2490956   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2490957   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2490958   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2490959   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2490960   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2490961   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2490962   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2490963   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2490964   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2490965   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490966   +end;
MPRINT(EM_DIAGRAM):   end;
2490967   +else do;
MPRINT(EM_DIAGRAM):   else do;
2490968   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2490969   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2490970   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2490971   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2490972   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2490973   +   end;
MPRINT(EM_DIAGRAM):   end;
2490974   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2490975   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2490976   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2490977   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2490978   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2490979   +   end;
MPRINT(EM_DIAGRAM):   end;
2490980   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2490981   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2490982   +   end;
MPRINT(EM_DIAGRAM):   end;
2490983   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2490984   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2490985   +   end;
MPRINT(EM_DIAGRAM):   end;
2490986   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2490987   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2490988   +   end;
MPRINT(EM_DIAGRAM):   end;
2490989   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2490990   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2490991   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2490992   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2490993   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2490994   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2490995   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2490996   +   end;
MPRINT(EM_DIAGRAM):   end;
2490997   +end;
MPRINT(EM_DIAGRAM):   end;
2490998   +
2490999   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2491000   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2491001   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2491002   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2491003   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2491004   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2491005   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2491006   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2491007   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2491008   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2491009   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2491010   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2491011   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2491012   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2491013   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2491014   +end;
MPRINT(EM_DIAGRAM):   end;
2491015   +else do;
MPRINT(EM_DIAGRAM):   else do;
2491016   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2491017   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2491018   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2491019   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2491020   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2491021   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2491022   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2491023   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2491024   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2491025   +         end;
MPRINT(EM_DIAGRAM):   end;
2491026   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2491027   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2491028   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2491029   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2491030   +            end;
MPRINT(EM_DIAGRAM):   end;
2491031   +         end;
MPRINT(EM_DIAGRAM):   end;
2491032   +      end;
MPRINT(EM_DIAGRAM):   end;
2491033   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2491034   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2491035   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2491036   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2491037   +         end;
MPRINT(EM_DIAGRAM):   end;
2491038   +      end;
MPRINT(EM_DIAGRAM):   end;
2491039   +   end;
MPRINT(EM_DIAGRAM):   end;
2491040   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2491041   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2491042   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2491043   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2491044   +      end;
MPRINT(EM_DIAGRAM):   end;
2491045   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2491046   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2491047   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2491048   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2491049   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2491050   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2491051   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2491052   +         end;
MPRINT(EM_DIAGRAM):   end;
2491053   +      end;
MPRINT(EM_DIAGRAM):   end;
2491054   +   end;
MPRINT(EM_DIAGRAM):   end;
2491055   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2491056   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2491057   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2491058   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2491059   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2491060   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2491061   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2491062   +   end;
MPRINT(EM_DIAGRAM):   end;
2491063   +end;
MPRINT(EM_DIAGRAM):   end;
2491064   +
2491065   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2491066   +*** Checking missing input Interval
2491067   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2491068   +
2491069   +IF NMISS(
2491070   +   AcceptedCmpTotal ,
2491071   +   Age ,
2491072   +   Frq ,
2491073   +   Income ,
2491074   +   Kidhome ,
2491075   +   Mnt ,
2491076   +   MntFishProducts ,
2491077   +   MntFruits ,
2491078   +   MntGoldProds ,
2491079   +   MntMeatProducts ,
2491080   +   MntSweetProducts ,
2491081   +   MntWines ,
2491082   +   MonthsAsCustomer ,
2491083   +   NumCatalogPurchases ,
2491084   +   NumDealsPurchases ,
2491085   +   NumDistPurchases ,
2491086   +   NumStorePurchases ,
2491087   +   NumWebPurchases ,
2491088   +   NumWebVisitsMonth ,
2491089   +   RFMstat ,
2491090   +   RMntFrq ,
2491091   +   Recency ,
2491092   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2491093   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2491094   +
2491095   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2491096   +END;
MPRINT(EM_DIAGRAM):   END;
2491097   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2491098   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2491099   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2491100   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2491101   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2491102   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2491103   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2491104   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2491105   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2491106   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2491107   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2491108   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2491109   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2491110   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2491111   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2491112   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2491113   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2491114   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2491115   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2491116   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2491117   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2491118   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2491119   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2491120   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2491121   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2491122   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2491123   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2491124   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2491125   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2491126   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2491127   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2491128   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2491129   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2491130   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2491131   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2491132   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2491133   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2491134   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2491135   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2491136   +END;
MPRINT(EM_DIAGRAM):   END;
2491137   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2491138   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2491139   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2491140   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2491141   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2491142   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2491143   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2491144   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2491145   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2491146   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2491147   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2491148   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2491149   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2491150   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2491151   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2491152   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2491153   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2491154   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2491155   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2491156   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2491157   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2491158   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2491159   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2491160   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2491161   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2491162   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2491163   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2491164   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2491165   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2491166   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2491167   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2491168   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2491169   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2491170   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2491171   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2491172   +   ELSE S_NumCatalogPurchases
2491173   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2491174   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2491175   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2491176   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2491177   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2491178   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2491179   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2491180   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2491181   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2491182   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2491183   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2491184   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2491185   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2491186   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2491187   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2491188   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2491189   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2491190   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2491191   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2491192   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2491193   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2491194   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2491195   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2491196   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2491197   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2491198   +END;
MPRINT(EM_DIAGRAM):   END;
2491199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2491200   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2491201   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2491202   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2491203   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2491204   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2491205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2491206   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2491207   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2491208   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2491209   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2491210   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2491211   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2491212   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2491213   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2491214   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2491215   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2491216   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2491217   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2491218   +          +     1.32037113020393 * S_NumDealsPurchases
2491219   +          +     0.42879249227132 * S_NumDistPurchases
2491220   +          +    -0.89190172778783 * S_NumStorePurchases
2491221   +          +    -0.87975442613962 * S_NumWebPurchases
2491222   +          +     2.98977282825831 * S_NumWebVisitsMonth
2491223   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2491224   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2491225   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 *
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 *
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts +
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 *
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines +
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases +
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases +
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases +
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 *
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2491226   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2491227   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2491228   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2491229   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2491230   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2491231   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2491232   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2491233   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2491234   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2491235   +          +    -1.16737670931605 * S_NumDealsPurchases
2491236   +          +     0.08205195039242 * S_NumDistPurchases
2491237   +          +    -0.65367044520084 * S_NumStorePurchases
2491238   +          +     2.39693083674757 * S_NumWebPurchases
2491239   +          +     0.18432526469897 * S_NumWebVisitsMonth
2491240   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2491241   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2491242   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 *
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 *
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts +
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 *
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines +
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases +
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases +
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases +
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 *
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2491243   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2491244   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2491245   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2491246   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2491247   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2491248   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2491249   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2491250   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2491251   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2491252   +          +     0.76616480025024 * S_NumDealsPurchases
2491253   +          +     0.42823368706255 * S_NumDistPurchases
2491254   +          +    -1.16998364854907 * S_NumStorePurchases
2491255   +          +     -1.0841896541746 * S_NumWebPurchases
2491256   +          +     2.74837744375079 * S_NumWebVisitsMonth
2491257   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2491258   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2491259   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 *
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 *
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts +
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 *
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines +
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases +
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases +
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases +
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 *
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2491260   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2491261   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2491262   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2491263   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2491264   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2491265   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2491266   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2491267   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2491268   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2491269   +          +     0.78421010501058 * S_NumDealsPurchases
2491270   +          +     0.01075885160671 * S_NumDistPurchases
2491271   +          +    -1.99395040717832 * S_NumStorePurchases
2491272   +          +    -1.02908330834262 * S_NumWebPurchases
2491273   +          +     2.79163466516477 * S_NumWebVisitsMonth
2491274   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2491275   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2491276   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 *
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 *
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts +
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 *
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines +
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases +
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases +
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases +
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 *
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2491277   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2491278   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2491279   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2491280   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2491281   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2491282   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2491283   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2491284   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2491285   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2491286   +          +    -1.04219068390022 * S_NumDealsPurchases
2491287   +          +    -0.45770204483973 * S_NumDistPurchases
2491288   +          +    -0.04941442229195 * S_NumStorePurchases
2491289   +          +     0.67187353161183 * S_NumWebPurchases
2491290   +          +     2.01907760553871 * S_NumWebVisitsMonth
2491291   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2491292   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2491293   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 *
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 *
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts +
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 *
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 *
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 *
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 *
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq +
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2491294   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2491295   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2491296   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2491297   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2491298   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 +
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 *
HigherEducationBinary0 ;
2491299   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2491300   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2491301   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2491302   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2491303   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 *
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 +
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 *
HigherEducationBinary0 ;
2491304   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2491305   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2491306   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2491307   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2491308   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 +
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 *
HigherEducationBinary0 ;
2491309   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2491310   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2491311   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2491312   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2491313   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 +
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 *
HigherEducationBinary0 ;
2491314   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2491315   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2491316   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2491317   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2491318   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 *
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 +
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 *
HigherEducationBinary0 ;
2491319   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2491320   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2491321   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2491322   +          +     2.58907527032049 * Marital_StatusDivorced
2491323   +          +    -2.45549008158921 * Marital_StatusMarried
2491324   +          +     2.56223650840768 * Marital_StatusSingle
2491325   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle +
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 *
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 *
Marital_StatusTogether ;
2491326   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2491327   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2491328   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2491329   +          +     0.83917299191368 * Marital_StatusDivorced
2491330   +          +    -0.62624692699191 * Marital_StatusMarried
2491331   +          +    -0.22585060624911 * Marital_StatusSingle
2491332   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle +
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 *
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 *
Marital_StatusTogether ;
2491333   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2491334   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2491335   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2491336   +          +    -0.65063506696715 * Marital_StatusDivorced
2491337   +          +    -2.37495865381256 * Marital_StatusMarried
2491338   +          +    -0.54954654146904 * Marital_StatusSingle
2491339   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle +
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 *
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 *
Marital_StatusTogether ;
2491340   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2491341   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2491342   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2491343   +          +     0.16185824798364 * Marital_StatusDivorced
2491344   +          +    -0.08142416735136 * Marital_StatusMarried
2491345   +          +    -0.20392270385969 * Marital_StatusSingle
2491346   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle +
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation +
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced +
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle +
-0.16702436233017 * Marital_StatusTogether ;
2491347   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2491348   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2491349   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2491350   +          +      -0.516522631078 * Marital_StatusDivorced
2491351   +          +    -0.61661247789976 * Marital_StatusMarried
2491352   +          +    -0.99533130308294 * Marital_StatusSingle
2491353   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle +
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation +
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced +
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle +
-0.36897004084592 * Marital_StatusTogether ;
2491354   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2491355   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2491356   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2491357   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2491358   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2491359   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2491360   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2491361   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2491362   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2491363   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2491364   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2491365   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2491366   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2491367   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2491368   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2491369   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2491370   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2491371   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2491372   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2491373   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2491374   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2491375   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2491376   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2491377   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2491378   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2491379   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2491380   +END;
MPRINT(EM_DIAGRAM):   END;
2491381   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2491382   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2491383   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2491384   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2491385   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2491386   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2491387   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2491388   +END;
MPRINT(EM_DIAGRAM):   END;
2491389   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2491390   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2491391   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2491392   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2491393   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2491394   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2491395   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2491396   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2491397   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2491398   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2491399   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2491400   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2491401   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2491402   +          +    -0.03801022287706 * S_NumDealsPurchases
2491403   +          +    -1.50723574966419 * S_NumDistPurchases
2491404   +          +    -0.21514545448485 * S_NumStorePurchases
2491405   +          +    -0.50179555233865 * S_NumWebPurchases
2491406   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2491407   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2491408   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2491409   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 *
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 *
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts +
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 *
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 *
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 *
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 *
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq +
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2491410   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2491411   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2491412   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2491413   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2491414   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2491415   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2491416   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2491417   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2491418   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2491419   +          +     0.70551335536975 * S_NumDealsPurchases
2491420   +          +     0.02824488988803 * S_NumDistPurchases
2491421   +          +    -0.47958123842808 * S_NumStorePurchases
2491422   +          +     1.04559003239583 * S_NumWebPurchases
2491423   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2491424   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2491425   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2491426   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 *
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 *
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts +
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 *
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 *
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 *
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 *
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq +
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2491427   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2491428   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2491429   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2491430   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2491431   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2491432   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2491433   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2491434   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2491435   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2491436   +          +    -0.28907339261907 * S_NumDealsPurchases
2491437   +          +     0.04310505858352 * S_NumDistPurchases
2491438   +          +    -0.99594604666889 * S_NumStorePurchases
2491439   +          +    -0.58870940220114 * S_NumWebPurchases
2491440   +          +     0.84018399925148 * S_NumWebVisitsMonth
2491441   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2491442   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2491443   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 *
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 *
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts +
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 *
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 *
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 *
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 *
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq +
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2491444   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2491445   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2491446   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2491447   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2491448   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2491449   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2491450   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2491451   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2491452   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2491453   +          +     0.52917289878604 * S_NumDealsPurchases
2491454   +          +     0.30974142545809 * S_NumDistPurchases
2491455   +          +    -0.36081450643799 * S_NumStorePurchases
2491456   +          +    -0.28418053386759 * S_NumWebPurchases
2491457   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2491458   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2491459   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2491460   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 *
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 *
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts +
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 *
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 *
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 *
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 *
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq +
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2491461   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2491462   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2491463   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2491464   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2491465   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2491466   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2491467   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2491468   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2491469   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2491470   +          +    -0.47500053723253 * S_NumDealsPurchases
2491471   +          +     0.41421086319635 * S_NumDistPurchases
2491472   +          +     0.69664835428137 * S_NumStorePurchases
2491473   +          +     0.66359306812968 * S_NumWebPurchases
2491474   +          +     0.77931462528741 * S_NumWebVisitsMonth
2491475   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2491476   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2491477   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 *
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 *
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts +
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 *
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 *
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 *
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 *
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq +
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2491478   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2491479   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2491480   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2491481   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2491482   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 *
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 +
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 *
HigherEducationBinary0 ;
2491483   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2491484   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2491485   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2491486   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2491487   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 *
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 +
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 *
HigherEducationBinary0 ;
2491488   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2491489   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2491490   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2491491   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2491492   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 *
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 +
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 *
HigherEducationBinary0 ;
2491493   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2491494   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2491495   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2491496   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2491497   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 *
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 +
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 *
HigherEducationBinary0 ;
2491498   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2491499   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2491500   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2491501   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2491502   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 *
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 +
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 *
HigherEducationBinary0 ;
2491503   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2491504   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2491505   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2491506   +          +    -1.34742914042312 * Marital_StatusDivorced
2491507   +          +    -0.75378934918763 * Marital_StatusMarried
2491508   +          +    -1.85411678929217 * Marital_StatusSingle
2491509   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle +
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 *
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 *
Marital_StatusTogether ;
2491510   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2491511   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2491512   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2491513   +          +     0.47958659206261 * Marital_StatusDivorced
2491514   +          +     -0.9665584294045 * Marital_StatusMarried
2491515   +          +      0.9733784530538 * Marital_StatusSingle
2491516   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle +
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 *
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 *
Marital_StatusTogether ;
2491517   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2491518   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2491519   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2491520   +          +    -0.56894207908284 * Marital_StatusDivorced
2491521   +          +    -0.96715106987195 * Marital_StatusMarried
2491522   +          +     1.18678144721443 * Marital_StatusSingle
2491523   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle +
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation +
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced +
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle +
1.05940264255347 * Marital_StatusTogether ;
2491524   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2491525   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2491526   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2491527   +          +     -0.6061959224661 * Marital_StatusDivorced
2491528   +          +     0.03495844244684 * Marital_StatusMarried
2491529   +          +    -0.63896361063244 * Marital_StatusSingle
2491530   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle +
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation +
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced +
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle +
0.74357887057422 * Marital_StatusTogether ;
2491531   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2491532   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2491533   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2491534   +          +     0.82178907301319 * Marital_StatusDivorced
2491535   +          +     1.69543553114589 * Marital_StatusMarried
2491536   +          +     -2.1272067363559 * Marital_StatusSingle
2491537   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle +
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 *
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 *
Marital_StatusTogether ;
2491538   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2491539   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2491540   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2491541   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2491542   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2491543   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2491544   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2491545   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2491546   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2491547   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2491548   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2491549   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2491550   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2491551   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2491552   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2491553   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2491554   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2491555   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2491556   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2491557   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2491558   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2491559   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2491560   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2491561   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2491562   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2491563   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2491564   +END;
MPRINT(EM_DIAGRAM):   END;
2491565   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2491566   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2491567   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2491568   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2491569   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2491570   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2491571   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2491572   +END;
MPRINT(EM_DIAGRAM):   END;
2491573   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2491574   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2491575   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2491576   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2491577   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2491578   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2491579   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 +
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 +
-1.38760297105319 * H1x1_6 ;
2491580   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2491581   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2491582   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 +
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 +
2.71965753640902 * H1x1_6 ;
2491583   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2491584   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2491585   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 +
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 +
-0.94725163293394 * H1x1_6 ;
2491586   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2491587   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2491588   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 +
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 +
0.66585878141635 * H1x1_6 ;
2491589   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2491590   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2491591   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 +
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 +
3.57592566919388 * H1x1_6 ;
2491592   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2491593   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2491594   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 +
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 +
-0.32006241006585 * H1x1_6 ;
2491595   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2491596   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2491597   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2491598   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 *
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 +
-0.07237646966438 * H1x2_6 ;
2491599   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2491600   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2491601   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2491602   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 +
0.35471332651631 * H1x2_6 ;
2491603   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2491604   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2491605   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2491606   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 +
0.5218140468737 * H1x2_6 ;
2491607   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2491608   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2491609   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2491610   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 +
-0.67920869444907 * H1x2_6 ;
2491611   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2491612   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2491613   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2491614   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 +
1.1175989027563 * H1x2_6 ;
2491615   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2491616   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2491617   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2491618   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 *
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5
+ 1.54589390085972 * H1x2_6 ;
2491619   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2491620   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2491621   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2491622   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2491623   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2491624   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2491625   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2491626   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2491627   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2491628   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2491629   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2491630   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2491631   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2491632   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2491633   +END;
MPRINT(EM_DIAGRAM):   END;
2491634   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2491635   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2491636   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2491637   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2491638   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2491639   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2491640   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2491641   +END;
MPRINT(EM_DIAGRAM):   END;
2491642   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2491643   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2491644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2491645   +
2491646   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2491647   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2491648   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2491649   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2491650   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2491651   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2491652   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2491653   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2491654   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2491655   +end;
MPRINT(EM_DIAGRAM):   end;
2491656   +else do;
MPRINT(EM_DIAGRAM):   else do;
2491657   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2491658   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2491659   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2491660   +   end;
MPRINT(EM_DIAGRAM):   end;
2491661   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2491662   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2491663   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2491664   +   end;
MPRINT(EM_DIAGRAM):   end;
2491665   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2491666   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2491667   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2491668   +   end;
MPRINT(EM_DIAGRAM):   end;
2491669   +end;
MPRINT(EM_DIAGRAM):   end;
2491670   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2491671   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2491672   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2491673   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 +
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 +
1.54726164498938 * H2x1_6 ;
2491674   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2491675   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2491676   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2491677   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2491678   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2491679   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2491680   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2491681   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2491682   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2491683   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2491684   +END;
MPRINT(EM_DIAGRAM):   END;
2491685   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2491686   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2491687   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2491688   +END;
MPRINT(EM_DIAGRAM):   END;
2491689   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2491690   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2491691   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2491692   +END;
MPRINT(EM_DIAGRAM):   END;
2491693   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2491694   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2491695   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2491696   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2491697   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2491698   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2491699   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2491700   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2491701   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2491702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2491703   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2491704   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2491705   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2491706   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2491707   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2491708   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2491709   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2491710   +END;
MPRINT(EM_DIAGRAM):   END;
2491711   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2491712   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2491713   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2491714   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2491715   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2491716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2491717   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2491718   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2491719   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2491720   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2491721   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2491722   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2491723   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2491724   +* Renaming Into variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural11;
2491725   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2491726   +length AutoNeural11_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural11_I_DepVar $32;
2491727   +drop AutoNeural11_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_I_DepVar;
2491728   +AutoNeural11_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural11_I_DepVar = I_DepVar;
2491729   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2491730   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2491731   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2491732   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2491733   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2491734   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2491735   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2491736   +* Ensmbl47: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 3 of 5;
2491737   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2491738   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2491739   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2491740   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2491741   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2491742   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2491743   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2491744   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2491745   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2491746   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2491747   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2491748   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2491749   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2491750   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2491751   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2491752   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2491753   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2491754   +LENGTH _WARN_ $4
2491755   +      F_DepVar  $ 12
2491756   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2491757   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2491758   +
2491759   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2491760   +
2491761   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2491762   +
2491763   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2491764   +
2491765   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2491766   +
2491767   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2491768   +
2491769   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2491770   +
2491771   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2491772   +
2491773   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2491774   +
2491775   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2491776   +
2491777   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2491778   +
2491779   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2491780   +
2491781   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2491782   +
2491783   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2491784   +
2491785   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2491786   +
2491787   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2491788   +
2491789   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2491790   +
2491791   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2491792   +
2491793   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2491794   +
2491795   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2491796   +
2491797   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2491798   +
2491799   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2491800   +
2491801   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2491802   +
2491803   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2491804   +
2491805   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2491806   +
2491807   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2491808   +
2491809   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2491810   +
2491811   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2491812   +
2491813   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2491814   +
2491815   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2491816   +
2491817   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2491818   +
2491819   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2491820   +
2491821   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2491822   +
2491823   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2491824   +
2491825   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2491826   +
2491827   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2491828   +
2491829   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2491830   +
2491831   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2491832   +
2491833   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2491834   +
2491835   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2491836   +
2491837   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2491838   +
2491839   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2491840   +
2491841   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2491842   +
2491843   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2491844   +
2491845   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2491846   +
2491847   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2491848   +
2491849   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2491850   +
2491851   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2491852   +
2491853   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2491854   +
2491855   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2491856   +
2491857   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2491858   +
2491859   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2491860   +
2491861   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2491862   +
2491863   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2491864   +
2491865   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2491866   +
2491867   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2491868   +
2491869   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2491870   +
2491871   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2491872   +
2491873   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2491874   +
2491875   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2491876   +
2491877   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2491878   +
2491879   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2491880   +
2491881   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2491882   +
2491883   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2491884   +
2491885   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2491886   +
2491887   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2491888   +
2491889   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2491890   +
2491891   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2491892   +
2491893   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2491894   +
2491895   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2491896   +
2491897   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2491898   +
2491899   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2491900   +
2491901   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2491902   +
2491903   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2491904   +
2491905   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2491906   +
2491907   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2491908   +
2491909   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2491910   +
2491911   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2491912   +
2491913   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2491914   +
2491915   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2491916   +
2491917   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2491918   +
2491919   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2491920   +
2491921   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2491922   +
2491923   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2491924   +
2491925   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2491926   +
2491927   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2491928   +
2491929   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2491930   +
2491931   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2491932   +
2491933   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2491934   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2491935   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2491936   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2491937   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2491938   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2491939   +end;
MPRINT(EM_DIAGRAM):   end;
2491940   +else do;
MPRINT(EM_DIAGRAM):   else do;
2491941   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2491942   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2491943   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2491944   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2491945   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2491946   +   end;
MPRINT(EM_DIAGRAM):   end;
2491947   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2491948   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2491949   +   end;
MPRINT(EM_DIAGRAM):   end;
2491950   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2491951   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2491952   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2491953   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2491954   +   end;
MPRINT(EM_DIAGRAM):   end;
2491955   +end;
MPRINT(EM_DIAGRAM):   end;
2491956   +
2491957   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2491958   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2491959   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2491960   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2491961   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2491962   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2491963   +end;
MPRINT(EM_DIAGRAM):   end;
2491964   +else do;
MPRINT(EM_DIAGRAM):   else do;
2491965   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2491966   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2491967   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2491968   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2491969   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2491970   +   end;
MPRINT(EM_DIAGRAM):   end;
2491971   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2491972   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2491973   +   end;
MPRINT(EM_DIAGRAM):   end;
2491974   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2491975   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2491976   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2491977   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2491978   +   end;
MPRINT(EM_DIAGRAM):   end;
2491979   +end;
MPRINT(EM_DIAGRAM):   end;
2491980   +
2491981   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2491982   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2491983   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2491984   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2491985   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2491986   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2491987   +end;
MPRINT(EM_DIAGRAM):   end;
2491988   +else do;
MPRINT(EM_DIAGRAM):   else do;
2491989   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2491990   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2491991   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2491992   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2491993   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2491994   +   end;
MPRINT(EM_DIAGRAM):   end;
2491995   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2491996   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2491997   +   end;
MPRINT(EM_DIAGRAM):   end;
2491998   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2491999   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2492000   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2492001   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492002   +   end;
MPRINT(EM_DIAGRAM):   end;
2492003   +end;
MPRINT(EM_DIAGRAM):   end;
2492004   +
2492005   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2492006   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2492007   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2492008   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2492009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2492010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492011   +end;
MPRINT(EM_DIAGRAM):   end;
2492012   +else do;
MPRINT(EM_DIAGRAM):   else do;
2492013   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2492014   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2492015   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2492016   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2492017   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2492018   +   end;
MPRINT(EM_DIAGRAM):   end;
2492019   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2492020   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2492021   +   end;
MPRINT(EM_DIAGRAM):   end;
2492022   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2492023   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2492024   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2492025   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492026   +   end;
MPRINT(EM_DIAGRAM):   end;
2492027   +end;
MPRINT(EM_DIAGRAM):   end;
2492028   +
2492029   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2492030   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2492031   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2492032   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2492033   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2492034   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492035   +end;
MPRINT(EM_DIAGRAM):   end;
2492036   +else do;
MPRINT(EM_DIAGRAM):   else do;
2492037   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2492038   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2492039   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2492040   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2492041   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2492042   +   end;
MPRINT(EM_DIAGRAM):   end;
2492043   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2492044   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2492045   +   end;
MPRINT(EM_DIAGRAM):   end;
2492046   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2492047   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2492048   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2492049   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492050   +   end;
MPRINT(EM_DIAGRAM):   end;
2492051   +end;
MPRINT(EM_DIAGRAM):   end;
2492052   +
2492053   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2492054   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2492055   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2492056   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2492057   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2492058   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492059   +end;
MPRINT(EM_DIAGRAM):   end;
2492060   +else do;
MPRINT(EM_DIAGRAM):   else do;
2492061   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2492062   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2492063   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2492064   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2492065   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2492066   +   end;
MPRINT(EM_DIAGRAM):   end;
2492067   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2492068   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2492069   +   end;
MPRINT(EM_DIAGRAM):   end;
2492070   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2492071   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2492072   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2492073   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492074   +   end;
MPRINT(EM_DIAGRAM):   end;
2492075   +end;
MPRINT(EM_DIAGRAM):   end;
2492076   +
2492077   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2492078   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2492079   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2492080   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2492081   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2492082   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492083   +end;
MPRINT(EM_DIAGRAM):   end;
2492084   +else do;
MPRINT(EM_DIAGRAM):   else do;
2492085   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2492086   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2492087   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2492088   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2492089   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2492090   +   end;
MPRINT(EM_DIAGRAM):   end;
2492091   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2492092   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2492093   +   end;
MPRINT(EM_DIAGRAM):   end;
2492094   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2492095   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2492096   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2492097   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492098   +   end;
MPRINT(EM_DIAGRAM):   end;
2492099   +end;
MPRINT(EM_DIAGRAM):   end;
2492100   +
2492101   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2492102   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2492103   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2492104   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2492105   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2492106   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2492107   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2492108   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2492109   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2492110   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2492111   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2492112   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2492113   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2492114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492115   +end;
MPRINT(EM_DIAGRAM):   end;
2492116   +else do;
MPRINT(EM_DIAGRAM):   else do;
2492117   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2492118   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2492119   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2492120   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2492121   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2492122   +   end;
MPRINT(EM_DIAGRAM):   end;
2492123   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2492124   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2492125   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2492126   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2492127   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2492128   +   end;
MPRINT(EM_DIAGRAM):   end;
2492129   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2492130   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2492131   +   end;
MPRINT(EM_DIAGRAM):   end;
2492132   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2492133   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2492134   +   end;
MPRINT(EM_DIAGRAM):   end;
2492135   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2492136   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2492137   +   end;
MPRINT(EM_DIAGRAM):   end;
2492138   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2492139   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2492140   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2492141   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2492142   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2492143   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2492144   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492145   +   end;
MPRINT(EM_DIAGRAM):   end;
2492146   +end;
MPRINT(EM_DIAGRAM):   end;
2492147   +
2492148   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2492149   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2492150   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2492151   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2492152   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2492153   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2492154   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2492155   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2492156   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2492157   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2492158   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2492159   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2492160   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2492161   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2492162   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492163   +end;
MPRINT(EM_DIAGRAM):   end;
2492164   +else do;
MPRINT(EM_DIAGRAM):   else do;
2492165   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2492166   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2492167   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2492168   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2492169   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2492170   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2492171   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2492172   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2492173   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2492174   +         end;
MPRINT(EM_DIAGRAM):   end;
2492175   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2492176   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
The SAS System
 
2492177   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2492178   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2492179   +            end;
MPRINT(EM_DIAGRAM):   end;
2492180   +         end;
MPRINT(EM_DIAGRAM):   end;
2492181   +      end;
MPRINT(EM_DIAGRAM):   end;
2492182   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2492183   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2492184   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2492185   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2492186   +         end;
MPRINT(EM_DIAGRAM):   end;
2492187   +      end;
MPRINT(EM_DIAGRAM):   end;
2492188   +   end;
MPRINT(EM_DIAGRAM):   end;
2492189   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2492190   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2492191   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2492192   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2492193   +      end;
MPRINT(EM_DIAGRAM):   end;
2492194   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2492195   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2492196   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2492197   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2492198   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2492199   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2492200   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2492201   +         end;
MPRINT(EM_DIAGRAM):   end;
2492202   +      end;
MPRINT(EM_DIAGRAM):   end;
2492203   +   end;
MPRINT(EM_DIAGRAM):   end;
2492204   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2492205   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2492206   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2492207   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2492208   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2492209   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2492210   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492211   +   end;
MPRINT(EM_DIAGRAM):   end;
2492212   +end;
MPRINT(EM_DIAGRAM):   end;
2492213   +
2492214   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2492215   +*** Checking missing input Interval
2492216   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2492217   +
2492218   +IF NMISS(
2492219   +   AcceptedCmpTotal ,
2492220   +   Age ,
2492221   +   Frq ,
2492222   +   Income ,
2492223   +   Kidhome ,
2492224   +   Mnt ,
2492225   +   MntFishProducts ,
2492226   +   MntFruits ,
2492227   +   MntGoldProds ,
2492228   +   MntMeatProducts ,
2492229   +   MntSweetProducts ,
2492230   +   MntWines ,
2492231   +   MonthsAsCustomer ,
2492232   +   NumCatalogPurchases ,
2492233   +   NumDealsPurchases ,
2492234   +   NumDistPurchases ,
2492235   +   NumStorePurchases ,
2492236   +   NumWebPurchases ,
2492237   +   NumWebVisitsMonth ,
2492238   +   RFMstat ,
2492239   +   RMntFrq ,
2492240   +   Recency ,
2492241   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2492242   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2492243   +
2492244   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492245   +END;
MPRINT(EM_DIAGRAM):   END;
2492246   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2492247   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2492248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2492249   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2492250   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2492251   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2492252   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2492253   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2492254   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2492255   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2492256   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2492257   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2492258   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2492259   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2492260   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2492261   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2492262   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2492263   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2492264   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2492265   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2492266   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2492267   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2492268   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2492269   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2492270   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2492271   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2492272   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2492273   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2492274   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2492275   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2492276   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2492277   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2492278   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2492279   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2492280   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2492281   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2492282   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2492283   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2492284   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2492285   +END;
MPRINT(EM_DIAGRAM):   END;
2492286   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2492287   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2492288   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2492289   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2492290   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2492291   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2492292   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2492293   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2492294   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2492295   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2492296   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2492297   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2492298   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2492299   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2492300   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2492301   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2492302   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2492303   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2492304   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2492305   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2492306   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2492307   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2492308   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2492309   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2492310   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2492311   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2492312   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2492313   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2492314   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2492315   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2492316   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2492317   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2492318   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2492319   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2492320   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2492321   +   ELSE S_NumCatalogPurchases
2492322   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2492323   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2492324   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2492325   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2492326   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2492327   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2492328   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2492329   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2492330   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2492331   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2492332   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2492333   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2492334   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2492335   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2492336   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2492337   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2492338   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2492339   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2492340   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2492341   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2492342   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2492343   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2492344   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2492345   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2492346   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2492347   +END;
MPRINT(EM_DIAGRAM):   END;
2492348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2492349   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2492350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2492351   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2492352   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2492353   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2492354   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2492355   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2492356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2492357   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2492358   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2492359   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2492360   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2492361   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2492362   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2492363   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2492364   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2492365   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2492366   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2492367   +          +    -1.18466001117424 * S_NumDealsPurchases
2492368   +          +     -0.1371252133567 * S_NumDistPurchases
2492369   +          +     1.92719775731123 * S_NumStorePurchases
2492370   +          +     1.23184249192116 * S_NumWebPurchases
2492371   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2492372   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2492373   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2492374   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 *
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 *
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts +
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 *
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 *
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 *
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 *
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq +
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2492375   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2492376   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2492377   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2492378   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2492379   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2492380   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2492381   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2492382   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2492383   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2492384   +          +     0.63616523425865 * S_NumDealsPurchases
2492385   +          +     0.45460056261546 * S_NumDistPurchases
2492386   +          +    -0.61009999017225 * S_NumStorePurchases
2492387   +          +     1.85193755731081 * S_NumWebPurchases
2492388   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2492389   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2492390   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2492391   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 *
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 *
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts +
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 *
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines +
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases +
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases +
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases +
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 *
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2492392   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2492393   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2492394   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2492395   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2492396   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2492397   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2492398   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2492399   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2492400   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2492401   +          +      1.8907968580473 * S_NumDealsPurchases
2492402   +          +     0.01244124801764 * S_NumDistPurchases
2492403   +          +    -2.34409118104622 * S_NumStorePurchases
2492404   +          +    -1.80820043087435 * S_NumWebPurchases
2492405   +          +     2.40219682136039 * S_NumWebVisitsMonth
2492406   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2492407   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2492408   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 *
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 *
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts +
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 *
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines +
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases +
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases +
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases +
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 *
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2492409   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2492410   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2492411   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2492412   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2492413   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2492414   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2492415   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2492416   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2492417   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2492418   +          +     0.28209537604198 * S_NumDealsPurchases
2492419   +          +      0.6450277971767 * S_NumDistPurchases
2492420   +          +     0.85050092520609 * S_NumStorePurchases
2492421   +          +    -0.53920307215941 * S_NumWebPurchases
2492422   +          +     3.01106015100147 * S_NumWebVisitsMonth
2492423   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2492424   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2492425   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 *
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 *
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts +
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 *
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 *
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 *
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 *
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq +
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2492426   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2492427   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2492428   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2492429   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2492430   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2492431   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2492432   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2492433   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2492434   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2492435   +          +    -0.36642526324451 * S_NumDealsPurchases
2492436   +          +     -0.6091014843932 * S_NumDistPurchases
2492437   +          +    -0.21154626182088 * S_NumStorePurchases
2492438   +          +    -0.10361347071364 * S_NumWebPurchases
2492439   +          +     1.36358817627784 * S_NumWebVisitsMonth
2492440   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2492441   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2492442   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 *
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 *
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts +
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 *
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines +
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases +
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases +
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases +
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 *
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2492443   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2492444   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2492445   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2492446   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2492447   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2492448   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2492449   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2492450   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2492451   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2492452   +          +    -0.14868505161718 * S_NumDealsPurchases
2492453   +          +    -0.08395384711805 * S_NumDistPurchases
2492454   +          +     0.60525238179245 * S_NumStorePurchases
2492455   +          +     0.04555100214276 * S_NumWebPurchases
2492456   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2492457   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2492458   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2492459   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 *
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome +
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 *
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts +
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 *
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 *
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 *
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 *
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq +
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2492460   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2492461   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2492462   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2492463   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2492464   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 *
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 +
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 *
HigherEducationBinary0 ;
2492465   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2492466   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2492467   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2492468   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2492469   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 *
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 +
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 *
HigherEducationBinary0 ;
2492470   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2492471   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2492472   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2492473   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2492474   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 *
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 +
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 *
HigherEducationBinary0 ;
2492475   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2492476   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2492477   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2492478   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2492479   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 +
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 *
HigherEducationBinary0 ;
2492480   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2492481   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2492482   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2492483   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2492484   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 *
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 +
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 *
HigherEducationBinary0 ;
2492485   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2492486   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2492487   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2492488   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2492489   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 +
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 *
HigherEducationBinary0 ;
2492490   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2492491   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2492492   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2492493   +          +     -0.7180104021039 * Marital_StatusDivorced
2492494   +          +      0.5957373170744 * Marital_StatusMarried
2492495   +          +    -0.86183942803988 * Marital_StatusSingle
2492496   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle +
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 *
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 *
Marital_StatusTogether ;
2492497   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2492498   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2492499   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2492500   +          +     0.84772700244021 * Marital_StatusDivorced
2492501   +          +    -0.37049970188511 * Marital_StatusMarried
2492502   +          +     1.54291641732063 * Marital_StatusSingle
2492503   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle +
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation +
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced +
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle +
0.2036514883055 * Marital_StatusTogether ;
2492504   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2492505   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2492506   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2492507   +          +     0.73222548496385 * Marital_StatusDivorced
2492508   +          +    -0.50102202656102 * Marital_StatusMarried
2492509   +          +    -0.07207130428422 * Marital_StatusSingle
2492510   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle +
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation +
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced +
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle +
0.17349558515949 * Marital_StatusTogether ;
2492511   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2492512   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2492513   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2492514   +          +     0.25894719464799 * Marital_StatusDivorced
2492515   +          +    -1.95576501275834 * Marital_StatusMarried
2492516   +          +     2.65422185276746 * Marital_StatusSingle
2492517   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle +
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 *
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 *
Marital_StatusTogether ;
2492518   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2492519   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2492520   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2492521   +          +     0.60936191204707 * Marital_StatusDivorced
2492522   +          +    -0.52190111190458 * Marital_StatusMarried
2492523   +          +    -0.60982305233136 * Marital_StatusSingle
2492524   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle +
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation +
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced +
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle +
0.44659686388318 * Marital_StatusTogether ;
2492525   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2492526   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2492527   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2492528   +          +    -1.44614502228294 * Marital_StatusDivorced
2492529   +          +      2.9001493892928 * Marital_StatusMarried
2492530   +          +    -2.60467399972513 * Marital_StatusSingle
2492531   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle +
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 *
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 *
Marital_StatusTogether ;
2492532   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2492533   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2492534   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2492535   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2492536   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2492537   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2492538   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2492539   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2492540   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
2492541   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2492542   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2492543   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2492544   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2492545   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2492546   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2492547   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2492548   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2492549   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2492550   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2492551   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2492552   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2492553   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2492554   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2492555   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2492556   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2492557   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2492558   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2492559   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2492560   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2492561   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2492562   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2492563   +END;
MPRINT(EM_DIAGRAM):   END;
2492564   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2492565   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2492566   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2492567   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2492568   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2492569   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2492570   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2492571   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2492572   +END;
MPRINT(EM_DIAGRAM):   END;
2492573   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2492574   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2492575   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2492576   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2492577   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2492578   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2492579   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2492580   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2492581   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2492582   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2492583   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2492584   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2492585   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2492586   +          +    -0.46483717253931 * S_NumDealsPurchases
2492587   +          +    -0.53329008421157 * S_NumDistPurchases
2492588   +          +      0.2490774300193 * S_NumStorePurchases
2492589   +          +    -0.82755150673885 * S_NumWebPurchases
2492590   +          +     0.04007223822389 * S_NumWebVisitsMonth
2492591   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2492592   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2492593   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 *
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 *
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts +
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 *
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 *
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 *
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 *
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq +
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2492594   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2492595   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2492596   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2492597   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2492598   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2492599   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2492600   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2492601   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2492602   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2492603   +          +     0.75855101382458 * S_NumDealsPurchases
2492604   +          +     1.61754951768262 * S_NumDistPurchases
2492605   +          +    -0.48146714929729 * S_NumStorePurchases
2492606   +          +    -0.76460728035552 * S_NumWebPurchases
2492607   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2492608   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2492609   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2492610   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 *
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 *
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 *
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts +
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 *
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 *
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 *
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 *
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq +
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2492611   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2492612   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2492613   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2492614   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2492615   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2492616   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2492617   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2492618   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2492619   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2492620   +          +     0.75255317965748 * S_NumDealsPurchases
2492621   +          +     1.34900588315783 * S_NumDistPurchases
2492622   +          +    -0.17717469778048 * S_NumStorePurchases
2492623   +          +    -0.01560551546553 * S_NumWebPurchases
2492624   +          +     1.24315988674343 * S_NumWebVisitsMonth
2492625   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2492626   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2492627   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 *
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 *
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts +
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 *
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 *
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 *
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 *
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq +
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2492628   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2492629   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2492630   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2492631   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2492632   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2492633   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2492634   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2492635   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2492636   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2492637   +          +    -1.71127148178768 * S_NumDealsPurchases
2492638   +          +    -1.77527355221308 * S_NumDistPurchases
2492639   +          +    -1.40009594349363 * S_NumStorePurchases
2492640   +          +    -0.46471012062697 * S_NumWebPurchases
2492641   +          +     0.04619891083228 * S_NumWebVisitsMonth
2492642   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2492643   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2492644   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 *
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 *
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts +
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 *
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 *
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 *
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 *
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq +
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2492645   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2492646   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2492647   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2492648   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2492649   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2492650   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2492651   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2492652   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2492653   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2492654   +          +    -0.22204470395056 * S_NumDealsPurchases
2492655   +          +    -1.74490476011984 * S_NumDistPurchases
2492656   +          +     1.93538420108324 * S_NumStorePurchases
2492657   +          +     1.04892631742152 * S_NumWebPurchases
2492658   +          +     1.50717841566047 * S_NumWebVisitsMonth
2492659   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2492660   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2492661   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 *
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 *
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts +
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 *
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 *
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 *
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 *
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq +
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2492662   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2492663   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2492664   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2492665   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2492666   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2492667   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2492668   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2492669   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2492670   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2492671   +          +    -0.94690420785776 * S_NumDealsPurchases
2492672   +          +     1.87932706342204 * S_NumDistPurchases
2492673   +          +     0.31232717416487 * S_NumStorePurchases
2492674   +          +     1.51889492693355 * S_NumWebPurchases
2492675   +          +     0.04376853689795 * S_NumWebVisitsMonth
2492676   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2492677   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2492678   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 *
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 *
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts +
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 *
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 *
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 *
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 *
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq +
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2492679   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2492680   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2492681   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2492682   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2492683   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 *
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 +
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 *
HigherEducationBinary0 ;
2492684   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2492685   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2492686   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2492687   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2492688   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 *
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 +
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 *
HigherEducationBinary0 ;
2492689   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2492690   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2492691   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2492692   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2492693   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 *
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 +
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 *
HigherEducationBinary0 ;
2492694   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2492695   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2492696   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2492697   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2492698   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 *
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 +
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 *
HigherEducationBinary0 ;
2492699   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2492700   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2492701   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2492702   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2492703   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 *
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 +
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 *
HigherEducationBinary0 ;
2492704   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2492705   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2492706   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2492707   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2492708   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 +
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 *
HigherEducationBinary0 ;
2492709   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2492710   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2492711   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2492712   +          +     0.56030871857835 * Marital_StatusDivorced
2492713   +          +    -1.22448534379831 * Marital_StatusMarried
2492714   +          +     0.78141783495855 * Marital_StatusSingle
2492715   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle +
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 *
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 *
Marital_StatusTogether ;
2492716   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2492717   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2492718   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2492719   +          +    -2.63452071552997 * Marital_StatusDivorced
2492720   +          +     0.61829054779121 * Marital_StatusMarried
2492721   +          +    -2.20743370246315 * Marital_StatusSingle
2492722   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle +
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 *
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 *
Marital_StatusTogether ;
2492723   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2492724   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2492725   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2492726   +          +      -1.454102516731 * Marital_StatusDivorced
2492727   +          +     0.71488291465759 * Marital_StatusMarried
2492728   +          +     0.96038830049792 * Marital_StatusSingle
2492729   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle +
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 *
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 *
Marital_StatusTogether ;
2492730   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2492731   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2492732   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2492733   +          +    -0.01160394891598 * Marital_StatusDivorced
2492734   +          +    -1.09054636482951 * Marital_StatusMarried
2492735   +          +      0.7793855479379 * Marital_StatusSingle
2492736   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle +
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation +
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced +
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle +
-0.40649435490654 * Marital_StatusTogether ;
2492737   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2492738   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2492739   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2492740   +          +    -0.73414854875115 * Marital_StatusDivorced
2492741   +          +     0.46421425621114 * Marital_StatusMarried
2492742   +          +    -0.54512730625469 * Marital_StatusSingle
2492743   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle +
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 *
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 *
Marital_StatusTogether ;
2492744   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2492745   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2492746   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2492747   +          +     0.25131188683384 * Marital_StatusDivorced
2492748   +          +     2.38279806963807 * Marital_StatusMarried
2492749   +          +     0.28897706448348 * Marital_StatusSingle
2492750   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle +
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 *
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 *
Marital_StatusTogether ;
2492751   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2492752   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2492753   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2492754   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2492755   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2492756   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2492757   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2492758   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2492759   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
2492760   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2492761   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2492762   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2492763   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2492764   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2492765   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2492766   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2492767   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2492768   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2492769   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2492770   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2492771   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2492772   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2492773   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2492774   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2492775   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2492776   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2492777   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2492778   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2492779   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2492780   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2492781   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2492782   +END;
MPRINT(EM_DIAGRAM):   END;
2492783   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2492784   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2492785   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2492786   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2492787   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2492788   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2492789   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2492790   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2492791   +END;
MPRINT(EM_DIAGRAM):   END;
2492792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2492793   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2492794   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2492795   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2492796   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2492797   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2492798   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2492799   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2492800   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2492801   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2492802   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2492803   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2492804   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2492805   +          +     1.11855402225797 * S_NumDealsPurchases
2492806   +          +     0.39150287442005 * S_NumDistPurchases
2492807   +          +     0.00160244551627 * S_NumStorePurchases
2492808   +          +     1.54380043731879 * S_NumWebPurchases
2492809   +          +      0.6462755347813 * S_NumWebVisitsMonth
2492810   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2492811   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2492812   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 *
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 *
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts +
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 *
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 *
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 *
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 *
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq +
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2492813   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2492814   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2492815   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2492816   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2492817   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2492818   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2492819   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2492820   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2492821   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2492822   +          +     0.01911815525287 * S_NumDealsPurchases
2492823   +          +    -1.07196707915227 * S_NumDistPurchases
2492824   +          +      0.6452048321682 * S_NumStorePurchases
2492825   +          +    -0.15818575353955 * S_NumWebPurchases
2492826   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2492827   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2492828   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2492829   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 *
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 *
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts +
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 *
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 *
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 *
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 *
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq +
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2492830   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2492831   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2492832   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2492833   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2492834   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2492835   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2492836   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2492837   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2492838   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2492839   +          +     1.56893739271853 * S_NumDealsPurchases
2492840   +          +      0.6745865425238 * S_NumDistPurchases
2492841   +          +    -0.26848765783548 * S_NumStorePurchases
2492842   +          +     0.79227081430227 * S_NumWebPurchases
2492843   +          +     0.83054874267768 * S_NumWebVisitsMonth
2492844   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2492845   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2492846   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome +
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 *
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts +
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 *
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 *
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 *
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 *
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq +
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2492847   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2492848   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2492849   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2492850   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2492851   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2492852   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2492853   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2492854   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2492855   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2492856   +          +    -0.23954856030467 * S_NumDealsPurchases
2492857   +          +    -1.61914390483829 * S_NumDistPurchases
2492858   +          +      -1.014570623016 * S_NumStorePurchases
2492859   +          +    -0.36828642098701 * S_NumWebPurchases
2492860   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2492861   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2492862   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2492863   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 *
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 *
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts +
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 *
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 *
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 *
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 *
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq +
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2492864   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2492865   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2492866   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2492867   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2492868   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2492869   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2492870   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2492871   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2492872   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2492873   +          +     1.00094082424204 * S_NumDealsPurchases
2492874   +          +      0.2724785290725 * S_NumDistPurchases
2492875   +          +     0.13170237783486 * S_NumStorePurchases
2492876   +          +    -1.31447792523743 * S_NumWebPurchases
2492877   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2492878   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2492879   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2492880   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 *
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 *
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts +
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 *
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines +
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases +
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases +
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases +
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 *
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2492881   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2492882   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2492883   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2492884   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2492885   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2492886   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2492887   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2492888   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2492889   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2492890   +          +    -0.73198872336344 * S_NumDealsPurchases
2492891   +          +     0.29368958872361 * S_NumDistPurchases
2492892   +          +     1.52772046446908 * S_NumStorePurchases
2492893   +          +    -1.75065469134874 * S_NumWebPurchases
2492894   +          +      0.0264954621772 * S_NumWebVisitsMonth
2492895   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2492896   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2492897   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 *
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 *
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts +
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 *
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines +
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases +
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases +
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases +
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 *
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2492898   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2492899   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2492900   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2492901   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2492902   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 *
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 +
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 *
HigherEducationBinary0 ;
2492903   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2492904   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2492905   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2492906   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2492907   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 *
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 +
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 *
HigherEducationBinary0 ;
2492908   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2492909   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2492910   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2492911   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2492912   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 *
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 +
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 *
HigherEducationBinary0 ;
2492913   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2492914   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2492915   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2492916   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2492917   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 *
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 +
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 *
HigherEducationBinary0 ;
2492918   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2492919   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2492920   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2492921   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2492922   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 *
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 +
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 *
HigherEducationBinary0 ;
2492923   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2492924   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2492925   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2492926   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2492927   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 *
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 +
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 *
HigherEducationBinary0 ;
2492928   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2492929   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2492930   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2492931   +          +     0.32207432513904 * Marital_StatusDivorced
2492932   +          +      0.6397913221395 * Marital_StatusMarried
2492933   +          +    -0.25330032559918 * Marital_StatusSingle
2492934   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle +
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 *
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 *
Marital_StatusTogether ;
2492935   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2492936   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2492937   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2492938   +          +     0.79430904713493 * Marital_StatusDivorced
2492939   +          +     2.54456429102799 * Marital_StatusMarried
2492940   +          +     0.59410742352499 * Marital_StatusSingle
2492941   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle +
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 *
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 *
Marital_StatusTogether ;
2492942   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2492943   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2492944   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2492945   +          +    -0.43081775693595 * Marital_StatusDivorced
2492946   +          +    -0.78485102174552 * Marital_StatusMarried
2492947   +          +    -1.56581090110813 * Marital_StatusSingle
2492948   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle +
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation +
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced +
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle +
1.31552735466691 * Marital_StatusTogether ;
2492949   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2492950   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2492951   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2492952   +          +     0.38226706522151 * Marital_StatusDivorced
2492953   +          +     0.96666958079914 * Marital_StatusMarried
2492954   +          +    -0.07771259761555 * Marital_StatusSingle
2492955   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle +
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 *
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 *
Marital_StatusTogether ;
2492956   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2492957   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2492958   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2492959   +          +    -0.38325393606947 * Marital_StatusDivorced
2492960   +          +    -1.43303056163299 * Marital_StatusMarried
2492961   +          +     0.11571941757387 * Marital_StatusSingle
2492962   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle +
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 *
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 *
Marital_StatusTogether ;
2492963   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2492964   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2492965   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2492966   +          +    -0.36491799765765 * Marital_StatusDivorced
2492967   +          +     0.14142786767503 * Marital_StatusMarried
2492968   +          +     0.22643970468805 * Marital_StatusSingle
2492969   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried +
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2492970   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2492971   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2492972   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2492973   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2492974   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2492975   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2492976   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2492977   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2492978   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
2492979   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2492980   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2492981   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2492982   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2492983   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2492984   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2492985   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2492986   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2492987   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2492988   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2492989   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2492990   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2492991   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2492992   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2492993   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2492994   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2492995   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2492996   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2492997   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2492998   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2492999   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2493000   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2493001   +END;
MPRINT(EM_DIAGRAM):   END;
2493002   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2493003   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2493004   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2493005   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2493006   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2493007   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2493008   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2493009   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2493010   +END;
MPRINT(EM_DIAGRAM):   END;
2493011   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493012   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2493013   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493014   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2493015   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2493016   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2493017   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2493018   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 +
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 +
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2493019   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2493020   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2493021   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2493022   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 +
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 +
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2493023   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2493024   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2493025   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2493026   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 +
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 +
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2493027   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2493028   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2493029   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2493030   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 +
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 +
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2493031   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2493032   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2493033   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2493034   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 +
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 +
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2493035   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2493036   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2493037   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2493038   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 +
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 +
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2493039   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2493040   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2493041   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2493042   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 *
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 +
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2493043   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2493044   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2493045   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2493046   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 +
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2493047   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2493048   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2493049   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2493050   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 +
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2493051   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2493052   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2493053   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2493054   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 +
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2493055   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2493056   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2493057   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2493058   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 *
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 +
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2493059   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2493060   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2493061   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2493062   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 +
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2493063   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2493064   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2493065   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2493066   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 +
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 +
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2493067   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2493068   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2493069   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2493070   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 +
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2493071   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2493072   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2493073   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2493074   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 +
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2493075   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2493076   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2493077   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2493078   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 +
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2493079   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2493080   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2493081   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2493082   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 +
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2493083   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2493084   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2493085   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2493086   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 +
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2493087   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2493088   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2493089   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2493090   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2493091   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2493092   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2493093   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2493094   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2493095   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
2493096   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2493097   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2493098   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2493099   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2493100   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2493101   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2493102   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2493103   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2493104   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2493105   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2493106   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2493107   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2493108   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2493109   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2493110   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2493111   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2493112   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2493113   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2493114   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2493115   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2493116   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2493117   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2493118   +END;
MPRINT(EM_DIAGRAM):   END;
2493119   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2493120   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2493121   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2493122   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2493123   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2493124   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2493125   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2493126   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2493127   +END;
MPRINT(EM_DIAGRAM):   END;
2493128   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493129   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2493130   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493131   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2493132   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2493133   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2493134   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2493135   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 +
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 +
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2493136   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2493137   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2493138   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2493139   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 +
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 +
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2493140   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2493141   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2493142   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2493143   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 +
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 +
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2493144   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2493145   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2493146   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2493147   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 +
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 +
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2493148   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2493149   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2493150   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2493151   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 +
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 +
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2493152   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2493153   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2493154   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2493155   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 +
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 +
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2493156   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2493157   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2493158   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2493159   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 *
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 +
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2493160   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2493161   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2493162   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2493163   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 +
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2493164   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2493165   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2493166   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2493167   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 +
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2493168   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2493169   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2493170   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2493171   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 +
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2493172   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2493173   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2493174   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2493175   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 +
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2493176   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2493177   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2493178   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2493179   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 +
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2493180   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2493181   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2493182   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2493183   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 +
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 +
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2493184   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2493185   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2493186   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2493187   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 *
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 +
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2493188   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2493189   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2493190   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2493191   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 *
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 +
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2493192   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2493193   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2493194   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2493195   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 +
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2493196   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2493197   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2493198   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2493199   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 *
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 +
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2493200   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2493201   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2493202   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2493203   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 +
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2493204   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2493205   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2493206   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2493207   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2493208   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2493209   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2493210   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2493211   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2493212   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 ,
H2x2_7 );
2493213   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2493214   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2493215   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2493216   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2493217   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2493218   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2493219   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2493220   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2493221   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2493222   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2493223   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2493224   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2493225   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2493226   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2493227   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2493228   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2493229   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2493230   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2493231   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2493232   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2493233   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2493234   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2493235   +END;
MPRINT(EM_DIAGRAM):   END;
2493236   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2493237   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2493238   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2493239   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2493240   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2493241   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2493242   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2493243   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2493244   +END;
MPRINT(EM_DIAGRAM):   END;
2493245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493246   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2493247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493248   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2493249   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2493250   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2493251   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2493252   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 +
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 +
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2493253   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2493254   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2493255   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2493256   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 +
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 +
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2493257   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2493258   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2493259   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2493260   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 +
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 +
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2493261   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2493262   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2493263   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2493264   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 +
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 +
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2493265   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2493266   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2493267   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2493268   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 +
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 +
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2493269   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2493270   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2493271   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2493272   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 +
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 +
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2493273   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2493274   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2493275   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2493276   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 +
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 +
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2493277   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2493278   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2493279   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2493280   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 +
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2493281   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2493282   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2493283   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2493284   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 +
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2493285   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2493286   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2493287   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2493288   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 +
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2493289   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2493290   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2493291   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2493292   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 +
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2493293   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2493294   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2493295   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2493296   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 *
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 +
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2493297   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2493298   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2493299   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2493300   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 +
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2493301   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2493302   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2493303   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2493304   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 +
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2493305   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2493306   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2493307   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2493308   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2493309   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2493310   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2493311   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2493312   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2493313   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2493314   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2493315   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2493316   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2493317   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2493318   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2493319   +END;
MPRINT(EM_DIAGRAM):   END;
2493320   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2493321   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2493322   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2493323   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2493324   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2493325   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2493326   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2493327   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2493328   +END;
MPRINT(EM_DIAGRAM):   END;
2493329   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493330   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2493331   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493332   +
2493333   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2493334   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2493335   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2493336   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2493337   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2493338   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493339   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2493340   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2493341   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2493342   +end;
MPRINT(EM_DIAGRAM):   end;
2493343   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493344   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2493345   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2493346   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2493347   +   end;
MPRINT(EM_DIAGRAM):   end;
2493348   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2493349   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2493350   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2493351   +   end;
MPRINT(EM_DIAGRAM):   end;
2493352   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493353   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2493354   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2493355   +   end;
MPRINT(EM_DIAGRAM):   end;
2493356   +end;
MPRINT(EM_DIAGRAM):   end;
2493357   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2493358   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2493359   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2493360   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2493361   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 +
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 +
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2493362   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2493363   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2493364   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2493365   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2493366   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2493367   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2493368   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2493369   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2493370   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2493371   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2493372   +END;
MPRINT(EM_DIAGRAM):   END;
2493373   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2493374   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2493375   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2493376   +END;
MPRINT(EM_DIAGRAM):   END;
2493377   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2493378   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2493379   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2493380   +END;
MPRINT(EM_DIAGRAM):   END;
2493381   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2493382   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2493383   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2493384   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2493385   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2493386   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2493387   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2493388   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493389   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2493390   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493391   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2493392   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2493393   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2493394   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2493395   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2493396   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2493397   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2493398   +END;
MPRINT(EM_DIAGRAM):   END;
2493399   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2493400   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2493401   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2493402   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2493403   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2493404   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493405   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2493406   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493407   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2493408   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2493409   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2493410   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2493411   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493412   +* Renaming Into variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural12;
2493413   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493414   +length AutoNeural12_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural12_I_DepVar $32;
2493415   +drop AutoNeural12_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_I_DepVar;
2493416   +AutoNeural12_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural12_I_DepVar = I_DepVar;
2493417   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493418   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2493419   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493420   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2493421   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2493422   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2493423   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493424   +* Ensmbl47: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 4 of 5;
2493425   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493426   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493427   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2493428   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2493429   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2493430   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493431   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2493432   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2493433   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2493434   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2493435   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2493436   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2493437   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2493438   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2493439   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2493440   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2493441   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2493442   +LENGTH _WARN_ $4
2493443   +      F_DepVar  $ 12
2493444   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2493445   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2493446   +
2493447   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2493448   +
2493449   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2493450   +
2493451   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2493452   +
2493453   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2493454   +
2493455   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2493456   +
2493457   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2493458   +
2493459   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2493460   +
2493461   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2493462   +
2493463   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2493464   +
2493465   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2493466   +
2493467   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2493468   +
2493469   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2493470   +
2493471   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2493472   +
2493473   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2493474   +
2493475   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2493476   +
2493477   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2493478   +
2493479   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2493480   +
2493481   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2493482   +
2493483   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2493484   +
2493485   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2493486   +
2493487   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2493488   +
2493489   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2493490   +
2493491   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2493492   +
2493493   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2493494   +
2493495   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2493496   +
2493497   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2493498   +
2493499   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2493500   +
2493501   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2493502   +
2493503   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2493504   +
2493505   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2493506   +
2493507   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2493508   +
2493509   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2493510   +
2493511   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2493512   +
2493513   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2493514   +
2493515   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2493516   +
2493517   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2493518   +
2493519   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2493520   +
2493521   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2493522   +
2493523   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2493524   +
2493525   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2493526   +
2493527   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2493528   +
2493529   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2493530   +
2493531   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2493532   +
2493533   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2493534   +
2493535   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2493536   +
2493537   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2493538   +
2493539   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2493540   +
2493541   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2493542   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2493543   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2493544   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2493545   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493546   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493547   +end;
MPRINT(EM_DIAGRAM):   end;
2493548   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493549   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2493550   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2493551   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493552   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2493553   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2493554   +   end;
MPRINT(EM_DIAGRAM):   end;
2493555   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2493556   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2493557   +   end;
MPRINT(EM_DIAGRAM):   end;
2493558   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493559   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2493560   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493561   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493562   +   end;
MPRINT(EM_DIAGRAM):   end;
2493563   +end;
MPRINT(EM_DIAGRAM):   end;
2493564   +
2493565   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2493566   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2493567   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2493568   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2493569   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493570   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493571   +end;
MPRINT(EM_DIAGRAM):   end;
2493572   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493573   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2493574   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2493575   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493576   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2493577   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2493578   +   end;
MPRINT(EM_DIAGRAM):   end;
2493579   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2493580   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2493581   +   end;
MPRINT(EM_DIAGRAM):   end;
2493582   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493583   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2493584   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493585   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493586   +   end;
MPRINT(EM_DIAGRAM):   end;
2493587   +end;
MPRINT(EM_DIAGRAM):   end;
2493588   +
2493589   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2493590   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2493591   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2493592   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2493593   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493594   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493595   +end;
MPRINT(EM_DIAGRAM):   end;
2493596   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493597   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2493598   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2493599   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493600   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2493601   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2493602   +   end;
MPRINT(EM_DIAGRAM):   end;
2493603   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2493604   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2493605   +   end;
MPRINT(EM_DIAGRAM):   end;
2493606   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493607   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2493608   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493609   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493610   +   end;
MPRINT(EM_DIAGRAM):   end;
2493611   +end;
MPRINT(EM_DIAGRAM):   end;
2493612   +
2493613   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2493614   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2493615   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2493616   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2493617   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493618   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493619   +end;
MPRINT(EM_DIAGRAM):   end;
2493620   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493621   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2493622   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2493623   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493624   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2493625   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2493626   +   end;
MPRINT(EM_DIAGRAM):   end;
2493627   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2493628   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2493629   +   end;
MPRINT(EM_DIAGRAM):   end;
2493630   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493631   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2493632   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493633   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493634   +   end;
MPRINT(EM_DIAGRAM):   end;
2493635   +end;
MPRINT(EM_DIAGRAM):   end;
2493636   +
2493637   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2493638   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2493639   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2493640   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2493641   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493642   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493643   +end;
MPRINT(EM_DIAGRAM):   end;
2493644   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493645   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2493646   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2493647   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493648   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2493649   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2493650   +   end;
MPRINT(EM_DIAGRAM):   end;
2493651   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2493652   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2493653   +   end;
MPRINT(EM_DIAGRAM):   end;
2493654   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493655   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2493656   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493657   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493658   +   end;
MPRINT(EM_DIAGRAM):   end;
2493659   +end;
MPRINT(EM_DIAGRAM):   end;
2493660   +
2493661   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2493662   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2493663   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2493664   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2493665   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493666   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493667   +end;
MPRINT(EM_DIAGRAM):   end;
2493668   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493669   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2493670   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2493671   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493672   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2493673   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2493674   +   end;
MPRINT(EM_DIAGRAM):   end;
2493675   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2493676   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2493677   +   end;
MPRINT(EM_DIAGRAM):   end;
2493678   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493679   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2493680   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493681   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493682   +   end;
MPRINT(EM_DIAGRAM):   end;
2493683   +end;
MPRINT(EM_DIAGRAM):   end;
2493684   +
2493685   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2493686   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2493687   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2493688   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2493689   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493690   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493691   +end;
MPRINT(EM_DIAGRAM):   end;
2493692   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493693   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2493694   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2493695   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493696   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2493697   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2493698   +   end;
MPRINT(EM_DIAGRAM):   end;
2493699   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2493700   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2493701   +   end;
MPRINT(EM_DIAGRAM):   end;
2493702   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493703   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2493704   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493705   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493706   +   end;
MPRINT(EM_DIAGRAM):   end;
2493707   +end;
MPRINT(EM_DIAGRAM):   end;
2493708   +
2493709   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2493710   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2493711   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2493712   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2493713   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2493714   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2493715   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2493716   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2493717   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2493718   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2493719   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2493720   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2493721   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493722   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493723   +end;
MPRINT(EM_DIAGRAM):   end;
2493724   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493725   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2493726   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2493727   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493728   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2493729   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2493730   +   end;
MPRINT(EM_DIAGRAM):   end;
2493731   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2493732   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2493733   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2493734   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2493735   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2493736   +   end;
MPRINT(EM_DIAGRAM):   end;
2493737   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2493738   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2493739   +   end;
MPRINT(EM_DIAGRAM):   end;
2493740   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2493741   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2493742   +   end;
MPRINT(EM_DIAGRAM):   end;
2493743   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2493744   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2493745   +   end;
MPRINT(EM_DIAGRAM):   end;
2493746   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493747   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2493748   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2493749   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2493750   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2493751   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493752   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493753   +   end;
MPRINT(EM_DIAGRAM):   end;
2493754   +end;
MPRINT(EM_DIAGRAM):   end;
2493755   +
2493756   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2493757   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2493758   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2493759   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2493760   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2493761   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2493762   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2493763   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2493764   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2493765   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2493766   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2493767   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2493768   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2493769   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493770   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493771   +end;
MPRINT(EM_DIAGRAM):   end;
2493772   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493773   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2493774   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2493775   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493776   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2493777   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2493778   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2493779   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2493780   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2493781   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2493782   +         end;
MPRINT(EM_DIAGRAM):   end;
2493783   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2493784   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2493785   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2493786   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2493787   +            end;
MPRINT(EM_DIAGRAM):   end;
2493788   +         end;
MPRINT(EM_DIAGRAM):   end;
2493789   +      end;
MPRINT(EM_DIAGRAM):   end;
2493790   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2493791   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2493792   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2493793   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2493794   +         end;
MPRINT(EM_DIAGRAM):   end;
2493795   +      end;
MPRINT(EM_DIAGRAM):   end;
2493796   +   end;
MPRINT(EM_DIAGRAM):   end;
2493797   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493798   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2493799   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2493800   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2493801   +      end;
MPRINT(EM_DIAGRAM):   end;
2493802   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2493803   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2493804   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2493805   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2493806   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2493807   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2493808   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2493809   +         end;
MPRINT(EM_DIAGRAM):   end;
2493810   +      end;
MPRINT(EM_DIAGRAM):   end;
2493811   +   end;
MPRINT(EM_DIAGRAM):   end;
2493812   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2493813   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2493814   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2493815   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2493816   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2493817   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493818   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493819   +   end;
MPRINT(EM_DIAGRAM):   end;
2493820   +end;
MPRINT(EM_DIAGRAM):   end;
2493821   +
2493822   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493823   +*** Checking missing input Interval
2493824   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2493825   +
2493826   +IF NMISS(
2493827   +   AcceptedCmpTotal ,
2493828   +   Age ,
2493829   +   Frq ,
2493830   +   Income ,
2493831   +   Kidhome ,
2493832   +   Mnt ,
2493833   +   MntFishProducts ,
2493834   +   MntFruits ,
2493835   +   MntGoldProds ,
2493836   +   MntMeatProducts ,
2493837   +   MntSweetProducts ,
2493838   +   MntWines ,
2493839   +   MonthsAsCustomer ,
2493840   +   NumCatalogPurchases ,
2493841   +   NumDealsPurchases ,
2493842   +   NumDistPurchases ,
2493843   +   NumStorePurchases ,
2493844   +   NumWebPurchases ,
2493845   +   NumWebVisitsMonth ,
2493846   +   RFMstat ,
2493847   +   RMntFrq ,
2493848   +   Recency ,
2493849   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2493850   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2493851   +
2493852   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493853   +END;
MPRINT(EM_DIAGRAM):   END;
2493854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493855   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2493856   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493857   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2493858   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2493859   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2493860   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2493861   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2493862   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2493863   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2493864   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2493865   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2493866   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2493867   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2493868   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2493869   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2493870   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2493871   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2493872   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2493873   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2493874   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2493875   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2493876   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2493877   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2493878   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2493879   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2493880   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2493881   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2493882   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2493883   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2493884   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2493885   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2493886   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2493887   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2493888   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2493889   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2493890   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2493891   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2493892   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2493893   +END;
MPRINT(EM_DIAGRAM):   END;
2493894   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2493895   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2493896   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2493897   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2493898   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2493899   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2493900   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2493901   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2493902   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2493903   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2493904   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2493905   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2493906   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2493907   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2493908   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2493909   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2493910   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2493911   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2493912   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2493913   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2493914   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2493915   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2493916   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2493917   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2493918   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2493919   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2493920   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2493921   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2493922   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2493923   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2493924   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2493925   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2493926   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2493927   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2493928   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2493929   +   ELSE S_NumCatalogPurchases
2493930   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2493931   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2493932   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2493933   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2493934   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2493935   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2493936   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2493937   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2493938   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2493939   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2493940   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2493941   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2493942   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2493943   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2493944   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2493945   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2493946   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2493947   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2493948   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2493949   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2493950   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2493951   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2493952   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2493953   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2493954   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2493955   +END;
MPRINT(EM_DIAGRAM):   END;
2493956   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493957   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2493958   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493959   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493960   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2493961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493963   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2493964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493965   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2493966   +   H1x1_1  =     0.27051750628107 * S_AcceptedCmpTotal
2493967   +          +    -0.01552488999587 * S_Age  +    -0.19918933236131 * S_Frq
2493968   +          +    -0.18053367989037 * S_Income  +     0.17934470816975 *
2493969   +        S_Kidhome  +    -0.27914859130186 * S_Mnt  +    -0.05331142159606 *
2493970   +        S_MntFishProducts  +    -0.03730503814111 * S_MntFruits
2493971   +          +     0.01217897476566 * S_MntGoldProds  +       0.241005967683 *
2493972   +        S_MntMeatProducts  +    -0.02873172523867 * S_MntSweetProducts
2493973   +          +    -0.35773732926132 * S_MntWines  +    -0.00800625524539 *
2493974   +        S_MonthsAsCustomer  +     0.14253720708201 * S_NumCatalogPurchases
2493975   +          +     0.09634439105648 * S_NumDealsPurchases
2493976   +          +     -0.2727389064287 * S_NumDistPurchases
2493977   +          +    -0.14179871978162 * S_NumStorePurchases
2493978   +          +     0.11008049559527 * S_NumWebPurchases
2493979   +          +    -0.16791463027749 * S_NumWebVisitsMonth
2493980   +          +     0.12827091331546 * S_RFMstat  +    -0.05819422771336 *
2493981   +        S_RMntFrq  +     0.17192522504917 * S_Recency
2493982   +          +     0.13379709932247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27051750628107 * S_AcceptedCmpTotal + -0.01552488999587 *
S_Age + -0.19918933236131 * S_Frq + -0.18053367989037 * S_Income + 0.17934470816975 *
S_Kidhome + -0.27914859130186 * S_Mnt + -0.05331142159606 * S_MntFishProducts +
-0.03730503814111 * S_MntFruits + 0.01217897476566 * S_MntGoldProds + 0.241005967683 *
S_MntMeatProducts + -0.02873172523867 * S_MntSweetProducts + -0.35773732926132 * S_MntWines +
-0.00800625524539 * S_MonthsAsCustomer + 0.14253720708201 * S_NumCatalogPurchases +
0.09634439105648 * S_NumDealsPurchases + -0.2727389064287 * S_NumDistPurchases +
-0.14179871978162 * S_NumStorePurchases + 0.11008049559527 * S_NumWebPurchases +
-0.16791463027749 * S_NumWebVisitsMonth + 0.12827091331546 * S_RFMstat + -0.05819422771336 *
S_RMntFrq + 0.17192522504917 * S_Recency + 0.13379709932247 * S_Teenhome ;
2493983   +   H1x1_2  =      0.2625003002792 * S_AcceptedCmpTotal
2493984   +          +    -0.00409648963127 * S_Age  +    -0.08422560024107 * S_Frq
2493985   +          +      0.1678148652095 * S_Income  +      -0.122580580609 *
2493986   +        S_Kidhome  +    -0.41368311141801 * S_Mnt  +     -0.0649787838725 *
2493987   +        S_MntFishProducts  +    -0.06363287766971 * S_MntFruits
2493988   +          +     0.00810850196464 * S_MntGoldProds  +      0.2984971941271 *
2493989   +        S_MntMeatProducts  +     -0.0651075315757 * S_MntSweetProducts
2493990   +          +    -0.42717799596572 * S_MntWines  +    -0.00945771129633 *
2493991   +        S_MonthsAsCustomer  +     0.33346839008681 * S_NumCatalogPurchases
2493992   +          +     0.15835936877168 * S_NumDealsPurchases
2493993   +          +     0.04229992769587 * S_NumDistPurchases
2493994   +          +    -0.04051362547639 * S_NumStorePurchases
2493995   +          +    -0.01791546488406 * S_NumWebPurchases
2493996   +          +     0.28833008597045 * S_NumWebVisitsMonth
2493997   +          +     0.08007709098478 * S_RFMstat  +     0.37677948418886 *
2493998   +        S_RMntFrq  +    -0.32542265112765 * S_Recency
2493999   +          +    -0.10763248273834 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2625003002792 * S_AcceptedCmpTotal + -0.00409648963127 *
S_Age + -0.08422560024107 * S_Frq + 0.1678148652095 * S_Income + -0.122580580609 * S_Kidhome +
-0.41368311141801 * S_Mnt + -0.0649787838725 * S_MntFishProducts + -0.06363287766971 *
S_MntFruits + 0.00810850196464 * S_MntGoldProds + 0.2984971941271 * S_MntMeatProducts +
-0.0651075315757 * S_MntSweetProducts + -0.42717799596572 * S_MntWines + -0.00945771129633 *
S_MonthsAsCustomer + 0.33346839008681 * S_NumCatalogPurchases + 0.15835936877168 *
S_NumDealsPurchases + 0.04229992769587 * S_NumDistPurchases + -0.04051362547639 *
S_NumStorePurchases + -0.01791546488406 * S_NumWebPurchases + 0.28833008597045 *
S_NumWebVisitsMonth + 0.08007709098478 * S_RFMstat + 0.37677948418886 * S_RMntFrq +
-0.32542265112765 * S_Recency + -0.10763248273834 * S_Teenhome ;
2494000   +   H1x1_1  = H1x1_1  +     0.17927888078386 * AcceptedCmp10
2494001   +          +       0.309097592234 * AcceptedCmp20  +     0.30005706470617 *
2494002   +        AcceptedCmp30  +     0.30534843193785 * AcceptedCmp40
2494003   +          +     0.19575142296602 * AcceptedCmp50  +    -0.26930325741881 *
2494004   +        Complain0  +    -0.07193220591551 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.17927888078386 * AcceptedCmp10 + 0.309097592234 *
AcceptedCmp20 + 0.30005706470617 * AcceptedCmp30 + 0.30534843193785 * AcceptedCmp40 +
0.19575142296602 * AcceptedCmp50 + -0.26930325741881 * Complain0 + -0.07193220591551 *
HigherEducationBinary0 ;
2494005   +   H1x1_2  = H1x1_2  +     0.01282806481889 * AcceptedCmp10
2494006   +          +     0.01542710847454 * AcceptedCmp20  +     0.03576476827309 *
2494007   +        AcceptedCmp30  +     0.04230610697529 * AcceptedCmp40
2494008   +          +     0.03405078302469 * AcceptedCmp50  +     0.13002166919554 *
2494009   +        Complain0  +    -0.08203696285033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.01282806481889 * AcceptedCmp10 + 0.01542710847454 *
AcceptedCmp20 + 0.03576476827309 * AcceptedCmp30 + 0.04230610697529 * AcceptedCmp40 +
0.03405078302469 * AcceptedCmp50 + 0.13002166919554 * Complain0 + -0.08203696285033 *
HigherEducationBinary0 ;
2494010   +   H1x1_1  = H1x1_1  +    -0.04471063478028 * Education2n_Cycle
2494011   +          +     0.15571809437849 * EducationBasic  +    -0.00113978624206 *
2494012   +        EducationGraduation  +     0.00750750981266 * EducationMaster
2494013   +          +     -0.0504367274898 * Marital_StatusDivorced
2494014   +          +     0.28345714390306 * Marital_StatusMarried
2494015   +          +     -0.2012923780435 * Marital_StatusSingle
2494016   +          +     0.20022167903492 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04471063478028 * Education2n_Cycle +
0.15571809437849 * EducationBasic + -0.00113978624206 * EducationGraduation + 0.00750750981266
* EducationMaster + -0.0504367274898 * Marital_StatusDivorced + 0.28345714390306 *
Marital_StatusMarried + -0.2012923780435 * Marital_StatusSingle + 0.20022167903492 *
Marital_StatusTogether ;
2494017   +   H1x1_2  = H1x1_2  +     0.12691361812265 * Education2n_Cycle
2494018   +          +       0.003205191831 * EducationBasic  +    -0.04323354449955 *
2494019   +        EducationGraduation  +    -0.06699429239126 * EducationMaster
2494020   +          +     0.06828937261262 * Marital_StatusDivorced
2494021   +          +     -0.1520862543536 * Marital_StatusMarried
2494022   +          +      0.1392808464716 * Marital_StatusSingle
2494023   +          +    -0.12406922875482 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12691361812265 * Education2n_Cycle + 0.003205191831
* EducationBasic + -0.04323354449955 * EducationGraduation + -0.06699429239126 *
EducationMaster + 0.06828937261262 * Marital_StatusDivorced + -0.1520862543536 *
Marital_StatusMarried + 0.1392808464716 * Marital_StatusSingle + -0.12406922875482 *
Marital_StatusTogether ;
2494024   +   H1x1_1  =     0.89722634972069 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.89722634972069 + H1x1_1 ;
2494025   +   H1x1_2  =     -0.5979471913364 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5979471913364 + H1x1_2 ;
2494026   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2494027   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2494028   +END;
MPRINT(EM_DIAGRAM):   END;
2494029   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2494030   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2494031   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2494032   +END;
MPRINT(EM_DIAGRAM):   END;
2494033   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494034   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2494035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494036   +
2494037   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2494038   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2494039   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2494040   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2494041   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2494042   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494043   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2494044   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2494045   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2494046   +end;
MPRINT(EM_DIAGRAM):   end;
2494047   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494048   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2494049   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2494050   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2494051   +   end;
MPRINT(EM_DIAGRAM):   end;
2494052   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2494053   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2494054   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2494055   +   end;
MPRINT(EM_DIAGRAM):   end;
2494056   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494057   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2494058   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2494059   +   end;
MPRINT(EM_DIAGRAM):   end;
2494060   +end;
MPRINT(EM_DIAGRAM):   end;
2494061   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2494062   +   P_DepVar1  =     -11.533020189097 * H1x1_1  +     17.2320065402955 * H1x1_2
2494063   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.533020189097 * H1x1_1 + 17.2320065402955 * H1x1_2 ;
2494064   +   P_DepVar1  =     2.37722840752042 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.37722840752042 + P_DepVar1 ;
2494065   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2494066   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2494067   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2494068   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2494069   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2494070   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2494071   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2494072   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2494073   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2494074   +END;
MPRINT(EM_DIAGRAM):   END;
2494075   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2494076   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2494077   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2494078   +END;
MPRINT(EM_DIAGRAM):   END;
2494079   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2494080   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2494081   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2494082   +END;
MPRINT(EM_DIAGRAM):   END;
2494083   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2494084   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2494085   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2494086   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2494087   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2494088   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2494089   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2494090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494091   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2494092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494093   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2494094   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2494095   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2494096   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2494097   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2494098   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2494099   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2494100   +END;
MPRINT(EM_DIAGRAM):   END;
2494101   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2494102   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2494103   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2494104   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2494105   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2494106   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494107   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2494108   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494109   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2494110   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2494111   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2494112   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2494113   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494114   +* Renaming Into variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural7;
2494115   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494116   +length AutoNeural7_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural7_I_DepVar $32;
2494117   +drop AutoNeural7_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_I_DepVar;
2494118   +AutoNeural7_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural7_I_DepVar = I_DepVar;
2494119   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494120   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2494121   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494122   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2494123   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2494124   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2494125   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494126   +* Ensmbl47: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 5 of 5;
2494127   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494128   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494129   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2494130   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2494131   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2494132   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494133   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2494134   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2494135   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2494136   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2494137   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2494138   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2494139   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2494140   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2494141   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2494142   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2494143   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2494144   +LENGTH _WARN_ $4
2494145   +      F_DepVar  $ 12
2494146   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2494147   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2494148   +
2494149   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2494150   +
2494151   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2494152   +
2494153   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2494154   +
2494155   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2494156   +
2494157   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2494158   +
2494159   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2494160   +
2494161   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2494162   +
2494163   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2494164   +
2494165   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2494166   +
2494167   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2494168   +
2494169   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2494170   +
2494171   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2494172   +
2494173   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2494174   +
2494175   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2494176   +
2494177   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2494178   +
2494179   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2494180   +
2494181   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2494182   +
2494183   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2494184   +
2494185   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2494186   +
2494187   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2494188   +
2494189   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2494190   +
2494191   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2494192   +
2494193   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2494194   +
2494195   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2494196   +
2494197   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2494198   +
2494199   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2494200   +
2494201   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2494202   +
2494203   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2494204   +
2494205   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2494206   +
2494207   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2494208   +
2494209   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2494210   +
2494211   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2494212   +
2494213   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2494214   +
2494215   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2494216   +
2494217   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2494218   +
2494219   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2494220   +
2494221   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2494222   +
2494223   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2494224   +
2494225   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2494226   +
2494227   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2494228   +
2494229   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2494230   +
2494231   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2494232   +
2494233   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2494234   +
2494235   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2494236   +
2494237   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2494238   +
2494239   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2494240   +
2494241   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2494242   +
2494243   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2494244   +
2494245   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2494246   +
2494247   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2494248   +
2494249   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2494250   +
2494251   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2494252   +
2494253   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2494254   +
2494255   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2494256   +
2494257   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2494258   +
2494259   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2494260   +
2494261   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2494262   +
2494263   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2494264   +
2494265   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2494266   +
2494267   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2494268   +
2494269   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2494270   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2494271   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2494272   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2494273   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2494274   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494275   +end;
MPRINT(EM_DIAGRAM):   end;
2494276   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494277   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2494278   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2494279   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494280   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2494281   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2494282   +   end;
MPRINT(EM_DIAGRAM):   end;
2494283   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2494284   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2494285   +   end;
MPRINT(EM_DIAGRAM):   end;
2494286   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494287   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2494288   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2494289   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494290   +   end;
MPRINT(EM_DIAGRAM):   end;
2494291   +end;
MPRINT(EM_DIAGRAM):   end;
2494292   +
2494293   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2494294   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2494295   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2494296   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2494297   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2494298   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494299   +end;
MPRINT(EM_DIAGRAM):   end;
2494300   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494301   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2494302   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2494303   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494304   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2494305   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2494306   +   end;
MPRINT(EM_DIAGRAM):   end;
2494307   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2494308   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2494309   +   end;
MPRINT(EM_DIAGRAM):   end;
2494310   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494311   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2494312   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2494313   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494314   +   end;
MPRINT(EM_DIAGRAM):   end;
2494315   +end;
MPRINT(EM_DIAGRAM):   end;
2494316   +
2494317   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2494318   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2494319   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2494320   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2494321   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2494322   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494323   +end;
MPRINT(EM_DIAGRAM):   end;
2494324   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494325   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2494326   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2494327   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494328   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2494329   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2494330   +   end;
MPRINT(EM_DIAGRAM):   end;
2494331   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2494332   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2494333   +   end;
MPRINT(EM_DIAGRAM):   end;
2494334   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494335   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2494336   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2494337   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494338   +   end;
MPRINT(EM_DIAGRAM):   end;
2494339   +end;
MPRINT(EM_DIAGRAM):   end;
2494340   +
2494341   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2494342   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2494343   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2494344   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2494345   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2494346   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494347   +end;
MPRINT(EM_DIAGRAM):   end;
2494348   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494349   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2494350   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2494351   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494352   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2494353   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2494354   +   end;
MPRINT(EM_DIAGRAM):   end;
2494355   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2494356   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2494357   +   end;
MPRINT(EM_DIAGRAM):   end;
2494358   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494359   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2494360   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2494361   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494362   +   end;
MPRINT(EM_DIAGRAM):   end;
2494363   +end;
MPRINT(EM_DIAGRAM):   end;
2494364   +
2494365   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2494366   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2494367   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2494368   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2494369   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2494370   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494371   +end;
MPRINT(EM_DIAGRAM):   end;
2494372   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494373   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2494374   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2494375   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494376   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2494377   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2494378   +   end;
MPRINT(EM_DIAGRAM):   end;
2494379   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2494380   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2494381   +   end;
MPRINT(EM_DIAGRAM):   end;
2494382   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494383   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2494384   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2494385   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494386   +   end;
MPRINT(EM_DIAGRAM):   end;
2494387   +end;
MPRINT(EM_DIAGRAM):   end;
2494388   +
2494389   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2494390   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2494391   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2494392   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2494393   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2494394   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494395   +end;
MPRINT(EM_DIAGRAM):   end;
2494396   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494397   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2494398   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2494399   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494400   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2494401   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2494402   +   end;
MPRINT(EM_DIAGRAM):   end;
2494403   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2494404   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2494405   +   end;
MPRINT(EM_DIAGRAM):   end;
2494406   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494407   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2494408   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2494409   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494410   +   end;
MPRINT(EM_DIAGRAM):   end;
2494411   +end;
MPRINT(EM_DIAGRAM):   end;
2494412   +
2494413   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2494414   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2494415   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2494416   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2494417   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2494418   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494419   +end;
MPRINT(EM_DIAGRAM):   end;
2494420   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494421   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2494422   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2494423   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494424   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2494425   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2494426   +   end;
MPRINT(EM_DIAGRAM):   end;
2494427   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2494428   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2494429   +   end;
MPRINT(EM_DIAGRAM):   end;
2494430   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494431   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2494432   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2494433   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494434   +   end;
MPRINT(EM_DIAGRAM):   end;
2494435   +end;
MPRINT(EM_DIAGRAM):   end;
2494436   +
2494437   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2494438   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2494439   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2494440   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2494441   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2494442   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2494443   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2494444   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2494445   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2494446   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2494447   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2494448   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2494449   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2494450   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494451   +end;
MPRINT(EM_DIAGRAM):   end;
2494452   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494453   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2494454   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2494455   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494456   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2494457   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2494458   +   end;
MPRINT(EM_DIAGRAM):   end;
2494459   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2494460   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2494461   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2494462   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2494463   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2494464   +   end;
MPRINT(EM_DIAGRAM):   end;
2494465   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2494466   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2494467   +   end;
MPRINT(EM_DIAGRAM):   end;
2494468   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2494469   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2494470   +   end;
MPRINT(EM_DIAGRAM):   end;
2494471   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2494472   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2494473   +   end;
MPRINT(EM_DIAGRAM):   end;
2494474   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494475   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2494476   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2494477   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2494478   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2494479   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2494480   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494481   +   end;
MPRINT(EM_DIAGRAM):   end;
2494482   +end;
MPRINT(EM_DIAGRAM):   end;
2494483   +
2494484   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2494485   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2494486   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2494487   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2494488   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2494489   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2494490   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2494491   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2494492   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2494493   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2494494   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2494495   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2494496   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2494497   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2494498   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494499   +end;
MPRINT(EM_DIAGRAM):   end;
2494500   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494501   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2494502   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2494503   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494504   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2494505   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2494506   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2494507   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2494508   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2494509   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2494510   +         end;
MPRINT(EM_DIAGRAM):   end;
2494511   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2494512   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2494513   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2494514   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2494515   +            end;
MPRINT(EM_DIAGRAM):   end;
2494516   +         end;
MPRINT(EM_DIAGRAM):   end;
2494517   +      end;
MPRINT(EM_DIAGRAM):   end;
2494518   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2494519   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2494520   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2494521   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2494522   +         end;
MPRINT(EM_DIAGRAM):   end;
2494523   +      end;
MPRINT(EM_DIAGRAM):   end;
2494524   +   end;
MPRINT(EM_DIAGRAM):   end;
2494525   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494526   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2494527   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2494528   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2494529   +      end;
MPRINT(EM_DIAGRAM):   end;
2494530   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2494531   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2494532   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2494533   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2494534   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2494535   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2494536   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2494537   +         end;
MPRINT(EM_DIAGRAM):   end;
2494538   +      end;
MPRINT(EM_DIAGRAM):   end;
2494539   +   end;
MPRINT(EM_DIAGRAM):   end;
2494540   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2494541   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2494542   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2494543   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2494544   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2494545   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2494546   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494547   +   end;
MPRINT(EM_DIAGRAM):   end;
2494548   +end;
MPRINT(EM_DIAGRAM):   end;
2494549   +
2494550   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494551   +*** Checking missing input Interval
2494552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2494553   +
2494554   +IF NMISS(
2494555   +   AcceptedCmpTotal ,
2494556   +   Age ,
2494557   +   Frq ,
2494558   +   Income ,
2494559   +   Kidhome ,
2494560   +   Mnt ,
2494561   +   MntFishProducts ,
2494562   +   MntFruits ,
2494563   +   MntGoldProds ,
2494564   +   MntMeatProducts ,
2494565   +   MntSweetProducts ,
2494566   +   MntWines ,
2494567   +   MonthsAsCustomer ,
2494568   +   NumCatalogPurchases ,
2494569   +   NumDealsPurchases ,
2494570   +   NumDistPurchases ,
2494571   +   NumStorePurchases ,
2494572   +   NumWebPurchases ,
2494573   +   NumWebVisitsMonth ,
2494574   +   RFMstat ,
2494575   +   RMntFrq ,
2494576   +   Recency ,
2494577   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2494578   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2494579   +
2494580   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494581   +END;
MPRINT(EM_DIAGRAM):   END;
2494582   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494583   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2494584   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494585   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2494586   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2494587   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2494588   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2494589   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2494590   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2494591   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2494592   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2494593   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2494594   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2494595   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2494596   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2494597   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2494598   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2494599   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2494600   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2494601   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2494602   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2494603   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2494604   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2494605   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2494606   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2494607   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2494608   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2494609   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2494610   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2494611   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2494612   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2494613   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2494614   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2494615   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2494616   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2494617   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2494618   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2494619   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2494620   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2494621   +END;
MPRINT(EM_DIAGRAM):   END;
2494622   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2494623   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2494624   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2494625   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2494626   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2494627   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2494628   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2494629   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2494630   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2494631   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2494632   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2494633   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2494634   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2494635   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2494636   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2494637   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2494638   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2494639   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2494640   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2494641   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2494642   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2494643   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2494644   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2494645   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2494646   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2494647   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2494648   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2494649   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2494650   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2494651   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2494652   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2494653   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2494654   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2494655   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2494656   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2494657   +   ELSE S_NumCatalogPurchases
2494658   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2494659   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2494660   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2494661   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2494662   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2494663   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2494664   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2494665   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2494666   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2494667   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2494668   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2494669   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2494670   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2494671   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2494672   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2494673   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2494674   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2494675   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2494676   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2494677   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2494678   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2494679   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2494680   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2494681   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2494682   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2494683   +END;
MPRINT(EM_DIAGRAM):   END;
2494684   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494685   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2494686   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494687   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494688   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2494689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494690   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494691   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2494692   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494693   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2494694   +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
2494695   +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
2494696   +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
2494697   +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
2494698   +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
2494699   +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
2494700   +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
2494701   +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
2494702   +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
2494703   +          +      3.4758215776031 * S_NumDealsPurchases
2494704   +          +     0.17094021755289 * S_NumDistPurchases
2494705   +          +    -2.72090095694641 * S_NumStorePurchases
2494706   +          +    -0.31877935826328 * S_NumWebPurchases
2494707   +          +    -2.03399974412918 * S_NumWebVisitsMonth
2494708   +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
2494709   +        S_RMntFrq  +     0.29064555076615 * S_Recency
2494710   +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 *
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 *
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts +
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 *
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 *
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 *
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 *
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq +
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
2494711   +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
2494712   +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
2494713   +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
2494714   +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
2494715   +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
2494716   +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
2494717   +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
2494718   +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
2494719   +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
2494720   +          +    -1.21013804197082 * S_NumDealsPurchases
2494721   +          +     0.59974279122188 * S_NumDistPurchases
2494722   +          +     1.92425710681156 * S_NumStorePurchases
2494723   +          +     1.02413182452324 * S_NumWebPurchases
2494724   +          +    -3.63276285340174 * S_NumWebVisitsMonth
2494725   +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
2494726   +        S_RMntFrq  +     3.87352563099005 * S_Recency
2494727   +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 *
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 *
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts +
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 *
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 *
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 *
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 *
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq +
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
2494728   +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
2494729   +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
2494730   +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
2494731   +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
2494732   +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
2494733   +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
2494734   +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
2494735   +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
2494736   +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
2494737   +          +      0.4928343071801 * S_NumDealsPurchases
2494738   +          +     -0.0196677325409 * S_NumDistPurchases
2494739   +          +     0.44395828164873 * S_NumStorePurchases
2494740   +          +     0.86947051591224 * S_NumWebPurchases
2494741   +          +    -0.96787241206077 * S_NumWebVisitsMonth
2494742   +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
2494743   +        S_RMntFrq  +     0.24582117217188 * S_Recency
2494744   +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 *
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 *
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts +
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 *
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 *
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 *
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 *
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq +
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
2494745   +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
2494746   +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
2494747   +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
2494748   +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
2494749   +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
2494750   +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
2494751   +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
2494752   +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
2494753   +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
2494754   +          +     1.10280977051932 * S_NumDealsPurchases
2494755   +          +     0.99310057404036 * S_NumDistPurchases
2494756   +          +    -0.05647459609331 * S_NumStorePurchases
2494757   +          +    -0.89852483938631 * S_NumWebPurchases
2494758   +          +     2.63022480227445 * S_NumWebVisitsMonth
2494759   +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
2494760   +        S_RMntFrq  +    -4.46436997560659 * S_Recency
2494761   +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 *
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 *
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts +
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 *
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 *
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 *
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 *
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq +
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
2494762   +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
2494763   +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
2494764   +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
2494765   +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
2494766   +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
2494767   +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
2494768   +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
2494769   +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
2494770   +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
2494771   +          +    -2.62220616180571 * S_NumDealsPurchases
2494772   +          +    -0.51737930835331 * S_NumDistPurchases
2494773   +          +     0.88655783158133 * S_NumStorePurchases
2494774   +          +     0.35132468809969 * S_NumWebPurchases
2494775   +          +     -1.6320869675862 * S_NumWebVisitsMonth
2494776   +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
2494777   +        S_RMntFrq  +     1.06226028677401 * S_Recency
2494778   +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 *
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 *
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts +
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 *
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 *
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 *
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 *
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq +
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
2494779   +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
2494780   +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
2494781   +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
2494782   +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
2494783   +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 *
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 +
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 *
HigherEducationBinary0 ;
2494784   +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
2494785   +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
2494786   +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
2494787   +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
2494788   +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 *
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 +
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 *
HigherEducationBinary0 ;
2494789   +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
2494790   +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
2494791   +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
2494792   +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
2494793   +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 *
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 +
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 *
HigherEducationBinary0 ;
2494794   +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
2494795   +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
2494796   +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
2494797   +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
2494798   +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 +
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 *
HigherEducationBinary0 ;
2494799   +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
2494800   +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
2494801   +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
2494802   +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
2494803   +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 *
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 +
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 *
HigherEducationBinary0 ;
2494804   +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
2494805   +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
2494806   +        EducationGraduation  +     1.42539292513854 * EducationMaster
2494807   +          +     0.34809919741136 * Marital_StatusDivorced
2494808   +          +    -0.26594093535929 * Marital_StatusMarried
2494809   +          +     0.70249715999987 * Marital_StatusSingle
2494810   +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle +
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 *
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 *
Marital_StatusTogether ;
2494811   +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
2494812   +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
2494813   +        EducationGraduation  +    -0.28204692640004 * EducationMaster
2494814   +          +    -0.20448765627193 * Marital_StatusDivorced
2494815   +          +     1.73231344674733 * Marital_StatusMarried
2494816   +          +    -0.70956480480373 * Marital_StatusSingle
2494817   +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle +
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 *
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 *
Marital_StatusTogether ;
2494818   +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
2494819   +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
2494820   +        EducationGraduation  +     1.01284161768787 * EducationMaster
2494821   +          +     0.30333818684353 * Marital_StatusDivorced
2494822   +          +    -1.44603535988199 * Marital_StatusMarried
2494823   +          +     0.48409598426383 * Marital_StatusSingle
2494824   +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle +
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation +
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced +
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle +
-1.14528682521622 * Marital_StatusTogether ;
2494825   +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
2494826   +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
2494827   +        EducationGraduation  +    -1.17735200022013 * EducationMaster
2494828   +          +     -1.5342907846297 * Marital_StatusDivorced
2494829   +          +    -1.79544684592172 * Marital_StatusMarried
2494830   +          +     0.65604313645117 * Marital_StatusSingle
2494831   +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle +
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 *
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 *
Marital_StatusTogether ;
2494832   +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
2494833   +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
2494834   +        EducationGraduation  +     0.09618331198762 * EducationMaster
2494835   +          +    -3.97940893560267 * Marital_StatusDivorced
2494836   +          +      3.5880254142663 * Marital_StatusMarried
2494837   +          +     -2.9897737730927 * Marital_StatusSingle
2494838   +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle +
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 *
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 *
Marital_StatusTogether ;
2494839   +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
2494840   +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
2494841   +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
2494842   +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
2494843   +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
2494844   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2494845   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2494846   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2494847   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2494848   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2494849   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2494850   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2494851   +END;
MPRINT(EM_DIAGRAM):   END;
2494852   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2494853   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2494854   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2494855   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2494856   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2494857   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2494858   +END;
MPRINT(EM_DIAGRAM):   END;
2494859   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494860   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2494861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494862   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2494863   +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
2494864   +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
2494865   +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
2494866   +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
2494867   +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
2494868   +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
2494869   +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
2494870   +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
2494871   +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
2494872   +          +     0.07279889333775 * S_NumDealsPurchases
2494873   +          +     0.07542203992452 * S_NumDistPurchases
2494874   +          +     0.16296239303342 * S_NumStorePurchases
2494875   +          +     1.59193921229231 * S_NumWebPurchases
2494876   +          +    -0.35227839362603 * S_NumWebVisitsMonth
2494877   +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
2494878   +        S_RMntFrq  +     0.43315770276588 * S_Recency
2494879   +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 *
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 *
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts +
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 *
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines +
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases +
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases +
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases +
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 *
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
2494880   +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
2494881   +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
2494882   +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
2494883   +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
2494884   +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
2494885   +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
2494886   +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
2494887   +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
2494888   +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
2494889   +          +    -0.37456959251084 * S_NumDealsPurchases
2494890   +          +    -1.15252469975668 * S_NumDistPurchases
2494891   +          +    -1.39822501888899 * S_NumStorePurchases
2494892   +          +    -0.32777847360723 * S_NumWebPurchases
2494893   +          +     0.84026499832926 * S_NumWebVisitsMonth
2494894   +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
2494895   +        S_RMntFrq  +     1.21016626691186 * S_Recency
2494896   +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 *
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 *
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts +
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 *
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 *
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 *
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 *
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq +
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
2494897   +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
2494898   +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
2494899   +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
2494900   +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
2494901   +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
2494902   +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
2494903   +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
2494904   +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
2494905   +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
2494906   +          +     1.14090099538367 * S_NumDealsPurchases
2494907   +          +     -0.2600155774492 * S_NumDistPurchases
2494908   +          +     1.31362002392113 * S_NumStorePurchases
2494909   +          +     1.31465307763555 * S_NumWebPurchases
2494910   +          +    -0.18041623858351 * S_NumWebVisitsMonth
2494911   +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
2494912   +        S_RMntFrq  +    -0.81910738140729 * S_Recency
2494913   +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 *
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 *
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts +
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 *
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 *
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 *
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 *
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq +
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
2494914   +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
2494915   +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
2494916   +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
2494917   +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
2494918   +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
2494919   +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
2494920   +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
2494921   +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
2494922   +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
2494923   +          +     1.06486073796679 * S_NumDealsPurchases
2494924   +          +    -0.04890191247577 * S_NumDistPurchases
2494925   +          +     0.86871320720698 * S_NumStorePurchases
2494926   +          +     0.03183587281884 * S_NumWebPurchases
2494927   +          +     -0.4863802923315 * S_NumWebVisitsMonth
2494928   +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
2494929   +        S_RMntFrq  +     0.17186861211542 * S_Recency
2494930   +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 *
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 *
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts +
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 *
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 *
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 *
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 *
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq +
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
2494931   +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
2494932   +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
2494933   +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
2494934   +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
2494935   +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
2494936   +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
2494937   +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
2494938   +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
2494939   +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
2494940   +          +    -0.01160267590349 * S_NumDealsPurchases
2494941   +          +    -0.92773075463083 * S_NumDistPurchases
2494942   +          +    -0.83326680533995 * S_NumStorePurchases
2494943   +          +    -1.16991058954473 * S_NumWebPurchases
2494944   +          +    -2.07771165573723 * S_NumWebVisitsMonth
2494945   +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
2494946   +        S_RMntFrq  +     0.80165981122986 * S_Recency
2494947   +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 *
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 *
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts +
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 *
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 *
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 *
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 *
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq +
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
2494948   +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
2494949   +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
2494950   +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
2494951   +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
2494952   +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 *
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 +
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 *
HigherEducationBinary0 ;
2494953   +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
2494954   +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
2494955   +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
2494956   +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
2494957   +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 +
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 *
HigherEducationBinary0 ;
2494958   +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
2494959   +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
2494960   +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
2494961   +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
2494962   +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 *
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 +
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 *
HigherEducationBinary0 ;
2494963   +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
2494964   +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
2494965   +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
2494966   +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
2494967   +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 +
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 *
HigherEducationBinary0 ;
2494968   +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
2494969   +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
2494970   +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
2494971   +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
2494972   +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 *
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 +
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 *
HigherEducationBinary0 ;
2494973   +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
2494974   +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
2494975   +        EducationGraduation  +    -0.22397098444024 * EducationMaster
2494976   +          +    -0.10361472385198 * Marital_StatusDivorced
2494977   +          +     0.05574820877885 * Marital_StatusMarried
2494978   +          +     0.13130988205279 * Marital_StatusSingle
2494979   +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle +
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 *
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 *
Marital_StatusTogether ;
2494980   +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
2494981   +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
2494982   +        EducationGraduation  +     1.44983505587452 * EducationMaster
2494983   +          +      0.0059353523794 * Marital_StatusDivorced
2494984   +          +    -0.59379435051653 * Marital_StatusMarried
2494985   +          +    -1.93587108708999 * Marital_StatusSingle
2494986   +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle +
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 *
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 *
Marital_StatusTogether ;
2494987   +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
2494988   +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
2494989   +        EducationGraduation  +     0.16497026569775 * EducationMaster
2494990   +          +    -0.74333797840386 * Marital_StatusDivorced
2494991   +          +    -0.93061135117658 * Marital_StatusMarried
2494992   +          +     1.04024182655844 * Marital_StatusSingle
2494993   +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle +
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 *
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 *
Marital_StatusTogether ;
2494994   +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
2494995   +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
2494996   +        EducationGraduation  +     1.71196178631559 * EducationMaster
2494997   +          +    -3.01050675344463 * Marital_StatusDivorced
2494998   +          +      0.1638723582239 * Marital_StatusMarried
2494999   +          +     0.94548468360304 * Marital_StatusSingle
2495000   +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle +
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 *
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 *
Marital_StatusTogether ;
2495001   +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
2495002   +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
2495003   +        EducationGraduation  +     0.57450456442662 * EducationMaster
2495004   +          +    -1.37013926274158 * Marital_StatusDivorced
2495005   +          +    -0.34168970042779 * Marital_StatusMarried
2495006   +          +     0.63383683543962 * Marital_StatusSingle
2495007   +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle +
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 *
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 *
Marital_StatusTogether ;
2495008   +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
2495009   +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
2495010   +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
2495011   +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
2495012   +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
2495013   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2495014   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2495015   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2495016   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2495017   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2495018   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2495019   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2495020   +END;
MPRINT(EM_DIAGRAM):   END;
2495021   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2495022   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2495023   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2495024   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2495025   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2495026   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2495027   +END;
MPRINT(EM_DIAGRAM):   END;
2495028   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495029   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2495030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495031   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2495032   +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
2495033   +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
2495034   +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 +
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
2495035   +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
2495036   +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
2495037   +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 +
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
2495038   +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
2495039   +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
2495040   +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 +
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
2495041   +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
2495042   +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
2495043   +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 +
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
2495044   +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
2495045   +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
2495046   +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 +
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
2495047   +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
2495048   +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
2495049   +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
2495050   +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
2495051   +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
2495052   +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
2495053   +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
2495054   +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
2495055   +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
2495056   +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
2495057   +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
2495058   +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
2495059   +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
2495060   +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
2495061   +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
2495062   +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
2495063   +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
2495064   +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
2495065   +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
2495066   +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
2495067   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2495068   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2495069   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2495070   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2495071   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2495072   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2495073   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2495074   +END;
MPRINT(EM_DIAGRAM):   END;
2495075   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2495076   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2495077   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2495078   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2495079   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2495080   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2495081   +END;
MPRINT(EM_DIAGRAM):   END;
2495082   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495083   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2495084   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495085   +
2495086   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2495087   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2495088   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2495089   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2495090   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2495091   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495092   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2495093   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2495094   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2495095   +end;
MPRINT(EM_DIAGRAM):   end;
2495096   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495097   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2495098   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2495099   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2495100   +   end;
MPRINT(EM_DIAGRAM):   end;
2495101   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2495102   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2495103   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2495104   +   end;
MPRINT(EM_DIAGRAM):   end;
2495105   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495106   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2495107   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2495108   +   end;
MPRINT(EM_DIAGRAM):   end;
2495109   +end;
MPRINT(EM_DIAGRAM):   end;
2495110   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2495111   +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
2495112   +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
2495113   +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 +
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
2495114   +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
2495115   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2495116   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2495117   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2495118   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2495119   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2495120   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2495121   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2495122   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2495123   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2495124   +END;
MPRINT(EM_DIAGRAM):   END;
2495125   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2495126   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2495127   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2495128   +END;
MPRINT(EM_DIAGRAM):   END;
2495129   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2495130   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2495131   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2495132   +END;
MPRINT(EM_DIAGRAM):   END;
2495133   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2495134   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2495135   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2495136   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2495137   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2495138   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2495139   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2495140   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495141   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2495142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495143   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2495144   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2495145   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2495146   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2495147   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2495148   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2495149   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2495150   +END;
MPRINT(EM_DIAGRAM):   END;
2495151   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2495152   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2495153   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2495154   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2495155   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2495156   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495157   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2495158   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495159   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2495160   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2495161   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2495162   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2495163   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495164   +* Renaming Into variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural10;
2495165   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495166   +length AutoNeural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural10_I_DepVar $32;
2495167   +drop AutoNeural10_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_I_DepVar;
2495168   +AutoNeural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural10_I_DepVar = I_DepVar;
2495169   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495170   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2495171   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495172   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2495173   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2495174   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2495175   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495176   +* Ensmbl47: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Voting to produce predicted target;
2495177   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495178   +array Ensmbl47_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl47_post{2} _temporary_;
2495179   +array Ensmbl47_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl47_count{2} _temporary_;
2495180   +array Ensmbl47_level{2} $32 _temporary_ (
2495181   +"1"
2495182   +"0"
2495183   +);
MPRINT(EM_DIAGRAM):   array Ensmbl47_level{2} $32 _temporary_ ( "1" "0" );
2495184   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2495185   +Ensmbl47_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{i} = 0;
2495186   +Ensmbl47_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{i} = 0;
2495187   +end;
MPRINT(EM_DIAGRAM):   end;
2495188   +if AutoNeural9_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl47_level{1} then do;
2495189   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2495190   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural9_P_DepVar1;
2495191   +end;
MPRINT(EM_DIAGRAM):   end;
2495192   +if AutoNeural11_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl47_level{1} then do;
2495193   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2495194   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural11_P_DepVar1;
2495195   +end;
MPRINT(EM_DIAGRAM):   end;
2495196   +if AutoNeural12_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl47_level{1} then do;
2495197   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2495198   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural12_P_DepVar1;
2495199   +end;
MPRINT(EM_DIAGRAM):   end;
2495200   +if AutoNeural7_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl47_level{1} then do;
2495201   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2495202   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural7_P_DepVar1;
2495203   +end;
MPRINT(EM_DIAGRAM):   end;
2495204   +if AutoNeural10_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl47_level{1} then do;
2495205   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2495206   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural10_P_DepVar1;
2495207   +end;
MPRINT(EM_DIAGRAM):   end;
2495208   +if AutoNeural9_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl47_level{2} then do;
2495209   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2495210   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural9_P_DepVar0;
2495211   +end;
MPRINT(EM_DIAGRAM):   end;
2495212   +if AutoNeural11_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl47_level{2} then do;
2495213   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2495214   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural11_P_DepVar0;
2495215   +end;
MPRINT(EM_DIAGRAM):   end;
2495216   +if AutoNeural12_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl47_level{2} then do;
2495217   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2495218   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural12_P_DepVar0;
2495219   +end;
MPRINT(EM_DIAGRAM):   end;
2495220   +if AutoNeural7_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl47_level{2} then do;
2495221   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2495222   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural7_P_DepVar0;
2495223   +end;
MPRINT(EM_DIAGRAM):   end;
2495224   +if AutoNeural10_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl47_level{2} then do;
2495225   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2495226   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural10_P_DepVar0;
2495227   +end;
MPRINT(EM_DIAGRAM):   end;
2495228   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495229   +* Ensmbl47: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Determine Into Variable;
2495230   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495231   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
2495232   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
2495233   +vote_count = max(
2495234   +Ensmbl47_count{1} ,
2495235   +Ensmbl47_count{2}
2495236   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl47_count{1} , Ensmbl47_count{2} );
2495237   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2495238   +if Ensmbl47_count{i}=vote_count and Ensmbl47_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl47_count{i}=vote_count and Ensmbl47_post{i}>vote_post then do;
2495239   +I_DepVar = Ensmbl47_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl47_level{i};
2495240   +vote_post = Ensmbl47_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl47_count{i};
2495241   +end;
MPRINT(EM_DIAGRAM):   end;
2495242   +end;
MPRINT(EM_DIAGRAM):   end;
2495243   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495244   +* Ensmbl47: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Compute posterior vars using models predicting the chosen
level;
2495245   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495246   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
2495247   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2495248   +if I_DepVar = AutoNeural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural9_I_DepVar then do;
2495249   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
2495250   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
2495251   +end;
MPRINT(EM_DIAGRAM):   end;
2495252   +if I_DepVar = AutoNeural11_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural11_I_DepVar then do;
2495253   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
2495254   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
2495255   +end;
MPRINT(EM_DIAGRAM):   end;
2495256   +if I_DepVar = AutoNeural12_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural12_I_DepVar then do;
2495257   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
2495258   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
2495259   +end;
MPRINT(EM_DIAGRAM):   end;
2495260   +if I_DepVar = AutoNeural7_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural7_I_DepVar then do;
2495261   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
2495262   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
2495263   +end;
MPRINT(EM_DIAGRAM):   end;
2495264   +if I_DepVar = AutoNeural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural10_I_DepVar then do;
2495265   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
2495266   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
2495267   +end;
MPRINT(EM_DIAGRAM):   end;
2495268   +* Ensmbl47: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Averaging posterior;
2495269   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
2495270   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
2495271   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495272   +* Ensmbl47: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Producing Unformatted variable;
2495273   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495274   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2495275   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2495276   +else
2495277   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2495278   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495279   +* Ensmbl47: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Computing _WARN_ Variable;
2495280   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495281   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2495282   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2495283   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2495284   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2495284  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2495285   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2495285  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2495286   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2495286  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2495287   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2495287  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2495288   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2495288  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2495289   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2495289  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2495290   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2495290  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2495291   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2495291  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2495292   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2495292  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2495293   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2495293  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2495294   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2495294  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2495295   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2495295  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2495296   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2495296  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2495297   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2495297  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2495298   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2495298  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2495299   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2495299  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2495300   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2495300  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2495301   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2495301  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2495302   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2495302  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2495303   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2495303  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2495304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495305   +* Ensmbl47: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Computing Residual Vars;
2495306   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495307   +if
2495308   +F_DepVar NE '1'
2495309   +AND F_DepVar NE '0'
2495310   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2495311   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2495312   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2495313   +end;
MPRINT(EM_DIAGRAM):   end;
2495314   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495315   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2495316   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2495317   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2495318   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2495319   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2495320   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2495321   +END;
MPRINT(EM_DIAGRAM):   END;
2495322   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2495323    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL47_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2495324    quit;
2495325    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2495326    filename emflow
2495326  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring AUTONEURAL9_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495327    *------------------------------------------------------------*;
2495328    * Ensmbl47: Scoring AUTONEURAL9_VALIDATE data;
2495329    *------------------------------------------------------------*;
2495330    data EMWS8.Ensmbl47_VALIDATE
2495331    / view=EMWS8.Ensmbl47_VALIDATE
2495332    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_VALIDATE / view=EMWS8.Ensmbl47_VALIDATE ;
2495333    set EMWS8.AutoNeural9_VALIDATE
2495334    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_VALIDATE ;
2495335    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMFLOWSCORE.sas.
2495336   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495337   +* Ensmbl47: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Combine model for DepVar;
2495338   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495339   +* Ensmbl47: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 1 of 5;
2495340   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495341   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495342   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2495343   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2495344   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2495345   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495346   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495347   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2495348   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2495349   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2495350   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495351   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495352   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2495353   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2495354   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2495355   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495356   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495357   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2495358   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2495359   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2495360   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495361   +
2495362   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2495363   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2495363  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2495364   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2495365   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2495366   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2495367   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2495368   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2495369   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495370   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2495371   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2495372   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2495373   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495374   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495375   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2495376   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495377   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2495378   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2495379   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2495380   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495381   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2495382   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2495383   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2495384   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495385   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495386   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2495387   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2495388   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2495389   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495390   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495391   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2495392   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2495393   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2495394   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495395   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2495396   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2495397   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2495398   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2495399   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2495400   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2495401   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2495402   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2495403   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2495404   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2495405   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2495406   +LENGTH _WARN_ $4
2495407   +      F_DepVar  $ 12
2495408   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2495409   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2495410   +
2495411   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2495412   +
2495413   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2495414   +
2495415   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2495416   +
2495417   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2495418   +
2495419   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2495420   +
2495421   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2495422   +
2495423   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2495424   +
2495425   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2495426   +
2495427   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2495428   +
2495429   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2495430   +
2495431   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2495432   +
2495433   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2495434   +
2495435   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2495436   +
2495437   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2495438   +
2495439   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2495440   +
2495441   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2495442   +
2495443   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2495444   +
2495445   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2495446   +
2495447   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2495448   +
2495449   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2495450   +
2495451   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2495452   +
2495453   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2495454   +
2495455   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2495456   +
2495457   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2495458   +
2495459   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2495460   +
2495461   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2495462   +
2495463   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2495464   +
2495465   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2495466   +
2495467   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2495468   +
2495469   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2495470   +
2495471   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2495472   +
2495473   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2495474   +
2495475   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2495476   +
2495477   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2495478   +
2495479   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2495480   +
2495481   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2495482   +
2495483   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2495484   +
2495485   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2495486   +
2495487   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2495488   +
2495489   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2495490   +
2495491   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2495492   +
2495493   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2495494   +
2495495   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2495496   +
2495497   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2495498   +
2495499   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2495500   +
2495501   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2495502   +
2495503   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2495504   +
2495505   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2495506   +
2495507   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2495508   +
2495509   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2495510   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2495511   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2495512   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2495513   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2495514   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495515   +end;
MPRINT(EM_DIAGRAM):   end;
2495516   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495517   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2495518   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2495519   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495520   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2495521   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2495522   +   end;
MPRINT(EM_DIAGRAM):   end;
2495523   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2495524   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2495525   +   end;
MPRINT(EM_DIAGRAM):   end;
2495526   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495527   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2495528   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2495529   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495530   +   end;
MPRINT(EM_DIAGRAM):   end;
2495531   +end;
MPRINT(EM_DIAGRAM):   end;
2495532   +
2495533   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2495534   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2495535   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2495536   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2495537   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2495538   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495539   +end;
MPRINT(EM_DIAGRAM):   end;
2495540   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495541   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2495542   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2495543   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495544   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2495545   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2495546   +   end;
MPRINT(EM_DIAGRAM):   end;
2495547   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2495548   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2495549   +   end;
MPRINT(EM_DIAGRAM):   end;
2495550   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495551   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2495552   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2495553   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495554   +   end;
MPRINT(EM_DIAGRAM):   end;
2495555   +end;
MPRINT(EM_DIAGRAM):   end;
2495556   +
2495557   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2495558   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2495559   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2495560   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2495561   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2495562   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495563   +end;
MPRINT(EM_DIAGRAM):   end;
2495564   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495565   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2495566   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2495567   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495568   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2495569   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2495570   +   end;
MPRINT(EM_DIAGRAM):   end;
2495571   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2495572   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2495573   +   end;
MPRINT(EM_DIAGRAM):   end;
2495574   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495575   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2495576   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2495577   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495578   +   end;
MPRINT(EM_DIAGRAM):   end;
2495579   +end;
MPRINT(EM_DIAGRAM):   end;
2495580   +
2495581   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2495582   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2495583   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2495584   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2495585   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2495586   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495587   +end;
MPRINT(EM_DIAGRAM):   end;
2495588   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495589   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2495590   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2495591   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495592   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2495593   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2495594   +   end;
MPRINT(EM_DIAGRAM):   end;
2495595   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2495596   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2495597   +   end;
MPRINT(EM_DIAGRAM):   end;
2495598   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495599   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2495600   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2495601   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495602   +   end;
MPRINT(EM_DIAGRAM):   end;
2495603   +end;
MPRINT(EM_DIAGRAM):   end;
2495604   +
2495605   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2495606   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2495607   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2495608   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2495609   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2495610   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495611   +end;
MPRINT(EM_DIAGRAM):   end;
2495612   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495613   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2495614   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2495615   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495616   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2495617   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2495618   +   end;
MPRINT(EM_DIAGRAM):   end;
2495619   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2495620   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2495621   +   end;
MPRINT(EM_DIAGRAM):   end;
2495622   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495623   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2495624   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2495625   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495626   +   end;
MPRINT(EM_DIAGRAM):   end;
2495627   +end;
MPRINT(EM_DIAGRAM):   end;
2495628   +
2495629   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2495630   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2495631   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2495632   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2495633   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2495634   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495635   +end;
MPRINT(EM_DIAGRAM):   end;
2495636   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495637   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2495638   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2495639   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495640   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2495641   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2495642   +   end;
MPRINT(EM_DIAGRAM):   end;
2495643   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2495644   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2495645   +   end;
MPRINT(EM_DIAGRAM):   end;
2495646   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495647   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2495648   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2495649   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495650   +   end;
MPRINT(EM_DIAGRAM):   end;
2495651   +end;
MPRINT(EM_DIAGRAM):   end;
2495652   +
2495653   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2495654   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2495655   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2495656   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2495657   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2495658   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495659   +end;
MPRINT(EM_DIAGRAM):   end;
2495660   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495661   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2495662   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2495663   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495664   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2495665   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2495666   +   end;
MPRINT(EM_DIAGRAM):   end;
2495667   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2495668   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2495669   +   end;
MPRINT(EM_DIAGRAM):   end;
2495670   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495671   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2495672   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2495673   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495674   +   end;
MPRINT(EM_DIAGRAM):   end;
2495675   +end;
MPRINT(EM_DIAGRAM):   end;
2495676   +
2495677   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2495678   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2495679   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2495680   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2495681   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2495682   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2495683   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2495684   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2495685   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2495686   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2495687   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2495688   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2495689   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2495690   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495691   +end;
MPRINT(EM_DIAGRAM):   end;
2495692   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495693   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2495694   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2495695   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495696   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2495697   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2495698   +   end;
MPRINT(EM_DIAGRAM):   end;
2495699   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2495700   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2495701   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2495702   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2495703   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2495704   +   end;
MPRINT(EM_DIAGRAM):   end;
2495705   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2495706   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2495707   +   end;
MPRINT(EM_DIAGRAM):   end;
2495708   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2495709   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2495710   +   end;
MPRINT(EM_DIAGRAM):   end;
2495711   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2495712   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2495713   +   end;
MPRINT(EM_DIAGRAM):   end;
2495714   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495715   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2495716   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2495717   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2495718   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2495719   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2495720   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495721   +   end;
MPRINT(EM_DIAGRAM):   end;
2495722   +end;
MPRINT(EM_DIAGRAM):   end;
2495723   +
2495724   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2495725   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2495726   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2495727   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2495728   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2495729   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2495730   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2495731   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2495732   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2495733   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2495734   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2495735   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2495736   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2495737   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2495738   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495739   +end;
MPRINT(EM_DIAGRAM):   end;
2495740   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495741   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2495742   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2495743   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495744   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2495745   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2495746   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2495747   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2495748   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2495749   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2495750   +         end;
MPRINT(EM_DIAGRAM):   end;
2495751   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2495752   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2495753   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2495754   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2495755   +            end;
MPRINT(EM_DIAGRAM):   end;
2495756   +         end;
MPRINT(EM_DIAGRAM):   end;
2495757   +      end;
MPRINT(EM_DIAGRAM):   end;
2495758   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2495759   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2495760   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2495761   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2495762   +         end;
MPRINT(EM_DIAGRAM):   end;
2495763   +      end;
MPRINT(EM_DIAGRAM):   end;
2495764   +   end;
MPRINT(EM_DIAGRAM):   end;
2495765   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495766   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2495767   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2495768   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2495769   +      end;
MPRINT(EM_DIAGRAM):   end;
2495770   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2495771   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2495772   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2495773   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2495774   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2495775   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2495776   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2495777   +         end;
MPRINT(EM_DIAGRAM):   end;
2495778   +      end;
MPRINT(EM_DIAGRAM):   end;
2495779   +   end;
MPRINT(EM_DIAGRAM):   end;
2495780   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2495781   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2495782   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2495783   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2495784   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2495785   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2495786   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495787   +   end;
MPRINT(EM_DIAGRAM):   end;
2495788   +end;
MPRINT(EM_DIAGRAM):   end;
2495789   +
2495790   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495791   +*** Checking missing input Interval
2495792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2495793   +
2495794   +IF NMISS(
2495795   +   AcceptedCmpTotal ,
2495796   +   Age ,
2495797   +   Frq ,
2495798   +   Income ,
2495799   +   Kidhome ,
2495800   +   Mnt ,
2495801   +   MntFishProducts ,
2495802   +   MntFruits ,
2495803   +   MntGoldProds ,
2495804   +   MntMeatProducts ,
2495805   +   MntSweetProducts ,
2495806   +   MntWines ,
2495807   +   MonthsAsCustomer ,
2495808   +   NumCatalogPurchases ,
2495809   +   NumDealsPurchases ,
2495810   +   NumDistPurchases ,
2495811   +   NumStorePurchases ,
2495812   +   NumWebPurchases ,
2495813   +   NumWebVisitsMonth ,
2495814   +   RFMstat ,
2495815   +   RMntFrq ,
2495816   +   Recency ,
2495817   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2495818   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2495819   +
2495820   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495821   +END;
MPRINT(EM_DIAGRAM):   END;
2495822   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495823   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2495824   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495825   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2495826   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2495827   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2495828   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2495829   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2495830   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2495831   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2495832   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2495833   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2495834   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2495835   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2495836   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2495837   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2495838   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2495839   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2495840   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2495841   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2495842   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2495843   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2495844   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2495845   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2495846   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2495847   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2495848   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2495849   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2495850   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2495851   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2495852   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2495853   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2495854   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2495855   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2495856   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2495857   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2495858   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2495859   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2495860   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2495861   +END;
MPRINT(EM_DIAGRAM):   END;
2495862   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2495863   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2495864   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2495865   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2495866   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2495867   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2495868   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2495869   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2495870   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2495871   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2495872   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2495873   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2495874   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2495875   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2495876   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2495877   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2495878   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2495879   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2495880   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2495881   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2495882   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2495883   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2495884   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2495885   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2495886   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2495887   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2495888   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2495889   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2495890   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2495891   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2495892   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2495893   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2495894   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2495895   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2495896   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2495897   +   ELSE S_NumCatalogPurchases
2495898   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2495899   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2495900   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2495901   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2495902   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2495903   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2495904   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2495905   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2495906   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2495907   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2495908   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2495909   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2495910   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2495911   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2495912   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2495913   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2495914   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2495915   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2495916   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2495917   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2495918   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2495919   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2495920   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2495921   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2495922   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2495923   +END;
MPRINT(EM_DIAGRAM):   END;
2495924   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495925   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2495926   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495927   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495928   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2495929   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495931   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2495932   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495933   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2495934   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2495935   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2495936   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2495937   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2495938   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2495939   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2495940   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2495941   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2495942   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2495943   +          +    -1.12130210731541 * S_NumDealsPurchases
2495944   +          +    -0.12343505299726 * S_NumDistPurchases
2495945   +          +     0.11863092868196 * S_NumStorePurchases
2495946   +          +       0.583917993314 * S_NumWebPurchases
2495947   +          +     0.75529732848146 * S_NumWebVisitsMonth
2495948   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2495949   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2495950   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 *
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 *
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts +
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 *
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 *
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 *
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 *
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq +
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2495951   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2495952   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2495953   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2495954   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2495955   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2495956   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2495957   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2495958   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2495959   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2495960   +          +    -0.84113790640734 * S_NumDealsPurchases
2495961   +          +    -0.10512672747147 * S_NumDistPurchases
2495962   +          +     0.07268711782494 * S_NumStorePurchases
2495963   +          +     0.57578331257439 * S_NumWebPurchases
2495964   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2495965   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2495966   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2495967   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 *
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 *
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts +
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 *
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines +
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases +
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases +
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases +
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 *
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2495968   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2495969   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2495970   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2495971   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2495972   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2495973   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2495974   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2495975   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2495976   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2495977   +          +     0.45924983504762 * S_NumDealsPurchases
2495978   +          +    -0.25508041581692 * S_NumDistPurchases
2495979   +          +    -1.34901283858526 * S_NumStorePurchases
2495980   +          +    -0.86388975031663 * S_NumWebPurchases
2495981   +          +     1.86136110391797 * S_NumWebVisitsMonth
2495982   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2495983   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2495984   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome +
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 *
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts +
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 *
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 *
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 *
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 *
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq +
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2495985   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2495986   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2495987   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2495988   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2495989   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 *
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 +
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 *
HigherEducationBinary0 ;
2495990   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2495991   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2495992   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2495993   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2495994   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 +
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 *
HigherEducationBinary0 ;
2495995   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2495996   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2495997   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2495998   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2495999   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 +
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 *
HigherEducationBinary0 ;
2496000   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2496001   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2496002   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2496003   +          +     0.48853068455666 * Marital_StatusDivorced
2496004   +          +    -0.54903474026465 * Marital_StatusMarried
2496005   +          +    -0.34079188373939 * Marital_StatusSingle
2496006   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle +
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation +
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced +
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle +
-0.64602969938868 * Marital_StatusTogether ;
2496007   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2496008   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2496009   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2496010   +          +    -1.03547689902027 * Marital_StatusDivorced
2496011   +          +     2.42164864610471 * Marital_StatusMarried
2496012   +          +    -1.95342561304942 * Marital_StatusSingle
2496013   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle +
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 *
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 *
Marital_StatusTogether ;
2496014   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2496015   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2496016   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2496017   +          +      0.4337638747935 * Marital_StatusDivorced
2496018   +          +    -0.38508657017615 * Marital_StatusMarried
2496019   +          +     -0.0160269708326 * Marital_StatusSingle
2496020   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle +
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation +
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced +
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle +
-0.57491004270903 * Marital_StatusTogether ;
2496021   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2496022   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2496023   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2496024   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2496025   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2496026   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2496027   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2496028   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2496029   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2496030   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2496031   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2496032   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2496033   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2496034   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2496035   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2496036   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2496037   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2496038   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2496039   +END;
MPRINT(EM_DIAGRAM):   END;
2496040   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2496041   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2496042   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2496043   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2496044   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2496045   +END;
MPRINT(EM_DIAGRAM):   END;
2496046   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496047   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2496048   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496049   +
2496050   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2496051   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2496052   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2496053   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2496054   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2496055   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496056   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2496057   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2496058   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2496059   +end;
MPRINT(EM_DIAGRAM):   end;
2496060   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496061   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2496062   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2496063   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2496064   +   end;
MPRINT(EM_DIAGRAM):   end;
2496065   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2496066   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2496067   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2496068   +   end;
MPRINT(EM_DIAGRAM):   end;
2496069   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496070   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2496071   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2496072   +   end;
MPRINT(EM_DIAGRAM):   end;
2496073   +end;
MPRINT(EM_DIAGRAM):   end;
2496074   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2496075   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2496076   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 +
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2496077   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2496078   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2496079   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2496080   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2496081   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2496082   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2496083   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2496084   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2496085   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2496086   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2496087   +END;
MPRINT(EM_DIAGRAM):   END;
2496088   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2496089   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2496090   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2496091   +END;
MPRINT(EM_DIAGRAM):   END;
2496092   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2496093   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2496094   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2496095   +END;
MPRINT(EM_DIAGRAM):   END;
2496096   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2496097   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2496098   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2496099   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2496100   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2496101   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2496102   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2496103   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496104   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2496105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496106   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2496107   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2496108   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2496109   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2496110   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2496111   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2496112   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2496113   +END;
MPRINT(EM_DIAGRAM):   END;
2496114   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2496115   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2496116   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2496117   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2496118   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2496119   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496120   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2496121   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496122   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2496123   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2496124   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2496125   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2496126   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496127   +* Renaming Into variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural9;
2496128   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496129   +length AutoNeural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural9_I_DepVar $32;
2496130   +drop AutoNeural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_I_DepVar;
2496131   +AutoNeural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural9_I_DepVar = I_DepVar;
2496132   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496133   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2496134   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496135   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2496136   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2496137   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2496138   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496139   +* Ensmbl47: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 2 of 5;
2496140   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496141   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496142   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2496143   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2496144   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2496145   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496146   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2496147   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2496148   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2496149   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2496150   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2496151   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2496152   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2496153   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2496154   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2496155   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2496156   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2496157   +LENGTH _WARN_ $4
2496158   +      F_DepVar  $ 12
2496159   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2496160   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2496161   +
2496162   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2496163   +
2496164   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2496165   +
2496166   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2496167   +
2496168   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2496169   +
2496170   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2496171   +
2496172   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2496173   +
2496174   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2496175   +
2496176   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2496177   +
2496178   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2496179   +
2496180   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2496181   +
2496182   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2496183   +
2496184   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2496185   +
2496186   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2496187   +
2496188   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2496189   +
2496190   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2496191   +
2496192   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2496193   +
2496194   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2496195   +
2496196   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2496197   +
2496198   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2496199   +
2496200   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2496201   +
2496202   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2496203   +
2496204   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2496205   +
2496206   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2496207   +
2496208   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2496209   +
2496210   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2496211   +
2496212   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2496213   +
2496214   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2496215   +
2496216   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2496217   +
2496218   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2496219   +
2496220   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2496221   +
2496222   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2496223   +
2496224   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2496225   +
2496226   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2496227   +
2496228   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2496229   +
2496230   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2496231   +
2496232   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2496233   +
2496234   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2496235   +
2496236   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2496237   +
2496238   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2496239   +
2496240   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2496241   +
2496242   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2496243   +
2496244   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2496245   +
2496246   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2496247   +
2496248   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2496249   +
2496250   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2496251   +
2496252   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2496253   +
2496254   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2496255   +
2496256   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2496257   +
2496258   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2496259   +
2496260   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2496261   +
2496262   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2496263   +
2496264   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2496265   +
2496266   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2496267   +
2496268   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2496269   +
2496270   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2496271   +
2496272   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2496273   +
2496274   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2496275   +
2496276   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2496277   +
2496278   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2496279   +
2496280   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2496281   +
2496282   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2496283   +
2496284   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2496285   +
2496286   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2496287   +
2496288   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2496289   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2496290   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2496291   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2496292   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2496293   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496294   +end;
MPRINT(EM_DIAGRAM):   end;
2496295   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496296   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2496297   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2496298   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496299   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2496300   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2496301   +   end;
MPRINT(EM_DIAGRAM):   end;
2496302   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2496303   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2496304   +   end;
MPRINT(EM_DIAGRAM):   end;
2496305   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496306   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2496307   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2496308   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496309   +   end;
MPRINT(EM_DIAGRAM):   end;
2496310   +end;
MPRINT(EM_DIAGRAM):   end;
2496311   +
2496312   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2496313   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2496314   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2496315   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2496316   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2496317   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496318   +end;
MPRINT(EM_DIAGRAM):   end;
2496319   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496320   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2496321   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2496322   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496323   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2496324   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2496325   +   end;
MPRINT(EM_DIAGRAM):   end;
2496326   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2496327   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2496328   +   end;
MPRINT(EM_DIAGRAM):   end;
2496329   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496330   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2496331   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2496332   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496333   +   end;
MPRINT(EM_DIAGRAM):   end;
2496334   +end;
MPRINT(EM_DIAGRAM):   end;
2496335   +
2496336   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2496337   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2496338   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2496339   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2496340   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2496341   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496342   +end;
MPRINT(EM_DIAGRAM):   end;
2496343   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496344   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2496345   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2496346   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496347   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2496348   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2496349   +   end;
MPRINT(EM_DIAGRAM):   end;
2496350   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2496351   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2496352   +   end;
MPRINT(EM_DIAGRAM):   end;
2496353   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496354   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2496355   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2496356   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496357   +   end;
MPRINT(EM_DIAGRAM):   end;
2496358   +end;
MPRINT(EM_DIAGRAM):   end;
2496359   +
2496360   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2496361   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2496362   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2496363   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2496364   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2496365   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496366   +end;
MPRINT(EM_DIAGRAM):   end;
2496367   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496368   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2496369   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2496370   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496371   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2496372   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2496373   +   end;
MPRINT(EM_DIAGRAM):   end;
2496374   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2496375   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2496376   +   end;
MPRINT(EM_DIAGRAM):   end;
2496377   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496378   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2496379   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2496380   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496381   +   end;
MPRINT(EM_DIAGRAM):   end;
2496382   +end;
MPRINT(EM_DIAGRAM):   end;
2496383   +
2496384   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2496385   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2496386   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2496387   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2496388   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2496389   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496390   +end;
MPRINT(EM_DIAGRAM):   end;
2496391   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496392   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2496393   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2496394   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496395   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2496396   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2496397   +   end;
MPRINT(EM_DIAGRAM):   end;
2496398   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2496399   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2496400   +   end;
MPRINT(EM_DIAGRAM):   end;
2496401   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496402   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2496403   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2496404   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496405   +   end;
MPRINT(EM_DIAGRAM):   end;
2496406   +end;
MPRINT(EM_DIAGRAM):   end;
2496407   +
2496408   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2496409   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2496410   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2496411   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2496412   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2496413   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496414   +end;
MPRINT(EM_DIAGRAM):   end;
2496415   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496416   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2496417   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2496418   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496419   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2496420   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2496421   +   end;
MPRINT(EM_DIAGRAM):   end;
2496422   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2496423   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2496424   +   end;
MPRINT(EM_DIAGRAM):   end;
2496425   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496426   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2496427   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2496428   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496429   +   end;
MPRINT(EM_DIAGRAM):   end;
2496430   +end;
MPRINT(EM_DIAGRAM):   end;
2496431   +
2496432   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2496433   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2496434   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2496435   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2496436   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2496437   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496438   +end;
MPRINT(EM_DIAGRAM):   end;
2496439   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496440   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2496441   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2496442   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496443   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2496444   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2496445   +   end;
MPRINT(EM_DIAGRAM):   end;
2496446   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2496447   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2496448   +   end;
MPRINT(EM_DIAGRAM):   end;
2496449   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496450   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2496451   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2496452   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496453   +   end;
MPRINT(EM_DIAGRAM):   end;
2496454   +end;
MPRINT(EM_DIAGRAM):   end;
2496455   +
2496456   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2496457   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2496458   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2496459   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2496460   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2496461   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2496462   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2496463   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2496464   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2496465   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2496466   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2496467   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2496468   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2496469   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496470   +end;
MPRINT(EM_DIAGRAM):   end;
2496471   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496472   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2496473   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2496474   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496475   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2496476   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2496477   +   end;
MPRINT(EM_DIAGRAM):   end;
2496478   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2496479   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2496480   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2496481   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2496482   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2496483   +   end;
MPRINT(EM_DIAGRAM):   end;
2496484   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2496485   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2496486   +   end;
MPRINT(EM_DIAGRAM):   end;
2496487   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2496488   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2496489   +   end;
MPRINT(EM_DIAGRAM):   end;
2496490   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2496491   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2496492   +   end;
MPRINT(EM_DIAGRAM):   end;
2496493   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496494   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2496495   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2496496   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2496497   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2496498   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2496499   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496500   +   end;
MPRINT(EM_DIAGRAM):   end;
2496501   +end;
MPRINT(EM_DIAGRAM):   end;
2496502   +
2496503   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2496504   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2496505   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2496506   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2496507   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2496508   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2496509   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2496510   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2496511   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2496512   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2496513   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2496514   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2496515   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2496516   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2496517   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496518   +end;
MPRINT(EM_DIAGRAM):   end;
2496519   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496520   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2496521   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2496522   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496523   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2496524   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2496525   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2496526   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2496527   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2496528   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2496529   +         end;
MPRINT(EM_DIAGRAM):   end;
2496530   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2496531   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2496532   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2496533   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2496534   +            end;
MPRINT(EM_DIAGRAM):   end;
2496535   +         end;
MPRINT(EM_DIAGRAM):   end;
2496536   +      end;
MPRINT(EM_DIAGRAM):   end;
2496537   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2496538   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2496539   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2496540   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2496541   +         end;
MPRINT(EM_DIAGRAM):   end;
2496542   +      end;
MPRINT(EM_DIAGRAM):   end;
2496543   +   end;
MPRINT(EM_DIAGRAM):   end;
2496544   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496545   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2496546   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2496547   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2496548   +      end;
MPRINT(EM_DIAGRAM):   end;
2496549   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2496550   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2496551   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2496552   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2496553   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2496554   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2496555   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2496556   +         end;
MPRINT(EM_DIAGRAM):   end;
2496557   +      end;
MPRINT(EM_DIAGRAM):   end;
2496558   +   end;
MPRINT(EM_DIAGRAM):   end;
2496559   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2496560   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2496561   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2496562   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2496563   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2496564   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2496565   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496566   +   end;
MPRINT(EM_DIAGRAM):   end;
2496567   +end;
MPRINT(EM_DIAGRAM):   end;
2496568   +
2496569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496570   +*** Checking missing input Interval
2496571   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2496572   +
2496573   +IF NMISS(
2496574   +   AcceptedCmpTotal ,
2496575   +   Age ,
2496576   +   Frq ,
2496577   +   Income ,
2496578   +   Kidhome ,
2496579   +   Mnt ,
2496580   +   MntFishProducts ,
2496581   +   MntFruits ,
2496582   +   MntGoldProds ,
2496583   +   MntMeatProducts ,
2496584   +   MntSweetProducts ,
2496585   +   MntWines ,
2496586   +   MonthsAsCustomer ,
2496587   +   NumCatalogPurchases ,
2496588   +   NumDealsPurchases ,
2496589   +   NumDistPurchases ,
2496590   +   NumStorePurchases ,
2496591   +   NumWebPurchases ,
2496592   +   NumWebVisitsMonth ,
2496593   +   RFMstat ,
2496594   +   RMntFrq ,
2496595   +   Recency ,
2496596   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2496597   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2496598   +
2496599   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496600   +END;
MPRINT(EM_DIAGRAM):   END;
2496601   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496602   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2496603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496604   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2496605   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2496606   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2496607   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2496608   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2496609   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2496610   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2496611   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2496612   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2496613   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2496614   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2496615   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2496616   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2496617   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2496618   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2496619   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2496620   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2496621   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2496622   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2496623   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2496624   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2496625   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2496626   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2496627   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2496628   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2496629   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2496630   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2496631   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2496632   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2496633   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2496634   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2496635   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2496636   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2496637   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2496638   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2496639   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2496640   +END;
MPRINT(EM_DIAGRAM):   END;
2496641   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2496642   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2496643   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2496644   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2496645   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2496646   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2496647   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2496648   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2496649   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2496650   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2496651   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2496652   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2496653   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2496654   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2496655   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2496656   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2496657   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2496658   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2496659   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2496660   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2496661   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2496662   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2496663   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2496664   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2496665   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2496666   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2496667   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2496668   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2496669   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2496670   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2496671   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2496672   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2496673   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2496674   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2496675   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2496676   +   ELSE S_NumCatalogPurchases
2496677   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2496678   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2496679   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2496680   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2496681   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2496682   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2496683   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2496684   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2496685   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2496686   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2496687   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2496688   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2496689   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2496690   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2496691   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2496692   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2496693   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2496694   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2496695   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2496696   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2496697   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2496698   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2496699   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2496700   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2496701   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2496702   +END;
MPRINT(EM_DIAGRAM):   END;
2496703   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496704   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2496705   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496707   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2496708   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496710   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2496711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496712   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2496713   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2496714   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2496715   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2496716   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2496717   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2496718   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2496719   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2496720   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2496721   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2496722   +          +     1.32037113020393 * S_NumDealsPurchases
2496723   +          +     0.42879249227132 * S_NumDistPurchases
2496724   +          +    -0.89190172778783 * S_NumStorePurchases
2496725   +          +    -0.87975442613962 * S_NumWebPurchases
2496726   +          +     2.98977282825831 * S_NumWebVisitsMonth
2496727   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2496728   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2496729   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 *
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 *
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts +
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 *
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines +
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases +
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases +
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases +
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 *
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2496730   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2496731   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2496732   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2496733   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2496734   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2496735   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2496736   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2496737   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2496738   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2496739   +          +    -1.16737670931605 * S_NumDealsPurchases
2496740   +          +     0.08205195039242 * S_NumDistPurchases
2496741   +          +    -0.65367044520084 * S_NumStorePurchases
2496742   +          +     2.39693083674757 * S_NumWebPurchases
2496743   +          +     0.18432526469897 * S_NumWebVisitsMonth
2496744   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2496745   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2496746   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 *
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 *
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts +
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 *
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines +
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases +
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases +
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases +
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 *
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2496747   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2496748   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2496749   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2496750   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2496751   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2496752   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2496753   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2496754   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2496755   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2496756   +          +     0.76616480025024 * S_NumDealsPurchases
2496757   +          +     0.42823368706255 * S_NumDistPurchases
2496758   +          +    -1.16998364854907 * S_NumStorePurchases
2496759   +          +     -1.0841896541746 * S_NumWebPurchases
2496760   +          +     2.74837744375079 * S_NumWebVisitsMonth
2496761   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2496762   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2496763   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 *
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 *
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts +
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 *
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines +
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases +
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases +
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases +
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 *
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2496764   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2496765   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2496766   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2496767   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2496768   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2496769   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2496770   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2496771   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2496772   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2496773   +          +     0.78421010501058 * S_NumDealsPurchases
2496774   +          +     0.01075885160671 * S_NumDistPurchases
2496775   +          +    -1.99395040717832 * S_NumStorePurchases
2496776   +          +    -1.02908330834262 * S_NumWebPurchases
2496777   +          +     2.79163466516477 * S_NumWebVisitsMonth
2496778   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2496779   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2496780   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 *
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 *
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts +
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 *
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines +
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases +
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases +
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases +
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 *
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2496781   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2496782   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2496783   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2496784   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2496785   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2496786   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2496787   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2496788   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2496789   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2496790   +          +    -1.04219068390022 * S_NumDealsPurchases
2496791   +          +    -0.45770204483973 * S_NumDistPurchases
2496792   +          +    -0.04941442229195 * S_NumStorePurchases
2496793   +          +     0.67187353161183 * S_NumWebPurchases
2496794   +          +     2.01907760553871 * S_NumWebVisitsMonth
2496795   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2496796   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2496797   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 *
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 *
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts +
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 *
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 *
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 *
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 *
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq +
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2496798   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2496799   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2496800   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2496801   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2496802   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 +
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 *
HigherEducationBinary0 ;
2496803   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2496804   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2496805   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2496806   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2496807   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 *
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 +
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 *
HigherEducationBinary0 ;
2496808   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2496809   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2496810   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2496811   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2496812   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 +
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 *
HigherEducationBinary0 ;
2496813   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2496814   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2496815   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2496816   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2496817   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 +
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 *
HigherEducationBinary0 ;
2496818   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2496819   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2496820   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2496821   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2496822   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 *
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 +
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 *
HigherEducationBinary0 ;
2496823   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2496824   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2496825   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2496826   +          +     2.58907527032049 * Marital_StatusDivorced
2496827   +          +    -2.45549008158921 * Marital_StatusMarried
2496828   +          +     2.56223650840768 * Marital_StatusSingle
2496829   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle +
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 *
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 *
Marital_StatusTogether ;
2496830   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2496831   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2496832   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2496833   +          +     0.83917299191368 * Marital_StatusDivorced
2496834   +          +    -0.62624692699191 * Marital_StatusMarried
2496835   +          +    -0.22585060624911 * Marital_StatusSingle
2496836   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle +
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 *
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 *
Marital_StatusTogether ;
2496837   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2496838   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2496839   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2496840   +          +    -0.65063506696715 * Marital_StatusDivorced
2496841   +          +    -2.37495865381256 * Marital_StatusMarried
2496842   +          +    -0.54954654146904 * Marital_StatusSingle
2496843   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle +
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 *
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 *
Marital_StatusTogether ;
2496844   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2496845   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2496846   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2496847   +          +     0.16185824798364 * Marital_StatusDivorced
2496848   +          +    -0.08142416735136 * Marital_StatusMarried
2496849   +          +    -0.20392270385969 * Marital_StatusSingle
2496850   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle +
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation +
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced +
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle +
-0.16702436233017 * Marital_StatusTogether ;
2496851   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2496852   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2496853   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2496854   +          +      -0.516522631078 * Marital_StatusDivorced
2496855   +          +    -0.61661247789976 * Marital_StatusMarried
2496856   +          +    -0.99533130308294 * Marital_StatusSingle
2496857   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle +
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation +
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced +
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle +
-0.36897004084592 * Marital_StatusTogether ;
2496858   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2496859   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2496860   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2496861   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2496862   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2496863   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2496864   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2496865   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2496866   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2496867   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2496868   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2496869   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2496870   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2496871   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2496872   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2496873   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2496874   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2496875   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2496876   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2496877   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2496878   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2496879   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2496880   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2496881   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2496882   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2496883   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2496884   +END;
MPRINT(EM_DIAGRAM):   END;
2496885   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2496886   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2496887   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2496888   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2496889   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2496890   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2496891   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2496892   +END;
MPRINT(EM_DIAGRAM):   END;
2496893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496894   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2496895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496896   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2496897   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2496898   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2496899   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2496900   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2496901   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2496902   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2496903   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2496904   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2496905   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2496906   +          +    -0.03801022287706 * S_NumDealsPurchases
2496907   +          +    -1.50723574966419 * S_NumDistPurchases
2496908   +          +    -0.21514545448485 * S_NumStorePurchases
2496909   +          +    -0.50179555233865 * S_NumWebPurchases
2496910   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2496911   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2496912   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2496913   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 *
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 *
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts +
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 *
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 *
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 *
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 *
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq +
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2496914   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2496915   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2496916   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2496917   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2496918   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2496919   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2496920   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2496921   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2496922   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2496923   +          +     0.70551335536975 * S_NumDealsPurchases
2496924   +          +     0.02824488988803 * S_NumDistPurchases
2496925   +          +    -0.47958123842808 * S_NumStorePurchases
2496926   +          +     1.04559003239583 * S_NumWebPurchases
2496927   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2496928   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2496929   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2496930   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 *
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 *
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts +
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 *
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 *
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 *
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 *
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq +
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2496931   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2496932   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2496933   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2496934   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2496935   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2496936   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2496937   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2496938   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2496939   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2496940   +          +    -0.28907339261907 * S_NumDealsPurchases
2496941   +          +     0.04310505858352 * S_NumDistPurchases
2496942   +          +    -0.99594604666889 * S_NumStorePurchases
2496943   +          +    -0.58870940220114 * S_NumWebPurchases
2496944   +          +     0.84018399925148 * S_NumWebVisitsMonth
2496945   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2496946   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2496947   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 *
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 *
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts +
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 *
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 *
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 *
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 *
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq +
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2496948   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2496949   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2496950   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2496951   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2496952   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2496953   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2496954   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2496955   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2496956   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2496957   +          +     0.52917289878604 * S_NumDealsPurchases
2496958   +          +     0.30974142545809 * S_NumDistPurchases
2496959   +          +    -0.36081450643799 * S_NumStorePurchases
2496960   +          +    -0.28418053386759 * S_NumWebPurchases
2496961   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2496962   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2496963   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2496964   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 *
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 *
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts +
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 *
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 *
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 *
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 *
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq +
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2496965   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2496966   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2496967   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2496968   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2496969   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2496970   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2496971   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2496972   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2496973   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2496974   +          +    -0.47500053723253 * S_NumDealsPurchases
2496975   +          +     0.41421086319635 * S_NumDistPurchases
2496976   +          +     0.69664835428137 * S_NumStorePurchases
2496977   +          +     0.66359306812968 * S_NumWebPurchases
2496978   +          +     0.77931462528741 * S_NumWebVisitsMonth
2496979   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2496980   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2496981   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 *
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 *
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts +
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 *
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 *
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 *
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 *
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq +
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2496982   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2496983   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2496984   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2496985   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2496986   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 *
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 +
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 *
HigherEducationBinary0 ;
2496987   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2496988   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2496989   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2496990   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2496991   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 *
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 +
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 *
HigherEducationBinary0 ;
2496992   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2496993   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2496994   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2496995   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2496996   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 *
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 +
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 *
HigherEducationBinary0 ;
2496997   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2496998   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2496999   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2497000   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2497001   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 *
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 +
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 *
HigherEducationBinary0 ;
2497002   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2497003   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2497004   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2497005   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2497006   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 *
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 +
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 *
HigherEducationBinary0 ;
2497007   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2497008   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2497009   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2497010   +          +    -1.34742914042312 * Marital_StatusDivorced
2497011   +          +    -0.75378934918763 * Marital_StatusMarried
2497012   +          +    -1.85411678929217 * Marital_StatusSingle
2497013   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle +
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 *
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 *
Marital_StatusTogether ;
2497014   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2497015   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2497016   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2497017   +          +     0.47958659206261 * Marital_StatusDivorced
2497018   +          +     -0.9665584294045 * Marital_StatusMarried
2497019   +          +      0.9733784530538 * Marital_StatusSingle
2497020   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle +
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 *
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 *
Marital_StatusTogether ;
2497021   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2497022   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2497023   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2497024   +          +    -0.56894207908284 * Marital_StatusDivorced
2497025   +          +    -0.96715106987195 * Marital_StatusMarried
2497026   +          +     1.18678144721443 * Marital_StatusSingle
2497027   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle +
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation +
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced +
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle +
1.05940264255347 * Marital_StatusTogether ;
2497028   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2497029   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2497030   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2497031   +          +     -0.6061959224661 * Marital_StatusDivorced
2497032   +          +     0.03495844244684 * Marital_StatusMarried
2497033   +          +    -0.63896361063244 * Marital_StatusSingle
2497034   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle +
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation +
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced +
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle +
0.74357887057422 * Marital_StatusTogether ;
2497035   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2497036   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2497037   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2497038   +          +     0.82178907301319 * Marital_StatusDivorced
2497039   +          +     1.69543553114589 * Marital_StatusMarried
2497040   +          +     -2.1272067363559 * Marital_StatusSingle
2497041   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle +
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 *
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 *
Marital_StatusTogether ;
2497042   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2497043   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2497044   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2497045   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2497046   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2497047   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2497048   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2497049   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2497050   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2497051   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2497052   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2497053   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2497054   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2497055   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2497056   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2497057   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2497058   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2497059   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2497060   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2497061   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2497062   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2497063   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2497064   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2497065   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2497066   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2497067   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2497068   +END;
MPRINT(EM_DIAGRAM):   END;
2497069   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2497070   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2497071   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2497072   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2497073   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2497074   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2497075   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2497076   +END;
MPRINT(EM_DIAGRAM):   END;
2497077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497078   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2497079   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497080   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2497081   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2497082   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2497083   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 +
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 +
-1.38760297105319 * H1x1_6 ;
2497084   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2497085   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2497086   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 +
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 +
2.71965753640902 * H1x1_6 ;
2497087   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2497088   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2497089   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 +
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 +
-0.94725163293394 * H1x1_6 ;
2497090   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2497091   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2497092   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 +
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 +
0.66585878141635 * H1x1_6 ;
2497093   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2497094   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2497095   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 +
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 +
3.57592566919388 * H1x1_6 ;
2497096   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2497097   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2497098   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 +
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 +
-0.32006241006585 * H1x1_6 ;
2497099   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2497100   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2497101   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2497102   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 *
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 +
-0.07237646966438 * H1x2_6 ;
2497103   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2497104   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2497105   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2497106   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 +
0.35471332651631 * H1x2_6 ;
2497107   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2497108   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2497109   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2497110   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 +
0.5218140468737 * H1x2_6 ;
2497111   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2497112   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2497113   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2497114   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 +
-0.67920869444907 * H1x2_6 ;
2497115   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2497116   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2497117   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2497118   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 +
1.1175989027563 * H1x2_6 ;
2497119   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2497120   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2497121   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2497122   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 *
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5
+ 1.54589390085972 * H1x2_6 ;
2497123   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2497124   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2497125   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2497126   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2497127   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2497128   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2497129   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2497130   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2497131   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2497132   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2497133   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2497134   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2497135   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2497136   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2497137   +END;
MPRINT(EM_DIAGRAM):   END;
2497138   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2497139   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2497140   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2497141   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2497142   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2497143   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2497144   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2497145   +END;
MPRINT(EM_DIAGRAM):   END;
2497146   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497147   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2497148   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497149   +
2497150   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2497151   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2497152   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2497153   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2497154   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2497155   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2497156   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2497157   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2497158   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2497159   +end;
MPRINT(EM_DIAGRAM):   end;
2497160   +else do;
MPRINT(EM_DIAGRAM):   else do;
2497161   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2497162   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2497163   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2497164   +   end;
MPRINT(EM_DIAGRAM):   end;
2497165   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2497166   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2497167   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2497168   +   end;
MPRINT(EM_DIAGRAM):   end;
2497169   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2497170   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2497171   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2497172   +   end;
MPRINT(EM_DIAGRAM):   end;
2497173   +end;
MPRINT(EM_DIAGRAM):   end;
2497174   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2497175   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2497176   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2497177   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 +
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 +
1.54726164498938 * H2x1_6 ;
2497178   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2497179   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2497180   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2497181   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2497182   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2497183   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2497184   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2497185   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2497186   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2497187   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2497188   +END;
MPRINT(EM_DIAGRAM):   END;
2497189   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2497190   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2497191   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2497192   +END;
MPRINT(EM_DIAGRAM):   END;
2497193   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2497194   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2497195   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2497196   +END;
MPRINT(EM_DIAGRAM):   END;
2497197   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2497198   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2497199   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2497200   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2497201   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2497202   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2497203   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2497204   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497205   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2497206   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497207   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2497208   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2497209   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2497210   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2497211   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2497212   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2497213   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2497214   +END;
MPRINT(EM_DIAGRAM):   END;
2497215   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2497216   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2497217   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2497218   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2497219   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2497220   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497221   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2497222   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497223   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2497224   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2497225   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2497226   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2497227   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497228   +* Renaming Into variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural11;
2497229   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497230   +length AutoNeural11_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural11_I_DepVar $32;
2497231   +drop AutoNeural11_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_I_DepVar;
2497232   +AutoNeural11_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural11_I_DepVar = I_DepVar;
2497233   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497234   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2497235   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497236   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2497237   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2497238   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2497239   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497240   +* Ensmbl47: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 3 of 5;
2497241   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497242   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497243   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2497244   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2497245   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2497246   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497247   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2497248   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2497249   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2497250   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2497251   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2497252   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2497253   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2497254   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2497255   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2497256   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2497257   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2497258   +LENGTH _WARN_ $4
2497259   +      F_DepVar  $ 12
2497260   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2497261   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2497262   +
2497263   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2497264   +
2497265   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2497266   +
2497267   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2497268   +
2497269   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2497270   +
2497271   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2497272   +
2497273   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2497274   +
2497275   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2497276   +
2497277   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2497278   +
2497279   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2497280   +
2497281   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2497282   +
2497283   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2497284   +
2497285   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2497286   +
2497287   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2497288   +
2497289   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2497290   +
2497291   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2497292   +
2497293   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2497294   +
2497295   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2497296   +
2497297   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2497298   +
2497299   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2497300   +
2497301   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2497302   +
2497303   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2497304   +
2497305   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2497306   +
2497307   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2497308   +
2497309   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2497310   +
2497311   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2497312   +
2497313   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2497314   +
2497315   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2497316   +
2497317   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2497318   +
2497319   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2497320   +
2497321   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2497322   +
2497323   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2497324   +
2497325   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2497326   +
2497327   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2497328   +
2497329   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2497330   +
2497331   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2497332   +
2497333   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2497334   +
2497335   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2497336   +
2497337   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2497338   +
2497339   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2497340   +
2497341   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2497342   +
2497343   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2497344   +
2497345   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2497346   +
2497347   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2497348   +
2497349   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2497350   +
2497351   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2497352   +
2497353   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2497354   +
2497355   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2497356   +
2497357   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2497358   +
2497359   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2497360   +
2497361   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2497362   +
2497363   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2497364   +
2497365   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2497366   +
2497367   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2497368   +
2497369   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2497370   +
2497371   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2497372   +
2497373   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2497374   +
2497375   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2497376   +
2497377   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2497378   +
2497379   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2497380   +
2497381   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2497382   +
2497383   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2497384   +
2497385   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2497386   +
2497387   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2497388   +
2497389   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2497390   +
2497391   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2497392   +
2497393   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2497394   +
2497395   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2497396   +
2497397   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2497398   +
2497399   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2497400   +
2497401   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2497402   +
2497403   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2497404   +
2497405   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2497406   +
2497407   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2497408   +
2497409   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2497410   +
2497411   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2497412   +
2497413   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2497414   +
2497415   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2497416   +
2497417   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2497418   +
2497419   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2497420   +
2497421   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2497422   +
2497423   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2497424   +
2497425   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2497426   +
2497427   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2497428   +
2497429   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2497430   +
2497431   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2497432   +
2497433   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2497434   +
2497435   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2497436   +
2497437   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2497438   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2497439   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2497440   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2497441   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2497442   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497443   +end;
MPRINT(EM_DIAGRAM):   end;
2497444   +else do;
MPRINT(EM_DIAGRAM):   else do;
2497445   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2497446   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2497447   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2497448   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2497449   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2497450   +   end;
MPRINT(EM_DIAGRAM):   end;
2497451   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2497452   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2497453   +   end;
MPRINT(EM_DIAGRAM):   end;
2497454   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2497455   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2497456   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2497457   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497458   +   end;
MPRINT(EM_DIAGRAM):   end;
2497459   +end;
MPRINT(EM_DIAGRAM):   end;
2497460   +
2497461   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2497462   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2497463   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2497464   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2497465   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2497466   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497467   +end;
MPRINT(EM_DIAGRAM):   end;
2497468   +else do;
MPRINT(EM_DIAGRAM):   else do;
2497469   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2497470   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2497471   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2497472   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2497473   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2497474   +   end;
MPRINT(EM_DIAGRAM):   end;
2497475   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2497476   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2497477   +   end;
MPRINT(EM_DIAGRAM):   end;
2497478   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2497479   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2497480   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2497481   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497482   +   end;
MPRINT(EM_DIAGRAM):   end;
2497483   +end;
MPRINT(EM_DIAGRAM):   end;
2497484   +
2497485   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2497486   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2497487   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2497488   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2497489   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2497490   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497491   +end;
MPRINT(EM_DIAGRAM):   end;
2497492   +else do;
MPRINT(EM_DIAGRAM):   else do;
2497493   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2497494   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2497495   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2497496   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2497497   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2497498   +   end;
MPRINT(EM_DIAGRAM):   end;
2497499   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2497500   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2497501   +   end;
MPRINT(EM_DIAGRAM):   end;
2497502   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2497503   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2497504   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2497505   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497506   +   end;
MPRINT(EM_DIAGRAM):   end;
2497507   +end;
MPRINT(EM_DIAGRAM):   end;
2497508   +
2497509   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2497510   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2497511   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2497512   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2497513   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2497514   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497515   +end;
MPRINT(EM_DIAGRAM):   end;
2497516   +else do;
MPRINT(EM_DIAGRAM):   else do;
2497517   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2497518   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2497519   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2497520   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2497521   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2497522   +   end;
MPRINT(EM_DIAGRAM):   end;
2497523   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2497524   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2497525   +   end;
MPRINT(EM_DIAGRAM):   end;
2497526   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2497527   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2497528   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2497529   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497530   +   end;
MPRINT(EM_DIAGRAM):   end;
2497531   +end;
MPRINT(EM_DIAGRAM):   end;
2497532   +
2497533   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2497534   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2497535   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2497536   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2497537   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2497538   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497539   +end;
MPRINT(EM_DIAGRAM):   end;
2497540   +else do;
MPRINT(EM_DIAGRAM):   else do;
2497541   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2497542   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2497543   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2497544   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2497545   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2497546   +   end;
MPRINT(EM_DIAGRAM):   end;
2497547   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2497548   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2497549   +   end;
MPRINT(EM_DIAGRAM):   end;
2497550   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2497551   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2497552   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2497553   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497554   +   end;
MPRINT(EM_DIAGRAM):   end;
2497555   +end;
MPRINT(EM_DIAGRAM):   end;
2497556   +
2497557   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2497558   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2497559   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2497560   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2497561   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2497562   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497563   +end;
MPRINT(EM_DIAGRAM):   end;
2497564   +else do;
MPRINT(EM_DIAGRAM):   else do;
2497565   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2497566   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2497567   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2497568   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2497569   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2497570   +   end;
MPRINT(EM_DIAGRAM):   end;
2497571   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2497572   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2497573   +   end;
MPRINT(EM_DIAGRAM):   end;
2497574   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2497575   +      Complain0 = .;
The SAS System
 
MPRINT(EM_DIAGRAM):   Complain0 = .;
2497576   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2497577   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497578   +   end;
MPRINT(EM_DIAGRAM):   end;
2497579   +end;
MPRINT(EM_DIAGRAM):   end;
2497580   +
2497581   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2497582   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2497583   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2497584   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2497585   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2497586   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497587   +end;
MPRINT(EM_DIAGRAM):   end;
2497588   +else do;
MPRINT(EM_DIAGRAM):   else do;
2497589   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2497590   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2497591   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2497592   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2497593   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2497594   +   end;
MPRINT(EM_DIAGRAM):   end;
2497595   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2497596   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2497597   +   end;
MPRINT(EM_DIAGRAM):   end;
2497598   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2497599   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2497600   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2497601   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497602   +   end;
MPRINT(EM_DIAGRAM):   end;
2497603   +end;
MPRINT(EM_DIAGRAM):   end;
2497604   +
2497605   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2497606   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2497607   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2497608   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2497609   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2497610   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2497611   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2497612   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2497613   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2497614   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2497615   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2497616   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2497617   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2497618   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497619   +end;
MPRINT(EM_DIAGRAM):   end;
2497620   +else do;
MPRINT(EM_DIAGRAM):   else do;
2497621   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2497622   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2497623   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2497624   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2497625   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2497626   +   end;
MPRINT(EM_DIAGRAM):   end;
2497627   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2497628   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2497629   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2497630   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2497631   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2497632   +   end;
MPRINT(EM_DIAGRAM):   end;
2497633   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2497634   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2497635   +   end;
MPRINT(EM_DIAGRAM):   end;
2497636   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2497637   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2497638   +   end;
MPRINT(EM_DIAGRAM):   end;
2497639   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2497640   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2497641   +   end;
MPRINT(EM_DIAGRAM):   end;
2497642   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2497643   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2497644   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2497645   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2497646   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2497647   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2497648   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497649   +   end;
MPRINT(EM_DIAGRAM):   end;
2497650   +end;
MPRINT(EM_DIAGRAM):   end;
2497651   +
2497652   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2497653   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2497654   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2497655   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2497656   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2497657   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2497658   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2497659   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2497660   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2497661   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2497662   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2497663   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2497664   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2497665   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2497666   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497667   +end;
MPRINT(EM_DIAGRAM):   end;
2497668   +else do;
MPRINT(EM_DIAGRAM):   else do;
2497669   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2497670   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2497671   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2497672   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2497673   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2497674   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2497675   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2497676   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2497677   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2497678   +         end;
MPRINT(EM_DIAGRAM):   end;
2497679   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2497680   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2497681   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2497682   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2497683   +            end;
MPRINT(EM_DIAGRAM):   end;
2497684   +         end;
MPRINT(EM_DIAGRAM):   end;
2497685   +      end;
MPRINT(EM_DIAGRAM):   end;
2497686   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2497687   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2497688   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2497689   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2497690   +         end;
MPRINT(EM_DIAGRAM):   end;
2497691   +      end;
MPRINT(EM_DIAGRAM):   end;
2497692   +   end;
MPRINT(EM_DIAGRAM):   end;
2497693   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2497694   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2497695   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2497696   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2497697   +      end;
MPRINT(EM_DIAGRAM):   end;
2497698   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2497699   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2497700   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2497701   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2497702   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2497703   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2497704   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2497705   +         end;
MPRINT(EM_DIAGRAM):   end;
2497706   +      end;
MPRINT(EM_DIAGRAM):   end;
2497707   +   end;
MPRINT(EM_DIAGRAM):   end;
2497708   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2497709   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2497710   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2497711   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2497712   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2497713   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2497714   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497715   +   end;
MPRINT(EM_DIAGRAM):   end;
2497716   +end;
MPRINT(EM_DIAGRAM):   end;
2497717   +
2497718   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497719   +*** Checking missing input Interval
2497720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2497721   +
2497722   +IF NMISS(
2497723   +   AcceptedCmpTotal ,
2497724   +   Age ,
2497725   +   Frq ,
2497726   +   Income ,
2497727   +   Kidhome ,
2497728   +   Mnt ,
2497729   +   MntFishProducts ,
2497730   +   MntFruits ,
2497731   +   MntGoldProds ,
2497732   +   MntMeatProducts ,
2497733   +   MntSweetProducts ,
2497734   +   MntWines ,
2497735   +   MonthsAsCustomer ,
2497736   +   NumCatalogPurchases ,
2497737   +   NumDealsPurchases ,
2497738   +   NumDistPurchases ,
2497739   +   NumStorePurchases ,
2497740   +   NumWebPurchases ,
2497741   +   NumWebVisitsMonth ,
2497742   +   RFMstat ,
2497743   +   RMntFrq ,
2497744   +   Recency ,
2497745   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2497746   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2497747   +
2497748   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497749   +END;
MPRINT(EM_DIAGRAM):   END;
2497750   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497751   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2497752   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497753   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2497754   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2497755   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2497756   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2497757   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2497758   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2497759   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2497760   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2497761   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2497762   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2497763   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2497764   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2497765   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2497766   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2497767   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2497768   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2497769   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2497770   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2497771   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2497772   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2497773   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2497774   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2497775   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2497776   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2497777   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2497778   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2497779   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2497780   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2497781   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2497782   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2497783   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2497784   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2497785   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2497786   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2497787   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2497788   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2497789   +END;
MPRINT(EM_DIAGRAM):   END;
2497790   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2497791   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2497792   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2497793   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2497794   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2497795   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2497796   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2497797   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2497798   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2497799   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2497800   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2497801   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2497802   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2497803   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2497804   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2497805   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2497806   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2497807   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2497808   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2497809   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2497810   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2497811   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2497812   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2497813   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2497814   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2497815   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2497816   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2497817   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2497818   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2497819   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2497820   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2497821   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2497822   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2497823   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2497824   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2497825   +   ELSE S_NumCatalogPurchases
2497826   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2497827   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2497828   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2497829   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2497830   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2497831   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2497832   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2497833   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2497834   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2497835   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2497836   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2497837   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2497838   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2497839   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2497840   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2497841   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2497842   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2497843   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2497844   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2497845   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2497846   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2497847   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2497848   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2497849   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2497850   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2497851   +END;
MPRINT(EM_DIAGRAM):   END;
2497852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497853   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2497854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497855   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497856   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2497857   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497859   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2497860   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497861   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2497862   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2497863   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2497864   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2497865   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2497866   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2497867   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2497868   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2497869   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2497870   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2497871   +          +    -1.18466001117424 * S_NumDealsPurchases
2497872   +          +     -0.1371252133567 * S_NumDistPurchases
2497873   +          +     1.92719775731123 * S_NumStorePurchases
2497874   +          +     1.23184249192116 * S_NumWebPurchases
2497875   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2497876   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2497877   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2497878   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 *
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 *
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts +
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 *
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 *
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 *
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 *
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq +
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2497879   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2497880   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2497881   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2497882   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2497883   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2497884   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2497885   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2497886   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2497887   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2497888   +          +     0.63616523425865 * S_NumDealsPurchases
2497889   +          +     0.45460056261546 * S_NumDistPurchases
2497890   +          +    -0.61009999017225 * S_NumStorePurchases
2497891   +          +     1.85193755731081 * S_NumWebPurchases
2497892   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2497893   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2497894   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2497895   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 *
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 *
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts +
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 *
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines +
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases +
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases +
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases +
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 *
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2497896   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2497897   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2497898   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2497899   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2497900   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2497901   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2497902   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2497903   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2497904   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2497905   +          +      1.8907968580473 * S_NumDealsPurchases
2497906   +          +     0.01244124801764 * S_NumDistPurchases
2497907   +          +    -2.34409118104622 * S_NumStorePurchases
2497908   +          +    -1.80820043087435 * S_NumWebPurchases
2497909   +          +     2.40219682136039 * S_NumWebVisitsMonth
2497910   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2497911   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2497912   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 *
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 *
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts +
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 *
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines +
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases +
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases +
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases +
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 *
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2497913   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2497914   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2497915   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2497916   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2497917   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2497918   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2497919   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2497920   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2497921   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2497922   +          +     0.28209537604198 * S_NumDealsPurchases
2497923   +          +      0.6450277971767 * S_NumDistPurchases
2497924   +          +     0.85050092520609 * S_NumStorePurchases
2497925   +          +    -0.53920307215941 * S_NumWebPurchases
2497926   +          +     3.01106015100147 * S_NumWebVisitsMonth
2497927   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2497928   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2497929   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 *
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 *
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts +
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 *
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 *
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 *
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 *
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq +
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2497930   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2497931   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2497932   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2497933   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2497934   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2497935   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2497936   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2497937   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2497938   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2497939   +          +    -0.36642526324451 * S_NumDealsPurchases
2497940   +          +     -0.6091014843932 * S_NumDistPurchases
2497941   +          +    -0.21154626182088 * S_NumStorePurchases
2497942   +          +    -0.10361347071364 * S_NumWebPurchases
2497943   +          +     1.36358817627784 * S_NumWebVisitsMonth
2497944   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2497945   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2497946   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 *
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 *
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts +
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 *
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines +
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases +
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases +
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases +
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 *
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2497947   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2497948   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2497949   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2497950   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2497951   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2497952   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2497953   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2497954   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2497955   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2497956   +          +    -0.14868505161718 * S_NumDealsPurchases
2497957   +          +    -0.08395384711805 * S_NumDistPurchases
2497958   +          +     0.60525238179245 * S_NumStorePurchases
2497959   +          +     0.04555100214276 * S_NumWebPurchases
2497960   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2497961   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2497962   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2497963   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 *
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome +
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 *
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts +
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 *
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 *
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 *
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 *
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq +
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2497964   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2497965   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2497966   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2497967   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2497968   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 *
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 +
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 *
HigherEducationBinary0 ;
2497969   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2497970   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2497971   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2497972   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2497973   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 *
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 +
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 *
HigherEducationBinary0 ;
2497974   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2497975   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2497976   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2497977   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2497978   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 *
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 +
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 *
HigherEducationBinary0 ;
2497979   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2497980   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2497981   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2497982   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2497983   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 +
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 *
HigherEducationBinary0 ;
2497984   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2497985   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2497986   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2497987   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2497988   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 *
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 +
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 *
HigherEducationBinary0 ;
2497989   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2497990   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2497991   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2497992   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2497993   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 +
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 *
HigherEducationBinary0 ;
2497994   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2497995   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2497996   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2497997   +          +     -0.7180104021039 * Marital_StatusDivorced
2497998   +          +      0.5957373170744 * Marital_StatusMarried
2497999   +          +    -0.86183942803988 * Marital_StatusSingle
2498000   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle +
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 *
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 *
Marital_StatusTogether ;
2498001   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2498002   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2498003   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2498004   +          +     0.84772700244021 * Marital_StatusDivorced
2498005   +          +    -0.37049970188511 * Marital_StatusMarried
2498006   +          +     1.54291641732063 * Marital_StatusSingle
2498007   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle +
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation +
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced +
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle +
0.2036514883055 * Marital_StatusTogether ;
2498008   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2498009   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2498010   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2498011   +          +     0.73222548496385 * Marital_StatusDivorced
2498012   +          +    -0.50102202656102 * Marital_StatusMarried
2498013   +          +    -0.07207130428422 * Marital_StatusSingle
2498014   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle +
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation +
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced +
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle +
0.17349558515949 * Marital_StatusTogether ;
2498015   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2498016   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2498017   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2498018   +          +     0.25894719464799 * Marital_StatusDivorced
2498019   +          +    -1.95576501275834 * Marital_StatusMarried
2498020   +          +     2.65422185276746 * Marital_StatusSingle
2498021   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle +
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 *
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 *
Marital_StatusTogether ;
2498022   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2498023   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2498024   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2498025   +          +     0.60936191204707 * Marital_StatusDivorced
2498026   +          +    -0.52190111190458 * Marital_StatusMarried
2498027   +          +    -0.60982305233136 * Marital_StatusSingle
2498028   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle +
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation +
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced +
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle +
0.44659686388318 * Marital_StatusTogether ;
2498029   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2498030   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2498031   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2498032   +          +    -1.44614502228294 * Marital_StatusDivorced
2498033   +          +      2.9001493892928 * Marital_StatusMarried
2498034   +          +    -2.60467399972513 * Marital_StatusSingle
2498035   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle +
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 *
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 *
Marital_StatusTogether ;
2498036   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2498037   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2498038   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2498039   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2498040   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2498041   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2498042   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2498043   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2498044   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
2498045   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2498046   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2498047   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2498048   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2498049   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2498050   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2498051   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2498052   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2498053   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2498054   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2498055   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2498056   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2498057   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2498058   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2498059   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2498060   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2498061   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2498062   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2498063   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2498064   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2498065   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2498066   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2498067   +END;
MPRINT(EM_DIAGRAM):   END;
2498068   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2498069   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2498070   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2498071   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2498072   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2498073   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2498074   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2498075   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2498076   +END;
MPRINT(EM_DIAGRAM):   END;
2498077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498078   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2498079   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498080   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2498081   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2498082   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2498083   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2498084   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2498085   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2498086   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2498087   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2498088   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2498089   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2498090   +          +    -0.46483717253931 * S_NumDealsPurchases
2498091   +          +    -0.53329008421157 * S_NumDistPurchases
2498092   +          +      0.2490774300193 * S_NumStorePurchases
2498093   +          +    -0.82755150673885 * S_NumWebPurchases
2498094   +          +     0.04007223822389 * S_NumWebVisitsMonth
2498095   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2498096   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2498097   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 *
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 *
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts +
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 *
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 *
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 *
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 *
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq +
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2498098   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2498099   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2498100   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2498101   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2498102   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2498103   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2498104   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2498105   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2498106   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2498107   +          +     0.75855101382458 * S_NumDealsPurchases
2498108   +          +     1.61754951768262 * S_NumDistPurchases
2498109   +          +    -0.48146714929729 * S_NumStorePurchases
2498110   +          +    -0.76460728035552 * S_NumWebPurchases
2498111   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2498112   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2498113   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2498114   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 *
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 *
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 *
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts +
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 *
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 *
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 *
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 *
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq +
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2498115   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2498116   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2498117   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2498118   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2498119   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2498120   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2498121   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2498122   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2498123   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2498124   +          +     0.75255317965748 * S_NumDealsPurchases
2498125   +          +     1.34900588315783 * S_NumDistPurchases
2498126   +          +    -0.17717469778048 * S_NumStorePurchases
2498127   +          +    -0.01560551546553 * S_NumWebPurchases
2498128   +          +     1.24315988674343 * S_NumWebVisitsMonth
2498129   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2498130   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2498131   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 *
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 *
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts +
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 *
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 *
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 *
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 *
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq +
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2498132   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2498133   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2498134   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2498135   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2498136   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2498137   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2498138   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2498139   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2498140   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2498141   +          +    -1.71127148178768 * S_NumDealsPurchases
2498142   +          +    -1.77527355221308 * S_NumDistPurchases
2498143   +          +    -1.40009594349363 * S_NumStorePurchases
2498144   +          +    -0.46471012062697 * S_NumWebPurchases
2498145   +          +     0.04619891083228 * S_NumWebVisitsMonth
2498146   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2498147   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2498148   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 *
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 *
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts +
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 *
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 *
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 *
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 *
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq +
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2498149   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2498150   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2498151   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2498152   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2498153   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2498154   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2498155   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2498156   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2498157   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2498158   +          +    -0.22204470395056 * S_NumDealsPurchases
2498159   +          +    -1.74490476011984 * S_NumDistPurchases
2498160   +          +     1.93538420108324 * S_NumStorePurchases
2498161   +          +     1.04892631742152 * S_NumWebPurchases
2498162   +          +     1.50717841566047 * S_NumWebVisitsMonth
2498163   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2498164   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2498165   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 *
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 *
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts +
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 *
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 *
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 *
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 *
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq +
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2498166   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2498167   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2498168   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2498169   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2498170   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2498171   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2498172   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2498173   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2498174   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2498175   +          +    -0.94690420785776 * S_NumDealsPurchases
2498176   +          +     1.87932706342204 * S_NumDistPurchases
2498177   +          +     0.31232717416487 * S_NumStorePurchases
2498178   +          +     1.51889492693355 * S_NumWebPurchases
2498179   +          +     0.04376853689795 * S_NumWebVisitsMonth
2498180   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2498181   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2498182   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 *
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 *
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts +
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 *
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 *
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 *
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 *
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq +
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2498183   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2498184   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2498185   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2498186   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2498187   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 *
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 +
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 *
HigherEducationBinary0 ;
2498188   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2498189   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2498190   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2498191   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2498192   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 *
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 +
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 *
HigherEducationBinary0 ;
2498193   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2498194   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2498195   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2498196   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2498197   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 *
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 +
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 *
HigherEducationBinary0 ;
2498198   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2498199   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2498200   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2498201   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2498202   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 *
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 +
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 *
HigherEducationBinary0 ;
2498203   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2498204   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2498205   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2498206   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2498207   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 *
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 +
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 *
HigherEducationBinary0 ;
2498208   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2498209   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2498210   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2498211   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2498212   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 +
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 *
HigherEducationBinary0 ;
2498213   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2498214   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2498215   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2498216   +          +     0.56030871857835 * Marital_StatusDivorced
2498217   +          +    -1.22448534379831 * Marital_StatusMarried
2498218   +          +     0.78141783495855 * Marital_StatusSingle
2498219   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle +
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 *
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 *
Marital_StatusTogether ;
2498220   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2498221   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2498222   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2498223   +          +    -2.63452071552997 * Marital_StatusDivorced
2498224   +          +     0.61829054779121 * Marital_StatusMarried
2498225   +          +    -2.20743370246315 * Marital_StatusSingle
2498226   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle +
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 *
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 *
Marital_StatusTogether ;
2498227   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2498228   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2498229   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2498230   +          +      -1.454102516731 * Marital_StatusDivorced
2498231   +          +     0.71488291465759 * Marital_StatusMarried
2498232   +          +     0.96038830049792 * Marital_StatusSingle
2498233   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle +
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 *
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 *
Marital_StatusTogether ;
2498234   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2498235   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2498236   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2498237   +          +    -0.01160394891598 * Marital_StatusDivorced
2498238   +          +    -1.09054636482951 * Marital_StatusMarried
2498239   +          +      0.7793855479379 * Marital_StatusSingle
2498240   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle +
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation +
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced +
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle +
-0.40649435490654 * Marital_StatusTogether ;
2498241   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2498242   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2498243   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2498244   +          +    -0.73414854875115 * Marital_StatusDivorced
2498245   +          +     0.46421425621114 * Marital_StatusMarried
2498246   +          +    -0.54512730625469 * Marital_StatusSingle
2498247   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle +
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 *
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 *
Marital_StatusTogether ;
2498248   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2498249   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2498250   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2498251   +          +     0.25131188683384 * Marital_StatusDivorced
2498252   +          +     2.38279806963807 * Marital_StatusMarried
2498253   +          +     0.28897706448348 * Marital_StatusSingle
2498254   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle +
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 *
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 *
Marital_StatusTogether ;
2498255   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2498256   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2498257   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2498258   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2498259   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2498260   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2498261   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2498262   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2498263   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
2498264   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2498265   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2498266   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2498267   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2498268   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2498269   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2498270   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2498271   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2498272   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2498273   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2498274   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2498275   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2498276   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2498277   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2498278   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2498279   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2498280   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2498281   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2498282   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2498283   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2498284   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2498285   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2498286   +END;
MPRINT(EM_DIAGRAM):   END;
2498287   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2498288   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2498289   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2498290   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2498291   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2498292   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2498293   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2498294   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2498295   +END;
MPRINT(EM_DIAGRAM):   END;
2498296   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498297   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2498298   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498299   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2498300   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2498301   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2498302   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2498303   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2498304   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2498305   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2498306   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2498307   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2498308   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2498309   +          +     1.11855402225797 * S_NumDealsPurchases
2498310   +          +     0.39150287442005 * S_NumDistPurchases
2498311   +          +     0.00160244551627 * S_NumStorePurchases
2498312   +          +     1.54380043731879 * S_NumWebPurchases
2498313   +          +      0.6462755347813 * S_NumWebVisitsMonth
2498314   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2498315   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2498316   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 *
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 *
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts +
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 *
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 *
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 *
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 *
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq +
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2498317   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2498318   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2498319   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2498320   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2498321   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2498322   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2498323   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2498324   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2498325   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2498326   +          +     0.01911815525287 * S_NumDealsPurchases
2498327   +          +    -1.07196707915227 * S_NumDistPurchases
2498328   +          +      0.6452048321682 * S_NumStorePurchases
2498329   +          +    -0.15818575353955 * S_NumWebPurchases
2498330   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2498331   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2498332   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2498333   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 *
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 *
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts +
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 *
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 *
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 *
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 *
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq +
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2498334   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2498335   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2498336   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2498337   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2498338   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2498339   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2498340   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2498341   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2498342   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2498343   +          +     1.56893739271853 * S_NumDealsPurchases
2498344   +          +      0.6745865425238 * S_NumDistPurchases
2498345   +          +    -0.26848765783548 * S_NumStorePurchases
2498346   +          +     0.79227081430227 * S_NumWebPurchases
2498347   +          +     0.83054874267768 * S_NumWebVisitsMonth
2498348   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2498349   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2498350   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome +
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 *
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts +
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 *
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 *
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 *
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 *
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq +
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2498351   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2498352   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2498353   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2498354   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2498355   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2498356   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2498357   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2498358   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2498359   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2498360   +          +    -0.23954856030467 * S_NumDealsPurchases
2498361   +          +    -1.61914390483829 * S_NumDistPurchases
2498362   +          +      -1.014570623016 * S_NumStorePurchases
2498363   +          +    -0.36828642098701 * S_NumWebPurchases
2498364   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2498365   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2498366   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2498367   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 *
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 *
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts +
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 *
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 *
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 *
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 *
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq +
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2498368   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2498369   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2498370   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2498371   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2498372   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2498373   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2498374   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2498375   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2498376   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2498377   +          +     1.00094082424204 * S_NumDealsPurchases
2498378   +          +      0.2724785290725 * S_NumDistPurchases
2498379   +          +     0.13170237783486 * S_NumStorePurchases
2498380   +          +    -1.31447792523743 * S_NumWebPurchases
2498381   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2498382   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2498383   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2498384   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 *
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 *
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts +
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 *
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines +
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases +
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases +
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases +
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 *
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2498385   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2498386   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2498387   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2498388   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2498389   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2498390   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2498391   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2498392   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2498393   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2498394   +          +    -0.73198872336344 * S_NumDealsPurchases
2498395   +          +     0.29368958872361 * S_NumDistPurchases
2498396   +          +     1.52772046446908 * S_NumStorePurchases
2498397   +          +    -1.75065469134874 * S_NumWebPurchases
2498398   +          +      0.0264954621772 * S_NumWebVisitsMonth
2498399   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2498400   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2498401   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 *
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 *
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts +
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 *
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines +
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases +
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases +
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases +
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 *
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2498402   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2498403   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2498404   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2498405   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2498406   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 *
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 +
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 *
HigherEducationBinary0 ;
2498407   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2498408   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2498409   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2498410   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2498411   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 *
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 +
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 *
HigherEducationBinary0 ;
2498412   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2498413   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2498414   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2498415   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2498416   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 *
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 +
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 *
HigherEducationBinary0 ;
2498417   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2498418   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2498419   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2498420   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2498421   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 *
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 +
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 *
HigherEducationBinary0 ;
2498422   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2498423   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2498424   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2498425   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2498426   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 *
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 +
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 *
HigherEducationBinary0 ;
2498427   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2498428   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2498429   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2498430   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2498431   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 *
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 +
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 *
HigherEducationBinary0 ;
2498432   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2498433   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2498434   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2498435   +          +     0.32207432513904 * Marital_StatusDivorced
2498436   +          +      0.6397913221395 * Marital_StatusMarried
2498437   +          +    -0.25330032559918 * Marital_StatusSingle
2498438   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle +
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 *
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 *
Marital_StatusTogether ;
2498439   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2498440   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2498441   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2498442   +          +     0.79430904713493 * Marital_StatusDivorced
2498443   +          +     2.54456429102799 * Marital_StatusMarried
2498444   +          +     0.59410742352499 * Marital_StatusSingle
2498445   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle +
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 *
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 *
Marital_StatusTogether ;
2498446   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2498447   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2498448   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2498449   +          +    -0.43081775693595 * Marital_StatusDivorced
2498450   +          +    -0.78485102174552 * Marital_StatusMarried
2498451   +          +    -1.56581090110813 * Marital_StatusSingle
2498452   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle +
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation +
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced +
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle +
1.31552735466691 * Marital_StatusTogether ;
2498453   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2498454   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2498455   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2498456   +          +     0.38226706522151 * Marital_StatusDivorced
2498457   +          +     0.96666958079914 * Marital_StatusMarried
2498458   +          +    -0.07771259761555 * Marital_StatusSingle
2498459   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle +
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 *
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 *
Marital_StatusTogether ;
2498460   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2498461   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2498462   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2498463   +          +    -0.38325393606947 * Marital_StatusDivorced
2498464   +          +    -1.43303056163299 * Marital_StatusMarried
2498465   +          +     0.11571941757387 * Marital_StatusSingle
2498466   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle +
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 *
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 *
Marital_StatusTogether ;
2498467   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2498468   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2498469   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2498470   +          +    -0.36491799765765 * Marital_StatusDivorced
2498471   +          +     0.14142786767503 * Marital_StatusMarried
2498472   +          +     0.22643970468805 * Marital_StatusSingle
2498473   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried +
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2498474   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2498475   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2498476   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2498477   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2498478   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2498479   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2498480   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2498481   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2498482   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
2498483   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2498484   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2498485   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2498486   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2498487   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2498488   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2498489   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2498490   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2498491   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2498492   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2498493   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2498494   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2498495   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2498496   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2498497   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2498498   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2498499   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2498500   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2498501   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2498502   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2498503   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2498504   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2498505   +END;
MPRINT(EM_DIAGRAM):   END;
2498506   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2498507   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2498508   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2498509   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2498510   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2498511   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2498512   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2498513   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2498514   +END;
MPRINT(EM_DIAGRAM):   END;
2498515   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498516   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2498517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498518   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2498519   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2498520   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2498521   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2498522   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 +
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 +
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2498523   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2498524   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2498525   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2498526   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 +
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 +
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2498527   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2498528   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2498529   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2498530   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 +
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 +
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2498531   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2498532   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2498533   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2498534   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 +
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 +
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2498535   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2498536   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2498537   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2498538   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 +
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 +
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2498539   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2498540   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2498541   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2498542   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 +
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 +
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2498543   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2498544   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2498545   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2498546   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 *
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 +
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2498547   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2498548   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2498549   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2498550   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 +
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2498551   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2498552   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2498553   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2498554   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 +
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2498555   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2498556   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2498557   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2498558   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 +
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2498559   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2498560   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2498561   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2498562   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 *
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 +
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2498563   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2498564   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2498565   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2498566   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 +
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2498567   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2498568   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2498569   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2498570   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 +
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 +
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2498571   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2498572   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2498573   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2498574   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 +
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2498575   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2498576   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2498577   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2498578   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 +
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2498579   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2498580   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2498581   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2498582   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 +
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2498583   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2498584   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2498585   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2498586   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 +
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2498587   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2498588   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2498589   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2498590   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 +
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2498591   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2498592   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2498593   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2498594   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2498595   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2498596   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2498597   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2498598   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2498599   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
2498600   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2498601   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2498602   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2498603   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2498604   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2498605   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2498606   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2498607   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2498608   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2498609   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2498610   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2498611   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2498612   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2498613   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2498614   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2498615   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2498616   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2498617   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2498618   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2498619   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2498620   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2498621   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2498622   +END;
MPRINT(EM_DIAGRAM):   END;
2498623   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2498624   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2498625   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2498626   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2498627   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2498628   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2498629   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2498630   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2498631   +END;
MPRINT(EM_DIAGRAM):   END;
2498632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498633   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2498634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498635   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2498636   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2498637   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2498638   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2498639   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 +
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 +
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2498640   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2498641   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2498642   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2498643   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 +
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 +
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2498644   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2498645   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2498646   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2498647   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 +
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 +
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2498648   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2498649   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2498650   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2498651   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 +
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 +
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2498652   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2498653   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2498654   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2498655   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 +
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 +
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2498656   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2498657   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2498658   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2498659   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 +
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 +
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2498660   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2498661   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2498662   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2498663   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 *
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 +
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2498664   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2498665   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2498666   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2498667   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 +
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2498668   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2498669   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2498670   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2498671   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 +
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2498672   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2498673   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2498674   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2498675   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 +
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2498676   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2498677   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2498678   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2498679   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 +
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2498680   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2498681   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2498682   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2498683   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 +
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2498684   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2498685   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2498686   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2498687   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 +
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 +
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2498688   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2498689   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2498690   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2498691   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 *
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 +
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2498692   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2498693   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2498694   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2498695   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 *
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 +
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2498696   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2498697   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2498698   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2498699   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 +
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2498700   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2498701   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2498702   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2498703   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 *
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 +
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2498704   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2498705   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2498706   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2498707   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 +
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2498708   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2498709   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2498710   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2498711   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2498712   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2498713   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2498714   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2498715   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2498716   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 ,
H2x2_7 );
2498717   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2498718   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2498719   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2498720   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2498721   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2498722   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2498723   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2498724   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2498725   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2498726   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2498727   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2498728   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2498729   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2498730   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2498731   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2498732   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2498733   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2498734   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2498735   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2498736   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2498737   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2498738   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2498739   +END;
MPRINT(EM_DIAGRAM):   END;
2498740   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2498741   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2498742   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2498743   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2498744   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2498745   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2498746   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2498747   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2498748   +END;
MPRINT(EM_DIAGRAM):   END;
2498749   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498750   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2498751   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498752   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2498753   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2498754   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2498755   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2498756   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 +
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 +
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2498757   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2498758   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2498759   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2498760   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 +
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 +
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2498761   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2498762   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2498763   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2498764   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 +
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 +
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2498765   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2498766   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2498767   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2498768   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 +
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 +
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2498769   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2498770   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2498771   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2498772   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 +
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 +
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2498773   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2498774   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2498775   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2498776   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 +
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 +
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2498777   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2498778   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2498779   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2498780   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 +
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 +
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2498781   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2498782   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2498783   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2498784   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 +
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2498785   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2498786   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2498787   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2498788   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 +
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2498789   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2498790   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2498791   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2498792   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 +
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2498793   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2498794   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2498795   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2498796   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 +
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2498797   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2498798   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2498799   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2498800   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 *
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 +
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2498801   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2498802   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2498803   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2498804   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 +
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2498805   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2498806   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2498807   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2498808   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 +
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2498809   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2498810   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2498811   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2498812   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2498813   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2498814   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2498815   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2498816   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2498817   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2498818   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2498819   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2498820   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2498821   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2498822   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2498823   +END;
MPRINT(EM_DIAGRAM):   END;
2498824   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2498825   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2498826   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2498827   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2498828   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2498829   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2498830   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2498831   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2498832   +END;
MPRINT(EM_DIAGRAM):   END;
2498833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498834   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2498835   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498836   +
2498837   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2498838   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2498839   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2498840   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2498841   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2498842   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2498843   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2498844   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2498845   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2498846   +end;
MPRINT(EM_DIAGRAM):   end;
2498847   +else do;
MPRINT(EM_DIAGRAM):   else do;
2498848   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2498849   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2498850   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2498851   +   end;
MPRINT(EM_DIAGRAM):   end;
2498852   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2498853   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2498854   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2498855   +   end;
MPRINT(EM_DIAGRAM):   end;
2498856   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2498857   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2498858   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2498859   +   end;
MPRINT(EM_DIAGRAM):   end;
2498860   +end;
MPRINT(EM_DIAGRAM):   end;
2498861   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2498862   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2498863   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2498864   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2498865   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 +
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 +
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2498866   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2498867   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2498868   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2498869   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2498870   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2498871   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2498872   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2498873   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2498874   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2498875   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2498876   +END;
MPRINT(EM_DIAGRAM):   END;
2498877   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2498878   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2498879   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2498880   +END;
MPRINT(EM_DIAGRAM):   END;
2498881   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2498882   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2498883   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2498884   +END;
MPRINT(EM_DIAGRAM):   END;
2498885   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2498886   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2498887   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2498888   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2498889   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2498890   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2498891   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2498892   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498893   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2498894   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498895   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2498896   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2498897   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2498898   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2498899   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2498900   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2498901   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2498902   +END;
MPRINT(EM_DIAGRAM):   END;
2498903   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2498904   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2498905   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2498906   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2498907   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2498908   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498909   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2498910   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498911   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2498912   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2498913   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2498914   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2498915   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498916   +* Renaming Into variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural12;
2498917   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498918   +length AutoNeural12_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural12_I_DepVar $32;
2498919   +drop AutoNeural12_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_I_DepVar;
2498920   +AutoNeural12_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural12_I_DepVar = I_DepVar;
2498921   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498922   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2498923   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498924   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2498925   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2498926   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2498927   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498928   +* Ensmbl47: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 4 of 5;
2498929   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498930   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498931   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2498932   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2498933   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2498934   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498935   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2498936   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2498937   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2498938   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2498939   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2498940   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2498941   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2498942   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2498943   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2498944   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2498945   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2498946   +LENGTH _WARN_ $4
2498947   +      F_DepVar  $ 12
2498948   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2498949   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2498950   +
2498951   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2498952   +
2498953   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2498954   +
2498955   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2498956   +
2498957   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2498958   +
2498959   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2498960   +
2498961   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2498962   +
2498963   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2498964   +
2498965   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2498966   +
2498967   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2498968   +
2498969   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2498970   +
2498971   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2498972   +
2498973   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2498974   +
2498975   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2498976   +
2498977   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2498978   +
2498979   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2498980   +
2498981   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2498982   +
2498983   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2498984   +
2498985   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2498986   +
2498987   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2498988   +
2498989   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2498990   +
2498991   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2498992   +
2498993   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2498994   +
2498995   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2498996   +
2498997   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2498998   +
2498999   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2499000   +
2499001   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2499002   +
2499003   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2499004   +
2499005   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2499006   +
2499007   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2499008   +
2499009   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2499010   +
2499011   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2499012   +
2499013   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2499014   +
2499015   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2499016   +
2499017   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2499018   +
2499019   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2499020   +
2499021   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2499022   +
2499023   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2499024   +
2499025   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2499026   +
2499027   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2499028   +
2499029   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2499030   +
2499031   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2499032   +
2499033   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2499034   +
2499035   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2499036   +
2499037   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2499038   +
2499039   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2499040   +
2499041   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2499042   +
2499043   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2499044   +
2499045   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2499046   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2499047   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2499048   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2499049   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499050   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499051   +end;
MPRINT(EM_DIAGRAM):   end;
2499052   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499053   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499054   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2499055   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499056   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2499057   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2499058   +   end;
MPRINT(EM_DIAGRAM):   end;
2499059   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2499060   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2499061   +   end;
MPRINT(EM_DIAGRAM):   end;
2499062   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499063   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2499064   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499065   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499066   +   end;
MPRINT(EM_DIAGRAM):   end;
2499067   +end;
MPRINT(EM_DIAGRAM):   end;
2499068   +
2499069   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2499070   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2499071   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2499072   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2499073   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499074   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499075   +end;
MPRINT(EM_DIAGRAM):   end;
2499076   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499077   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499078   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2499079   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499080   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2499081   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2499082   +   end;
MPRINT(EM_DIAGRAM):   end;
2499083   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2499084   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2499085   +   end;
MPRINT(EM_DIAGRAM):   end;
2499086   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499087   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2499088   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499089   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499090   +   end;
MPRINT(EM_DIAGRAM):   end;
2499091   +end;
MPRINT(EM_DIAGRAM):   end;
2499092   +
2499093   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2499094   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2499095   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2499096   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2499097   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499098   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499099   +end;
MPRINT(EM_DIAGRAM):   end;
2499100   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499101   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499102   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2499103   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499104   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2499105   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2499106   +   end;
MPRINT(EM_DIAGRAM):   end;
2499107   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2499108   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2499109   +   end;
MPRINT(EM_DIAGRAM):   end;
2499110   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499111   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2499112   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499113   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499114   +   end;
MPRINT(EM_DIAGRAM):   end;
2499115   +end;
MPRINT(EM_DIAGRAM):   end;
2499116   +
2499117   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2499118   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2499119   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2499120   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2499121   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499122   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499123   +end;
MPRINT(EM_DIAGRAM):   end;
2499124   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499125   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499126   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2499127   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499128   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2499129   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2499130   +   end;
MPRINT(EM_DIAGRAM):   end;
2499131   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2499132   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2499133   +   end;
MPRINT(EM_DIAGRAM):   end;
2499134   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499135   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2499136   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499137   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499138   +   end;
MPRINT(EM_DIAGRAM):   end;
2499139   +end;
MPRINT(EM_DIAGRAM):   end;
2499140   +
2499141   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2499142   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2499143   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2499144   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2499145   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499146   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499147   +end;
MPRINT(EM_DIAGRAM):   end;
2499148   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499149   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499150   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2499151   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499152   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2499153   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2499154   +   end;
MPRINT(EM_DIAGRAM):   end;
2499155   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2499156   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2499157   +   end;
MPRINT(EM_DIAGRAM):   end;
2499158   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499159   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2499160   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499161   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499162   +   end;
MPRINT(EM_DIAGRAM):   end;
2499163   +end;
MPRINT(EM_DIAGRAM):   end;
2499164   +
2499165   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2499166   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2499167   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2499168   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2499169   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499170   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499171   +end;
MPRINT(EM_DIAGRAM):   end;
2499172   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499173   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499174   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2499175   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499176   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2499177   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2499178   +   end;
MPRINT(EM_DIAGRAM):   end;
2499179   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2499180   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2499181   +   end;
MPRINT(EM_DIAGRAM):   end;
2499182   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499183   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2499184   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499185   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499186   +   end;
MPRINT(EM_DIAGRAM):   end;
2499187   +end;
MPRINT(EM_DIAGRAM):   end;
2499188   +
2499189   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2499190   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2499191   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2499192   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2499193   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499194   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499195   +end;
MPRINT(EM_DIAGRAM):   end;
2499196   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499197   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499198   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2499199   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499200   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2499201   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2499202   +   end;
MPRINT(EM_DIAGRAM):   end;
2499203   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2499204   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2499205   +   end;
MPRINT(EM_DIAGRAM):   end;
2499206   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499207   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2499208   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499209   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499210   +   end;
MPRINT(EM_DIAGRAM):   end;
2499211   +end;
MPRINT(EM_DIAGRAM):   end;
2499212   +
2499213   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2499214   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2499215   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2499216   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2499217   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2499218   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2499219   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2499220   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2499221   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2499222   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2499223   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2499224   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2499225   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499226   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499227   +end;
MPRINT(EM_DIAGRAM):   end;
2499228   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499229   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2499230   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2499231   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499232   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2499233   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2499234   +   end;
MPRINT(EM_DIAGRAM):   end;
2499235   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2499236   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2499237   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2499238   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2499239   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2499240   +   end;
MPRINT(EM_DIAGRAM):   end;
2499241   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2499242   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2499243   +   end;
MPRINT(EM_DIAGRAM):   end;
2499244   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2499245   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2499246   +   end;
MPRINT(EM_DIAGRAM):   end;
2499247   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2499248   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2499249   +   end;
MPRINT(EM_DIAGRAM):   end;
2499250   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499251   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2499252   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2499253   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2499254   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2499255   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499256   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499257   +   end;
MPRINT(EM_DIAGRAM):   end;
2499258   +end;
MPRINT(EM_DIAGRAM):   end;
2499259   +
2499260   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2499261   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2499262   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2499263   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2499264   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2499265   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2499266   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2499267   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2499268   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2499269   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2499270   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2499271   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2499272   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2499273   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499274   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499275   +end;
MPRINT(EM_DIAGRAM):   end;
2499276   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499277   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2499278   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2499279   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499280   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2499281   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2499282   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2499283   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2499284   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2499285   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2499286   +         end;
MPRINT(EM_DIAGRAM):   end;
2499287   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2499288   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2499289   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2499290   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2499291   +            end;
MPRINT(EM_DIAGRAM):   end;
2499292   +         end;
MPRINT(EM_DIAGRAM):   end;
2499293   +      end;
MPRINT(EM_DIAGRAM):   end;
2499294   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2499295   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2499296   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2499297   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2499298   +         end;
MPRINT(EM_DIAGRAM):   end;
2499299   +      end;
MPRINT(EM_DIAGRAM):   end;
2499300   +   end;
MPRINT(EM_DIAGRAM):   end;
2499301   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499302   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2499303   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2499304   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2499305   +      end;
MPRINT(EM_DIAGRAM):   end;
2499306   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2499307   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2499308   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2499309   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2499310   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2499311   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2499312   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2499313   +         end;
MPRINT(EM_DIAGRAM):   end;
2499314   +      end;
MPRINT(EM_DIAGRAM):   end;
2499315   +   end;
MPRINT(EM_DIAGRAM):   end;
2499316   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2499317   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2499318   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2499319   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2499320   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2499321   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499322   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499323   +   end;
MPRINT(EM_DIAGRAM):   end;
2499324   +end;
MPRINT(EM_DIAGRAM):   end;
2499325   +
2499326   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499327   +*** Checking missing input Interval
2499328   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2499329   +
2499330   +IF NMISS(
2499331   +   AcceptedCmpTotal ,
2499332   +   Age ,
2499333   +   Frq ,
2499334   +   Income ,
2499335   +   Kidhome ,
2499336   +   Mnt ,
2499337   +   MntFishProducts ,
2499338   +   MntFruits ,
2499339   +   MntGoldProds ,
2499340   +   MntMeatProducts ,
2499341   +   MntSweetProducts ,
2499342   +   MntWines ,
2499343   +   MonthsAsCustomer ,
2499344   +   NumCatalogPurchases ,
2499345   +   NumDealsPurchases ,
2499346   +   NumDistPurchases ,
2499347   +   NumStorePurchases ,
2499348   +   NumWebPurchases ,
2499349   +   NumWebVisitsMonth ,
2499350   +   RFMstat ,
2499351   +   RMntFrq ,
2499352   +   Recency ,
2499353   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2499354   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2499355   +
2499356   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499357   +END;
MPRINT(EM_DIAGRAM):   END;
2499358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499359   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2499360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499361   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2499362   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2499363   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2499364   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2499365   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2499366   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2499367   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2499368   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2499369   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2499370   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2499371   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2499372   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2499373   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2499374   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2499375   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2499376   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2499377   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2499378   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2499379   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2499380   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2499381   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2499382   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2499383   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2499384   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2499385   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2499386   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2499387   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2499388   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2499389   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2499390   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2499391   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2499392   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2499393   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2499394   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2499395   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2499396   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2499397   +END;
MPRINT(EM_DIAGRAM):   END;
2499398   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2499399   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2499400   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2499401   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2499402   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2499403   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2499404   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2499405   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2499406   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2499407   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2499408   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2499409   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2499410   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2499411   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2499412   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2499413   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2499414   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2499415   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2499416   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2499417   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2499418   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2499419   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2499420   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2499421   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2499422   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2499423   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2499424   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2499425   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2499426   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2499427   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2499428   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2499429   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2499430   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2499431   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2499432   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2499433   +   ELSE S_NumCatalogPurchases
2499434   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2499435   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2499436   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2499437   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2499438   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2499439   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2499440   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2499441   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2499442   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2499443   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2499444   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2499445   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2499446   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2499447   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2499448   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2499449   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2499450   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2499451   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2499452   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2499453   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2499454   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2499455   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2499456   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2499457   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2499458   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2499459   +END;
MPRINT(EM_DIAGRAM):   END;
2499460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499461   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2499462   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499464   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2499465   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499467   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2499468   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499469   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2499470   +   H1x1_1  =     0.27051750628107 * S_AcceptedCmpTotal
2499471   +          +    -0.01552488999587 * S_Age  +    -0.19918933236131 * S_Frq
2499472   +          +    -0.18053367989037 * S_Income  +     0.17934470816975 *
2499473   +        S_Kidhome  +    -0.27914859130186 * S_Mnt  +    -0.05331142159606 *
2499474   +        S_MntFishProducts  +    -0.03730503814111 * S_MntFruits
2499475   +          +     0.01217897476566 * S_MntGoldProds  +       0.241005967683 *
2499476   +        S_MntMeatProducts  +    -0.02873172523867 * S_MntSweetProducts
2499477   +          +    -0.35773732926132 * S_MntWines  +    -0.00800625524539 *
2499478   +        S_MonthsAsCustomer  +     0.14253720708201 * S_NumCatalogPurchases
2499479   +          +     0.09634439105648 * S_NumDealsPurchases
2499480   +          +     -0.2727389064287 * S_NumDistPurchases
2499481   +          +    -0.14179871978162 * S_NumStorePurchases
2499482   +          +     0.11008049559527 * S_NumWebPurchases
2499483   +          +    -0.16791463027749 * S_NumWebVisitsMonth
2499484   +          +     0.12827091331546 * S_RFMstat  +    -0.05819422771336 *
2499485   +        S_RMntFrq  +     0.17192522504917 * S_Recency
2499486   +          +     0.13379709932247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27051750628107 * S_AcceptedCmpTotal + -0.01552488999587 *
S_Age + -0.19918933236131 * S_Frq + -0.18053367989037 * S_Income + 0.17934470816975 *
S_Kidhome + -0.27914859130186 * S_Mnt + -0.05331142159606 * S_MntFishProducts +
-0.03730503814111 * S_MntFruits + 0.01217897476566 * S_MntGoldProds + 0.241005967683 *
S_MntMeatProducts + -0.02873172523867 * S_MntSweetProducts + -0.35773732926132 * S_MntWines +
-0.00800625524539 * S_MonthsAsCustomer + 0.14253720708201 * S_NumCatalogPurchases +
0.09634439105648 * S_NumDealsPurchases + -0.2727389064287 * S_NumDistPurchases +
-0.14179871978162 * S_NumStorePurchases + 0.11008049559527 * S_NumWebPurchases +
-0.16791463027749 * S_NumWebVisitsMonth + 0.12827091331546 * S_RFMstat + -0.05819422771336 *
S_RMntFrq + 0.17192522504917 * S_Recency + 0.13379709932247 * S_Teenhome ;
2499487   +   H1x1_2  =      0.2625003002792 * S_AcceptedCmpTotal
2499488   +          +    -0.00409648963127 * S_Age  +    -0.08422560024107 * S_Frq
2499489   +          +      0.1678148652095 * S_Income  +      -0.122580580609 *
2499490   +        S_Kidhome  +    -0.41368311141801 * S_Mnt  +     -0.0649787838725 *
2499491   +        S_MntFishProducts  +    -0.06363287766971 * S_MntFruits
2499492   +          +     0.00810850196464 * S_MntGoldProds  +      0.2984971941271 *
2499493   +        S_MntMeatProducts  +     -0.0651075315757 * S_MntSweetProducts
2499494   +          +    -0.42717799596572 * S_MntWines  +    -0.00945771129633 *
2499495   +        S_MonthsAsCustomer  +     0.33346839008681 * S_NumCatalogPurchases
2499496   +          +     0.15835936877168 * S_NumDealsPurchases
2499497   +          +     0.04229992769587 * S_NumDistPurchases
2499498   +          +    -0.04051362547639 * S_NumStorePurchases
2499499   +          +    -0.01791546488406 * S_NumWebPurchases
2499500   +          +     0.28833008597045 * S_NumWebVisitsMonth
2499501   +          +     0.08007709098478 * S_RFMstat  +     0.37677948418886 *
2499502   +        S_RMntFrq  +    -0.32542265112765 * S_Recency
2499503   +          +    -0.10763248273834 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2625003002792 * S_AcceptedCmpTotal + -0.00409648963127 *
S_Age + -0.08422560024107 * S_Frq + 0.1678148652095 * S_Income + -0.122580580609 * S_Kidhome +
-0.41368311141801 * S_Mnt + -0.0649787838725 * S_MntFishProducts + -0.06363287766971 *
S_MntFruits + 0.00810850196464 * S_MntGoldProds + 0.2984971941271 * S_MntMeatProducts +
-0.0651075315757 * S_MntSweetProducts + -0.42717799596572 * S_MntWines + -0.00945771129633 *
S_MonthsAsCustomer + 0.33346839008681 * S_NumCatalogPurchases + 0.15835936877168 *
S_NumDealsPurchases + 0.04229992769587 * S_NumDistPurchases + -0.04051362547639 *
S_NumStorePurchases + -0.01791546488406 * S_NumWebPurchases + 0.28833008597045 *
S_NumWebVisitsMonth + 0.08007709098478 * S_RFMstat + 0.37677948418886 * S_RMntFrq +
-0.32542265112765 * S_Recency + -0.10763248273834 * S_Teenhome ;
2499504   +   H1x1_1  = H1x1_1  +     0.17927888078386 * AcceptedCmp10
2499505   +          +       0.309097592234 * AcceptedCmp20  +     0.30005706470617 *
2499506   +        AcceptedCmp30  +     0.30534843193785 * AcceptedCmp40
2499507   +          +     0.19575142296602 * AcceptedCmp50  +    -0.26930325741881 *
2499508   +        Complain0  +    -0.07193220591551 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.17927888078386 * AcceptedCmp10 + 0.309097592234 *
AcceptedCmp20 + 0.30005706470617 * AcceptedCmp30 + 0.30534843193785 * AcceptedCmp40 +
0.19575142296602 * AcceptedCmp50 + -0.26930325741881 * Complain0 + -0.07193220591551 *
HigherEducationBinary0 ;
2499509   +   H1x1_2  = H1x1_2  +     0.01282806481889 * AcceptedCmp10
2499510   +          +     0.01542710847454 * AcceptedCmp20  +     0.03576476827309 *
2499511   +        AcceptedCmp30  +     0.04230610697529 * AcceptedCmp40
2499512   +          +     0.03405078302469 * AcceptedCmp50  +     0.13002166919554 *
2499513   +        Complain0  +    -0.08203696285033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.01282806481889 * AcceptedCmp10 + 0.01542710847454 *
AcceptedCmp20 + 0.03576476827309 * AcceptedCmp30 + 0.04230610697529 * AcceptedCmp40 +
0.03405078302469 * AcceptedCmp50 + 0.13002166919554 * Complain0 + -0.08203696285033 *
HigherEducationBinary0 ;
2499514   +   H1x1_1  = H1x1_1  +    -0.04471063478028 * Education2n_Cycle
2499515   +          +     0.15571809437849 * EducationBasic  +    -0.00113978624206 *
2499516   +        EducationGraduation  +     0.00750750981266 * EducationMaster
2499517   +          +     -0.0504367274898 * Marital_StatusDivorced
2499518   +          +     0.28345714390306 * Marital_StatusMarried
2499519   +          +     -0.2012923780435 * Marital_StatusSingle
2499520   +          +     0.20022167903492 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04471063478028 * Education2n_Cycle +
0.15571809437849 * EducationBasic + -0.00113978624206 * EducationGraduation + 0.00750750981266
* EducationMaster + -0.0504367274898 * Marital_StatusDivorced + 0.28345714390306 *
Marital_StatusMarried + -0.2012923780435 * Marital_StatusSingle + 0.20022167903492 *
Marital_StatusTogether ;
2499521   +   H1x1_2  = H1x1_2  +     0.12691361812265 * Education2n_Cycle
2499522   +          +       0.003205191831 * EducationBasic  +    -0.04323354449955 *
2499523   +        EducationGraduation  +    -0.06699429239126 * EducationMaster
2499524   +          +     0.06828937261262 * Marital_StatusDivorced
2499525   +          +     -0.1520862543536 * Marital_StatusMarried
2499526   +          +      0.1392808464716 * Marital_StatusSingle
2499527   +          +    -0.12406922875482 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12691361812265 * Education2n_Cycle + 0.003205191831
* EducationBasic + -0.04323354449955 * EducationGraduation + -0.06699429239126 *
EducationMaster + 0.06828937261262 * Marital_StatusDivorced + -0.1520862543536 *
Marital_StatusMarried + 0.1392808464716 * Marital_StatusSingle + -0.12406922875482 *
Marital_StatusTogether ;
2499528   +   H1x1_1  =     0.89722634972069 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.89722634972069 + H1x1_1 ;
2499529   +   H1x1_2  =     -0.5979471913364 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5979471913364 + H1x1_2 ;
2499530   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2499531   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2499532   +END;
MPRINT(EM_DIAGRAM):   END;
2499533   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2499534   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2499535   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2499536   +END;
MPRINT(EM_DIAGRAM):   END;
2499537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499538   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2499539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499540   +
2499541   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2499542   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2499543   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2499544   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2499545   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2499546   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499547   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2499548   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2499549   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2499550   +end;
MPRINT(EM_DIAGRAM):   end;
2499551   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499552   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2499553   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2499554   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2499555   +   end;
MPRINT(EM_DIAGRAM):   end;
2499556   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2499557   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2499558   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2499559   +   end;
MPRINT(EM_DIAGRAM):   end;
2499560   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499561   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2499562   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2499563   +   end;
MPRINT(EM_DIAGRAM):   end;
2499564   +end;
MPRINT(EM_DIAGRAM):   end;
2499565   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2499566   +   P_DepVar1  =     -11.533020189097 * H1x1_1  +     17.2320065402955 * H1x1_2
2499567   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.533020189097 * H1x1_1 + 17.2320065402955 * H1x1_2 ;
2499568   +   P_DepVar1  =     2.37722840752042 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.37722840752042 + P_DepVar1 ;
2499569   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2499570   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2499571   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2499572   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2499573   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2499574   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2499575   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2499576   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2499577   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2499578   +END;
MPRINT(EM_DIAGRAM):   END;
2499579   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2499580   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2499581   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2499582   +END;
MPRINT(EM_DIAGRAM):   END;
2499583   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2499584   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2499585   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2499586   +END;
MPRINT(EM_DIAGRAM):   END;
2499587   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2499588   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2499589   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2499590   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2499591   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2499592   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2499593   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2499594   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499595   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2499596   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499597   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2499598   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2499599   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2499600   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2499601   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2499602   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2499603   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2499604   +END;
MPRINT(EM_DIAGRAM):   END;
2499605   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2499606   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2499607   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2499608   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2499609   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2499610   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499611   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2499612   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499613   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2499614   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2499615   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2499616   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2499617   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499618   +* Renaming Into variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural7;
2499619   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499620   +length AutoNeural7_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural7_I_DepVar $32;
2499621   +drop AutoNeural7_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_I_DepVar;
2499622   +AutoNeural7_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural7_I_DepVar = I_DepVar;
2499623   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499624   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2499625   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499626   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2499627   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2499628   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2499629   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499630   +* Ensmbl47: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 5 of 5;
2499631   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499632   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499633   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2499634   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2499635   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2499636   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499637   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2499638   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2499639   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2499640   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2499641   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2499642   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2499643   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2499644   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2499645   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2499646   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2499647   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2499648   +LENGTH _WARN_ $4
2499649   +      F_DepVar  $ 12
2499650   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2499651   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2499652   +
2499653   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2499654   +
2499655   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2499656   +
2499657   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2499658   +
2499659   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2499660   +
2499661   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2499662   +
2499663   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2499664   +
2499665   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2499666   +
2499667   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2499668   +
2499669   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2499670   +
2499671   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2499672   +
2499673   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2499674   +
2499675   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2499676   +
2499677   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2499678   +
2499679   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2499680   +
2499681   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2499682   +
2499683   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2499684   +
2499685   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2499686   +
2499687   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2499688   +
2499689   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2499690   +
2499691   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2499692   +
2499693   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2499694   +
2499695   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2499696   +
2499697   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2499698   +
2499699   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2499700   +
2499701   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2499702   +
2499703   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2499704   +
2499705   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2499706   +
2499707   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2499708   +
2499709   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2499710   +
2499711   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2499712   +
2499713   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2499714   +
2499715   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2499716   +
2499717   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2499718   +
2499719   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2499720   +
2499721   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2499722   +
2499723   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2499724   +
2499725   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2499726   +
2499727   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2499728   +
2499729   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2499730   +
2499731   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2499732   +
2499733   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2499734   +
2499735   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2499736   +
2499737   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2499738   +
2499739   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2499740   +
2499741   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2499742   +
2499743   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2499744   +
2499745   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2499746   +
2499747   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2499748   +
2499749   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2499750   +
2499751   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2499752   +
2499753   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2499754   +
2499755   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2499756   +
2499757   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2499758   +
2499759   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2499760   +
2499761   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2499762   +
2499763   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2499764   +
2499765   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2499766   +
2499767   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2499768   +
2499769   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2499770   +
2499771   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2499772   +
2499773   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2499774   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2499775   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2499776   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2499777   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499778   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499779   +end;
MPRINT(EM_DIAGRAM):   end;
2499780   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499781   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499782   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2499783   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499784   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2499785   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2499786   +   end;
MPRINT(EM_DIAGRAM):   end;
2499787   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2499788   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2499789   +   end;
MPRINT(EM_DIAGRAM):   end;
2499790   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499791   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2499792   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499793   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499794   +   end;
MPRINT(EM_DIAGRAM):   end;
2499795   +end;
MPRINT(EM_DIAGRAM):   end;
2499796   +
2499797   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2499798   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2499799   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2499800   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2499801   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499802   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499803   +end;
MPRINT(EM_DIAGRAM):   end;
2499804   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499805   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499806   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2499807   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499808   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2499809   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2499810   +   end;
MPRINT(EM_DIAGRAM):   end;
2499811   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2499812   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2499813   +   end;
MPRINT(EM_DIAGRAM):   end;
2499814   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499815   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2499816   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499817   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499818   +   end;
MPRINT(EM_DIAGRAM):   end;
2499819   +end;
MPRINT(EM_DIAGRAM):   end;
2499820   +
2499821   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2499822   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2499823   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2499824   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2499825   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499826   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499827   +end;
MPRINT(EM_DIAGRAM):   end;
2499828   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499829   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499830   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2499831   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499832   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2499833   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2499834   +   end;
MPRINT(EM_DIAGRAM):   end;
2499835   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2499836   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2499837   +   end;
MPRINT(EM_DIAGRAM):   end;
2499838   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499839   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2499840   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499841   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499842   +   end;
MPRINT(EM_DIAGRAM):   end;
2499843   +end;
MPRINT(EM_DIAGRAM):   end;
2499844   +
2499845   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2499846   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2499847   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2499848   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2499849   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499850   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499851   +end;
MPRINT(EM_DIAGRAM):   end;
2499852   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499853   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499854   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2499855   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499856   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2499857   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2499858   +   end;
MPRINT(EM_DIAGRAM):   end;
2499859   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2499860   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2499861   +   end;
MPRINT(EM_DIAGRAM):   end;
2499862   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499863   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2499864   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499865   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499866   +   end;
MPRINT(EM_DIAGRAM):   end;
2499867   +end;
MPRINT(EM_DIAGRAM):   end;
2499868   +
2499869   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2499870   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2499871   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2499872   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2499873   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499874   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499875   +end;
MPRINT(EM_DIAGRAM):   end;
2499876   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499877   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499878   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2499879   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499880   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2499881   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2499882   +   end;
MPRINT(EM_DIAGRAM):   end;
2499883   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2499884   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2499885   +   end;
MPRINT(EM_DIAGRAM):   end;
2499886   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499887   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2499888   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499889   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499890   +   end;
MPRINT(EM_DIAGRAM):   end;
2499891   +end;
MPRINT(EM_DIAGRAM):   end;
2499892   +
2499893   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2499894   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2499895   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2499896   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2499897   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499898   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499899   +end;
MPRINT(EM_DIAGRAM):   end;
2499900   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499901   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499902   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2499903   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499904   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2499905   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2499906   +   end;
MPRINT(EM_DIAGRAM):   end;
2499907   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2499908   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2499909   +   end;
MPRINT(EM_DIAGRAM):   end;
2499910   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499911   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2499912   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499913   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499914   +   end;
MPRINT(EM_DIAGRAM):   end;
2499915   +end;
MPRINT(EM_DIAGRAM):   end;
2499916   +
2499917   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2499918   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2499919   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2499920   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2499921   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499922   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499923   +end;
MPRINT(EM_DIAGRAM):   end;
2499924   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499925   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499926   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2499927   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499928   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2499929   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2499930   +   end;
MPRINT(EM_DIAGRAM):   end;
2499931   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2499932   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2499933   +   end;
MPRINT(EM_DIAGRAM):   end;
2499934   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499935   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2499936   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499937   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499938   +   end;
MPRINT(EM_DIAGRAM):   end;
2499939   +end;
MPRINT(EM_DIAGRAM):   end;
2499940   +
2499941   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2499942   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2499943   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2499944   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2499945   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2499946   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2499947   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2499948   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2499949   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2499950   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2499951   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2499952   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2499953   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499954   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499955   +end;
MPRINT(EM_DIAGRAM):   end;
2499956   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499957   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2499958   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2499959   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499960   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2499961   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2499962   +   end;
MPRINT(EM_DIAGRAM):   end;
2499963   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2499964   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2499965   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2499966   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2499967   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2499968   +   end;
MPRINT(EM_DIAGRAM):   end;
2499969   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2499970   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2499971   +   end;
MPRINT(EM_DIAGRAM):   end;
2499972   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2499973   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2499974   +   end;
MPRINT(EM_DIAGRAM):   end;
2499975   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2499976   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2499977   +   end;
MPRINT(EM_DIAGRAM):   end;
2499978   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499979   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2499980   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2499981   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2499982   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2499983   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499984   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499985   +   end;
MPRINT(EM_DIAGRAM):   end;
2499986   +end;
MPRINT(EM_DIAGRAM):   end;
2499987   +
2499988   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2499989   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2499990   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2499991   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2499992   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2499993   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2499994   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2499995   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2499996   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2499997   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2499998   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2499999   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2500000   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2500001   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2500002   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500003   +end;
MPRINT(EM_DIAGRAM):   end;
2500004   +else do;
MPRINT(EM_DIAGRAM):   else do;
2500005   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2500006   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2500007   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2500008   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2500009   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2500010   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2500011   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2500012   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2500013   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2500014   +         end;
MPRINT(EM_DIAGRAM):   end;
2500015   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2500016   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2500017   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2500018   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2500019   +            end;
MPRINT(EM_DIAGRAM):   end;
2500020   +         end;
MPRINT(EM_DIAGRAM):   end;
2500021   +      end;
MPRINT(EM_DIAGRAM):   end;
2500022   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2500023   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2500024   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2500025   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2500026   +         end;
MPRINT(EM_DIAGRAM):   end;
2500027   +      end;
MPRINT(EM_DIAGRAM):   end;
2500028   +   end;
MPRINT(EM_DIAGRAM):   end;
2500029   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2500030   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2500031   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2500032   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2500033   +      end;
MPRINT(EM_DIAGRAM):   end;
2500034   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2500035   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2500036   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2500037   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2500038   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2500039   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2500040   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2500041   +         end;
MPRINT(EM_DIAGRAM):   end;
2500042   +      end;
MPRINT(EM_DIAGRAM):   end;
2500043   +   end;
MPRINT(EM_DIAGRAM):   end;
2500044   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2500045   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2500046   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2500047   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2500048   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2500049   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2500050   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500051   +   end;
MPRINT(EM_DIAGRAM):   end;
2500052   +end;
MPRINT(EM_DIAGRAM):   end;
2500053   +
2500054   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500055   +*** Checking missing input Interval
2500056   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2500057   +
2500058   +IF NMISS(
2500059   +   AcceptedCmpTotal ,
2500060   +   Age ,
2500061   +   Frq ,
2500062   +   Income ,
2500063   +   Kidhome ,
2500064   +   Mnt ,
2500065   +   MntFishProducts ,
2500066   +   MntFruits ,
2500067   +   MntGoldProds ,
2500068   +   MntMeatProducts ,
2500069   +   MntSweetProducts ,
2500070   +   MntWines ,
2500071   +   MonthsAsCustomer ,
2500072   +   NumCatalogPurchases ,
2500073   +   NumDealsPurchases ,
2500074   +   NumDistPurchases ,
2500075   +   NumStorePurchases ,
2500076   +   NumWebPurchases ,
2500077   +   NumWebVisitsMonth ,
2500078   +   RFMstat ,
2500079   +   RMntFrq ,
2500080   +   Recency ,
2500081   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2500082   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2500083   +
2500084   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500085   +END;
MPRINT(EM_DIAGRAM):   END;
2500086   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500087   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2500088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500089   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2500090   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2500091   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2500092   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2500093   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2500094   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2500095   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2500096   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2500097   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2500098   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2500099   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2500100   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2500101   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2500102   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2500103   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2500104   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2500105   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2500106   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2500107   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2500108   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2500109   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2500110   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2500111   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2500112   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2500113   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2500114   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2500115   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2500116   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2500117   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2500118   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2500119   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2500120   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2500121   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2500122   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2500123   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2500124   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2500125   +END;
MPRINT(EM_DIAGRAM):   END;
2500126   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2500127   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2500128   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2500129   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2500130   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2500131   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2500132   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2500133   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2500134   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2500135   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2500136   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2500137   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2500138   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2500139   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2500140   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2500141   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2500142   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2500143   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2500144   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2500145   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2500146   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2500147   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2500148   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2500149   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2500150   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2500151   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2500152   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2500153   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2500154   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2500155   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2500156   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2500157   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2500158   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2500159   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2500160   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2500161   +   ELSE S_NumCatalogPurchases
2500162   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2500163   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2500164   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2500165   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2500166   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2500167   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2500168   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2500169   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2500170   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2500171   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2500172   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2500173   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2500174   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2500175   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2500176   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2500177   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2500178   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2500179   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2500180   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2500181   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2500182   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2500183   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2500184   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2500185   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2500186   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2500187   +END;
MPRINT(EM_DIAGRAM):   END;
2500188   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500189   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2500190   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500191   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500192   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2500193   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500194   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500195   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2500196   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500197   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2500198   +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
2500199   +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
2500200   +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
2500201   +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
2500202   +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
2500203   +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
2500204   +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
2500205   +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
2500206   +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
2500207   +          +      3.4758215776031 * S_NumDealsPurchases
2500208   +          +     0.17094021755289 * S_NumDistPurchases
2500209   +          +    -2.72090095694641 * S_NumStorePurchases
2500210   +          +    -0.31877935826328 * S_NumWebPurchases
2500211   +          +    -2.03399974412918 * S_NumWebVisitsMonth
2500212   +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
2500213   +        S_RMntFrq  +     0.29064555076615 * S_Recency
2500214   +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 *
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 *
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts +
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 *
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 *
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 *
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 *
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq +
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
2500215   +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
2500216   +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
2500217   +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
2500218   +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
2500219   +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
2500220   +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
2500221   +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
2500222   +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
2500223   +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
2500224   +          +    -1.21013804197082 * S_NumDealsPurchases
2500225   +          +     0.59974279122188 * S_NumDistPurchases
2500226   +          +     1.92425710681156 * S_NumStorePurchases
2500227   +          +     1.02413182452324 * S_NumWebPurchases
2500228   +          +    -3.63276285340174 * S_NumWebVisitsMonth
2500229   +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
2500230   +        S_RMntFrq  +     3.87352563099005 * S_Recency
2500231   +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 *
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 *
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts +
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 *
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 *
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 *
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 *
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq +
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
2500232   +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
2500233   +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
2500234   +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
2500235   +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
2500236   +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
2500237   +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
2500238   +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
2500239   +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
2500240   +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
2500241   +          +      0.4928343071801 * S_NumDealsPurchases
2500242   +          +     -0.0196677325409 * S_NumDistPurchases
2500243   +          +     0.44395828164873 * S_NumStorePurchases
2500244   +          +     0.86947051591224 * S_NumWebPurchases
2500245   +          +    -0.96787241206077 * S_NumWebVisitsMonth
2500246   +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
2500247   +        S_RMntFrq  +     0.24582117217188 * S_Recency
2500248   +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 *
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 *
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts +
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 *
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 *
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 *
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 *
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq +
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
2500249   +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
2500250   +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
2500251   +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
2500252   +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
2500253   +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
2500254   +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
2500255   +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
2500256   +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
2500257   +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
2500258   +          +     1.10280977051932 * S_NumDealsPurchases
2500259   +          +     0.99310057404036 * S_NumDistPurchases
2500260   +          +    -0.05647459609331 * S_NumStorePurchases
2500261   +          +    -0.89852483938631 * S_NumWebPurchases
2500262   +          +     2.63022480227445 * S_NumWebVisitsMonth
2500263   +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
2500264   +        S_RMntFrq  +    -4.46436997560659 * S_Recency
2500265   +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 *
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 *
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts +
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 *
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 *
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 *
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 *
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq +
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
2500266   +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
2500267   +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
2500268   +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
2500269   +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
2500270   +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
2500271   +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
2500272   +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
2500273   +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
2500274   +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
2500275   +          +    -2.62220616180571 * S_NumDealsPurchases
2500276   +          +    -0.51737930835331 * S_NumDistPurchases
2500277   +          +     0.88655783158133 * S_NumStorePurchases
2500278   +          +     0.35132468809969 * S_NumWebPurchases
2500279   +          +     -1.6320869675862 * S_NumWebVisitsMonth
2500280   +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
2500281   +        S_RMntFrq  +     1.06226028677401 * S_Recency
2500282   +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 *
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 *
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts +
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 *
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 *
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 *
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 *
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq +
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
2500283   +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
2500284   +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
2500285   +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
2500286   +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
2500287   +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 *
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 +
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 *
HigherEducationBinary0 ;
2500288   +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
2500289   +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
2500290   +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
2500291   +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
2500292   +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 *
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 +
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 *
HigherEducationBinary0 ;
2500293   +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
2500294   +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
2500295   +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
2500296   +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
2500297   +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 *
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 +
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 *
HigherEducationBinary0 ;
2500298   +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
2500299   +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
2500300   +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
2500301   +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
2500302   +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 +
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 *
HigherEducationBinary0 ;
2500303   +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
2500304   +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
2500305   +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
2500306   +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
2500307   +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 *
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 +
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 *
HigherEducationBinary0 ;
2500308   +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
2500309   +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
2500310   +        EducationGraduation  +     1.42539292513854 * EducationMaster
2500311   +          +     0.34809919741136 * Marital_StatusDivorced
2500312   +          +    -0.26594093535929 * Marital_StatusMarried
2500313   +          +     0.70249715999987 * Marital_StatusSingle
2500314   +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle +
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 *
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 *
Marital_StatusTogether ;
2500315   +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
2500316   +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
2500317   +        EducationGraduation  +    -0.28204692640004 * EducationMaster
2500318   +          +    -0.20448765627193 * Marital_StatusDivorced
2500319   +          +     1.73231344674733 * Marital_StatusMarried
2500320   +          +    -0.70956480480373 * Marital_StatusSingle
2500321   +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle +
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 *
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 *
Marital_StatusTogether ;
2500322   +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
2500323   +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
2500324   +        EducationGraduation  +     1.01284161768787 * EducationMaster
2500325   +          +     0.30333818684353 * Marital_StatusDivorced
2500326   +          +    -1.44603535988199 * Marital_StatusMarried
2500327   +          +     0.48409598426383 * Marital_StatusSingle
2500328   +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle +
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation +
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced +
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle +
-1.14528682521622 * Marital_StatusTogether ;
2500329   +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
2500330   +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
2500331   +        EducationGraduation  +    -1.17735200022013 * EducationMaster
2500332   +          +     -1.5342907846297 * Marital_StatusDivorced
2500333   +          +    -1.79544684592172 * Marital_StatusMarried
2500334   +          +     0.65604313645117 * Marital_StatusSingle
2500335   +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle +
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 *
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 *
Marital_StatusTogether ;
2500336   +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
2500337   +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
2500338   +        EducationGraduation  +     0.09618331198762 * EducationMaster
2500339   +          +    -3.97940893560267 * Marital_StatusDivorced
2500340   +          +      3.5880254142663 * Marital_StatusMarried
2500341   +          +     -2.9897737730927 * Marital_StatusSingle
2500342   +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle +
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 *
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 *
Marital_StatusTogether ;
2500343   +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
2500344   +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
2500345   +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
2500346   +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
2500347   +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
2500348   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2500349   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2500350   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2500351   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2500352   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2500353   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2500354   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2500355   +END;
MPRINT(EM_DIAGRAM):   END;
2500356   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2500357   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2500358   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2500359   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2500360   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2500361   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2500362   +END;
MPRINT(EM_DIAGRAM):   END;
2500363   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500364   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2500365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500366   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2500367   +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
2500368   +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
2500369   +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
2500370   +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
2500371   +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
2500372   +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
2500373   +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
2500374   +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
2500375   +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
2500376   +          +     0.07279889333775 * S_NumDealsPurchases
2500377   +          +     0.07542203992452 * S_NumDistPurchases
2500378   +          +     0.16296239303342 * S_NumStorePurchases
2500379   +          +     1.59193921229231 * S_NumWebPurchases
2500380   +          +    -0.35227839362603 * S_NumWebVisitsMonth
2500381   +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
2500382   +        S_RMntFrq  +     0.43315770276588 * S_Recency
2500383   +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 *
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 *
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts +
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 *
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines +
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases +
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases +
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases +
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 *
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
2500384   +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
2500385   +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
2500386   +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
2500387   +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
2500388   +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
2500389   +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
2500390   +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
2500391   +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
2500392   +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
2500393   +          +    -0.37456959251084 * S_NumDealsPurchases
2500394   +          +    -1.15252469975668 * S_NumDistPurchases
2500395   +          +    -1.39822501888899 * S_NumStorePurchases
2500396   +          +    -0.32777847360723 * S_NumWebPurchases
2500397   +          +     0.84026499832926 * S_NumWebVisitsMonth
2500398   +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
2500399   +        S_RMntFrq  +     1.21016626691186 * S_Recency
2500400   +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 *
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 *
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts +
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 *
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 *
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 *
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 *
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq +
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
2500401   +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
2500402   +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
2500403   +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
2500404   +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
2500405   +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
2500406   +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
2500407   +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
2500408   +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
2500409   +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
2500410   +          +     1.14090099538367 * S_NumDealsPurchases
2500411   +          +     -0.2600155774492 * S_NumDistPurchases
2500412   +          +     1.31362002392113 * S_NumStorePurchases
2500413   +          +     1.31465307763555 * S_NumWebPurchases
2500414   +          +    -0.18041623858351 * S_NumWebVisitsMonth
2500415   +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
2500416   +        S_RMntFrq  +    -0.81910738140729 * S_Recency
2500417   +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 *
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 *
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts +
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 *
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 *
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 *
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 *
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq +
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
2500418   +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
2500419   +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
2500420   +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
2500421   +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
2500422   +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
2500423   +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
2500424   +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
2500425   +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
2500426   +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
2500427   +          +     1.06486073796679 * S_NumDealsPurchases
2500428   +          +    -0.04890191247577 * S_NumDistPurchases
2500429   +          +     0.86871320720698 * S_NumStorePurchases
2500430   +          +     0.03183587281884 * S_NumWebPurchases
2500431   +          +     -0.4863802923315 * S_NumWebVisitsMonth
2500432   +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
2500433   +        S_RMntFrq  +     0.17186861211542 * S_Recency
2500434   +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 *
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 *
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts +
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 *
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 *
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 *
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 *
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq +
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
2500435   +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
2500436   +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
2500437   +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
2500438   +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
2500439   +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
2500440   +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
2500441   +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
2500442   +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
2500443   +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
2500444   +          +    -0.01160267590349 * S_NumDealsPurchases
2500445   +          +    -0.92773075463083 * S_NumDistPurchases
2500446   +          +    -0.83326680533995 * S_NumStorePurchases
2500447   +          +    -1.16991058954473 * S_NumWebPurchases
2500448   +          +    -2.07771165573723 * S_NumWebVisitsMonth
2500449   +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
2500450   +        S_RMntFrq  +     0.80165981122986 * S_Recency
2500451   +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 *
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 *
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts +
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 *
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 *
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 *
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 *
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq +
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
2500452   +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
2500453   +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
2500454   +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
2500455   +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
2500456   +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 *
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 +
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 *
HigherEducationBinary0 ;
2500457   +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
2500458   +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
2500459   +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
2500460   +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
2500461   +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 +
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 *
HigherEducationBinary0 ;
2500462   +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
2500463   +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
2500464   +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
2500465   +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
2500466   +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 *
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 +
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 *
HigherEducationBinary0 ;
2500467   +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
2500468   +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
2500469   +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
2500470   +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
2500471   +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 +
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 *
HigherEducationBinary0 ;
2500472   +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
2500473   +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
2500474   +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
2500475   +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
2500476   +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 *
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 +
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 *
HigherEducationBinary0 ;
2500477   +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
2500478   +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
2500479   +        EducationGraduation  +    -0.22397098444024 * EducationMaster
2500480   +          +    -0.10361472385198 * Marital_StatusDivorced
2500481   +          +     0.05574820877885 * Marital_StatusMarried
2500482   +          +     0.13130988205279 * Marital_StatusSingle
2500483   +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle +
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 *
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 *
Marital_StatusTogether ;
2500484   +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
2500485   +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
2500486   +        EducationGraduation  +     1.44983505587452 * EducationMaster
2500487   +          +      0.0059353523794 * Marital_StatusDivorced
2500488   +          +    -0.59379435051653 * Marital_StatusMarried
2500489   +          +    -1.93587108708999 * Marital_StatusSingle
2500490   +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle +
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 *
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 *
Marital_StatusTogether ;
2500491   +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
2500492   +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
2500493   +        EducationGraduation  +     0.16497026569775 * EducationMaster
2500494   +          +    -0.74333797840386 * Marital_StatusDivorced
2500495   +          +    -0.93061135117658 * Marital_StatusMarried
2500496   +          +     1.04024182655844 * Marital_StatusSingle
2500497   +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle +
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 *
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 *
Marital_StatusTogether ;
2500498   +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
2500499   +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
2500500   +        EducationGraduation  +     1.71196178631559 * EducationMaster
2500501   +          +    -3.01050675344463 * Marital_StatusDivorced
2500502   +          +      0.1638723582239 * Marital_StatusMarried
2500503   +          +     0.94548468360304 * Marital_StatusSingle
2500504   +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle +
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 *
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 *
Marital_StatusTogether ;
2500505   +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
2500506   +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
2500507   +        EducationGraduation  +     0.57450456442662 * EducationMaster
2500508   +          +    -1.37013926274158 * Marital_StatusDivorced
2500509   +          +    -0.34168970042779 * Marital_StatusMarried
2500510   +          +     0.63383683543962 * Marital_StatusSingle
2500511   +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle +
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 *
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 *
Marital_StatusTogether ;
2500512   +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
2500513   +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
2500514   +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
2500515   +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
2500516   +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
2500517   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2500518   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2500519   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2500520   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2500521   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2500522   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2500523   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2500524   +END;
MPRINT(EM_DIAGRAM):   END;
2500525   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2500526   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2500527   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2500528   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2500529   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2500530   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2500531   +END;
MPRINT(EM_DIAGRAM):   END;
2500532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500533   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2500534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500535   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2500536   +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
2500537   +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
2500538   +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 +
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
2500539   +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
2500540   +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
2500541   +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 +
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
2500542   +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
2500543   +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
2500544   +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 +
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
2500545   +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
2500546   +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
2500547   +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 +
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
2500548   +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
2500549   +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
2500550   +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 +
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
2500551   +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
2500552   +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
2500553   +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
2500554   +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
2500555   +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
2500556   +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
2500557   +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
2500558   +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
2500559   +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
2500560   +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
2500561   +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
2500562   +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
2500563   +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
2500564   +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
2500565   +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
2500566   +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
2500567   +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
2500568   +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
2500569   +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
2500570   +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
2500571   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2500572   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2500573   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2500574   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2500575   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2500576   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2500577   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2500578   +END;
MPRINT(EM_DIAGRAM):   END;
2500579   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2500580   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2500581   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2500582   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2500583   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2500584   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2500585   +END;
MPRINT(EM_DIAGRAM):   END;
2500586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500587   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2500588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500589   +
2500590   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2500591   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2500592   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2500593   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2500594   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2500595   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2500596   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2500597   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2500598   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2500599   +end;
MPRINT(EM_DIAGRAM):   end;
2500600   +else do;
MPRINT(EM_DIAGRAM):   else do;
2500601   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2500602   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2500603   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2500604   +   end;
MPRINT(EM_DIAGRAM):   end;
2500605   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2500606   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2500607   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2500608   +   end;
MPRINT(EM_DIAGRAM):   end;
2500609   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2500610   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2500611   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2500612   +   end;
MPRINT(EM_DIAGRAM):   end;
2500613   +end;
MPRINT(EM_DIAGRAM):   end;
2500614   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2500615   +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
2500616   +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
2500617   +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 +
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
2500618   +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
2500619   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2500620   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2500621   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2500622   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2500623   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2500624   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2500625   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2500626   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2500627   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2500628   +END;
MPRINT(EM_DIAGRAM):   END;
2500629   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2500630   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2500631   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2500632   +END;
MPRINT(EM_DIAGRAM):   END;
2500633   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2500634   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2500635   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2500636   +END;
MPRINT(EM_DIAGRAM):   END;
2500637   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2500638   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2500639   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2500640   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2500641   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2500642   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2500643   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2500644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500645   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2500646   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500647   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2500648   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2500649   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2500650   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2500651   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2500652   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2500653   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2500654   +END;
MPRINT(EM_DIAGRAM):   END;
2500655   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2500656   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2500657   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2500658   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2500659   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2500660   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500661   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2500662   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500663   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2500664   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2500665   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2500666   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2500667   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500668   +* Renaming Into variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural10;
2500669   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500670   +length AutoNeural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural10_I_DepVar $32;
2500671   +drop AutoNeural10_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_I_DepVar;
2500672   +AutoNeural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural10_I_DepVar = I_DepVar;
2500673   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500674   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2500675   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500676   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2500677   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2500678   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2500679   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500680   +* Ensmbl47: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Voting to produce predicted target;
2500681   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500682   +array Ensmbl47_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl47_post{2} _temporary_;
2500683   +array Ensmbl47_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl47_count{2} _temporary_;
2500684   +array Ensmbl47_level{2} $32 _temporary_ (
2500685   +"1"
2500686   +"0"
2500687   +);
MPRINT(EM_DIAGRAM):   array Ensmbl47_level{2} $32 _temporary_ ( "1" "0" );
2500688   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2500689   +Ensmbl47_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{i} = 0;
2500690   +Ensmbl47_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{i} = 0;
2500691   +end;
MPRINT(EM_DIAGRAM):   end;
2500692   +if AutoNeural9_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl47_level{1} then do;
2500693   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2500694   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural9_P_DepVar1;
2500695   +end;
MPRINT(EM_DIAGRAM):   end;
2500696   +if AutoNeural11_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl47_level{1} then do;
2500697   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2500698   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural11_P_DepVar1;
2500699   +end;
MPRINT(EM_DIAGRAM):   end;
2500700   +if AutoNeural12_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl47_level{1} then do;
2500701   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2500702   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural12_P_DepVar1;
2500703   +end;
MPRINT(EM_DIAGRAM):   end;
2500704   +if AutoNeural7_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl47_level{1} then do;
2500705   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2500706   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural7_P_DepVar1;
2500707   +end;
MPRINT(EM_DIAGRAM):   end;
2500708   +if AutoNeural10_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl47_level{1} then do;
2500709   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2500710   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural10_P_DepVar1;
2500711   +end;
MPRINT(EM_DIAGRAM):   end;
2500712   +if AutoNeural9_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl47_level{2} then do;
2500713   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2500714   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural9_P_DepVar0;
2500715   +end;
MPRINT(EM_DIAGRAM):   end;
2500716   +if AutoNeural11_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl47_level{2} then do;
2500717   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2500718   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural11_P_DepVar0;
2500719   +end;
MPRINT(EM_DIAGRAM):   end;
2500720   +if AutoNeural12_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl47_level{2} then do;
2500721   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2500722   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural12_P_DepVar0;
2500723   +end;
MPRINT(EM_DIAGRAM):   end;
2500724   +if AutoNeural7_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl47_level{2} then do;
2500725   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2500726   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural7_P_DepVar0;
2500727   +end;
MPRINT(EM_DIAGRAM):   end;
2500728   +if AutoNeural10_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl47_level{2} then do;
2500729   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2500730   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural10_P_DepVar0;
2500731   +end;
MPRINT(EM_DIAGRAM):   end;
2500732   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500733   +* Ensmbl47: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Determine Into Variable;
2500734   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500735   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
2500736   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
2500737   +vote_count = max(
2500738   +Ensmbl47_count{1} ,
2500739   +Ensmbl47_count{2}
2500740   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl47_count{1} , Ensmbl47_count{2} );
2500741   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2500742   +if Ensmbl47_count{i}=vote_count and Ensmbl47_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl47_count{i}=vote_count and Ensmbl47_post{i}>vote_post then do;
2500743   +I_DepVar = Ensmbl47_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl47_level{i};
2500744   +vote_post = Ensmbl47_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl47_count{i};
2500745   +end;
MPRINT(EM_DIAGRAM):   end;
2500746   +end;
MPRINT(EM_DIAGRAM):   end;
2500747   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500748   +* Ensmbl47: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Compute posterior vars using models predicting the chosen
level;
2500749   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500750   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
2500751   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2500752   +if I_DepVar = AutoNeural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural9_I_DepVar then do;
2500753   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
2500754   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
2500755   +end;
MPRINT(EM_DIAGRAM):   end;
2500756   +if I_DepVar = AutoNeural11_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural11_I_DepVar then do;
2500757   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
2500758   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
2500759   +end;
MPRINT(EM_DIAGRAM):   end;
2500760   +if I_DepVar = AutoNeural12_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural12_I_DepVar then do;
2500761   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
2500762   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
2500763   +end;
MPRINT(EM_DIAGRAM):   end;
2500764   +if I_DepVar = AutoNeural7_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural7_I_DepVar then do;
2500765   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
2500766   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
2500767   +end;
MPRINT(EM_DIAGRAM):   end;
2500768   +if I_DepVar = AutoNeural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural10_I_DepVar then do;
2500769   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
2500770   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
2500771   +end;
MPRINT(EM_DIAGRAM):   end;
2500772   +* Ensmbl47: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Averaging posterior;
2500773   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
2500774   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
2500775   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500776   +* Ensmbl47: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Producing Unformatted variable;
2500777   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500778   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2500779   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2500780   +else
2500781   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2500782   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500783   +* Ensmbl47: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Computing _WARN_ Variable;
2500784   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500785   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2500786   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2500787   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2500788   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2500788  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2500789   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2500789  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2500790   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2500790  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2500791   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2500791  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2500792   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2500792  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2500793   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2500793  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2500794   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2500794  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2500795   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2500795  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2500796   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2500796  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2500797   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2500797  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2500798   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2500798  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2500799   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2500799  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2500800   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2500800  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2500801   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2500801  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2500802   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2500802  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2500803   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2500803  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2500804   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2500804  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2500805   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2500805  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2500806   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2500806  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2500807   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2500807  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2500808   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500809   +* Ensmbl47: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Computing Residual Vars;
2500810   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500811   +if
2500812   +F_DepVar NE '1'
2500813   +AND F_DepVar NE '0'
2500814   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2500815   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2500816   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2500817   +end;
MPRINT(EM_DIAGRAM):   end;
2500818   +else do;
MPRINT(EM_DIAGRAM):   else do;
2500819   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2500820   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2500821   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2500822   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2500823   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2500824   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2500825   +END;
MPRINT(EM_DIAGRAM):   END;
2500826   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2500827    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL47_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_VALIDATE.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2500828    quit;
2500829    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl47_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl47_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl47_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2500889    filename _pref
2500889  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
2500890    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2500891    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
2500892   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2500893   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2500894   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2500895   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2500896   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2500897   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2500898   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2500899   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2500900   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2500901   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2500902   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2500903   +LENGTH _WARN_ $4
2500904   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2500905   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2500906   +
2500907   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2500908   +
2500909   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2500910   +
2500911   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2500912   +
2500913   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2500914   +
2500915   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2500916   +
2500917   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2500918   +
2500919   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2500920   +
2500921   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2500922   +
2500923   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2500924   +
2500925   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2500926   +
2500927   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2500928   +
2500929   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2500930   +
2500931   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2500932   +
2500933   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2500934   +
2500935   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2500936   +
2500937   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2500938   +
2500939   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2500940   +
2500941   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2500942   +
2500943   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2500944   +
2500945   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2500946   +
2500947   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2500948   +
2500949   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2500950   +
2500951   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2500952   +
2500953   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2500954   +
2500955   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2500956   +
2500957   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2500958   +
2500959   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2500960   +
2500961   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2500962   +
2500963   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2500964   +
2500965   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2500966   +
2500967   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2500968   +
2500969   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2500970   +
2500971   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2500972   +
2500973   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2500974   +
2500975   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2500976   +
2500977   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2500978   +
2500979   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2500980   +
2500981   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2500982   +
2500983   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2500984   +
2500985   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2500986   +
2500987   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2500988   +
2500989   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2500990   +
2500991   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2500992   +
2500993   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2500994   +
2500995   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2500996   +
2500997   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2500998   +
2500999   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2501000   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2501001   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2501002   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2501003   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2501004   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501005   +end;
MPRINT(EM_DIAGRAM):   end;
2501006   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501007   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2501008   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2501009   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501010   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2501011   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2501012   +   end;
MPRINT(EM_DIAGRAM):   end;
2501013   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2501014   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2501015   +   end;
MPRINT(EM_DIAGRAM):   end;
2501016   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501017   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2501018   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2501019   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501020   +   end;
MPRINT(EM_DIAGRAM):   end;
2501021   +end;
MPRINT(EM_DIAGRAM):   end;
2501022   +
2501023   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2501024   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2501025   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2501026   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2501027   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2501028   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501029   +end;
MPRINT(EM_DIAGRAM):   end;
2501030   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501031   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2501032   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2501033   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501034   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2501035   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2501036   +   end;
MPRINT(EM_DIAGRAM):   end;
2501037   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2501038   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2501039   +   end;
MPRINT(EM_DIAGRAM):   end;
2501040   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501041   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2501042   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2501043   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501044   +   end;
MPRINT(EM_DIAGRAM):   end;
2501045   +end;
MPRINT(EM_DIAGRAM):   end;
2501046   +
2501047   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2501048   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2501049   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2501050   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2501051   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2501052   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501053   +end;
MPRINT(EM_DIAGRAM):   end;
2501054   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501055   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2501056   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2501057   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501058   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2501059   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2501060   +   end;
MPRINT(EM_DIAGRAM):   end;
2501061   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2501062   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2501063   +   end;
MPRINT(EM_DIAGRAM):   end;
2501064   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501065   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2501066   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2501067   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501068   +   end;
MPRINT(EM_DIAGRAM):   end;
2501069   +end;
MPRINT(EM_DIAGRAM):   end;
2501070   +
2501071   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2501072   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2501073   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2501074   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2501075   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2501076   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501077   +end;
MPRINT(EM_DIAGRAM):   end;
2501078   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501079   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2501080   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2501081   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501082   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2501083   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2501084   +   end;
MPRINT(EM_DIAGRAM):   end;
2501085   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2501086   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2501087   +   end;
MPRINT(EM_DIAGRAM):   end;
2501088   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501089   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2501090   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2501091   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501092   +   end;
MPRINT(EM_DIAGRAM):   end;
2501093   +end;
MPRINT(EM_DIAGRAM):   end;
2501094   +
2501095   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2501096   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2501097   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2501098   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2501099   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2501100   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501101   +end;
MPRINT(EM_DIAGRAM):   end;
2501102   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501103   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2501104   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2501105   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501106   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2501107   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2501108   +   end;
MPRINT(EM_DIAGRAM):   end;
2501109   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2501110   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2501111   +   end;
MPRINT(EM_DIAGRAM):   end;
2501112   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501113   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2501114   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2501115   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501116   +   end;
MPRINT(EM_DIAGRAM):   end;
2501117   +end;
MPRINT(EM_DIAGRAM):   end;
2501118   +
2501119   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2501120   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2501121   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2501122   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2501123   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2501124   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501125   +end;
MPRINT(EM_DIAGRAM):   end;
2501126   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501127   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2501128   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2501129   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501130   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2501131   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2501132   +   end;
MPRINT(EM_DIAGRAM):   end;
2501133   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2501134   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2501135   +   end;
MPRINT(EM_DIAGRAM):   end;
2501136   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501137   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2501138   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2501139   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501140   +   end;
MPRINT(EM_DIAGRAM):   end;
2501141   +end;
MPRINT(EM_DIAGRAM):   end;
2501142   +
2501143   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2501144   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2501145   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2501146   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2501147   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2501148   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501149   +end;
MPRINT(EM_DIAGRAM):   end;
2501150   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501151   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2501152   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2501153   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501154   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2501155   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2501156   +   end;
MPRINT(EM_DIAGRAM):   end;
2501157   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2501158   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2501159   +   end;
MPRINT(EM_DIAGRAM):   end;
2501160   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501161   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2501162   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2501163   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501164   +   end;
MPRINT(EM_DIAGRAM):   end;
2501165   +end;
MPRINT(EM_DIAGRAM):   end;
2501166   +
2501167   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2501168   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2501169   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2501170   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2501171   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2501172   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2501173   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2501174   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2501175   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2501176   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2501177   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2501178   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2501179   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2501180   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501181   +end;
MPRINT(EM_DIAGRAM):   end;
2501182   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501183   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2501184   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2501185   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501186   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2501187   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2501188   +   end;
MPRINT(EM_DIAGRAM):   end;
2501189   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2501190   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2501191   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2501192   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2501193   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2501194   +   end;
MPRINT(EM_DIAGRAM):   end;
2501195   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2501196   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2501197   +   end;
MPRINT(EM_DIAGRAM):   end;
2501198   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2501199   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2501200   +   end;
MPRINT(EM_DIAGRAM):   end;
2501201   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2501202   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2501203   +   end;
MPRINT(EM_DIAGRAM):   end;
2501204   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501205   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2501206   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2501207   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2501208   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2501209   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2501210   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501211   +   end;
MPRINT(EM_DIAGRAM):   end;
2501212   +end;
MPRINT(EM_DIAGRAM):   end;
2501213   +
2501214   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2501215   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2501216   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2501217   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2501218   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2501219   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2501220   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2501221   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2501222   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2501223   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2501224   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2501225   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2501226   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2501227   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2501228   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501229   +end;
MPRINT(EM_DIAGRAM):   end;
2501230   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501231   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2501232   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2501233   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501234   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2501235   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2501236   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2501237   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2501238   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2501239   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2501240   +         end;
MPRINT(EM_DIAGRAM):   end;
2501241   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2501242   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2501243   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2501244   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2501245   +            end;
MPRINT(EM_DIAGRAM):   end;
2501246   +         end;
MPRINT(EM_DIAGRAM):   end;
2501247   +      end;
MPRINT(EM_DIAGRAM):   end;
2501248   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2501249   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2501250   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2501251   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2501252   +         end;
MPRINT(EM_DIAGRAM):   end;
2501253   +      end;
MPRINT(EM_DIAGRAM):   end;
2501254   +   end;
MPRINT(EM_DIAGRAM):   end;
2501255   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501256   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2501257   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2501258   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2501259   +      end;
MPRINT(EM_DIAGRAM):   end;
2501260   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2501261   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2501262   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2501263   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2501264   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2501265   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2501266   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2501267   +         end;
MPRINT(EM_DIAGRAM):   end;
2501268   +      end;
MPRINT(EM_DIAGRAM):   end;
2501269   +   end;
MPRINT(EM_DIAGRAM):   end;
2501270   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2501271   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2501272   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2501273   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2501274   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2501275   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2501276   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501277   +   end;
MPRINT(EM_DIAGRAM):   end;
2501278   +end;
MPRINT(EM_DIAGRAM):   end;
2501279   +
2501280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501281   +*** Checking missing input Interval
2501282   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2501283   +
2501284   +IF NMISS(
2501285   +   AcceptedCmpTotal ,
2501286   +   Age ,
2501287   +   Frq ,
2501288   +   Income ,
2501289   +   Kidhome ,
2501290   +   Mnt ,
2501291   +   MntFishProducts ,
2501292   +   MntFruits ,
2501293   +   MntGoldProds ,
2501294   +   MntMeatProducts ,
2501295   +   MntSweetProducts ,
2501296   +   MntWines ,
2501297   +   MonthsAsCustomer ,
2501298   +   NumCatalogPurchases ,
2501299   +   NumDealsPurchases ,
2501300   +   NumDistPurchases ,
2501301   +   NumStorePurchases ,
2501302   +   NumWebPurchases ,
2501303   +   NumWebVisitsMonth ,
2501304   +   RFMstat ,
2501305   +   RMntFrq ,
2501306   +   Recency ,
2501307   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2501308   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2501309   +
2501310   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501311   +END;
MPRINT(EM_DIAGRAM):   END;
2501312   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501313   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2501314   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501315   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2501316   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2501317   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2501318   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2501319   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2501320   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2501321   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2501322   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2501323   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2501324   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2501325   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2501326   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2501327   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2501328   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2501329   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2501330   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2501331   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2501332   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2501333   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2501334   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2501335   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2501336   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2501337   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2501338   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2501339   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2501340   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2501341   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2501342   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2501343   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2501344   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2501345   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2501346   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2501347   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2501348   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2501349   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2501350   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2501351   +END;
MPRINT(EM_DIAGRAM):   END;
2501352   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2501353   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2501354   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2501355   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2501356   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2501357   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2501358   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2501359   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2501360   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2501361   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2501362   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2501363   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2501364   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2501365   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2501366   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2501367   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2501368   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2501369   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2501370   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2501371   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2501372   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2501373   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2501374   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2501375   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2501376   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2501377   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2501378   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2501379   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2501380   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2501381   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2501382   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2501383   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2501384   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2501385   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2501386   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2501387   +   ELSE S_NumCatalogPurchases
2501388   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2501389   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2501390   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2501391   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2501392   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2501393   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2501394   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2501395   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2501396   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2501397   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2501398   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2501399   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2501400   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2501401   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2501402   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2501403   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2501404   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2501405   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2501406   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2501407   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2501408   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2501409   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2501410   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2501411   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2501412   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2501413   +END;
MPRINT(EM_DIAGRAM):   END;
2501414   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501415   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2501416   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501418   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2501419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501421   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2501422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501423   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2501424   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2501425   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2501426   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2501427   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2501428   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2501429   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2501430   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2501431   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2501432   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2501433   +          +    -1.12130210731541 * S_NumDealsPurchases
2501434   +          +    -0.12343505299726 * S_NumDistPurchases
2501435   +          +     0.11863092868196 * S_NumStorePurchases
2501436   +          +       0.583917993314 * S_NumWebPurchases
2501437   +          +     0.75529732848146 * S_NumWebVisitsMonth
2501438   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2501439   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2501440   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 *
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 *
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts +
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 *
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 *
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 *
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 *
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq +
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2501441   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2501442   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2501443   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2501444   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2501445   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2501446   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2501447   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2501448   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2501449   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2501450   +          +    -0.84113790640734 * S_NumDealsPurchases
2501451   +          +    -0.10512672747147 * S_NumDistPurchases
2501452   +          +     0.07268711782494 * S_NumStorePurchases
2501453   +          +     0.57578331257439 * S_NumWebPurchases
2501454   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2501455   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2501456   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2501457   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 *
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 *
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts +
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 *
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines +
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases +
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases +
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases +
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 *
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2501458   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2501459   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2501460   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2501461   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2501462   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2501463   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2501464   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2501465   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2501466   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2501467   +          +     0.45924983504762 * S_NumDealsPurchases
2501468   +          +    -0.25508041581692 * S_NumDistPurchases
2501469   +          +    -1.34901283858526 * S_NumStorePurchases
2501470   +          +    -0.86388975031663 * S_NumWebPurchases
2501471   +          +     1.86136110391797 * S_NumWebVisitsMonth
2501472   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2501473   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2501474   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome +
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 *
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts +
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 *
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 *
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 *
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 *
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq +
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2501475   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2501476   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2501477   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2501478   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2501479   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 *
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 +
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 *
HigherEducationBinary0 ;
2501480   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2501481   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2501482   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2501483   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2501484   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 +
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 *
HigherEducationBinary0 ;
2501485   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2501486   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2501487   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2501488   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2501489   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 +
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 *
HigherEducationBinary0 ;
2501490   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2501491   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2501492   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2501493   +          +     0.48853068455666 * Marital_StatusDivorced
2501494   +          +    -0.54903474026465 * Marital_StatusMarried
2501495   +          +    -0.34079188373939 * Marital_StatusSingle
2501496   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle +
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation +
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced +
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle +
-0.64602969938868 * Marital_StatusTogether ;
2501497   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2501498   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2501499   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2501500   +          +    -1.03547689902027 * Marital_StatusDivorced
2501501   +          +     2.42164864610471 * Marital_StatusMarried
2501502   +          +    -1.95342561304942 * Marital_StatusSingle
2501503   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle +
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 *
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 *
Marital_StatusTogether ;
2501504   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2501505   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2501506   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2501507   +          +      0.4337638747935 * Marital_StatusDivorced
2501508   +          +    -0.38508657017615 * Marital_StatusMarried
2501509   +          +     -0.0160269708326 * Marital_StatusSingle
2501510   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle +
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation +
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced +
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle +
-0.57491004270903 * Marital_StatusTogether ;
2501511   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2501512   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2501513   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2501514   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2501515   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2501516   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2501517   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2501518   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2501519   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2501520   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2501521   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2501522   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2501523   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2501524   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2501525   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2501526   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2501527   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2501528   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2501529   +END;
MPRINT(EM_DIAGRAM):   END;
2501530   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2501531   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2501532   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2501533   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2501534   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2501535   +END;
MPRINT(EM_DIAGRAM):   END;
2501536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501537   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2501538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501539   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2501540   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2501541   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 +
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2501542   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2501543   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2501544   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2501545   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2501546   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2501547   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2501548   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2501549   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2501550   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2501551   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2501552   +END;
MPRINT(EM_DIAGRAM):   END;
2501553   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2501554   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2501555   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2501556   +END;
MPRINT(EM_DIAGRAM):   END;
2501557   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2501558   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2501559   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2501560   +END;
MPRINT(EM_DIAGRAM):   END;
2501561   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501562   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2501563   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501564   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2501565   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2501566   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2501567   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2501568   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2501569   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2501570   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2501571   +END;
MPRINT(EM_DIAGRAM):   END;
2501572   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2501573   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2501574   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2501575   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2501576    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2501577    quit;
2501578    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2501579    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2501580    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2501581    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
2501582    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2501583    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501584    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2501585    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2501586    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501587    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME
CREATOR);
2501588    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2501589    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501590    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2501591    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2501592    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2501593    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501594    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
2501595    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2501596    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2501597    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2501598    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501599    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2501600    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2501601    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2501602    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2501603    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2501604    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2501604  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.
 
2501605    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501606    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2501607    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2501608    filename _pref
2501608  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2501609    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2501610    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2501611   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2501612   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2501613   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2501614   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2501615   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2501616   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2501617    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2501618    quit;
2501619    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2501620    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2501621    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2501622    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2501623    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2501624    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501625    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2501626    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2501627    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501628    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2501629    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2501630    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501631    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2501632    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2501633    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2501634    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501635    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2501636    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2501637    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2501638    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2501639    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501640    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2501641    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2501642    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2501643    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501644    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2501645    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2501645  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2501646    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501647    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2501648    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501649    filename _pref
2501649  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2501650    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2501651    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2501652   +
2501653   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2501654   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2501654  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2501655   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2501656   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2501657   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2501658   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2501659   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2501660    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2501661    quit;
2501662    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2501663    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2501664    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2501665    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2501666    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2501667    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501668    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2501669    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2501670    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2501671    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2501672    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2501673    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501674    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2501675    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2501676    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2501677    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2501678    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2501679    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501680    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2501681    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2501682    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501683    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2501684    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2501685    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2501686    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2501687    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2501688    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2501688  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2501689    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501690    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2501691    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501692    filename _pref
2501692  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2501693    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2501694    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2501695   +
2501696   +
2501697   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2501698   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2501699   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2501700   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2501701   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2501702   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2501703   +
2501704   +
2501705   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2501706   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2501707   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2501708   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2501709   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2501710   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2501711   +
2501712   +
2501713   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2501714   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2501715   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2501716   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2501717   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2501718   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2501719   +
2501720   +
2501721   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2501722   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2501723   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2501724   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2501725   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2501726   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2501727   +
2501728   +
2501729   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2501730   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2501731   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2501732   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2501733   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2501734   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2501735   +
2501736   +
2501737   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2501738   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2501739   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2501740   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2501741   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2501742   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2501743   +
2501744   +
2501745   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2501746   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2501747   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2501748   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2501749   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2501750   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2501751   +
2501752   +
2501753   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2501754   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2501755   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2501756   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2501757   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2501758   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2501759   +if
2501760   +_FILTERNORM1 not in ( '.')
2501761   + and
2501762   +_FILTERNORM2 not in ( '.')
2501763   + and
2501764   +_FILTERNORM3 not in ( '.')
2501765   + and
2501766   +_FILTERNORM4 not in ( '.')
2501767   + and
2501768   +_FILTERNORM5 not in ( '.')
2501769   + and
2501770   +_FILTERNORM6 not in ( '.')
2501771   + and
2501772   +_FILTERNORM7 not in ( ' ')
2501773   + and
2501774   +_FILTERNORM8 not in ( ' ')
2501775   +and
2501776   +( Dt_Customer ne .)
2501777   +and ( Income ne . and (Income<=107000))
2501778   +and ( Kidhome ne .)
2501779   +and ( MntFishProducts ne .)
2501780   +and ( MntFruits ne .)
2501781   +and ( MntGoldProds ne .)
2501782   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2501783   +and ( MntSweetProducts ne .)
2501784   +and ( MntWines ne .)
2501785   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2501786   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2501787   +and ( NumStorePurchases ne .)
2501788   +and ( NumWebPurchases ne .)
2501789   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2501790   +and ( Recency ne .)
2501791   +and ( Teenhome ne .)
2501792   +and ( Year_Birth ne .)
2501793   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2501794   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2501795   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2501796   +end;
MPRINT(EM_DIAGRAM):   end;
2501797   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2501798   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2501799    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2501800    quit;
2501801    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2501802    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2501803    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2501804    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2501805    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2501806    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501807    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2501808    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2501809    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501810    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2501811    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2501812    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2501813    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2501814    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2501815    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2501816    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501817    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2501818    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2501819    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2501820    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2501821    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501822    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2501823    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2501824    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2501825    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501826    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2501827    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2501827  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2501828    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501829    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2501830    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501831    %macro varDept(fcmpdata=,id=);
2501832    %global nobs&id scoreFlag&id;
2501833    %let scoreFlag&id = 0;
2501834    %if &id=1 or ^&fcmpStart %then %do;
2501835    proc sort data=&fcmpdata out=_temp&id nodupkey;
2501836    by NAME;
2501837    where id=&id and LHS in( %let j=1;
2501838    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2501839    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2501840    "&var" %let j = %eval(&j+1);
2501841    %end;
2501842    );
2501843    run;
2501844    %let dsid = %sysfunc(open(_temp&id));
2501845    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2501846    %let dsid = %sysfunc(close(&dsid));
2501847    %if &&nobs&id %then %do;
2501848    %let scoreFlag&id = 1;
2501849    %let fcmpStart = 1;
2501850    %end;
2501851    %else %let fcmpStart = 0;
2501852    %end;
2501853    %else %do;
2501854    proc sort data=&fcmpdata out=_tempid;
2501855    where id=&id;
2501856    by LHS;
2501857    run;
2501858    %let dsid = %sysfunc(open(_tempid));
2501859    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2501860    %let dsid = %sysfunc(close(&dsid));
2501861    %if ^&&nobs&id %then %do;
2501862    proc datasets lib=work nolist;
2501863    delete _tempid;
2501864    run;
2501865    quit;
2501866    %end;
2501867    %else %do;
2501868    data _tempAll;
2501869    set %let j=%eval(&id-1);
2501870    %do x=1 %to &j;
2501871    %if &&nobs&x %then %do;
2501872    _temp&x %end;
2501873    %end;
2501874    ;
2501875    run;
2501876    proc sql;
2501877    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2501877  ! work._tempid p2 where p.name=p2.lhs;
2501878    quit;
2501879    data _temp&id;
2501880    set _temp&id;
2501881    where LHS ne '' and NAME ne '' and Node ne '';
2501882    run;
2501883    proc datasets lib=work nolist;
2501884    delete _tempAll;
2501885    run;
2501886    %let dsid = %sysfunc(open(_temp&id));
2501887    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2501888    %let dsid = %sysfunc(close(&dsid));
2501889    %if ^&&nobs&id %then %do;
2501890    proc datasets lib=work nolist;
2501891    delete _temp&id;
2501892    run;
2501893    quit;
2501894    %end;
2501895    %else %do;
2501896    %let scoreFlag&id = 1;
2501897    data _temp&id;
2501898    set _temp&id;
2501899    where LHS ne NAME and node ne '';
2501900    run;
2501901    %let dsid = %sysfunc(open(_temp&id));
2501902    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2501903    %let dsid = %sysfunc(close(&dsid));
2501904    %if ^&&nobs&id %then %do;
2501905    proc datasets lib=work nolist;
2501906    delete _temp&id;
2501907    run;
2501908    quit;
2501909    %end;
2501910    %else %do;
2501911    proc sort data=_temp&id nodupkey;
2501912    by LHS NAME;
2501913    run;
2501914    %end;
2501915    %end;
2501916    %end;
2501917    %end;
2501918    %mend varDept;
2501919    %macro optCode(outdata=fcmpdata);
2501920    %global fcmpStart;
2501921    %let fcmpStart = 0;
2501922    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2501923    %let NumNodes=9;
2501924    %do k=1 %to &NumNodes;
2501925    %vardept(fcmpdata=&outdata, id=&k);
2501926    %end;
2501927    %mend optCode;
2501928    %optcode(outData=EMWS8.Ensmbl47_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 146 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2501929    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2501930    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2501931    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2501932    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2501933    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2501934    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2501935    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2501936    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501937    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2501938    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2501938  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2501939    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2501940    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2501941    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2501942    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2501943    filename _pref
2501943  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
2501944    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2501945    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
2501946   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2501947   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2501948   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2501949   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2501950   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2501951   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2501952   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2501953   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2501954   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2501955   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2501956   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2501957   +LENGTH _WARN_ $4
2501958   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2501959   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2501960   +
2501961   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2501962   +
2501963   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2501964   +
2501965   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2501966   +
2501967   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2501968   +
2501969   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2501970   +
2501971   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2501972   +
2501973   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2501974   +
2501975   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2501976   +
2501977   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2501978   +
2501979   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2501980   +
2501981   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2501982   +
2501983   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2501984   +
2501985   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2501986   +
2501987   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2501988   +
2501989   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2501990   +
2501991   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2501992   +
2501993   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2501994   +
2501995   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2501996   +
2501997   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2501998   +
2501999   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2502000   +
2502001   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2502002   +
2502003   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2502004   +
2502005   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2502006   +
2502007   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2502008   +
2502009   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2502010   +
2502011   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2502012   +
2502013   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2502014   +
2502015   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2502016   +
2502017   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2502018   +
2502019   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2502020   +
2502021   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2502022   +
2502023   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2502024   +
2502025   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2502026   +
2502027   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2502028   +
2502029   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2502030   +
2502031   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2502032   +
2502033   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2502034   +
2502035   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2502036   +
2502037   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2502038   +
2502039   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2502040   +
2502041   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2502042   +
2502043   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2502044   +
2502045   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2502046   +
2502047   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2502048   +
2502049   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2502050   +
2502051   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2502052   +
2502053   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2502054   +
2502055   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2502056   +
2502057   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2502058   +
2502059   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2502060   +
2502061   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2502062   +
2502063   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2502064   +
2502065   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2502066   +
2502067   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2502068   +
2502069   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2502070   +
2502071   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2502072   +
2502073   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2502074   +
2502075   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2502076   +
2502077   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2502078   +
2502079   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2502080   +
2502081   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2502082   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2502083   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2502084   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2502085   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2502086   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502087   +end;
MPRINT(EM_DIAGRAM):   end;
2502088   +else do;
MPRINT(EM_DIAGRAM):   else do;
2502089   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2502090   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2502091   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2502092   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2502093   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2502094   +   end;
MPRINT(EM_DIAGRAM):   end;
2502095   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2502096   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2502097   +   end;
MPRINT(EM_DIAGRAM):   end;
2502098   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2502099   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2502100   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2502101   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502102   +   end;
MPRINT(EM_DIAGRAM):   end;
2502103   +end;
MPRINT(EM_DIAGRAM):   end;
2502104   +
2502105   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2502106   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2502107   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2502108   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2502109   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2502110   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502111   +end;
MPRINT(EM_DIAGRAM):   end;
2502112   +else do;
MPRINT(EM_DIAGRAM):   else do;
2502113   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2502114   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2502115   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2502116   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2502117   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2502118   +   end;
MPRINT(EM_DIAGRAM):   end;
2502119   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2502120   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2502121   +   end;
MPRINT(EM_DIAGRAM):   end;
2502122   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2502123   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2502124   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2502125   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502126   +   end;
MPRINT(EM_DIAGRAM):   end;
2502127   +end;
MPRINT(EM_DIAGRAM):   end;
2502128   +
2502129   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2502130   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2502131   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2502132   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2502133   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2502134   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502135   +end;
MPRINT(EM_DIAGRAM):   end;
2502136   +else do;
MPRINT(EM_DIAGRAM):   else do;
2502137   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2502138   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2502139   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2502140   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2502141   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2502142   +   end;
MPRINT(EM_DIAGRAM):   end;
2502143   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2502144   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2502145   +   end;
MPRINT(EM_DIAGRAM):   end;
2502146   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2502147   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2502148   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2502149   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502150   +   end;
MPRINT(EM_DIAGRAM):   end;
2502151   +end;
MPRINT(EM_DIAGRAM):   end;
2502152   +
2502153   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2502154   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2502155   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2502156   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2502157   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2502158   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502159   +end;
MPRINT(EM_DIAGRAM):   end;
2502160   +else do;
MPRINT(EM_DIAGRAM):   else do;
2502161   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2502162   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2502163   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2502164   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2502165   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2502166   +   end;
MPRINT(EM_DIAGRAM):   end;
2502167   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2502168   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2502169   +   end;
MPRINT(EM_DIAGRAM):   end;
2502170   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2502171   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2502172   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2502173   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502174   +   end;
MPRINT(EM_DIAGRAM):   end;
2502175   +end;
MPRINT(EM_DIAGRAM):   end;
2502176   +
2502177   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2502178   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2502179   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2502180   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2502181   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2502182   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502183   +end;
MPRINT(EM_DIAGRAM):   end;
2502184   +else do;
MPRINT(EM_DIAGRAM):   else do;
2502185   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2502186   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2502187   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2502188   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2502189   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2502190   +   end;
MPRINT(EM_DIAGRAM):   end;
2502191   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2502192   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2502193   +   end;
MPRINT(EM_DIAGRAM):   end;
2502194   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2502195   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2502196   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2502197   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502198   +   end;
MPRINT(EM_DIAGRAM):   end;
2502199   +end;
MPRINT(EM_DIAGRAM):   end;
2502200   +
2502201   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2502202   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2502203   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2502204   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2502205   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2502206   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502207   +end;
MPRINT(EM_DIAGRAM):   end;
2502208   +else do;
MPRINT(EM_DIAGRAM):   else do;
2502209   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2502210   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2502211   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2502212   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2502213   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2502214   +   end;
MPRINT(EM_DIAGRAM):   end;
2502215   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2502216   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2502217   +   end;
MPRINT(EM_DIAGRAM):   end;
2502218   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2502219   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2502220   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2502221   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502222   +   end;
MPRINT(EM_DIAGRAM):   end;
2502223   +end;
MPRINT(EM_DIAGRAM):   end;
2502224   +
2502225   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2502226   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2502227   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2502228   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2502229   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2502230   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502231   +end;
MPRINT(EM_DIAGRAM):   end;
2502232   +else do;
MPRINT(EM_DIAGRAM):   else do;
2502233   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2502234   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2502235   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2502236   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2502237   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2502238   +   end;
MPRINT(EM_DIAGRAM):   end;
2502239   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2502240   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2502241   +   end;
MPRINT(EM_DIAGRAM):   end;
2502242   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2502243   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2502244   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2502245   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502246   +   end;
MPRINT(EM_DIAGRAM):   end;
2502247   +end;
MPRINT(EM_DIAGRAM):   end;
2502248   +
2502249   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2502250   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2502251   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2502252   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2502253   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2502254   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2502255   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2502256   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2502257   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2502258   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2502259   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2502260   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2502261   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2502262   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502263   +end;
MPRINT(EM_DIAGRAM):   end;
2502264   +else do;
MPRINT(EM_DIAGRAM):   else do;
2502265   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2502266   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2502267   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2502268   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2502269   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2502270   +   end;
MPRINT(EM_DIAGRAM):   end;
2502271   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2502272   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2502273   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2502274   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2502275   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2502276   +   end;
MPRINT(EM_DIAGRAM):   end;
2502277   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2502278   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2502279   +   end;
MPRINT(EM_DIAGRAM):   end;
2502280   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2502281   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2502282   +   end;
MPRINT(EM_DIAGRAM):   end;
2502283   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2502284   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2502285   +   end;
MPRINT(EM_DIAGRAM):   end;
2502286   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2502287   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2502288   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2502289   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2502290   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2502291   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2502292   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502293   +   end;
MPRINT(EM_DIAGRAM):   end;
2502294   +end;
MPRINT(EM_DIAGRAM):   end;
2502295   +
2502296   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2502297   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2502298   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2502299   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2502300   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2502301   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2502302   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2502303   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2502304   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2502305   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2502306   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2502307   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2502308   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2502309   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2502310   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502311   +end;
MPRINT(EM_DIAGRAM):   end;
2502312   +else do;
MPRINT(EM_DIAGRAM):   else do;
2502313   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2502314   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2502315   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2502316   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2502317   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2502318   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2502319   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2502320   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2502321   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2502322   +         end;
MPRINT(EM_DIAGRAM):   end;
2502323   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2502324   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2502325   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2502326   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2502327   +            end;
MPRINT(EM_DIAGRAM):   end;
2502328   +         end;
MPRINT(EM_DIAGRAM):   end;
2502329   +      end;
MPRINT(EM_DIAGRAM):   end;
2502330   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2502331   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2502332   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2502333   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2502334   +         end;
MPRINT(EM_DIAGRAM):   end;
2502335   +      end;
MPRINT(EM_DIAGRAM):   end;
2502336   +   end;
MPRINT(EM_DIAGRAM):   end;
2502337   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2502338   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2502339   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2502340   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2502341   +      end;
MPRINT(EM_DIAGRAM):   end;
2502342   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2502343   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2502344   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2502345   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2502346   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2502347   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2502348   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2502349   +         end;
MPRINT(EM_DIAGRAM):   end;
2502350   +      end;
MPRINT(EM_DIAGRAM):   end;
2502351   +   end;
MPRINT(EM_DIAGRAM):   end;
2502352   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2502353   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2502354   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2502355   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2502356   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2502357   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2502358   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502359   +   end;
MPRINT(EM_DIAGRAM):   end;
2502360   +end;
MPRINT(EM_DIAGRAM):   end;
2502361   +
2502362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502363   +*** Checking missing input Interval
2502364   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2502365   +
2502366   +IF NMISS(
2502367   +   AcceptedCmpTotal ,
2502368   +   Age ,
2502369   +   Frq ,
2502370   +   Income ,
2502371   +   Kidhome ,
2502372   +   Mnt ,
2502373   +   MntFishProducts ,
2502374   +   MntFruits ,
2502375   +   MntGoldProds ,
2502376   +   MntMeatProducts ,
2502377   +   MntSweetProducts ,
2502378   +   MntWines ,
2502379   +   MonthsAsCustomer ,
2502380   +   NumCatalogPurchases ,
2502381   +   NumDealsPurchases ,
2502382   +   NumDistPurchases ,
2502383   +   NumStorePurchases ,
2502384   +   NumWebPurchases ,
2502385   +   NumWebVisitsMonth ,
2502386   +   RFMstat ,
2502387   +   RMntFrq ,
2502388   +   Recency ,
2502389   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2502390   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2502391   +
2502392   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502393   +END;
MPRINT(EM_DIAGRAM):   END;
2502394   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502395   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2502396   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502397   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2502398   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2502399   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2502400   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2502401   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2502402   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2502403   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2502404   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2502405   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2502406   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2502407   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2502408   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2502409   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2502410   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2502411   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2502412   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2502413   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2502414   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2502415   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2502416   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2502417   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2502418   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2502419   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2502420   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2502421   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2502422   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2502423   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2502424   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2502425   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2502426   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2502427   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2502428   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2502429   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2502430   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2502431   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2502432   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2502433   +END;
MPRINT(EM_DIAGRAM):   END;
2502434   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2502435   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2502436   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2502437   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2502438   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2502439   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2502440   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2502441   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2502442   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2502443   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2502444   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2502445   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2502446   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2502447   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2502448   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2502449   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2502450   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2502451   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2502452   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2502453   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2502454   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2502455   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2502456   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2502457   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2502458   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2502459   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2502460   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2502461   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2502462   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2502463   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2502464   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2502465   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2502466   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2502467   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2502468   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2502469   +   ELSE S_NumCatalogPurchases
2502470   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2502471   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2502472   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2502473   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2502474   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2502475   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2502476   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2502477   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2502478   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2502479   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2502480   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2502481   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2502482   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2502483   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2502484   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2502485   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2502486   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2502487   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2502488   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2502489   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2502490   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2502491   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2502492   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2502493   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2502494   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2502495   +END;
MPRINT(EM_DIAGRAM):   END;
2502496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502497   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2502498   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502499   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502500   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2502501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502502   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502503   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2502504   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502505   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2502506   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2502507   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2502508   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2502509   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2502510   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2502511   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2502512   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2502513   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2502514   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2502515   +          +     1.32037113020393 * S_NumDealsPurchases
2502516   +          +     0.42879249227132 * S_NumDistPurchases
2502517   +          +    -0.89190172778783 * S_NumStorePurchases
2502518   +          +    -0.87975442613962 * S_NumWebPurchases
2502519   +          +     2.98977282825831 * S_NumWebVisitsMonth
2502520   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2502521   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2502522   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 *
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 *
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts +
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 *
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines +
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases +
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases +
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases +
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 *
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2502523   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2502524   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2502525   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2502526   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2502527   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2502528   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2502529   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2502530   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2502531   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2502532   +          +    -1.16737670931605 * S_NumDealsPurchases
2502533   +          +     0.08205195039242 * S_NumDistPurchases
2502534   +          +    -0.65367044520084 * S_NumStorePurchases
2502535   +          +     2.39693083674757 * S_NumWebPurchases
2502536   +          +     0.18432526469897 * S_NumWebVisitsMonth
2502537   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2502538   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2502539   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 *
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 *
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts +
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 *
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines +
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases +
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases +
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases +
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 *
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2502540   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2502541   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2502542   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2502543   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2502544   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2502545   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2502546   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2502547   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2502548   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2502549   +          +     0.76616480025024 * S_NumDealsPurchases
2502550   +          +     0.42823368706255 * S_NumDistPurchases
2502551   +          +    -1.16998364854907 * S_NumStorePurchases
2502552   +          +     -1.0841896541746 * S_NumWebPurchases
2502553   +          +     2.74837744375079 * S_NumWebVisitsMonth
2502554   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2502555   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2502556   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 *
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 *
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts +
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 *
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines +
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases +
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases +
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases +
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 *
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2502557   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2502558   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2502559   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2502560   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2502561   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2502562   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2502563   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2502564   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2502565   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2502566   +          +     0.78421010501058 * S_NumDealsPurchases
2502567   +          +     0.01075885160671 * S_NumDistPurchases
2502568   +          +    -1.99395040717832 * S_NumStorePurchases
2502569   +          +    -1.02908330834262 * S_NumWebPurchases
2502570   +          +     2.79163466516477 * S_NumWebVisitsMonth
2502571   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2502572   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
The SAS System
 
2502573   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 *
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 *
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts +
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 *
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines +
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases +
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases +
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases +
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 *
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2502574   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2502575   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2502576   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2502577   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2502578   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2502579   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2502580   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2502581   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2502582   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2502583   +          +    -1.04219068390022 * S_NumDealsPurchases
2502584   +          +    -0.45770204483973 * S_NumDistPurchases
2502585   +          +    -0.04941442229195 * S_NumStorePurchases
2502586   +          +     0.67187353161183 * S_NumWebPurchases
2502587   +          +     2.01907760553871 * S_NumWebVisitsMonth
2502588   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2502589   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2502590   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 *
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 *
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts +
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 *
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 *
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 *
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 *
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq +
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2502591   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2502592   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2502593   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2502594   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2502595   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 +
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 *
HigherEducationBinary0 ;
2502596   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2502597   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2502598   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2502599   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2502600   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 *
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 +
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 *
HigherEducationBinary0 ;
2502601   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2502602   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2502603   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2502604   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2502605   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 +
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 *
HigherEducationBinary0 ;
2502606   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2502607   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2502608   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2502609   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2502610   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 +
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 *
HigherEducationBinary0 ;
2502611   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2502612   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2502613   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2502614   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2502615   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 *
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 +
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 *
HigherEducationBinary0 ;
2502616   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2502617   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2502618   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2502619   +          +     2.58907527032049 * Marital_StatusDivorced
2502620   +          +    -2.45549008158921 * Marital_StatusMarried
2502621   +          +     2.56223650840768 * Marital_StatusSingle
2502622   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle +
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 *
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 *
Marital_StatusTogether ;
2502623   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2502624   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2502625   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2502626   +          +     0.83917299191368 * Marital_StatusDivorced
2502627   +          +    -0.62624692699191 * Marital_StatusMarried
2502628   +          +    -0.22585060624911 * Marital_StatusSingle
2502629   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle +
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 *
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 *
Marital_StatusTogether ;
2502630   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2502631   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2502632   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2502633   +          +    -0.65063506696715 * Marital_StatusDivorced
2502634   +          +    -2.37495865381256 * Marital_StatusMarried
2502635   +          +    -0.54954654146904 * Marital_StatusSingle
2502636   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle +
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 *
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 *
Marital_StatusTogether ;
2502637   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2502638   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2502639   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2502640   +          +     0.16185824798364 * Marital_StatusDivorced
2502641   +          +    -0.08142416735136 * Marital_StatusMarried
2502642   +          +    -0.20392270385969 * Marital_StatusSingle
2502643   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle +
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation +
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced +
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle +
-0.16702436233017 * Marital_StatusTogether ;
2502644   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2502645   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2502646   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2502647   +          +      -0.516522631078 * Marital_StatusDivorced
2502648   +          +    -0.61661247789976 * Marital_StatusMarried
2502649   +          +    -0.99533130308294 * Marital_StatusSingle
2502650   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle +
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation +
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced +
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle +
-0.36897004084592 * Marital_StatusTogether ;
2502651   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2502652   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2502653   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2502654   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2502655   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2502656   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2502657   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2502658   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2502659   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2502660   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2502661   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2502662   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2502663   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2502664   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2502665   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2502666   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2502667   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2502668   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2502669   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2502670   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2502671   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2502672   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2502673   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2502674   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2502675   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2502676   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2502677   +END;
MPRINT(EM_DIAGRAM):   END;
2502678   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2502679   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2502680   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2502681   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2502682   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2502683   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2502684   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2502685   +END;
MPRINT(EM_DIAGRAM):   END;
2502686   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502687   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2502688   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502689   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2502690   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2502691   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2502692   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2502693   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2502694   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2502695   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2502696   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2502697   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2502698   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2502699   +          +    -0.03801022287706 * S_NumDealsPurchases
2502700   +          +    -1.50723574966419 * S_NumDistPurchases
2502701   +          +    -0.21514545448485 * S_NumStorePurchases
2502702   +          +    -0.50179555233865 * S_NumWebPurchases
2502703   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2502704   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2502705   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2502706   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 *
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 *
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts +
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 *
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 *
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 *
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 *
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq +
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2502707   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2502708   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2502709   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2502710   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2502711   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2502712   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2502713   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2502714   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2502715   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2502716   +          +     0.70551335536975 * S_NumDealsPurchases
2502717   +          +     0.02824488988803 * S_NumDistPurchases
2502718   +          +    -0.47958123842808 * S_NumStorePurchases
2502719   +          +     1.04559003239583 * S_NumWebPurchases
2502720   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2502721   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2502722   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2502723   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 *
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 *
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts +
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 *
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 *
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 *
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 *
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq +
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2502724   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2502725   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2502726   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2502727   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2502728   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2502729   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2502730   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2502731   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2502732   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2502733   +          +    -0.28907339261907 * S_NumDealsPurchases
2502734   +          +     0.04310505858352 * S_NumDistPurchases
2502735   +          +    -0.99594604666889 * S_NumStorePurchases
2502736   +          +    -0.58870940220114 * S_NumWebPurchases
2502737   +          +     0.84018399925148 * S_NumWebVisitsMonth
2502738   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2502739   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2502740   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 *
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 *
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts +
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 *
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 *
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 *
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 *
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq +
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2502741   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2502742   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2502743   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2502744   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2502745   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2502746   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2502747   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2502748   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2502749   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2502750   +          +     0.52917289878604 * S_NumDealsPurchases
2502751   +          +     0.30974142545809 * S_NumDistPurchases
2502752   +          +    -0.36081450643799 * S_NumStorePurchases
2502753   +          +    -0.28418053386759 * S_NumWebPurchases
2502754   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2502755   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2502756   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2502757   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 *
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 *
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts +
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 *
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 *
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 *
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 *
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq +
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2502758   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2502759   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2502760   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2502761   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2502762   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2502763   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2502764   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2502765   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2502766   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2502767   +          +    -0.47500053723253 * S_NumDealsPurchases
2502768   +          +     0.41421086319635 * S_NumDistPurchases
2502769   +          +     0.69664835428137 * S_NumStorePurchases
2502770   +          +     0.66359306812968 * S_NumWebPurchases
2502771   +          +     0.77931462528741 * S_NumWebVisitsMonth
2502772   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2502773   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2502774   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 *
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 *
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts +
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 *
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 *
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 *
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 *
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq +
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2502775   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2502776   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2502777   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2502778   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2502779   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 *
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 +
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 *
HigherEducationBinary0 ;
2502780   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2502781   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2502782   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2502783   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2502784   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 *
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 +
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 *
HigherEducationBinary0 ;
2502785   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2502786   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2502787   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2502788   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2502789   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 *
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 +
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 *
HigherEducationBinary0 ;
2502790   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2502791   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2502792   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2502793   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2502794   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 *
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 +
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 *
HigherEducationBinary0 ;
2502795   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2502796   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2502797   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2502798   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2502799   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 *
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 +
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 *
HigherEducationBinary0 ;
2502800   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2502801   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2502802   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2502803   +          +    -1.34742914042312 * Marital_StatusDivorced
2502804   +          +    -0.75378934918763 * Marital_StatusMarried
2502805   +          +    -1.85411678929217 * Marital_StatusSingle
2502806   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle +
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 *
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 *
Marital_StatusTogether ;
2502807   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2502808   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2502809   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2502810   +          +     0.47958659206261 * Marital_StatusDivorced
2502811   +          +     -0.9665584294045 * Marital_StatusMarried
2502812   +          +      0.9733784530538 * Marital_StatusSingle
2502813   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle +
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 *
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 *
Marital_StatusTogether ;
2502814   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2502815   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2502816   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2502817   +          +    -0.56894207908284 * Marital_StatusDivorced
2502818   +          +    -0.96715106987195 * Marital_StatusMarried
2502819   +          +     1.18678144721443 * Marital_StatusSingle
2502820   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle +
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation +
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced +
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle +
1.05940264255347 * Marital_StatusTogether ;
2502821   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2502822   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2502823   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2502824   +          +     -0.6061959224661 * Marital_StatusDivorced
2502825   +          +     0.03495844244684 * Marital_StatusMarried
2502826   +          +    -0.63896361063244 * Marital_StatusSingle
2502827   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle +
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation +
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced +
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle +
0.74357887057422 * Marital_StatusTogether ;
2502828   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2502829   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2502830   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2502831   +          +     0.82178907301319 * Marital_StatusDivorced
2502832   +          +     1.69543553114589 * Marital_StatusMarried
2502833   +          +     -2.1272067363559 * Marital_StatusSingle
2502834   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle +
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 *
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 *
Marital_StatusTogether ;
2502835   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2502836   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2502837   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2502838   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2502839   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2502840   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2502841   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2502842   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2502843   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2502844   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2502845   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2502846   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2502847   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2502848   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2502849   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2502850   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2502851   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2502852   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2502853   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2502854   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2502855   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2502856   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2502857   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2502858   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2502859   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2502860   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2502861   +END;
MPRINT(EM_DIAGRAM):   END;
2502862   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2502863   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2502864   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2502865   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2502866   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2502867   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2502868   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2502869   +END;
MPRINT(EM_DIAGRAM):   END;
2502870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502871   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2502872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502873   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2502874   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2502875   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2502876   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 +
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 +
-1.38760297105319 * H1x1_6 ;
2502877   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2502878   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2502879   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 +
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 +
2.71965753640902 * H1x1_6 ;
2502880   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2502881   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2502882   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 +
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 +
-0.94725163293394 * H1x1_6 ;
2502883   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2502884   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2502885   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 +
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 +
0.66585878141635 * H1x1_6 ;
2502886   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2502887   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2502888   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 +
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 +
3.57592566919388 * H1x1_6 ;
2502889   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2502890   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2502891   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 +
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 +
-0.32006241006585 * H1x1_6 ;
2502892   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2502893   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2502894   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2502895   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 *
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 +
-0.07237646966438 * H1x2_6 ;
2502896   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2502897   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2502898   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2502899   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 +
0.35471332651631 * H1x2_6 ;
2502900   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2502901   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2502902   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2502903   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 +
0.5218140468737 * H1x2_6 ;
2502904   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2502905   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2502906   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2502907   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 +
-0.67920869444907 * H1x2_6 ;
2502908   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2502909   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2502910   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2502911   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 +
1.1175989027563 * H1x2_6 ;
2502912   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2502913   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2502914   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2502915   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 *
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5
+ 1.54589390085972 * H1x2_6 ;
2502916   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2502917   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2502918   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2502919   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2502920   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2502921   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2502922   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2502923   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2502924   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2502925   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2502926   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2502927   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2502928   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2502929   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2502930   +END;
MPRINT(EM_DIAGRAM):   END;
2502931   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2502932   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2502933   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2502934   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2502935   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2502936   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2502937   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2502938   +END;
MPRINT(EM_DIAGRAM):   END;
2502939   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502940   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2502941   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502942   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2502943   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2502944   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2502945   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 +
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 +
1.54726164498938 * H2x1_6 ;
2502946   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2502947   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2502948   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2502949   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2502950   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2502951   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2502952   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2502953   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2502954   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2502955   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2502956   +END;
MPRINT(EM_DIAGRAM):   END;
2502957   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2502958   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2502959   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2502960   +END;
MPRINT(EM_DIAGRAM):   END;
2502961   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2502962   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2502963   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2502964   +END;
MPRINT(EM_DIAGRAM):   END;
2502965   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502966   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2502967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502968   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2502969   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2502970   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2502971   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2502972   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2502973   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2502974   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2502975   +END;
MPRINT(EM_DIAGRAM):   END;
2502976   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2502977   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2502978   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2502979   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2502980    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2502981    quit;
2502982    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2502983    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2502984    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2502985    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
2502986    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2502987    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2502988    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2502989    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2502990    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2502991    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME
CREATOR);
2502992    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2502993    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2502994    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2502995    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2502996    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2502997    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2502998    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
2502999    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2503000    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2503001    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503002    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503003    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2503004    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2503005    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503006    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2503007    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2503008    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2503008  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.
 
2503009    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503010    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2503011    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 3291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2503012    filename _pref
2503012  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2503013    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2503014    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2503015   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2503016   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2503017   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2503018   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2503019   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2503020   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2503021    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2503022    quit;
2503023    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2503024    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2503025    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2503026    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2503027    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2503028    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503029    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2503030    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503031    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503032    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2503033    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503034    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2503035    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2503036    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2503037    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2503038    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503039    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2503040    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2503041    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2503042    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503043    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503044    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2503045    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2503046    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503047    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503048    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2503049    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2503049  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2503050    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503051    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2503052    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 3295 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503053    filename _pref
2503053  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2503054    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2503055    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2503056   +
2503057   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2503058   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2503058  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2503059   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2503060   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2503061   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2503062   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2503063   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2503064    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2503065    quit;
2503066    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2503067    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2503068    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2503069    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2503070    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2503071    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503072    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2503073    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503074    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503075    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2503076    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503077    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503078    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2503079    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2503080    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2503081    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2503082    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2503083    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503084    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2503085    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503086    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503087    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2503088    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2503089    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503090    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2503091    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2503092    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2503092  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2503093    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503094    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2503095    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 3334 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503096    filename _pref
2503096  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2503097    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2503098    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2503099   +
2503100   +
2503101   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2503102   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2503103   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2503104   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2503105   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2503106   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2503107   +
2503108   +
2503109   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2503110   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2503111   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2503112   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2503113   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2503114   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2503115   +
2503116   +
2503117   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2503118   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2503119   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2503120   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2503121   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2503122   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2503123   +
2503124   +
2503125   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2503126   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2503127   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2503128   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2503129   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2503130   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2503131   +
2503132   +
2503133   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2503134   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2503135   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2503136   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2503137   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2503138   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2503139   +
2503140   +
2503141   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2503142   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2503143   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2503144   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2503145   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2503146   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2503147   +
2503148   +
2503149   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2503150   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2503151   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2503152   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2503153   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2503154   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2503155   +
2503156   +
2503157   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2503158   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2503159   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2503160   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2503161   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2503162   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2503163   +if
2503164   +_FILTERNORM1 not in ( '.')
2503165   + and
2503166   +_FILTERNORM2 not in ( '.')
2503167   + and
2503168   +_FILTERNORM3 not in ( '.')
2503169   + and
2503170   +_FILTERNORM4 not in ( '.')
2503171   + and
2503172   +_FILTERNORM5 not in ( '.')
2503173   + and
2503174   +_FILTERNORM6 not in ( '.')
2503175   + and
2503176   +_FILTERNORM7 not in ( ' ')
2503177   + and
2503178   +_FILTERNORM8 not in ( ' ')
2503179   +and
2503180   +( Dt_Customer ne .)
2503181   +and ( Income ne . and (Income<=107000))
2503182   +and ( Kidhome ne .)
2503183   +and ( MntFishProducts ne .)
2503184   +and ( MntFruits ne .)
2503185   +and ( MntGoldProds ne .)
2503186   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2503187   +and ( MntSweetProducts ne .)
2503188   +and ( MntWines ne .)
2503189   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2503190   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2503191   +and ( NumStorePurchases ne .)
2503192   +and ( NumWebPurchases ne .)
2503193   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2503194   +and ( Recency ne .)
2503195   +and ( Teenhome ne .)
2503196   +and ( Year_Birth ne .)
2503197   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2503198   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2503199   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2503200   +end;
MPRINT(EM_DIAGRAM):   end;
2503201   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2503202   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2503203    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2503204    quit;
2503205    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2503206    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2503207    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2503208    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2503209    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2503210    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503211    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2503212    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503213    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503214    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2503215    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503216    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2503217    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2503218    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2503219    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2503220    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503221    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2503222    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2503223    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2503224    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503225    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503226    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2503227    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2503228    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503229    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503230    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2503231    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2503231  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2503232    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503233    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2503234    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 3400 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503235    %macro varDept(fcmpdata=,id=);
2503236    %global nobs&id scoreFlag&id;
2503237    %let scoreFlag&id = 0;
2503238    %if &id=1 or ^&fcmpStart %then %do;
2503239    proc sort data=&fcmpdata out=_temp&id nodupkey;
2503240    by NAME;
2503241    where id=&id and LHS in( %let j=1;
2503242    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2503243    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2503244    "&var" %let j = %eval(&j+1);
2503245    %end;
2503246    );
2503247    run;
2503248    %let dsid = %sysfunc(open(_temp&id));
2503249    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2503250    %let dsid = %sysfunc(close(&dsid));
2503251    %if &&nobs&id %then %do;
2503252    %let scoreFlag&id = 1;
2503253    %let fcmpStart = 1;
2503254    %end;
2503255    %else %let fcmpStart = 0;
2503256    %end;
2503257    %else %do;
2503258    proc sort data=&fcmpdata out=_tempid;
2503259    where id=&id;
2503260    by LHS;
2503261    run;
2503262    %let dsid = %sysfunc(open(_tempid));
2503263    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2503264    %let dsid = %sysfunc(close(&dsid));
2503265    %if ^&&nobs&id %then %do;
2503266    proc datasets lib=work nolist;
2503267    delete _tempid;
2503268    run;
2503269    quit;
2503270    %end;
2503271    %else %do;
2503272    data _tempAll;
2503273    set %let j=%eval(&id-1);
2503274    %do x=1 %to &j;
2503275    %if &&nobs&x %then %do;
2503276    _temp&x %end;
2503277    %end;
2503278    ;
2503279    run;
2503280    proc sql;
2503281    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2503281  ! work._tempid p2 where p.name=p2.lhs;
2503282    quit;
2503283    data _temp&id;
2503284    set _temp&id;
2503285    where LHS ne '' and NAME ne '' and Node ne '';
2503286    run;
2503287    proc datasets lib=work nolist;
2503288    delete _tempAll;
2503289    run;
2503290    %let dsid = %sysfunc(open(_temp&id));
2503291    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2503292    %let dsid = %sysfunc(close(&dsid));
2503293    %if ^&&nobs&id %then %do;
2503294    proc datasets lib=work nolist;
2503295    delete _temp&id;
2503296    run;
2503297    quit;
2503298    %end;
2503299    %else %do;
2503300    %let scoreFlag&id = 1;
2503301    data _temp&id;
2503302    set _temp&id;
2503303    where LHS ne NAME and node ne '';
2503304    run;
2503305    %let dsid = %sysfunc(open(_temp&id));
2503306    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2503307    %let dsid = %sysfunc(close(&dsid));
2503308    %if ^&&nobs&id %then %do;
2503309    proc datasets lib=work nolist;
2503310    delete _temp&id;
2503311    run;
2503312    quit;
2503313    %end;
2503314    %else %do;
2503315    proc sort data=_temp&id nodupkey;
2503316    by LHS NAME;
2503317    run;
2503318    %end;
2503319    %end;
2503320    %end;
2503321    %end;
2503322    %mend varDept;
2503323    %macro optCode(outdata=fcmpdata);
2503324    %global fcmpStart;
2503325    %let fcmpStart = 0;
2503326    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2503327    %let NumNodes=9;
2503328    %do k=1 %to &NumNodes;
2503329    %vardept(fcmpdata=&outdata, id=&k);
2503330    %end;
2503331    %mend optCode;
2503332    %optcode(outData=EMWS8.Ensmbl47_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 188 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 136 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 52 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 56 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 95 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2503333    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2503334    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2503335    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2503336    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503337    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2503338    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2503339    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2503340    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2503341    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2503342    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2503342  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2503343    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2503344    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2503345    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2503346    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503347    filename _pref
2503347  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
2503348    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2503349    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
2503350   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2503351   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2503352   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2503353   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2503354   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2503355   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2503356   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2503357   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2503358   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2503359   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2503360   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2503361   +LENGTH _WARN_ $4
2503362   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2503363   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2503364   +
2503365   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2503366   +
2503367   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2503368   +
2503369   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2503370   +
2503371   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2503372   +
2503373   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2503374   +
2503375   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2503376   +
2503377   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2503378   +
2503379   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2503380   +
2503381   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2503382   +
2503383   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2503384   +
2503385   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2503386   +
2503387   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2503388   +
2503389   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2503390   +
2503391   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2503392   +
2503393   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2503394   +
2503395   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2503396   +
2503397   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2503398   +
2503399   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2503400   +
2503401   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2503402   +
2503403   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2503404   +
2503405   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2503406   +
2503407   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2503408   +
2503409   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2503410   +
2503411   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2503412   +
2503413   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2503414   +
2503415   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2503416   +
2503417   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2503418   +
2503419   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2503420   +
2503421   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2503422   +
2503423   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2503424   +
2503425   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2503426   +
2503427   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2503428   +
2503429   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2503430   +
2503431   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2503432   +
2503433   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2503434   +
2503435   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2503436   +
2503437   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2503438   +
2503439   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2503440   +
2503441   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2503442   +
2503443   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2503444   +
2503445   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2503446   +
2503447   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2503448   +
2503449   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2503450   +
2503451   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2503452   +
2503453   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2503454   +
2503455   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2503456   +
2503457   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2503458   +
2503459   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2503460   +
2503461   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2503462   +
2503463   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2503464   +
2503465   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2503466   +
2503467   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2503468   +
2503469   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2503470   +
2503471   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2503472   +
2503473   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2503474   +
2503475   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2503476   +
2503477   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2503478   +
2503479   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2503480   +
2503481   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2503482   +
2503483   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2503484   +
2503485   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2503486   +
2503487   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2503488   +
2503489   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2503490   +
2503491   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2503492   +
2503493   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2503494   +
2503495   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2503496   +
2503497   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2503498   +
2503499   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2503500   +
2503501   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2503502   +
2503503   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2503504   +
2503505   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2503506   +
2503507   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2503508   +
2503509   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2503510   +
2503511   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2503512   +
2503513   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2503514   +
2503515   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2503516   +
2503517   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2503518   +
2503519   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2503520   +
2503521   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2503522   +
2503523   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2503524   +
2503525   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2503526   +
2503527   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2503528   +
2503529   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2503530   +
2503531   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2503532   +
2503533   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2503534   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2503535   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2503536   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2503537   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2503538   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503539   +end;
MPRINT(EM_DIAGRAM):   end;
2503540   +else do;
MPRINT(EM_DIAGRAM):   else do;
2503541   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2503542   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2503543   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2503544   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2503545   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2503546   +   end;
MPRINT(EM_DIAGRAM):   end;
2503547   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2503548   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2503549   +   end;
MPRINT(EM_DIAGRAM):   end;
2503550   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2503551   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2503552   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2503553   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503554   +   end;
MPRINT(EM_DIAGRAM):   end;
2503555   +end;
MPRINT(EM_DIAGRAM):   end;
2503556   +
2503557   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2503558   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2503559   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2503560   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2503561   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2503562   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503563   +end;
MPRINT(EM_DIAGRAM):   end;
2503564   +else do;
MPRINT(EM_DIAGRAM):   else do;
2503565   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2503566   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2503567   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2503568   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2503569   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2503570   +   end;
MPRINT(EM_DIAGRAM):   end;
2503571   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2503572   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2503573   +   end;
MPRINT(EM_DIAGRAM):   end;
2503574   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2503575   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2503576   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2503577   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503578   +   end;
MPRINT(EM_DIAGRAM):   end;
2503579   +end;
MPRINT(EM_DIAGRAM):   end;
2503580   +
2503581   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2503582   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2503583   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2503584   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2503585   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2503586   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503587   +end;
MPRINT(EM_DIAGRAM):   end;
2503588   +else do;
MPRINT(EM_DIAGRAM):   else do;
2503589   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2503590   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2503591   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2503592   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2503593   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2503594   +   end;
MPRINT(EM_DIAGRAM):   end;
2503595   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2503596   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2503597   +   end;
MPRINT(EM_DIAGRAM):   end;
2503598   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2503599   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2503600   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2503601   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503602   +   end;
MPRINT(EM_DIAGRAM):   end;
2503603   +end;
MPRINT(EM_DIAGRAM):   end;
2503604   +
2503605   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2503606   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2503607   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2503608   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2503609   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2503610   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503611   +end;
MPRINT(EM_DIAGRAM):   end;
2503612   +else do;
MPRINT(EM_DIAGRAM):   else do;
2503613   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2503614   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2503615   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2503616   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2503617   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2503618   +   end;
MPRINT(EM_DIAGRAM):   end;
2503619   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2503620   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2503621   +   end;
MPRINT(EM_DIAGRAM):   end;
2503622   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2503623   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2503624   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2503625   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503626   +   end;
MPRINT(EM_DIAGRAM):   end;
2503627   +end;
MPRINT(EM_DIAGRAM):   end;
2503628   +
2503629   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2503630   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2503631   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2503632   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2503633   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2503634   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503635   +end;
MPRINT(EM_DIAGRAM):   end;
2503636   +else do;
MPRINT(EM_DIAGRAM):   else do;
2503637   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2503638   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2503639   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2503640   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2503641   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2503642   +   end;
MPRINT(EM_DIAGRAM):   end;
2503643   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2503644   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2503645   +   end;
MPRINT(EM_DIAGRAM):   end;
2503646   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2503647   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2503648   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2503649   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503650   +   end;
MPRINT(EM_DIAGRAM):   end;
2503651   +end;
MPRINT(EM_DIAGRAM):   end;
2503652   +
2503653   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2503654   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2503655   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2503656   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2503657   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2503658   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503659   +end;
MPRINT(EM_DIAGRAM):   end;
2503660   +else do;
MPRINT(EM_DIAGRAM):   else do;
2503661   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2503662   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2503663   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2503664   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2503665   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2503666   +   end;
MPRINT(EM_DIAGRAM):   end;
2503667   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2503668   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2503669   +   end;
MPRINT(EM_DIAGRAM):   end;
2503670   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2503671   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2503672   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2503673   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503674   +   end;
MPRINT(EM_DIAGRAM):   end;
2503675   +end;
MPRINT(EM_DIAGRAM):   end;
2503676   +
2503677   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2503678   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2503679   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2503680   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2503681   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2503682   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503683   +end;
MPRINT(EM_DIAGRAM):   end;
2503684   +else do;
MPRINT(EM_DIAGRAM):   else do;
2503685   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2503686   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2503687   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2503688   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2503689   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2503690   +   end;
MPRINT(EM_DIAGRAM):   end;
2503691   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2503692   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2503693   +   end;
MPRINT(EM_DIAGRAM):   end;
2503694   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2503695   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2503696   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2503697   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503698   +   end;
MPRINT(EM_DIAGRAM):   end;
2503699   +end;
MPRINT(EM_DIAGRAM):   end;
2503700   +
2503701   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2503702   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2503703   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2503704   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2503705   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2503706   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2503707   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2503708   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2503709   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2503710   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2503711   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2503712   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2503713   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2503714   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503715   +end;
MPRINT(EM_DIAGRAM):   end;
2503716   +else do;
MPRINT(EM_DIAGRAM):   else do;
2503717   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2503718   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2503719   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2503720   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2503721   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2503722   +   end;
MPRINT(EM_DIAGRAM):   end;
2503723   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2503724   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2503725   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2503726   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2503727   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2503728   +   end;
MPRINT(EM_DIAGRAM):   end;
2503729   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2503730   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2503731   +   end;
MPRINT(EM_DIAGRAM):   end;
2503732   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2503733   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2503734   +   end;
MPRINT(EM_DIAGRAM):   end;
2503735   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2503736   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2503737   +   end;
MPRINT(EM_DIAGRAM):   end;
2503738   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2503739   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2503740   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2503741   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2503742   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2503743   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2503744   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503745   +   end;
MPRINT(EM_DIAGRAM):   end;
2503746   +end;
MPRINT(EM_DIAGRAM):   end;
2503747   +
2503748   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2503749   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2503750   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2503751   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2503752   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2503753   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2503754   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2503755   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2503756   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2503757   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2503758   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2503759   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2503760   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2503761   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2503762   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503763   +end;
MPRINT(EM_DIAGRAM):   end;
2503764   +else do;
MPRINT(EM_DIAGRAM):   else do;
2503765   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2503766   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2503767   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2503768   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2503769   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2503770   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2503771   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2503772   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2503773   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2503774   +         end;
MPRINT(EM_DIAGRAM):   end;
2503775   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2503776   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2503777   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2503778   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2503779   +            end;
MPRINT(EM_DIAGRAM):   end;
2503780   +         end;
MPRINT(EM_DIAGRAM):   end;
2503781   +      end;
MPRINT(EM_DIAGRAM):   end;
2503782   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2503783   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2503784   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2503785   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2503786   +         end;
MPRINT(EM_DIAGRAM):   end;
2503787   +      end;
MPRINT(EM_DIAGRAM):   end;
2503788   +   end;
MPRINT(EM_DIAGRAM):   end;
2503789   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2503790   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2503791   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2503792   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2503793   +      end;
MPRINT(EM_DIAGRAM):   end;
2503794   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2503795   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2503796   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2503797   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2503798   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2503799   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2503800   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2503801   +         end;
MPRINT(EM_DIAGRAM):   end;
2503802   +      end;
MPRINT(EM_DIAGRAM):   end;
2503803   +   end;
MPRINT(EM_DIAGRAM):   end;
2503804   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2503805   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2503806   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2503807   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2503808   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2503809   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2503810   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503811   +   end;
MPRINT(EM_DIAGRAM):   end;
2503812   +end;
MPRINT(EM_DIAGRAM):   end;
2503813   +
2503814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503815   +*** Checking missing input Interval
2503816   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2503817   +
2503818   +IF NMISS(
2503819   +   AcceptedCmpTotal ,
2503820   +   Age ,
2503821   +   Frq ,
2503822   +   Income ,
2503823   +   Kidhome ,
2503824   +   Mnt ,
2503825   +   MntFishProducts ,
2503826   +   MntFruits ,
2503827   +   MntGoldProds ,
2503828   +   MntMeatProducts ,
2503829   +   MntSweetProducts ,
2503830   +   MntWines ,
2503831   +   MonthsAsCustomer ,
2503832   +   NumCatalogPurchases ,
2503833   +   NumDealsPurchases ,
2503834   +   NumDistPurchases ,
2503835   +   NumStorePurchases ,
2503836   +   NumWebPurchases ,
2503837   +   NumWebVisitsMonth ,
2503838   +   RFMstat ,
2503839   +   RMntFrq ,
2503840   +   Recency ,
2503841   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2503842   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2503843   +
2503844   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503845   +END;
MPRINT(EM_DIAGRAM):   END;
2503846   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503847   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2503848   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503849   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2503850   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2503851   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2503852   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2503853   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2503854   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2503855   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2503856   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2503857   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2503858   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2503859   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2503860   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2503861   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2503862   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2503863   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2503864   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2503865   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2503866   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2503867   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2503868   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2503869   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2503870   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2503871   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2503872   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2503873   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2503874   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2503875   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2503876   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2503877   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2503878   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2503879   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2503880   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2503881   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2503882   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2503883   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2503884   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2503885   +END;
MPRINT(EM_DIAGRAM):   END;
2503886   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2503887   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2503888   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2503889   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2503890   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2503891   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2503892   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2503893   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2503894   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2503895   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2503896   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2503897   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2503898   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2503899   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2503900   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2503901   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2503902   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2503903   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2503904   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2503905   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2503906   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2503907   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2503908   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2503909   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2503910   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2503911   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2503912   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2503913   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2503914   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2503915   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2503916   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2503917   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2503918   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2503919   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2503920   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2503921   +   ELSE S_NumCatalogPurchases
2503922   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2503923   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2503924   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2503925   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2503926   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2503927   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2503928   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2503929   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2503930   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2503931   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2503932   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2503933   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2503934   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2503935   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2503936   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2503937   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2503938   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2503939   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2503940   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2503941   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2503942   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2503943   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2503944   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2503945   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2503946   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2503947   +END;
MPRINT(EM_DIAGRAM):   END;
2503948   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503949   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2503950   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503951   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503952   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2503953   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503954   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503955   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2503956   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503957   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2503958   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2503959   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2503960   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2503961   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2503962   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2503963   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2503964   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2503965   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2503966   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2503967   +          +    -1.18466001117424 * S_NumDealsPurchases
2503968   +          +     -0.1371252133567 * S_NumDistPurchases
2503969   +          +     1.92719775731123 * S_NumStorePurchases
2503970   +          +     1.23184249192116 * S_NumWebPurchases
2503971   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2503972   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2503973   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2503974   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 *
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 *
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts +
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 *
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 *
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 *
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 *
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq +
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2503975   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2503976   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2503977   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2503978   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2503979   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2503980   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2503981   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2503982   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2503983   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2503984   +          +     0.63616523425865 * S_NumDealsPurchases
2503985   +          +     0.45460056261546 * S_NumDistPurchases
2503986   +          +    -0.61009999017225 * S_NumStorePurchases
2503987   +          +     1.85193755731081 * S_NumWebPurchases
2503988   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2503989   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2503990   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2503991   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 *
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 *
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts +
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 *
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines +
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases +
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases +
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases +
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 *
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2503992   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2503993   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2503994   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2503995   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2503996   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2503997   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2503998   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2503999   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2504000   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2504001   +          +      1.8907968580473 * S_NumDealsPurchases
2504002   +          +     0.01244124801764 * S_NumDistPurchases
2504003   +          +    -2.34409118104622 * S_NumStorePurchases
2504004   +          +    -1.80820043087435 * S_NumWebPurchases
2504005   +          +     2.40219682136039 * S_NumWebVisitsMonth
2504006   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2504007   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2504008   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 *
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 *
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts +
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 *
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines +
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases +
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases +
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases +
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 *
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2504009   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2504010   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2504011   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2504012   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2504013   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2504014   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2504015   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2504016   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2504017   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2504018   +          +     0.28209537604198 * S_NumDealsPurchases
2504019   +          +      0.6450277971767 * S_NumDistPurchases
2504020   +          +     0.85050092520609 * S_NumStorePurchases
2504021   +          +    -0.53920307215941 * S_NumWebPurchases
2504022   +          +     3.01106015100147 * S_NumWebVisitsMonth
2504023   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2504024   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2504025   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 *
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 *
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts +
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 *
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 *
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 *
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 *
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq +
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2504026   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2504027   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2504028   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2504029   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2504030   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2504031   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2504032   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2504033   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2504034   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2504035   +          +    -0.36642526324451 * S_NumDealsPurchases
2504036   +          +     -0.6091014843932 * S_NumDistPurchases
2504037   +          +    -0.21154626182088 * S_NumStorePurchases
2504038   +          +    -0.10361347071364 * S_NumWebPurchases
2504039   +          +     1.36358817627784 * S_NumWebVisitsMonth
2504040   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2504041   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2504042   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 *
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 *
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts +
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 *
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines +
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases +
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases +
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases +
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 *
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2504043   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2504044   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2504045   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2504046   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2504047   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2504048   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2504049   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2504050   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2504051   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2504052   +          +    -0.14868505161718 * S_NumDealsPurchases
2504053   +          +    -0.08395384711805 * S_NumDistPurchases
2504054   +          +     0.60525238179245 * S_NumStorePurchases
2504055   +          +     0.04555100214276 * S_NumWebPurchases
2504056   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2504057   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2504058   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2504059   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 *
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome +
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 *
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts +
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 *
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 *
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 *
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 *
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq +
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2504060   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2504061   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2504062   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2504063   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2504064   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 *
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 +
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 *
HigherEducationBinary0 ;
2504065   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2504066   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2504067   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2504068   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2504069   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 *
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 +
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 *
HigherEducationBinary0 ;
2504070   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2504071   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2504072   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2504073   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2504074   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 *
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 +
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 *
HigherEducationBinary0 ;
2504075   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2504076   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2504077   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2504078   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2504079   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 +
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 *
HigherEducationBinary0 ;
2504080   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2504081   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2504082   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2504083   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2504084   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 *
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 +
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 *
HigherEducationBinary0 ;
2504085   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2504086   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2504087   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2504088   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2504089   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 +
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 *
HigherEducationBinary0 ;
2504090   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2504091   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2504092   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2504093   +          +     -0.7180104021039 * Marital_StatusDivorced
2504094   +          +      0.5957373170744 * Marital_StatusMarried
2504095   +          +    -0.86183942803988 * Marital_StatusSingle
2504096   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle +
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 *
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 *
Marital_StatusTogether ;
2504097   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2504098   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2504099   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2504100   +          +     0.84772700244021 * Marital_StatusDivorced
2504101   +          +    -0.37049970188511 * Marital_StatusMarried
2504102   +          +     1.54291641732063 * Marital_StatusSingle
2504103   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle +
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation +
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced +
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle +
0.2036514883055 * Marital_StatusTogether ;
2504104   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2504105   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2504106   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2504107   +          +     0.73222548496385 * Marital_StatusDivorced
2504108   +          +    -0.50102202656102 * Marital_StatusMarried
2504109   +          +    -0.07207130428422 * Marital_StatusSingle
2504110   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle +
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation +
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced +
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle +
0.17349558515949 * Marital_StatusTogether ;
2504111   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2504112   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2504113   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2504114   +          +     0.25894719464799 * Marital_StatusDivorced
2504115   +          +    -1.95576501275834 * Marital_StatusMarried
2504116   +          +     2.65422185276746 * Marital_StatusSingle
2504117   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle +
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 *
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 *
Marital_StatusTogether ;
2504118   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2504119   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2504120   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2504121   +          +     0.60936191204707 * Marital_StatusDivorced
2504122   +          +    -0.52190111190458 * Marital_StatusMarried
2504123   +          +    -0.60982305233136 * Marital_StatusSingle
2504124   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle +
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation +
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced +
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle +
0.44659686388318 * Marital_StatusTogether ;
2504125   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2504126   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2504127   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2504128   +          +    -1.44614502228294 * Marital_StatusDivorced
2504129   +          +      2.9001493892928 * Marital_StatusMarried
2504130   +          +    -2.60467399972513 * Marital_StatusSingle
2504131   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle +
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 *
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 *
Marital_StatusTogether ;
2504132   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2504133   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2504134   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2504135   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2504136   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2504137   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2504138   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2504139   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2504140   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
2504141   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2504142   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2504143   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2504144   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2504145   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2504146   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2504147   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2504148   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2504149   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2504150   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2504151   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2504152   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2504153   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2504154   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2504155   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2504156   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2504157   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2504158   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2504159   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2504160   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2504161   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2504162   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2504163   +END;
MPRINT(EM_DIAGRAM):   END;
2504164   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2504165   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2504166   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2504167   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2504168   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2504169   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2504170   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2504171   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2504172   +END;
MPRINT(EM_DIAGRAM):   END;
2504173   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504174   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2504175   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504176   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2504177   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2504178   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2504179   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2504180   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2504181   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2504182   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2504183   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2504184   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2504185   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2504186   +          +    -0.46483717253931 * S_NumDealsPurchases
2504187   +          +    -0.53329008421157 * S_NumDistPurchases
2504188   +          +      0.2490774300193 * S_NumStorePurchases
2504189   +          +    -0.82755150673885 * S_NumWebPurchases
2504190   +          +     0.04007223822389 * S_NumWebVisitsMonth
2504191   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2504192   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2504193   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 *
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 *
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts +
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 *
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 *
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 *
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 *
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq +
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2504194   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2504195   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2504196   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2504197   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2504198   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2504199   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2504200   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2504201   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2504202   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2504203   +          +     0.75855101382458 * S_NumDealsPurchases
2504204   +          +     1.61754951768262 * S_NumDistPurchases
2504205   +          +    -0.48146714929729 * S_NumStorePurchases
2504206   +          +    -0.76460728035552 * S_NumWebPurchases
2504207   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2504208   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2504209   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2504210   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 *
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 *
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 *
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts +
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 *
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 *
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 *
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 *
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq +
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2504211   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2504212   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2504213   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2504214   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2504215   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2504216   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2504217   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2504218   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2504219   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2504220   +          +     0.75255317965748 * S_NumDealsPurchases
2504221   +          +     1.34900588315783 * S_NumDistPurchases
2504222   +          +    -0.17717469778048 * S_NumStorePurchases
2504223   +          +    -0.01560551546553 * S_NumWebPurchases
2504224   +          +     1.24315988674343 * S_NumWebVisitsMonth
2504225   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2504226   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2504227   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 *
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 *
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts +
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 *
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 *
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 *
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 *
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq +
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2504228   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2504229   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2504230   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2504231   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2504232   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2504233   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2504234   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2504235   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2504236   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2504237   +          +    -1.71127148178768 * S_NumDealsPurchases
2504238   +          +    -1.77527355221308 * S_NumDistPurchases
2504239   +          +    -1.40009594349363 * S_NumStorePurchases
2504240   +          +    -0.46471012062697 * S_NumWebPurchases
2504241   +          +     0.04619891083228 * S_NumWebVisitsMonth
2504242   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2504243   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2504244   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 *
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 *
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts +
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 *
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 *
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 *
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 *
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq +
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2504245   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2504246   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2504247   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2504248   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2504249   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2504250   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2504251   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2504252   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2504253   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2504254   +          +    -0.22204470395056 * S_NumDealsPurchases
2504255   +          +    -1.74490476011984 * S_NumDistPurchases
2504256   +          +     1.93538420108324 * S_NumStorePurchases
2504257   +          +     1.04892631742152 * S_NumWebPurchases
2504258   +          +     1.50717841566047 * S_NumWebVisitsMonth
2504259   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2504260   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2504261   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 *
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 *
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts +
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 *
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 *
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 *
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 *
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq +
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2504262   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2504263   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2504264   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2504265   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2504266   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2504267   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2504268   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2504269   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2504270   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2504271   +          +    -0.94690420785776 * S_NumDealsPurchases
2504272   +          +     1.87932706342204 * S_NumDistPurchases
2504273   +          +     0.31232717416487 * S_NumStorePurchases
2504274   +          +     1.51889492693355 * S_NumWebPurchases
2504275   +          +     0.04376853689795 * S_NumWebVisitsMonth
2504276   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2504277   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2504278   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 *
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 *
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts +
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 *
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 *
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 *
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 *
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq +
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2504279   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2504280   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2504281   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2504282   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2504283   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 *
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 +
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 *
HigherEducationBinary0 ;
2504284   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2504285   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2504286   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2504287   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2504288   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 *
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 +
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 *
HigherEducationBinary0 ;
2504289   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2504290   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2504291   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2504292   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2504293   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 *
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 +
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 *
HigherEducationBinary0 ;
2504294   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2504295   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2504296   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2504297   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2504298   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 *
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 +
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 *
HigherEducationBinary0 ;
2504299   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2504300   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2504301   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2504302   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2504303   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 *
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 +
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 *
HigherEducationBinary0 ;
2504304   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2504305   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2504306   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2504307   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2504308   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 +
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 *
HigherEducationBinary0 ;
2504309   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2504310   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2504311   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2504312   +          +     0.56030871857835 * Marital_StatusDivorced
2504313   +          +    -1.22448534379831 * Marital_StatusMarried
2504314   +          +     0.78141783495855 * Marital_StatusSingle
2504315   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle +
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 *
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 *
Marital_StatusTogether ;
2504316   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2504317   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2504318   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2504319   +          +    -2.63452071552997 * Marital_StatusDivorced
2504320   +          +     0.61829054779121 * Marital_StatusMarried
2504321   +          +    -2.20743370246315 * Marital_StatusSingle
2504322   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle +
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 *
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 *
Marital_StatusTogether ;
2504323   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2504324   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2504325   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2504326   +          +      -1.454102516731 * Marital_StatusDivorced
2504327   +          +     0.71488291465759 * Marital_StatusMarried
2504328   +          +     0.96038830049792 * Marital_StatusSingle
2504329   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle +
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 *
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 *
Marital_StatusTogether ;
2504330   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2504331   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2504332   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2504333   +          +    -0.01160394891598 * Marital_StatusDivorced
2504334   +          +    -1.09054636482951 * Marital_StatusMarried
2504335   +          +      0.7793855479379 * Marital_StatusSingle
2504336   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle +
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation +
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced +
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle +
-0.40649435490654 * Marital_StatusTogether ;
2504337   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2504338   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2504339   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2504340   +          +    -0.73414854875115 * Marital_StatusDivorced
2504341   +          +     0.46421425621114 * Marital_StatusMarried
2504342   +          +    -0.54512730625469 * Marital_StatusSingle
2504343   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle +
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 *
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 *
Marital_StatusTogether ;
2504344   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2504345   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2504346   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2504347   +          +     0.25131188683384 * Marital_StatusDivorced
2504348   +          +     2.38279806963807 * Marital_StatusMarried
2504349   +          +     0.28897706448348 * Marital_StatusSingle
2504350   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle +
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 *
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 *
Marital_StatusTogether ;
2504351   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2504352   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2504353   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2504354   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2504355   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2504356   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2504357   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2504358   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2504359   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
2504360   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2504361   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2504362   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2504363   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2504364   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2504365   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2504366   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2504367   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2504368   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2504369   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2504370   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2504371   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2504372   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2504373   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2504374   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2504375   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2504376   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2504377   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2504378   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2504379   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2504380   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2504381   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2504382   +END;
MPRINT(EM_DIAGRAM):   END;
2504383   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2504384   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2504385   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2504386   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2504387   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2504388   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2504389   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2504390   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2504391   +END;
MPRINT(EM_DIAGRAM):   END;
2504392   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504393   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2504394   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504395   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2504396   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2504397   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2504398   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2504399   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2504400   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2504401   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2504402   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2504403   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2504404   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2504405   +          +     1.11855402225797 * S_NumDealsPurchases
2504406   +          +     0.39150287442005 * S_NumDistPurchases
2504407   +          +     0.00160244551627 * S_NumStorePurchases
2504408   +          +     1.54380043731879 * S_NumWebPurchases
2504409   +          +      0.6462755347813 * S_NumWebVisitsMonth
2504410   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2504411   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2504412   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 *
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 *
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts +
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 *
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 *
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 *
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 *
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq +
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2504413   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2504414   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2504415   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2504416   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2504417   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2504418   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2504419   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2504420   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2504421   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2504422   +          +     0.01911815525287 * S_NumDealsPurchases
2504423   +          +    -1.07196707915227 * S_NumDistPurchases
2504424   +          +      0.6452048321682 * S_NumStorePurchases
2504425   +          +    -0.15818575353955 * S_NumWebPurchases
2504426   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2504427   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2504428   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2504429   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 *
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 *
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts +
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 *
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 *
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 *
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 *
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq +
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2504430   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2504431   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2504432   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2504433   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2504434   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2504435   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2504436   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2504437   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2504438   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2504439   +          +     1.56893739271853 * S_NumDealsPurchases
2504440   +          +      0.6745865425238 * S_NumDistPurchases
2504441   +          +    -0.26848765783548 * S_NumStorePurchases
2504442   +          +     0.79227081430227 * S_NumWebPurchases
2504443   +          +     0.83054874267768 * S_NumWebVisitsMonth
2504444   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2504445   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2504446   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome +
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 *
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts +
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 *
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 *
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 *
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 *
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq +
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2504447   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2504448   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2504449   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2504450   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2504451   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2504452   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2504453   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2504454   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2504455   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2504456   +          +    -0.23954856030467 * S_NumDealsPurchases
2504457   +          +    -1.61914390483829 * S_NumDistPurchases
2504458   +          +      -1.014570623016 * S_NumStorePurchases
2504459   +          +    -0.36828642098701 * S_NumWebPurchases
2504460   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2504461   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2504462   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2504463   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 *
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 *
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts +
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 *
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 *
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 *
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 *
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq +
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2504464   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2504465   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2504466   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2504467   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2504468   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2504469   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2504470   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2504471   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2504472   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2504473   +          +     1.00094082424204 * S_NumDealsPurchases
2504474   +          +      0.2724785290725 * S_NumDistPurchases
2504475   +          +     0.13170237783486 * S_NumStorePurchases
2504476   +          +    -1.31447792523743 * S_NumWebPurchases
2504477   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2504478   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2504479   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2504480   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 *
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 *
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts +
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 *
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines +
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases +
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases +
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases +
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 *
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2504481   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2504482   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2504483   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2504484   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2504485   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2504486   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2504487   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2504488   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2504489   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2504490   +          +    -0.73198872336344 * S_NumDealsPurchases
2504491   +          +     0.29368958872361 * S_NumDistPurchases
2504492   +          +     1.52772046446908 * S_NumStorePurchases
2504493   +          +    -1.75065469134874 * S_NumWebPurchases
2504494   +          +      0.0264954621772 * S_NumWebVisitsMonth
2504495   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2504496   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2504497   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 *
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 *
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts +
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 *
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines +
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases +
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases +
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases +
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 *
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2504498   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2504499   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2504500   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2504501   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2504502   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 *
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 +
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 *
HigherEducationBinary0 ;
2504503   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2504504   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2504505   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2504506   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2504507   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 *
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 +
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 *
HigherEducationBinary0 ;
2504508   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2504509   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2504510   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2504511   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2504512   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 *
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 +
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 *
HigherEducationBinary0 ;
2504513   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2504514   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2504515   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2504516   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2504517   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 *
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 +
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 *
HigherEducationBinary0 ;
2504518   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2504519   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2504520   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2504521   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2504522   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 *
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 +
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 *
HigherEducationBinary0 ;
2504523   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2504524   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2504525   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2504526   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2504527   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 *
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 +
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 *
HigherEducationBinary0 ;
2504528   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2504529   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2504530   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2504531   +          +     0.32207432513904 * Marital_StatusDivorced
2504532   +          +      0.6397913221395 * Marital_StatusMarried
2504533   +          +    -0.25330032559918 * Marital_StatusSingle
2504534   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle +
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 *
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 *
Marital_StatusTogether ;
2504535   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2504536   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2504537   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2504538   +          +     0.79430904713493 * Marital_StatusDivorced
2504539   +          +     2.54456429102799 * Marital_StatusMarried
2504540   +          +     0.59410742352499 * Marital_StatusSingle
2504541   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle +
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 *
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 *
Marital_StatusTogether ;
2504542   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2504543   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2504544   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2504545   +          +    -0.43081775693595 * Marital_StatusDivorced
2504546   +          +    -0.78485102174552 * Marital_StatusMarried
2504547   +          +    -1.56581090110813 * Marital_StatusSingle
2504548   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle +
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation +
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced +
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle +
1.31552735466691 * Marital_StatusTogether ;
2504549   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2504550   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2504551   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2504552   +          +     0.38226706522151 * Marital_StatusDivorced
2504553   +          +     0.96666958079914 * Marital_StatusMarried
2504554   +          +    -0.07771259761555 * Marital_StatusSingle
2504555   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle +
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 *
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 *
Marital_StatusTogether ;
2504556   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2504557   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2504558   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2504559   +          +    -0.38325393606947 * Marital_StatusDivorced
2504560   +          +    -1.43303056163299 * Marital_StatusMarried
2504561   +          +     0.11571941757387 * Marital_StatusSingle
2504562   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle +
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 *
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 *
Marital_StatusTogether ;
2504563   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2504564   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2504565   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2504566   +          +    -0.36491799765765 * Marital_StatusDivorced
2504567   +          +     0.14142786767503 * Marital_StatusMarried
2504568   +          +     0.22643970468805 * Marital_StatusSingle
2504569   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried +
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2504570   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2504571   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2504572   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2504573   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2504574   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2504575   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2504576   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2504577   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2504578   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
2504579   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2504580   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2504581   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2504582   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2504583   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2504584   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2504585   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2504586   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2504587   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2504588   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2504589   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2504590   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2504591   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2504592   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2504593   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2504594   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2504595   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2504596   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2504597   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2504598   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2504599   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2504600   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2504601   +END;
MPRINT(EM_DIAGRAM):   END;
2504602   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2504603   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2504604   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2504605   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2504606   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2504607   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2504608   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2504609   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2504610   +END;
MPRINT(EM_DIAGRAM):   END;
2504611   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504612   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2504613   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504614   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2504615   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2504616   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2504617   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2504618   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 +
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 +
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2504619   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2504620   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2504621   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2504622   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 +
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 +
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2504623   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2504624   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2504625   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2504626   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 +
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 +
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2504627   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2504628   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2504629   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2504630   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 +
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 +
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2504631   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2504632   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2504633   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2504634   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 +
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 +
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2504635   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2504636   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2504637   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2504638   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 +
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 +
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2504639   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2504640   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2504641   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2504642   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 *
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 +
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2504643   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2504644   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2504645   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2504646   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 +
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2504647   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2504648   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2504649   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2504650   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 +
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2504651   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2504652   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2504653   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2504654   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 +
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2504655   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2504656   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2504657   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2504658   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 *
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 +
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2504659   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2504660   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2504661   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2504662   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 +
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2504663   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2504664   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2504665   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2504666   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 +
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 +
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2504667   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2504668   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2504669   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2504670   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 +
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2504671   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2504672   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2504673   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2504674   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 +
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2504675   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2504676   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2504677   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2504678   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 +
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2504679   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2504680   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2504681   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2504682   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 +
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2504683   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2504684   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2504685   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2504686   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 +
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2504687   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2504688   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2504689   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2504690   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2504691   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2504692   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2504693   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2504694   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2504695   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
2504696   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2504697   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2504698   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2504699   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2504700   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2504701   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2504702   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2504703   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2504704   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2504705   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2504706   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2504707   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2504708   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2504709   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2504710   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2504711   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2504712   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2504713   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2504714   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2504715   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2504716   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2504717   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2504718   +END;
MPRINT(EM_DIAGRAM):   END;
2504719   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2504720   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2504721   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2504722   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2504723   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2504724   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2504725   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2504726   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2504727   +END;
MPRINT(EM_DIAGRAM):   END;
2504728   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504729   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2504730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504731   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2504732   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2504733   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2504734   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2504735   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 +
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 +
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2504736   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2504737   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2504738   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2504739   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 +
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 +
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2504740   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2504741   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2504742   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2504743   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 +
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 +
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2504744   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2504745   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2504746   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2504747   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 +
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 +
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2504748   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2504749   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2504750   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2504751   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 +
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 +
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2504752   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2504753   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2504754   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2504755   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 +
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 +
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2504756   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2504757   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2504758   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2504759   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 *
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 +
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2504760   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2504761   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2504762   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2504763   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 +
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2504764   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2504765   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2504766   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2504767   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 +
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2504768   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2504769   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2504770   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2504771   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 +
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2504772   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2504773   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2504774   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2504775   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 +
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2504776   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2504777   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2504778   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2504779   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 +
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2504780   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2504781   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2504782   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2504783   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 +
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 +
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2504784   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2504785   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2504786   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2504787   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 *
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 +
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2504788   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2504789   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2504790   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2504791   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 *
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 +
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2504792   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2504793   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2504794   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2504795   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 +
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2504796   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2504797   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2504798   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2504799   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 *
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 +
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2504800   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2504801   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2504802   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2504803   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 +
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2504804   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2504805   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2504806   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2504807   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2504808   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2504809   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2504810   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2504811   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2504812   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 ,
H2x2_7 );
2504813   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2504814   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2504815   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2504816   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2504817   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2504818   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2504819   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2504820   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2504821   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2504822   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2504823   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2504824   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2504825   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2504826   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2504827   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2504828   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2504829   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2504830   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2504831   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2504832   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2504833   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2504834   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2504835   +END;
MPRINT(EM_DIAGRAM):   END;
2504836   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2504837   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2504838   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2504839   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2504840   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2504841   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2504842   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2504843   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2504844   +END;
MPRINT(EM_DIAGRAM):   END;
2504845   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504846   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2504847   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504848   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2504849   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2504850   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2504851   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2504852   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 +
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 +
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2504853   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2504854   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2504855   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2504856   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 +
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 +
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2504857   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2504858   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2504859   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2504860   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 +
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 +
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2504861   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2504862   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2504863   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2504864   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 +
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 +
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2504865   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2504866   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2504867   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2504868   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 +
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 +
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2504869   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2504870   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2504871   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2504872   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 +
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 +
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2504873   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2504874   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2504875   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2504876   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 +
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 +
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2504877   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2504878   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2504879   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2504880   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 +
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2504881   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2504882   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2504883   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2504884   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 +
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2504885   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2504886   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2504887   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2504888   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 +
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2504889   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2504890   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2504891   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2504892   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 +
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2504893   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2504894   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2504895   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2504896   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 *
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 +
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2504897   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2504898   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2504899   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2504900   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 +
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2504901   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2504902   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2504903   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2504904   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 +
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2504905   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2504906   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2504907   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2504908   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2504909   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2504910   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2504911   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2504912   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2504913   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2504914   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2504915   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2504916   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2504917   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2504918   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2504919   +END;
MPRINT(EM_DIAGRAM):   END;
2504920   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2504921   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2504922   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2504923   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2504924   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2504925   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2504926   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2504927   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2504928   +END;
MPRINT(EM_DIAGRAM):   END;
2504929   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504930   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2504931   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504932   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2504933   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2504934   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2504935   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2504936   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 +
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 +
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2504937   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2504938   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2504939   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2504940   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2504941   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2504942   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2504943   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2504944   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2504945   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2504946   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2504947   +END;
MPRINT(EM_DIAGRAM):   END;
2504948   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2504949   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2504950   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2504951   +END;
MPRINT(EM_DIAGRAM):   END;
2504952   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2504953   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2504954   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2504955   +END;
MPRINT(EM_DIAGRAM):   END;
2504956   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504957   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2504958   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504959   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2504960   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2504961   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2504962   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2504963   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2504964   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2504965   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2504966   +END;
MPRINT(EM_DIAGRAM):   END;
2504967   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2504968   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2504969   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2504970   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2504971    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2504972    quit;
2504973    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2504974    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2504975    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2504976    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
2504977    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2504978    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16616 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16616 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2504979    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2504980    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504981    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16616 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16616 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2504982    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME
CREATOR);
2504983    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504984    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504985    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2504986    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2504987    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2504988    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504989    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
2504990    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2504991    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2504992    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504993    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 95 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504994    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2504995    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2504996    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504997    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 95 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 95 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2504998    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2504999    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2504999  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 8011 rows and 5 columns.
 
2505000    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2505001    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2505002    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 8011 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 8011 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505003    filename _pref
2505003  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2505004    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2505005    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2505006   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2505007   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2505008   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2505009   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2505010   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2505011   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2505012    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2505013    quit;
2505014    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2505015    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2505016    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2505017    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2505018    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2505019    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505020    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2505021    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2505022    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2505023    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2505024    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2505025    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505026    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2505027    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2505028    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2505029    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.00 seconds
 
 
2505030    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2505031    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2505032    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2505033    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2505034    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505035    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2505036    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2505037    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2505038    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2505039    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2505040    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2505040  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2505041    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505042    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2505043    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 8015 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505044    filename _pref
2505044  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2505045    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2505046    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2505047   +
2505048   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2505049   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2505049  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2505050   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2505051   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2505052   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2505053   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2505054   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2505055    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2505056    quit;
2505057    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2505058    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2505059    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2505060    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2505061    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2505062    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505063    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2505064    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2505065    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505066    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2505067    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2505068    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505069    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2505070    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2505071    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2505072    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
2505073    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2505074    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505075    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2505076    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2505077    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505078    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2505079    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2505080    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2505081    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2505082    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2505083    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2505083  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2505084    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505085    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2505086    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 8054 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505087    filename _pref
2505087  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2505088    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2505089    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2505090   +
2505091   +
2505092   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2505093   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2505094   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2505095   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2505096   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2505097   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2505098   +
2505099   +
2505100   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2505101   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2505102   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2505103   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2505104   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2505105   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2505106   +
2505107   +
2505108   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2505109   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2505110   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2505111   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2505112   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2505113   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2505114   +
2505115   +
2505116   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2505117   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2505118   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2505119   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2505120   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2505121   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2505122   +
2505123   +
2505124   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2505125   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2505126   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2505127   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2505128   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2505129   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2505130   +
2505131   +
2505132   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2505133   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2505134   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2505135   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2505136   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2505137   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2505138   +
2505139   +
2505140   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2505141   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2505142   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2505143   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2505144   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2505145   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2505146   +
2505147   +
2505148   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2505149   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2505150   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2505151   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2505152   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2505153   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2505154   +if
2505155   +_FILTERNORM1 not in ( '.')
2505156   + and
2505157   +_FILTERNORM2 not in ( '.')
2505158   + and
2505159   +_FILTERNORM3 not in ( '.')
2505160   + and
2505161   +_FILTERNORM4 not in ( '.')
2505162   + and
2505163   +_FILTERNORM5 not in ( '.')
2505164   + and
2505165   +_FILTERNORM6 not in ( '.')
2505166   + and
2505167   +_FILTERNORM7 not in ( ' ')
2505168   + and
2505169   +_FILTERNORM8 not in ( ' ')
2505170   +and
2505171   +( Dt_Customer ne .)
2505172   +and ( Income ne . and (Income<=107000))
2505173   +and ( Kidhome ne .)
2505174   +and ( MntFishProducts ne .)
2505175   +and ( MntFruits ne .)
2505176   +and ( MntGoldProds ne .)
2505177   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2505178   +and ( MntSweetProducts ne .)
2505179   +and ( MntWines ne .)
2505180   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2505181   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2505182   +and ( NumStorePurchases ne .)
2505183   +and ( NumWebPurchases ne .)
2505184   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2505185   +and ( Recency ne .)
2505186   +and ( Teenhome ne .)
2505187   +and ( Year_Birth ne .)
2505188   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2505189   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2505190   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2505191   +end;
MPRINT(EM_DIAGRAM):   end;
2505192   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2505193   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2505194    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2505195    quit;
2505196    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2505197    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2505198    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2505199    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2505200    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2505201    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2505202    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2505203    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2505204    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505205    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2505206    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2505207    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505208    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2505209    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2505210    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2505211    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505212    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2505213    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2505214    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2505215    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2505216    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505217    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2505218    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2505219    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2505220    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505221    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2505222    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2505222  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2505223    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505224    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2505225    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 8120 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505226    %macro varDept(fcmpdata=,id=);
2505227    %global nobs&id scoreFlag&id;
2505228    %let scoreFlag&id = 0;
2505229    %if &id=1 or ^&fcmpStart %then %do;
2505230    proc sort data=&fcmpdata out=_temp&id nodupkey;
2505231    by NAME;
2505232    where id=&id and LHS in( %let j=1;
2505233    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2505234    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2505235    "&var" %let j = %eval(&j+1);
2505236    %end;
2505237    );
2505238    run;
2505239    %let dsid = %sysfunc(open(_temp&id));
2505240    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2505241    %let dsid = %sysfunc(close(&dsid));
2505242    %if &&nobs&id %then %do;
2505243    %let scoreFlag&id = 1;
2505244    %let fcmpStart = 1;
2505245    %end;
2505246    %else %let fcmpStart = 0;
2505247    %end;
2505248    %else %do;
2505249    proc sort data=&fcmpdata out=_tempid;
2505250    where id=&id;
2505251    by LHS;
2505252    run;
2505253    %let dsid = %sysfunc(open(_tempid));
2505254    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2505255    %let dsid = %sysfunc(close(&dsid));
2505256    %if ^&&nobs&id %then %do;
2505257    proc datasets lib=work nolist;
2505258    delete _tempid;
2505259    run;
2505260    quit;
2505261    %end;
2505262    %else %do;
2505263    data _tempAll;
2505264    set %let j=%eval(&id-1);
2505265    %do x=1 %to &j;
2505266    %if &&nobs&x %then %do;
2505267    _temp&x %end;
2505268    %end;
2505269    ;
2505270    run;
2505271    proc sql;
2505272    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2505272  ! work._tempid p2 where p.name=p2.lhs;
2505273    quit;
2505274    data _temp&id;
2505275    set _temp&id;
2505276    where LHS ne '' and NAME ne '' and Node ne '';
2505277    run;
2505278    proc datasets lib=work nolist;
2505279    delete _tempAll;
2505280    run;
2505281    %let dsid = %sysfunc(open(_temp&id));
2505282    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2505283    %let dsid = %sysfunc(close(&dsid));
2505284    %if ^&&nobs&id %then %do;
2505285    proc datasets lib=work nolist;
2505286    delete _temp&id;
2505287    run;
2505288    quit;
2505289    %end;
2505290    %else %do;
2505291    %let scoreFlag&id = 1;
2505292    data _temp&id;
2505293    set _temp&id;
2505294    where LHS ne NAME and node ne '';
2505295    run;
2505296    %let dsid = %sysfunc(open(_temp&id));
2505297    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2505298    %let dsid = %sysfunc(close(&dsid));
2505299    %if ^&&nobs&id %then %do;
2505300    proc datasets lib=work nolist;
2505301    delete _temp&id;
2505302    run;
2505303    quit;
2505304    %end;
2505305    %else %do;
2505306    proc sort data=_temp&id nodupkey;
2505307    by LHS NAME;
2505308    run;
2505309    %end;
2505310    %end;
2505311    %end;
2505312    %end;
2505313    %mend varDept;
2505314    %macro optCode(outdata=fcmpdata);
2505315    %global fcmpStart;
2505316    %let fcmpStart = 0;
2505317    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2505318    %let NumNodes=9;
2505319    %do k=1 %to &NumNodes;
2505320    %vardept(fcmpdata=&outdata, id=&k);
2505321    %end;
2505322    %mend optCode;
2505323    %optcode(outData=EMWS8.Ensmbl47_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 260 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 184 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 76 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 76 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 80 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 119 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2505324    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2505325    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2505326    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2505327    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505328    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2505329    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2505330    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2505331    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2505332    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2505333    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2505333  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2505334    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2505335    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2505336    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2505337    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505338    filename _pref
2505338  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
2505339    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2505340    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
2505341   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2505342   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2505343   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2505344   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2505345   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2505346   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2505347   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2505348   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2505349   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2505350   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2505351   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2505352   +LENGTH _WARN_ $4
2505353   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2505354   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2505355   +
2505356   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2505357   +
2505358   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2505359   +
2505360   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2505361   +
2505362   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2505363   +
2505364   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2505365   +
2505366   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2505367   +
2505368   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2505369   +
2505370   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2505371   +
2505372   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2505373   +
2505374   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2505375   +
2505376   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2505377   +
2505378   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2505379   +
2505380   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2505381   +
2505382   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2505383   +
2505384   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2505385   +
2505386   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2505387   +
2505388   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2505389   +
2505390   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2505391   +
2505392   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2505393   +
2505394   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2505395   +
2505396   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2505397   +
2505398   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2505399   +
2505400   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2505401   +
2505402   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2505403   +
2505404   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2505405   +
2505406   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2505407   +
2505408   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2505409   +
2505410   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2505411   +
2505412   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2505413   +
2505414   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2505415   +
2505416   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2505417   +
2505418   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2505419   +
2505420   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2505421   +
2505422   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2505423   +
2505424   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2505425   +
2505426   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2505427   +
2505428   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2505429   +
2505430   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2505431   +
2505432   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2505433   +
2505434   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2505435   +
2505436   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2505437   +
2505438   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2505439   +
2505440   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2505441   +
2505442   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2505443   +
2505444   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2505445   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2505446   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2505447   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2505448   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2505449   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505450   +end;
MPRINT(EM_DIAGRAM):   end;
2505451   +else do;
MPRINT(EM_DIAGRAM):   else do;
2505452   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2505453   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2505454   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2505455   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2505456   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2505457   +   end;
MPRINT(EM_DIAGRAM):   end;
2505458   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2505459   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2505460   +   end;
MPRINT(EM_DIAGRAM):   end;
2505461   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2505462   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2505463   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2505464   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505465   +   end;
MPRINT(EM_DIAGRAM):   end;
2505466   +end;
MPRINT(EM_DIAGRAM):   end;
2505467   +
2505468   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2505469   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2505470   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2505471   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2505472   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2505473   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505474   +end;
MPRINT(EM_DIAGRAM):   end;
2505475   +else do;
MPRINT(EM_DIAGRAM):   else do;
2505476   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2505477   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2505478   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2505479   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2505480   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2505481   +   end;
MPRINT(EM_DIAGRAM):   end;
2505482   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2505483   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2505484   +   end;
MPRINT(EM_DIAGRAM):   end;
2505485   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2505486   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2505487   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2505488   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505489   +   end;
MPRINT(EM_DIAGRAM):   end;
2505490   +end;
MPRINT(EM_DIAGRAM):   end;
2505491   +
2505492   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2505493   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2505494   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2505495   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2505496   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2505497   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505498   +end;
MPRINT(EM_DIAGRAM):   end;
2505499   +else do;
MPRINT(EM_DIAGRAM):   else do;
2505500   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2505501   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2505502   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2505503   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2505504   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2505505   +   end;
MPRINT(EM_DIAGRAM):   end;
2505506   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2505507   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2505508   +   end;
MPRINT(EM_DIAGRAM):   end;
2505509   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2505510   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2505511   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2505512   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505513   +   end;
MPRINT(EM_DIAGRAM):   end;
2505514   +end;
MPRINT(EM_DIAGRAM):   end;
2505515   +
2505516   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2505517   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2505518   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2505519   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2505520   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2505521   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505522   +end;
MPRINT(EM_DIAGRAM):   end;
2505523   +else do;
MPRINT(EM_DIAGRAM):   else do;
2505524   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2505525   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2505526   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2505527   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2505528   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2505529   +   end;
MPRINT(EM_DIAGRAM):   end;
2505530   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2505531   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2505532   +   end;
MPRINT(EM_DIAGRAM):   end;
2505533   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2505534   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2505535   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2505536   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505537   +   end;
MPRINT(EM_DIAGRAM):   end;
2505538   +end;
MPRINT(EM_DIAGRAM):   end;
2505539   +
2505540   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2505541   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2505542   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2505543   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2505544   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2505545   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505546   +end;
MPRINT(EM_DIAGRAM):   end;
2505547   +else do;
MPRINT(EM_DIAGRAM):   else do;
2505548   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2505549   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2505550   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2505551   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2505552   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2505553   +   end;
MPRINT(EM_DIAGRAM):   end;
2505554   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2505555   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2505556   +   end;
MPRINT(EM_DIAGRAM):   end;
2505557   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2505558   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2505559   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2505560   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505561   +   end;
MPRINT(EM_DIAGRAM):   end;
2505562   +end;
MPRINT(EM_DIAGRAM):   end;
2505563   +
2505564   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2505565   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2505566   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2505567   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2505568   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2505569   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505570   +end;
MPRINT(EM_DIAGRAM):   end;
2505571   +else do;
MPRINT(EM_DIAGRAM):   else do;
2505572   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2505573   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2505574   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2505575   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2505576   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2505577   +   end;
MPRINT(EM_DIAGRAM):   end;
2505578   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2505579   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2505580   +   end;
MPRINT(EM_DIAGRAM):   end;
2505581   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2505582   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2505583   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2505584   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505585   +   end;
MPRINT(EM_DIAGRAM):   end;
2505586   +end;
MPRINT(EM_DIAGRAM):   end;
2505587   +
2505588   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2505589   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2505590   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2505591   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2505592   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2505593   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505594   +end;
MPRINT(EM_DIAGRAM):   end;
2505595   +else do;
MPRINT(EM_DIAGRAM):   else do;
2505596   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2505597   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2505598   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2505599   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2505600   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2505601   +   end;
MPRINT(EM_DIAGRAM):   end;
2505602   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2505603   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2505604   +   end;
MPRINT(EM_DIAGRAM):   end;
2505605   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2505606   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2505607   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2505608   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505609   +   end;
MPRINT(EM_DIAGRAM):   end;
2505610   +end;
MPRINT(EM_DIAGRAM):   end;
2505611   +
2505612   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2505613   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2505614   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2505615   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2505616   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2505617   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2505618   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2505619   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2505620   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2505621   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2505622   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2505623   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2505624   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2505625   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505626   +end;
MPRINT(EM_DIAGRAM):   end;
2505627   +else do;
MPRINT(EM_DIAGRAM):   else do;
2505628   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2505629   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2505630   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2505631   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2505632   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2505633   +   end;
MPRINT(EM_DIAGRAM):   end;
2505634   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2505635   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2505636   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2505637   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2505638   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2505639   +   end;
MPRINT(EM_DIAGRAM):   end;
2505640   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2505641   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2505642   +   end;
MPRINT(EM_DIAGRAM):   end;
2505643   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2505644   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2505645   +   end;
MPRINT(EM_DIAGRAM):   end;
2505646   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2505647   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2505648   +   end;
MPRINT(EM_DIAGRAM):   end;
2505649   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2505650   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2505651   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2505652   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2505653   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2505654   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2505655   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505656   +   end;
MPRINT(EM_DIAGRAM):   end;
2505657   +end;
MPRINT(EM_DIAGRAM):   end;
2505658   +
2505659   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2505660   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2505661   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2505662   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2505663   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2505664   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2505665   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2505666   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2505667   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2505668   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2505669   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2505670   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2505671   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2505672   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2505673   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505674   +end;
MPRINT(EM_DIAGRAM):   end;
2505675   +else do;
MPRINT(EM_DIAGRAM):   else do;
2505676   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2505677   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2505678   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2505679   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2505680   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2505681   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2505682   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2505683   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2505684   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2505685   +         end;
MPRINT(EM_DIAGRAM):   end;
2505686   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2505687   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2505688   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2505689   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2505690   +            end;
MPRINT(EM_DIAGRAM):   end;
2505691   +         end;
MPRINT(EM_DIAGRAM):   end;
2505692   +      end;
MPRINT(EM_DIAGRAM):   end;
2505693   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2505694   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2505695   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2505696   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2505697   +         end;
MPRINT(EM_DIAGRAM):   end;
2505698   +      end;
MPRINT(EM_DIAGRAM):   end;
2505699   +   end;
MPRINT(EM_DIAGRAM):   end;
2505700   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2505701   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2505702   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2505703   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2505704   +      end;
MPRINT(EM_DIAGRAM):   end;
2505705   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2505706   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2505707   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2505708   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2505709   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2505710   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2505711   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2505712   +         end;
MPRINT(EM_DIAGRAM):   end;
2505713   +      end;
MPRINT(EM_DIAGRAM):   end;
2505714   +   end;
MPRINT(EM_DIAGRAM):   end;
2505715   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2505716   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2505717   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2505718   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2505719   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2505720   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2505721   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505722   +   end;
MPRINT(EM_DIAGRAM):   end;
2505723   +end;
MPRINT(EM_DIAGRAM):   end;
2505724   +
2505725   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505726   +*** Checking missing input Interval
2505727   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2505728   +
2505729   +IF NMISS(
2505730   +   AcceptedCmpTotal ,
2505731   +   Age ,
2505732   +   Frq ,
2505733   +   Income ,
2505734   +   Kidhome ,
2505735   +   Mnt ,
2505736   +   MntFishProducts ,
2505737   +   MntFruits ,
2505738   +   MntGoldProds ,
2505739   +   MntMeatProducts ,
2505740   +   MntSweetProducts ,
2505741   +   MntWines ,
2505742   +   MonthsAsCustomer ,
2505743   +   NumCatalogPurchases ,
2505744   +   NumDealsPurchases ,
2505745   +   NumDistPurchases ,
2505746   +   NumStorePurchases ,
2505747   +   NumWebPurchases ,
2505748   +   NumWebVisitsMonth ,
2505749   +   RFMstat ,
2505750   +   RMntFrq ,
2505751   +   Recency ,
2505752   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2505753   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2505754   +
2505755   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505756   +END;
MPRINT(EM_DIAGRAM):   END;
2505757   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505758   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2505759   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505760   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2505761   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2505762   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2505763   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2505764   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2505765   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2505766   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2505767   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2505768   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2505769   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2505770   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2505771   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2505772   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2505773   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2505774   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2505775   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2505776   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2505777   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2505778   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2505779   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2505780   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2505781   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2505782   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2505783   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2505784   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2505785   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2505786   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2505787   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2505788   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2505789   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2505790   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2505791   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2505792   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2505793   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2505794   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2505795   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2505796   +END;
MPRINT(EM_DIAGRAM):   END;
2505797   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2505798   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2505799   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2505800   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2505801   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2505802   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2505803   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2505804   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2505805   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2505806   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2505807   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2505808   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2505809   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2505810   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2505811   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2505812   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2505813   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2505814   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2505815   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2505816   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2505817   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2505818   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2505819   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2505820   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2505821   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2505822   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2505823   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2505824   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2505825   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2505826   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2505827   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2505828   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2505829   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2505830   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2505831   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2505832   +   ELSE S_NumCatalogPurchases
2505833   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2505834   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2505835   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2505836   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2505837   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2505838   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2505839   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2505840   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2505841   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2505842   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2505843   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2505844   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2505845   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2505846   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2505847   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2505848   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2505849   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2505850   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2505851   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2505852   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2505853   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2505854   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2505855   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2505856   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2505857   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2505858   +END;
MPRINT(EM_DIAGRAM):   END;
2505859   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505860   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2505861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505863   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2505864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505866   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2505867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505868   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2505869   +   H1x1_1  =     0.27051750628107 * S_AcceptedCmpTotal
2505870   +          +    -0.01552488999587 * S_Age  +    -0.19918933236131 * S_Frq
2505871   +          +    -0.18053367989037 * S_Income  +     0.17934470816975 *
2505872   +        S_Kidhome  +    -0.27914859130186 * S_Mnt  +    -0.05331142159606 *
2505873   +        S_MntFishProducts  +    -0.03730503814111 * S_MntFruits
2505874   +          +     0.01217897476566 * S_MntGoldProds  +       0.241005967683 *
2505875   +        S_MntMeatProducts  +    -0.02873172523867 * S_MntSweetProducts
2505876   +          +    -0.35773732926132 * S_MntWines  +    -0.00800625524539 *
2505877   +        S_MonthsAsCustomer  +     0.14253720708201 * S_NumCatalogPurchases
2505878   +          +     0.09634439105648 * S_NumDealsPurchases
2505879   +          +     -0.2727389064287 * S_NumDistPurchases
2505880   +          +    -0.14179871978162 * S_NumStorePurchases
2505881   +          +     0.11008049559527 * S_NumWebPurchases
2505882   +          +    -0.16791463027749 * S_NumWebVisitsMonth
2505883   +          +     0.12827091331546 * S_RFMstat  +    -0.05819422771336 *
2505884   +        S_RMntFrq  +     0.17192522504917 * S_Recency
2505885   +          +     0.13379709932247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27051750628107 * S_AcceptedCmpTotal + -0.01552488999587 *
S_Age + -0.19918933236131 * S_Frq + -0.18053367989037 * S_Income + 0.17934470816975 *
S_Kidhome + -0.27914859130186 * S_Mnt + -0.05331142159606 * S_MntFishProducts +
-0.03730503814111 * S_MntFruits + 0.01217897476566 * S_MntGoldProds + 0.241005967683 *
S_MntMeatProducts + -0.02873172523867 * S_MntSweetProducts + -0.35773732926132 * S_MntWines +
-0.00800625524539 * S_MonthsAsCustomer + 0.14253720708201 * S_NumCatalogPurchases +
0.09634439105648 * S_NumDealsPurchases + -0.2727389064287 * S_NumDistPurchases +
-0.14179871978162 * S_NumStorePurchases + 0.11008049559527 * S_NumWebPurchases +
-0.16791463027749 * S_NumWebVisitsMonth + 0.12827091331546 * S_RFMstat + -0.05819422771336 *
S_RMntFrq + 0.17192522504917 * S_Recency + 0.13379709932247 * S_Teenhome ;
2505886   +   H1x1_2  =      0.2625003002792 * S_AcceptedCmpTotal
2505887   +          +    -0.00409648963127 * S_Age  +    -0.08422560024107 * S_Frq
2505888   +          +      0.1678148652095 * S_Income  +      -0.122580580609 *
2505889   +        S_Kidhome  +    -0.41368311141801 * S_Mnt  +     -0.0649787838725 *
2505890   +        S_MntFishProducts  +    -0.06363287766971 * S_MntFruits
2505891   +          +     0.00810850196464 * S_MntGoldProds  +      0.2984971941271 *
2505892   +        S_MntMeatProducts  +     -0.0651075315757 * S_MntSweetProducts
2505893   +          +    -0.42717799596572 * S_MntWines  +    -0.00945771129633 *
2505894   +        S_MonthsAsCustomer  +     0.33346839008681 * S_NumCatalogPurchases
2505895   +          +     0.15835936877168 * S_NumDealsPurchases
2505896   +          +     0.04229992769587 * S_NumDistPurchases
2505897   +          +    -0.04051362547639 * S_NumStorePurchases
2505898   +          +    -0.01791546488406 * S_NumWebPurchases
2505899   +          +     0.28833008597045 * S_NumWebVisitsMonth
2505900   +          +     0.08007709098478 * S_RFMstat  +     0.37677948418886 *
2505901   +        S_RMntFrq  +    -0.32542265112765 * S_Recency
2505902   +          +    -0.10763248273834 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2625003002792 * S_AcceptedCmpTotal + -0.00409648963127 *
S_Age + -0.08422560024107 * S_Frq + 0.1678148652095 * S_Income + -0.122580580609 * S_Kidhome +
-0.41368311141801 * S_Mnt + -0.0649787838725 * S_MntFishProducts + -0.06363287766971 *
S_MntFruits + 0.00810850196464 * S_MntGoldProds + 0.2984971941271 * S_MntMeatProducts +
-0.0651075315757 * S_MntSweetProducts + -0.42717799596572 * S_MntWines + -0.00945771129633 *
S_MonthsAsCustomer + 0.33346839008681 * S_NumCatalogPurchases + 0.15835936877168 *
S_NumDealsPurchases + 0.04229992769587 * S_NumDistPurchases + -0.04051362547639 *
S_NumStorePurchases + -0.01791546488406 * S_NumWebPurchases + 0.28833008597045 *
S_NumWebVisitsMonth + 0.08007709098478 * S_RFMstat + 0.37677948418886 * S_RMntFrq +
-0.32542265112765 * S_Recency + -0.10763248273834 * S_Teenhome ;
2505903   +   H1x1_1  = H1x1_1  +     0.17927888078386 * AcceptedCmp10
2505904   +          +       0.309097592234 * AcceptedCmp20  +     0.30005706470617 *
2505905   +        AcceptedCmp30  +     0.30534843193785 * AcceptedCmp40
2505906   +          +     0.19575142296602 * AcceptedCmp50  +    -0.26930325741881 *
2505907   +        Complain0  +    -0.07193220591551 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.17927888078386 * AcceptedCmp10 + 0.309097592234 *
AcceptedCmp20 + 0.30005706470617 * AcceptedCmp30 + 0.30534843193785 * AcceptedCmp40 +
0.19575142296602 * AcceptedCmp50 + -0.26930325741881 * Complain0 + -0.07193220591551 *
HigherEducationBinary0 ;
2505908   +   H1x1_2  = H1x1_2  +     0.01282806481889 * AcceptedCmp10
2505909   +          +     0.01542710847454 * AcceptedCmp20  +     0.03576476827309 *
2505910   +        AcceptedCmp30  +     0.04230610697529 * AcceptedCmp40
2505911   +          +     0.03405078302469 * AcceptedCmp50  +     0.13002166919554 *
2505912   +        Complain0  +    -0.08203696285033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.01282806481889 * AcceptedCmp10 + 0.01542710847454 *
AcceptedCmp20 + 0.03576476827309 * AcceptedCmp30 + 0.04230610697529 * AcceptedCmp40 +
0.03405078302469 * AcceptedCmp50 + 0.13002166919554 * Complain0 + -0.08203696285033 *
HigherEducationBinary0 ;
2505913   +   H1x1_1  = H1x1_1  +    -0.04471063478028 * Education2n_Cycle
2505914   +          +     0.15571809437849 * EducationBasic  +    -0.00113978624206 *
2505915   +        EducationGraduation  +     0.00750750981266 * EducationMaster
2505916   +          +     -0.0504367274898 * Marital_StatusDivorced
2505917   +          +     0.28345714390306 * Marital_StatusMarried
2505918   +          +     -0.2012923780435 * Marital_StatusSingle
2505919   +          +     0.20022167903492 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04471063478028 * Education2n_Cycle +
0.15571809437849 * EducationBasic + -0.00113978624206 * EducationGraduation + 0.00750750981266
* EducationMaster + -0.0504367274898 * Marital_StatusDivorced + 0.28345714390306 *
Marital_StatusMarried + -0.2012923780435 * Marital_StatusSingle + 0.20022167903492 *
Marital_StatusTogether ;
2505920   +   H1x1_2  = H1x1_2  +     0.12691361812265 * Education2n_Cycle
2505921   +          +       0.003205191831 * EducationBasic  +    -0.04323354449955 *
2505922   +        EducationGraduation  +    -0.06699429239126 * EducationMaster
2505923   +          +     0.06828937261262 * Marital_StatusDivorced
2505924   +          +     -0.1520862543536 * Marital_StatusMarried
2505925   +          +      0.1392808464716 * Marital_StatusSingle
2505926   +          +    -0.12406922875482 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12691361812265 * Education2n_Cycle + 0.003205191831
* EducationBasic + -0.04323354449955 * EducationGraduation + -0.06699429239126 *
EducationMaster + 0.06828937261262 * Marital_StatusDivorced + -0.1520862543536 *
Marital_StatusMarried + 0.1392808464716 * Marital_StatusSingle + -0.12406922875482 *
Marital_StatusTogether ;
2505927   +   H1x1_1  =     0.89722634972069 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.89722634972069 + H1x1_1 ;
2505928   +   H1x1_2  =     -0.5979471913364 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5979471913364 + H1x1_2 ;
2505929   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2505930   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2505931   +END;
MPRINT(EM_DIAGRAM):   END;
2505932   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2505933   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2505934   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2505935   +END;
MPRINT(EM_DIAGRAM):   END;
2505936   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505937   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2505938   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505939   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2505940   +   P_DepVar1  =     -11.533020189097 * H1x1_1  +     17.2320065402955 * H1x1_2
2505941   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.533020189097 * H1x1_1 + 17.2320065402955 * H1x1_2 ;
2505942   +   P_DepVar1  =     2.37722840752042 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.37722840752042 + P_DepVar1 ;
2505943   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2505944   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2505945   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2505946   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2505947   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2505948   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2505949   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2505950   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2505951   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2505952   +END;
MPRINT(EM_DIAGRAM):   END;
2505953   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2505954   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2505955   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2505956   +END;
MPRINT(EM_DIAGRAM):   END;
2505957   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2505958   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2505959   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2505960   +END;
MPRINT(EM_DIAGRAM):   END;
2505961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505962   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2505963   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505964   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2505965   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2505966   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2505967   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2505968   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2505969   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2505970   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2505971   +END;
MPRINT(EM_DIAGRAM):   END;
2505972   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2505973   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2505974   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2505975   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2505976    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2505977    quit;
2505978    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2505979    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2505980    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2505981    retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
2505982    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2505983    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2505984    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2505985    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2505986    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505987    proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME
CREATOR);
2505988    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2505989    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505990    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2505991    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2505992    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2505993    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505994    proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
2505995    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2505996    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2505997    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2505998    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505999    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2506000    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2506001    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506002    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506003    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2506004    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2506004  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1359 rows and 5 columns.
 
2506005    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2506006    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2506007    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1359 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1359 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506008    filename _pref
2506008  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2506009    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2506010    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2506011   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2506012   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2506013   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2506014   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2506015   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2506016   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2506017    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2506018    quit;
2506019    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2506020    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2506021    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2506022    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2506023    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2506024    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506025    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2506026    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506027    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506028    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2506029    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506030    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506031    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2506032    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2506033    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2506034    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506035    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2506036    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2506037    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2506038    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506039    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2506040    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2506041    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2506042    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506043    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506044    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2506045    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2506045  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2506046    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506047    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2506048    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1363 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2506049    filename _pref
2506049  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2506050    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2506051    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2506052   +
2506053   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2506054   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2506054  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2506055   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2506056   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2506057   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2506058   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2506059   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2506060    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2506061    quit;
2506062    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2506063    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2506064    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2506065    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2506066    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2506067    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2506068    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2506069    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506070    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506071    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2506072    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506073    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506074    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2506075    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2506076    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2506077    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506078    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2506079    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506080    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2506081    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506082    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2506083    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2506084    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2506085    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506086    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506087    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2506088    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2506088  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2506089    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506090    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2506091    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1402 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2506092    filename _pref
2506092  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2506093    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2506094    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2506095   +
2506096   +
2506097   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2506098   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2506099   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2506100   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2506101   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2506102   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2506103   +
2506104   +
2506105   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2506106   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2506107   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2506108   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2506109   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2506110   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2506111   +
2506112   +
2506113   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2506114   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2506115   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2506116   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2506117   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2506118   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2506119   +
2506120   +
2506121   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2506122   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2506123   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2506124   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2506125   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2506126   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2506127   +
2506128   +
2506129   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2506130   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2506131   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2506132   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2506133   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2506134   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2506135   +
2506136   +
2506137   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2506138   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2506139   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2506140   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2506141   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2506142   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2506143   +
2506144   +
2506145   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2506146   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2506147   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2506148   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2506149   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2506150   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2506151   +
2506152   +
2506153   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2506154   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2506155   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2506156   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2506157   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2506158   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2506159   +if
2506160   +_FILTERNORM1 not in ( '.')
2506161   + and
2506162   +_FILTERNORM2 not in ( '.')
2506163   + and
2506164   +_FILTERNORM3 not in ( '.')
2506165   + and
2506166   +_FILTERNORM4 not in ( '.')
2506167   + and
2506168   +_FILTERNORM5 not in ( '.')
2506169   + and
2506170   +_FILTERNORM6 not in ( '.')
2506171   + and
2506172   +_FILTERNORM7 not in ( ' ')
2506173   + and
2506174   +_FILTERNORM8 not in ( ' ')
2506175   +and
2506176   +( Dt_Customer ne .)
2506177   +and ( Income ne . and (Income<=107000))
2506178   +and ( Kidhome ne .)
2506179   +and ( MntFishProducts ne .)
2506180   +and ( MntFruits ne .)
2506181   +and ( MntGoldProds ne .)
2506182   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2506183   +and ( MntSweetProducts ne .)
2506184   +and ( MntWines ne .)
2506185   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2506186   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2506187   +and ( NumStorePurchases ne .)
2506188   +and ( NumWebPurchases ne .)
2506189   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2506190   +and ( Recency ne .)
2506191   +and ( Teenhome ne .)
2506192   +and ( Year_Birth ne .)
2506193   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2506194   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2506195   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2506196   +end;
MPRINT(EM_DIAGRAM):   end;
2506197   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2506198   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2506199    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2506200    quit;
2506201    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2506202    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2506203    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2506204    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2506205    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2506206    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506207    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2506208    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506209    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506210    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2506211    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506212    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506213    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2506214    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2506215    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2506216    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506217    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2506218    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
 
 
2506219    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2506220    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506221    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506222    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2506223    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2506224    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506225    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2506226    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2506227    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2506227  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2506228    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506229    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2506230    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1468 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506231    %macro varDept(fcmpdata=,id=);
2506232    %global nobs&id scoreFlag&id;
2506233    %let scoreFlag&id = 0;
2506234    %if &id=1 or ^&fcmpStart %then %do;
2506235    proc sort data=&fcmpdata out=_temp&id nodupkey;
2506236    by NAME;
2506237    where id=&id and LHS in( %let j=1;
2506238    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2506239    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2506240    "&var" %let j = %eval(&j+1);
2506241    %end;
2506242    );
2506243    run;
2506244    %let dsid = %sysfunc(open(_temp&id));
2506245    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2506246    %let dsid = %sysfunc(close(&dsid));
2506247    %if &&nobs&id %then %do;
2506248    %let scoreFlag&id = 1;
2506249    %let fcmpStart = 1;
2506250    %end;
2506251    %else %let fcmpStart = 0;
2506252    %end;
2506253    %else %do;
2506254    proc sort data=&fcmpdata out=_tempid;
2506255    where id=&id;
2506256    by LHS;
2506257    run;
2506258    %let dsid = %sysfunc(open(_tempid));
2506259    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2506260    %let dsid = %sysfunc(close(&dsid));
2506261    %if ^&&nobs&id %then %do;
2506262    proc datasets lib=work nolist;
2506263    delete _tempid;
2506264    run;
2506265    quit;
2506266    %end;
2506267    %else %do;
2506268    data _tempAll;
2506269    set %let j=%eval(&id-1);
2506270    %do x=1 %to &j;
2506271    %if &&nobs&x %then %do;
2506272    _temp&x %end;
2506273    %end;
2506274    ;
2506275    run;
2506276    proc sql;
2506277    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2506277  ! work._tempid p2 where p.name=p2.lhs;
2506278    quit;
2506279    data _temp&id;
2506280    set _temp&id;
2506281    where LHS ne '' and NAME ne '' and Node ne '';
2506282    run;
2506283    proc datasets lib=work nolist;
2506284    delete _tempAll;
2506285    run;
2506286    %let dsid = %sysfunc(open(_temp&id));
2506287    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2506288    %let dsid = %sysfunc(close(&dsid));
2506289    %if ^&&nobs&id %then %do;
2506290    proc datasets lib=work nolist;
2506291    delete _temp&id;
2506292    run;
2506293    quit;
2506294    %end;
2506295    %else %do;
2506296    %let scoreFlag&id = 1;
2506297    data _temp&id;
2506298    set _temp&id;
2506299    where LHS ne NAME and node ne '';
2506300    run;
2506301    %let dsid = %sysfunc(open(_temp&id));
2506302    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2506303    %let dsid = %sysfunc(close(&dsid));
2506304    %if ^&&nobs&id %then %do;
2506305    proc datasets lib=work nolist;
2506306    delete _temp&id;
2506307    run;
2506308    quit;
2506309    %end;
2506310    %else %do;
2506311    proc sort data=_temp&id nodupkey;
2506312    by LHS NAME;
2506313    run;
2506314    %end;
2506315    %end;
2506316    %end;
2506317    %end;
2506318    %mend varDept;
2506319    %macro optCode(outdata=fcmpdata);
2506320    %global fcmpStart;
2506321    %let fcmpStart = 0;
2506322    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2506323    %let NumNodes=9;
2506324    %do k=1 %to &NumNodes;
2506325    %vardept(fcmpdata=&outdata, id=&k);
2506326    %end;
2506327    %mend optCode;
2506328    %optcode(outData=EMWS8.Ensmbl47_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 140 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 104 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 36 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 79 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2506329    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2506330    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2506331    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2506332    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2506333    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2506334    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2506335    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2506336    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506337    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2506338    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2506338  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2506339    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2506340    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2506341    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2506342    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506343    filename _pref
2506343  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
2506344    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2506345    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas.
2506346   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2506347   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2506348   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2506349   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2506350   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2506351   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2506352   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2506353   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2506354   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2506355   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2506356   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2506357   +LENGTH _WARN_ $4
2506358   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2506359   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2506360   +
2506361   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2506362   +
2506363   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2506364   +
2506365   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2506366   +
2506367   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2506368   +
2506369   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2506370   +
2506371   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2506372   +
2506373   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2506374   +
2506375   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2506376   +
2506377   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2506378   +
2506379   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2506380   +
2506381   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2506382   +
2506383   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2506384   +
2506385   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2506386   +
2506387   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2506388   +
2506389   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2506390   +
2506391   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2506392   +
2506393   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2506394   +
2506395   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2506396   +
2506397   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2506398   +
2506399   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2506400   +
2506401   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2506402   +
2506403   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2506404   +
2506405   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2506406   +
2506407   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2506408   +
2506409   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2506410   +
2506411   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2506412   +
2506413   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2506414   +
2506415   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2506416   +
2506417   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2506418   +
2506419   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2506420   +
2506421   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2506422   +
2506423   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2506424   +
2506425   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2506426   +
2506427   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2506428   +
2506429   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2506430   +
2506431   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2506432   +
2506433   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2506434   +
2506435   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2506436   +
2506437   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2506438   +
2506439   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2506440   +
2506441   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2506442   +
2506443   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2506444   +
2506445   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2506446   +
2506447   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2506448   +
2506449   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2506450   +
2506451   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2506452   +
2506453   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2506454   +
2506455   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2506456   +
2506457   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2506458   +
2506459   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2506460   +
2506461   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2506462   +
2506463   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2506464   +
2506465   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2506466   +
2506467   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2506468   +
2506469   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2506470   +
2506471   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2506472   +
2506473   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2506474   +
2506475   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2506476   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2506477   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2506478   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2506479   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2506480   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506481   +end;
MPRINT(EM_DIAGRAM):   end;
2506482   +else do;
MPRINT(EM_DIAGRAM):   else do;
2506483   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2506484   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2506485   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2506486   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2506487   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2506488   +   end;
MPRINT(EM_DIAGRAM):   end;
2506489   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2506490   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2506491   +   end;
MPRINT(EM_DIAGRAM):   end;
2506492   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2506493   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2506494   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2506495   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506496   +   end;
MPRINT(EM_DIAGRAM):   end;
2506497   +end;
MPRINT(EM_DIAGRAM):   end;
2506498   +
2506499   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2506500   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2506501   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2506502   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2506503   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2506504   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506505   +end;
MPRINT(EM_DIAGRAM):   end;
2506506   +else do;
MPRINT(EM_DIAGRAM):   else do;
2506507   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2506508   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2506509   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2506510   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2506511   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2506512   +   end;
MPRINT(EM_DIAGRAM):   end;
2506513   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2506514   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2506515   +   end;
MPRINT(EM_DIAGRAM):   end;
2506516   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2506517   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2506518   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2506519   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506520   +   end;
MPRINT(EM_DIAGRAM):   end;
2506521   +end;
MPRINT(EM_DIAGRAM):   end;
2506522   +
2506523   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2506524   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2506525   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2506526   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2506527   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2506528   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506529   +end;
MPRINT(EM_DIAGRAM):   end;
2506530   +else do;
MPRINT(EM_DIAGRAM):   else do;
2506531   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2506532   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2506533   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2506534   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2506535   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2506536   +   end;
MPRINT(EM_DIAGRAM):   end;
2506537   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2506538   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2506539   +   end;
MPRINT(EM_DIAGRAM):   end;
2506540   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2506541   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2506542   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2506543   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506544   +   end;
MPRINT(EM_DIAGRAM):   end;
2506545   +end;
MPRINT(EM_DIAGRAM):   end;
2506546   +
2506547   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2506548   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2506549   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2506550   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2506551   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2506552   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506553   +end;
MPRINT(EM_DIAGRAM):   end;
2506554   +else do;
MPRINT(EM_DIAGRAM):   else do;
2506555   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2506556   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2506557   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2506558   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2506559   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2506560   +   end;
MPRINT(EM_DIAGRAM):   end;
2506561   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2506562   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2506563   +   end;
MPRINT(EM_DIAGRAM):   end;
2506564   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2506565   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2506566   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2506567   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506568   +   end;
MPRINT(EM_DIAGRAM):   end;
2506569   +end;
MPRINT(EM_DIAGRAM):   end;
2506570   +
2506571   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2506572   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2506573   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2506574   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2506575   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2506576   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506577   +end;
MPRINT(EM_DIAGRAM):   end;
2506578   +else do;
MPRINT(EM_DIAGRAM):   else do;
2506579   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2506580   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2506581   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2506582   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2506583   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2506584   +   end;
MPRINT(EM_DIAGRAM):   end;
2506585   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2506586   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2506587   +   end;
MPRINT(EM_DIAGRAM):   end;
2506588   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2506589   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2506590   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2506591   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506592   +   end;
MPRINT(EM_DIAGRAM):   end;
2506593   +end;
MPRINT(EM_DIAGRAM):   end;
2506594   +
2506595   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2506596   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2506597   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2506598   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2506599   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2506600   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506601   +end;
MPRINT(EM_DIAGRAM):   end;
2506602   +else do;
MPRINT(EM_DIAGRAM):   else do;
2506603   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2506604   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2506605   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2506606   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2506607   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2506608   +   end;
MPRINT(EM_DIAGRAM):   end;
2506609   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2506610   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2506611   +   end;
MPRINT(EM_DIAGRAM):   end;
2506612   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2506613   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2506614   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2506615   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506616   +   end;
MPRINT(EM_DIAGRAM):   end;
2506617   +end;
MPRINT(EM_DIAGRAM):   end;
2506618   +
2506619   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2506620   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2506621   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2506622   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2506623   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2506624   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506625   +end;
MPRINT(EM_DIAGRAM):   end;
2506626   +else do;
MPRINT(EM_DIAGRAM):   else do;
2506627   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2506628   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2506629   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2506630   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2506631   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2506632   +   end;
MPRINT(EM_DIAGRAM):   end;
2506633   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2506634   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2506635   +   end;
MPRINT(EM_DIAGRAM):   end;
2506636   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2506637   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2506638   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2506639   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506640   +   end;
MPRINT(EM_DIAGRAM):   end;
2506641   +end;
MPRINT(EM_DIAGRAM):   end;
2506642   +
2506643   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2506644   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2506645   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2506646   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2506647   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2506648   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2506649   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2506650   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2506651   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2506652   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2506653   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2506654   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2506655   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2506656   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506657   +end;
MPRINT(EM_DIAGRAM):   end;
2506658   +else do;
MPRINT(EM_DIAGRAM):   else do;
2506659   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2506660   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2506661   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2506662   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2506663   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2506664   +   end;
MPRINT(EM_DIAGRAM):   end;
2506665   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2506666   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2506667   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2506668   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2506669   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2506670   +   end;
MPRINT(EM_DIAGRAM):   end;
2506671   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2506672   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2506673   +   end;
MPRINT(EM_DIAGRAM):   end;
2506674   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2506675   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2506676   +   end;
MPRINT(EM_DIAGRAM):   end;
2506677   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2506678   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2506679   +   end;
MPRINT(EM_DIAGRAM):   end;
2506680   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2506681   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2506682   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2506683   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2506684   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2506685   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2506686   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506687   +   end;
MPRINT(EM_DIAGRAM):   end;
2506688   +end;
MPRINT(EM_DIAGRAM):   end;
2506689   +
2506690   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2506691   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2506692   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2506693   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2506694   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2506695   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2506696   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2506697   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2506698   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2506699   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2506700   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2506701   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2506702   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2506703   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2506704   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506705   +end;
MPRINT(EM_DIAGRAM):   end;
2506706   +else do;
MPRINT(EM_DIAGRAM):   else do;
2506707   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2506708   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2506709   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2506710   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2506711   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2506712   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2506713   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2506714   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2506715   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2506716   +         end;
MPRINT(EM_DIAGRAM):   end;
2506717   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2506718   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2506719   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2506720   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2506721   +            end;
MPRINT(EM_DIAGRAM):   end;
2506722   +         end;
MPRINT(EM_DIAGRAM):   end;
2506723   +      end;
MPRINT(EM_DIAGRAM):   end;
2506724   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2506725   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2506726   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2506727   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2506728   +         end;
MPRINT(EM_DIAGRAM):   end;
2506729   +      end;
MPRINT(EM_DIAGRAM):   end;
2506730   +   end;
MPRINT(EM_DIAGRAM):   end;
2506731   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2506732   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2506733   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2506734   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2506735   +      end;
MPRINT(EM_DIAGRAM):   end;
2506736   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2506737   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2506738   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2506739   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2506740   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2506741   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2506742   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2506743   +         end;
MPRINT(EM_DIAGRAM):   end;
2506744   +      end;
MPRINT(EM_DIAGRAM):   end;
2506745   +   end;
MPRINT(EM_DIAGRAM):   end;
2506746   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2506747   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2506748   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2506749   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2506750   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2506751   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2506752   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506753   +   end;
MPRINT(EM_DIAGRAM):   end;
2506754   +end;
MPRINT(EM_DIAGRAM):   end;
2506755   +
2506756   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2506757   +*** Checking missing input Interval
2506758   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2506759   +
2506760   +IF NMISS(
2506761   +   AcceptedCmpTotal ,
2506762   +   Age ,
2506763   +   Frq ,
2506764   +   Income ,
2506765   +   Kidhome ,
2506766   +   Mnt ,
2506767   +   MntFishProducts ,
2506768   +   MntFruits ,
2506769   +   MntGoldProds ,
2506770   +   MntMeatProducts ,
2506771   +   MntSweetProducts ,
2506772   +   MntWines ,
2506773   +   MonthsAsCustomer ,
2506774   +   NumCatalogPurchases ,
2506775   +   NumDealsPurchases ,
2506776   +   NumDistPurchases ,
2506777   +   NumStorePurchases ,
2506778   +   NumWebPurchases ,
2506779   +   NumWebVisitsMonth ,
2506780   +   RFMstat ,
2506781   +   RMntFrq ,
2506782   +   Recency ,
2506783   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2506784   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2506785   +
2506786   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506787   +END;
MPRINT(EM_DIAGRAM):   END;
2506788   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2506789   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2506790   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2506791   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2506792   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2506793   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2506794   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2506795   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2506796   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2506797   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2506798   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2506799   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2506800   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2506801   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2506802   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2506803   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2506804   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2506805   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2506806   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2506807   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2506808   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2506809   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2506810   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2506811   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2506812   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2506813   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2506814   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2506815   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2506816   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2506817   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2506818   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2506819   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2506820   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2506821   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2506822   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2506823   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2506824   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2506825   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2506826   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2506827   +END;
MPRINT(EM_DIAGRAM):   END;
2506828   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2506829   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2506830   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2506831   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2506832   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2506833   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2506834   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2506835   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2506836   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2506837   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2506838   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2506839   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2506840   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2506841   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2506842   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2506843   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2506844   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2506845   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2506846   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2506847   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2506848   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2506849   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2506850   +        MntGoldProds ;
The SAS System
 
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2506851   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2506852   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2506853   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2506854   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2506855   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2506856   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2506857   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2506858   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2506859   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2506860   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2506861   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2506862   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2506863   +   ELSE S_NumCatalogPurchases
2506864   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2506865   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2506866   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2506867   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2506868   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2506869   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2506870   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2506871   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2506872   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2506873   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2506874   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2506875   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2506876   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2506877   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2506878   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2506879   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2506880   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2506881   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2506882   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2506883   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2506884   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2506885   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2506886   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2506887   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2506888   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2506889   +END;
MPRINT(EM_DIAGRAM):   END;
2506890   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2506891   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2506892   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2506893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2506894   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2506895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2506896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2506897   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2506898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2506899   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2506900   +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
2506901   +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
2506902   +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
2506903   +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
2506904   +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
2506905   +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
2506906   +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
2506907   +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
2506908   +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
2506909   +          +      3.4758215776031 * S_NumDealsPurchases
2506910   +          +     0.17094021755289 * S_NumDistPurchases
2506911   +          +    -2.72090095694641 * S_NumStorePurchases
2506912   +          +    -0.31877935826328 * S_NumWebPurchases
2506913   +          +    -2.03399974412918 * S_NumWebVisitsMonth
2506914   +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
2506915   +        S_RMntFrq  +     0.29064555076615 * S_Recency
2506916   +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 *
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 *
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts +
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 *
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 *
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 *
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 *
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq +
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
2506917   +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
2506918   +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
2506919   +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
2506920   +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
2506921   +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
2506922   +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
2506923   +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
2506924   +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
2506925   +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
2506926   +          +    -1.21013804197082 * S_NumDealsPurchases
2506927   +          +     0.59974279122188 * S_NumDistPurchases
2506928   +          +     1.92425710681156 * S_NumStorePurchases
2506929   +          +     1.02413182452324 * S_NumWebPurchases
2506930   +          +    -3.63276285340174 * S_NumWebVisitsMonth
2506931   +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
2506932   +        S_RMntFrq  +     3.87352563099005 * S_Recency
2506933   +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 *
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 *
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts +
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 *
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 *
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 *
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 *
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq +
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
2506934   +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
2506935   +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
2506936   +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
2506937   +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
2506938   +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
2506939   +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
2506940   +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
2506941   +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
2506942   +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
2506943   +          +      0.4928343071801 * S_NumDealsPurchases
2506944   +          +     -0.0196677325409 * S_NumDistPurchases
2506945   +          +     0.44395828164873 * S_NumStorePurchases
2506946   +          +     0.86947051591224 * S_NumWebPurchases
2506947   +          +    -0.96787241206077 * S_NumWebVisitsMonth
2506948   +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
2506949   +        S_RMntFrq  +     0.24582117217188 * S_Recency
2506950   +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 *
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 *
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts +
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 *
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 *
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 *
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 *
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq +
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
2506951   +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
2506952   +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
2506953   +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
2506954   +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
2506955   +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
2506956   +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
2506957   +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
2506958   +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
2506959   +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
2506960   +          +     1.10280977051932 * S_NumDealsPurchases
2506961   +          +     0.99310057404036 * S_NumDistPurchases
2506962   +          +    -0.05647459609331 * S_NumStorePurchases
2506963   +          +    -0.89852483938631 * S_NumWebPurchases
2506964   +          +     2.63022480227445 * S_NumWebVisitsMonth
2506965   +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
2506966   +        S_RMntFrq  +    -4.46436997560659 * S_Recency
2506967   +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 *
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 *
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts +
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 *
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 *
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 *
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 *
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq +
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
2506968   +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
2506969   +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
2506970   +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
2506971   +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
2506972   +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
2506973   +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
2506974   +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
2506975   +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
2506976   +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
2506977   +          +    -2.62220616180571 * S_NumDealsPurchases
2506978   +          +    -0.51737930835331 * S_NumDistPurchases
2506979   +          +     0.88655783158133 * S_NumStorePurchases
2506980   +          +     0.35132468809969 * S_NumWebPurchases
2506981   +          +     -1.6320869675862 * S_NumWebVisitsMonth
2506982   +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
2506983   +        S_RMntFrq  +     1.06226028677401 * S_Recency
2506984   +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 *
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 *
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts +
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 *
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 *
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 *
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 *
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq +
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
2506985   +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
2506986   +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
2506987   +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
2506988   +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
2506989   +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 *
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 +
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 *
HigherEducationBinary0 ;
2506990   +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
2506991   +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
2506992   +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
2506993   +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
2506994   +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 *
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 +
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 *
HigherEducationBinary0 ;
2506995   +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
2506996   +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
2506997   +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
2506998   +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
2506999   +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 *
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 +
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 *
HigherEducationBinary0 ;
2507000   +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
2507001   +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
2507002   +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
2507003   +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
2507004   +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 +
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 *
HigherEducationBinary0 ;
2507005   +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
2507006   +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
2507007   +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
2507008   +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
2507009   +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 *
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 +
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 *
HigherEducationBinary0 ;
2507010   +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
2507011   +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
2507012   +        EducationGraduation  +     1.42539292513854 * EducationMaster
2507013   +          +     0.34809919741136 * Marital_StatusDivorced
2507014   +          +    -0.26594093535929 * Marital_StatusMarried
2507015   +          +     0.70249715999987 * Marital_StatusSingle
2507016   +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle +
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 *
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 *
Marital_StatusTogether ;
2507017   +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
2507018   +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
2507019   +        EducationGraduation  +    -0.28204692640004 * EducationMaster
2507020   +          +    -0.20448765627193 * Marital_StatusDivorced
2507021   +          +     1.73231344674733 * Marital_StatusMarried
2507022   +          +    -0.70956480480373 * Marital_StatusSingle
2507023   +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle +
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 *
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 *
Marital_StatusTogether ;
2507024   +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
2507025   +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
2507026   +        EducationGraduation  +     1.01284161768787 * EducationMaster
2507027   +          +     0.30333818684353 * Marital_StatusDivorced
2507028   +          +    -1.44603535988199 * Marital_StatusMarried
2507029   +          +     0.48409598426383 * Marital_StatusSingle
2507030   +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle +
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation +
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced +
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle +
-1.14528682521622 * Marital_StatusTogether ;
2507031   +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
2507032   +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
2507033   +        EducationGraduation  +    -1.17735200022013 * EducationMaster
2507034   +          +     -1.5342907846297 * Marital_StatusDivorced
2507035   +          +    -1.79544684592172 * Marital_StatusMarried
2507036   +          +     0.65604313645117 * Marital_StatusSingle
2507037   +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle +
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 *
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 *
Marital_StatusTogether ;
2507038   +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
2507039   +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
2507040   +        EducationGraduation  +     0.09618331198762 * EducationMaster
2507041   +          +    -3.97940893560267 * Marital_StatusDivorced
2507042   +          +      3.5880254142663 * Marital_StatusMarried
2507043   +          +     -2.9897737730927 * Marital_StatusSingle
2507044   +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle +
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 *
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 *
Marital_StatusTogether ;
2507045   +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
2507046   +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
2507047   +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
2507048   +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
2507049   +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
2507050   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2507051   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2507052   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2507053   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2507054   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2507055   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2507056   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2507057   +END;
MPRINT(EM_DIAGRAM):   END;
2507058   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2507059   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2507060   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2507061   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2507062   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2507063   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2507064   +END;
MPRINT(EM_DIAGRAM):   END;
2507065   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507066   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2507067   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507068   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2507069   +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
2507070   +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
2507071   +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
2507072   +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
2507073   +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
2507074   +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
2507075   +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
2507076   +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
2507077   +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
2507078   +          +     0.07279889333775 * S_NumDealsPurchases
2507079   +          +     0.07542203992452 * S_NumDistPurchases
2507080   +          +     0.16296239303342 * S_NumStorePurchases
2507081   +          +     1.59193921229231 * S_NumWebPurchases
2507082   +          +    -0.35227839362603 * S_NumWebVisitsMonth
2507083   +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
2507084   +        S_RMntFrq  +     0.43315770276588 * S_Recency
2507085   +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 *
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 *
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts +
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 *
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines +
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases +
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases +
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases +
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 *
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
2507086   +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
2507087   +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
2507088   +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
2507089   +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
2507090   +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
2507091   +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
2507092   +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
2507093   +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
2507094   +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
2507095   +          +    -0.37456959251084 * S_NumDealsPurchases
2507096   +          +    -1.15252469975668 * S_NumDistPurchases
2507097   +          +    -1.39822501888899 * S_NumStorePurchases
2507098   +          +    -0.32777847360723 * S_NumWebPurchases
2507099   +          +     0.84026499832926 * S_NumWebVisitsMonth
2507100   +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
2507101   +        S_RMntFrq  +     1.21016626691186 * S_Recency
2507102   +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 *
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 *
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts +
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 *
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 *
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 *
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 *
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq +
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
2507103   +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
2507104   +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
2507105   +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
2507106   +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
2507107   +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
2507108   +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
2507109   +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
2507110   +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
2507111   +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
2507112   +          +     1.14090099538367 * S_NumDealsPurchases
2507113   +          +     -0.2600155774492 * S_NumDistPurchases
2507114   +          +     1.31362002392113 * S_NumStorePurchases
2507115   +          +     1.31465307763555 * S_NumWebPurchases
2507116   +          +    -0.18041623858351 * S_NumWebVisitsMonth
2507117   +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
2507118   +        S_RMntFrq  +    -0.81910738140729 * S_Recency
2507119   +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 *
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 *
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts +
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 *
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 *
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 *
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 *
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq +
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
2507120   +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
2507121   +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
2507122   +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
2507123   +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
2507124   +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
2507125   +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
2507126   +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
2507127   +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
2507128   +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
2507129   +          +     1.06486073796679 * S_NumDealsPurchases
2507130   +          +    -0.04890191247577 * S_NumDistPurchases
2507131   +          +     0.86871320720698 * S_NumStorePurchases
2507132   +          +     0.03183587281884 * S_NumWebPurchases
2507133   +          +     -0.4863802923315 * S_NumWebVisitsMonth
2507134   +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
2507135   +        S_RMntFrq  +     0.17186861211542 * S_Recency
2507136   +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 *
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 *
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts +
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 *
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 *
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 *
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 *
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq +
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
2507137   +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
2507138   +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
2507139   +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
2507140   +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
2507141   +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
2507142   +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
2507143   +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
2507144   +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
2507145   +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
2507146   +          +    -0.01160267590349 * S_NumDealsPurchases
2507147   +          +    -0.92773075463083 * S_NumDistPurchases
2507148   +          +    -0.83326680533995 * S_NumStorePurchases
2507149   +          +    -1.16991058954473 * S_NumWebPurchases
2507150   +          +    -2.07771165573723 * S_NumWebVisitsMonth
2507151   +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
2507152   +        S_RMntFrq  +     0.80165981122986 * S_Recency
2507153   +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 *
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 *
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts +
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 *
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 *
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 *
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 *
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq +
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
2507154   +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
2507155   +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
2507156   +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
2507157   +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
2507158   +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 *
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 +
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 *
HigherEducationBinary0 ;
2507159   +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
2507160   +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
2507161   +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
2507162   +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
2507163   +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 +
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 *
HigherEducationBinary0 ;
2507164   +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
2507165   +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
2507166   +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
2507167   +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
2507168   +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 *
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 +
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 *
HigherEducationBinary0 ;
2507169   +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
2507170   +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
2507171   +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
2507172   +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
2507173   +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 +
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 *
HigherEducationBinary0 ;
2507174   +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
2507175   +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
2507176   +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
2507177   +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
2507178   +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 *
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 +
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 *
HigherEducationBinary0 ;
2507179   +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
2507180   +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
2507181   +        EducationGraduation  +    -0.22397098444024 * EducationMaster
2507182   +          +    -0.10361472385198 * Marital_StatusDivorced
2507183   +          +     0.05574820877885 * Marital_StatusMarried
2507184   +          +     0.13130988205279 * Marital_StatusSingle
2507185   +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle +
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 *
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 *
Marital_StatusTogether ;
2507186   +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
2507187   +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
2507188   +        EducationGraduation  +     1.44983505587452 * EducationMaster
2507189   +          +      0.0059353523794 * Marital_StatusDivorced
2507190   +          +    -0.59379435051653 * Marital_StatusMarried
2507191   +          +    -1.93587108708999 * Marital_StatusSingle
2507192   +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle +
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 *
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 *
Marital_StatusTogether ;
2507193   +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
2507194   +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
2507195   +        EducationGraduation  +     0.16497026569775 * EducationMaster
2507196   +          +    -0.74333797840386 * Marital_StatusDivorced
2507197   +          +    -0.93061135117658 * Marital_StatusMarried
2507198   +          +     1.04024182655844 * Marital_StatusSingle
2507199   +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle +
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 *
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 *
Marital_StatusTogether ;
2507200   +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
2507201   +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
2507202   +        EducationGraduation  +     1.71196178631559 * EducationMaster
2507203   +          +    -3.01050675344463 * Marital_StatusDivorced
2507204   +          +      0.1638723582239 * Marital_StatusMarried
2507205   +          +     0.94548468360304 * Marital_StatusSingle
2507206   +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle +
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 *
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 *
Marital_StatusTogether ;
2507207   +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
2507208   +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
2507209   +        EducationGraduation  +     0.57450456442662 * EducationMaster
2507210   +          +    -1.37013926274158 * Marital_StatusDivorced
2507211   +          +    -0.34168970042779 * Marital_StatusMarried
2507212   +          +     0.63383683543962 * Marital_StatusSingle
2507213   +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle +
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 *
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 *
Marital_StatusTogether ;
2507214   +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
2507215   +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
2507216   +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
2507217   +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
2507218   +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
2507219   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2507220   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2507221   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2507222   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2507223   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2507224   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2507225   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2507226   +END;
MPRINT(EM_DIAGRAM):   END;
2507227   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2507228   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2507229   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2507230   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2507231   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2507232   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2507233   +END;
MPRINT(EM_DIAGRAM):   END;
2507234   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507235   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2507236   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507237   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2507238   +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
2507239   +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
2507240   +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 +
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
2507241   +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
2507242   +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
2507243   +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 +
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
2507244   +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
2507245   +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
2507246   +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 +
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
2507247   +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
2507248   +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
2507249   +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 +
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
2507250   +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
2507251   +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
2507252   +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 +
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
2507253   +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
2507254   +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
2507255   +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
2507256   +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
2507257   +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
2507258   +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
2507259   +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
2507260   +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
2507261   +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
2507262   +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
2507263   +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
2507264   +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
2507265   +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
2507266   +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
2507267   +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
2507268   +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
2507269   +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
2507270   +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
2507271   +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
2507272   +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
2507273   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2507274   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2507275   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2507276   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2507277   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2507278   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2507279   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2507280   +END;
MPRINT(EM_DIAGRAM):   END;
2507281   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2507282   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2507283   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2507284   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2507285   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2507286   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2507287   +END;
MPRINT(EM_DIAGRAM):   END;
2507288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507289   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2507290   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507291   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2507292   +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
2507293   +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
2507294   +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 +
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
2507295   +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
2507296   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2507297   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2507298   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2507299   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2507300   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2507301   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2507302   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2507303   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2507304   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2507305   +END;
MPRINT(EM_DIAGRAM):   END;
2507306   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2507307   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2507308   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2507309   +END;
MPRINT(EM_DIAGRAM):   END;
2507310   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2507311   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2507312   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2507313   +END;
MPRINT(EM_DIAGRAM):   END;
2507314   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507315   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2507316   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507317   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2507318   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2507319   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2507320   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2507321   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2507322   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2507323   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2507324   +END;
MPRINT(EM_DIAGRAM):   END;
2507325   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2507326   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2507327   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2507328   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2507329    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2507330    quit;
2507331    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2507332    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2507333    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2507334    retain ID 2 Node "AutoNeural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural10";
2507335    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2507336    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4719 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4719 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507337    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2507338    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507339    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4719 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4719 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507340    proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME
CREATOR);
2507341    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507342    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507343    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2507344    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2507345    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2507346    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507347    proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
2507348    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 68 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2507349    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2507350    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507351    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 68 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 68 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507352    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2507353    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2507354    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507355    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 68 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 68 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507356    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2507357    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2507357  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2479 rows and 5 columns.
 
2507358    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507359    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2507360    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2479 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 2479 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507361    filename _pref
2507361  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2507362    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2507363    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2507364   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2507365   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2507366   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2507367   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2507368   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2507369   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2507370    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2507371    quit;
2507372    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2507373    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2507374    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2507375    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2507376    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2507377    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507378    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2507379    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507380    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507381    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2507382    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507383    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507384    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2507385    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2507386    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2507387    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507388    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2507389    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2507390    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2507391    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507392    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507393    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2507394    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2507395    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507396    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507397    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2507398    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2507398  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2507399    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507400    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2507401    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 2483 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507402    filename _pref
2507402  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2507403    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2507404    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2507405   +
2507406   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2507407   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2507407  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2507408   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2507409   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2507410   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2507411   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2507412   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2507413    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2507414    quit;
2507415    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2507416    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2507417    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2507418    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2507419    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2507420    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507421    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2507422    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507423    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507424    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2507425    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507426    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507427    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2507428    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2507429    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2507430    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507431    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2507432    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507433    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2507434    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507435    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507436    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2507437    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2507438    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507439    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507440    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2507441    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2507441  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2507442    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507443    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2507444    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 2522 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507445    filename _pref
2507445  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2507446    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2507447    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2507448   +
2507449   +
2507450   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2507451   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2507452   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2507453   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2507454   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2507455   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2507456   +
2507457   +
2507458   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2507459   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2507460   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2507461   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2507462   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2507463   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2507464   +
2507465   +
2507466   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2507467   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2507468   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2507469   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2507470   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2507471   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2507472   +
2507473   +
2507474   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2507475   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2507476   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2507477   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2507478   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2507479   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2507480   +
2507481   +
2507482   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2507483   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2507484   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2507485   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2507486   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2507487   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2507488   +
2507489   +
2507490   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2507491   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2507492   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2507493   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2507494   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2507495   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2507496   +
2507497   +
2507498   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2507499   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2507500   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2507501   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2507502   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2507503   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2507504   +
2507505   +
2507506   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2507507   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2507508   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2507509   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2507510   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2507511   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2507512   +if
2507513   +_FILTERNORM1 not in ( '.')
2507514   + and
2507515   +_FILTERNORM2 not in ( '.')
2507516   + and
2507517   +_FILTERNORM3 not in ( '.')
2507518   + and
2507519   +_FILTERNORM4 not in ( '.')
2507520   + and
2507521   +_FILTERNORM5 not in ( '.')
2507522   + and
2507523   +_FILTERNORM6 not in ( '.')
2507524   + and
2507525   +_FILTERNORM7 not in ( ' ')
2507526   + and
2507527   +_FILTERNORM8 not in ( ' ')
2507528   +and
2507529   +( Dt_Customer ne .)
2507530   +and ( Income ne . and (Income<=107000))
2507531   +and ( Kidhome ne .)
2507532   +and ( MntFishProducts ne .)
2507533   +and ( MntFruits ne .)
2507534   +and ( MntGoldProds ne .)
2507535   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2507536   +and ( MntSweetProducts ne .)
2507537   +and ( MntWines ne .)
2507538   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2507539   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2507540   +and ( NumStorePurchases ne .)
2507541   +and ( NumWebPurchases ne .)
2507542   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2507543   +and ( Recency ne .)
2507544   +and ( Teenhome ne .)
2507545   +and ( Year_Birth ne .)
2507546   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2507547   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2507548   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2507549   +end;
MPRINT(EM_DIAGRAM):   end;
2507550   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2507551   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2507552    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2507553    quit;
2507554    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2507555    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2507556    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2507557    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2507558    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2507559    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507560    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2507561    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507562    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507563    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2507564    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507565    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507566    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2507567    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2507568    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2507569    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507570    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2507571    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2507572    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2507573    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507574    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507575    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2507576    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2507577    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507578    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507579    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2507580    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2507580  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2507581    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507582    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2507583    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 2588 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507584    %macro varDept(fcmpdata=,id=);
2507585    %global nobs&id scoreFlag&id;
2507586    %let scoreFlag&id = 0;
2507587    %if &id=1 or ^&fcmpStart %then %do;
2507588    proc sort data=&fcmpdata out=_temp&id nodupkey;
2507589    by NAME;
2507590    where id=&id and LHS in( %let j=1;
2507591    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2507592    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2507593    "&var" %let j = %eval(&j+1);
2507594    %end;
2507595    );
2507596    run;
2507597    %let dsid = %sysfunc(open(_temp&id));
2507598    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2507599    %let dsid = %sysfunc(close(&dsid));
2507600    %if &&nobs&id %then %do;
2507601    %let scoreFlag&id = 1;
2507602    %let fcmpStart = 1;
2507603    %end;
2507604    %else %let fcmpStart = 0;
2507605    %end;
2507606    %else %do;
2507607    proc sort data=&fcmpdata out=_tempid;
2507608    where id=&id;
2507609    by LHS;
2507610    run;
2507611    %let dsid = %sysfunc(open(_tempid));
2507612    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2507613    %let dsid = %sysfunc(close(&dsid));
2507614    %if ^&&nobs&id %then %do;
2507615    proc datasets lib=work nolist;
2507616    delete _tempid;
2507617    run;
2507618    quit;
2507619    %end;
2507620    %else %do;
2507621    data _tempAll;
2507622    set %let j=%eval(&id-1);
2507623    %do x=1 %to &j;
2507624    %if &&nobs&x %then %do;
2507625    _temp&x %end;
2507626    %end;
2507627    ;
2507628    run;
2507629    proc sql;
2507630    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2507630  ! work._tempid p2 where p.name=p2.lhs;
2507631    quit;
2507632    data _temp&id;
2507633    set _temp&id;
2507634    where LHS ne '' and NAME ne '' and Node ne '';
2507635    run;
2507636    proc datasets lib=work nolist;
2507637    delete _tempAll;
2507638    run;
2507639    %let dsid = %sysfunc(open(_temp&id));
2507640    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2507641    %let dsid = %sysfunc(close(&dsid));
2507642    %if ^&&nobs&id %then %do;
2507643    proc datasets lib=work nolist;
2507644    delete _temp&id;
2507645    run;
2507646    quit;
2507647    %end;
2507648    %else %do;
2507649    %let scoreFlag&id = 1;
2507650    data _temp&id;
2507651    set _temp&id;
2507652    where LHS ne NAME and node ne '';
2507653    run;
2507654    %let dsid = %sysfunc(open(_temp&id));
2507655    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2507656    %let dsid = %sysfunc(close(&dsid));
2507657    %if ^&&nobs&id %then %do;
2507658    proc datasets lib=work nolist;
2507659    delete _temp&id;
2507660    run;
2507661    quit;
2507662    %end;
2507663    %else %do;
2507664    proc sort data=_temp&id nodupkey;
2507665    by LHS NAME;
2507666    run;
2507667    %end;
2507668    %end;
2507669    %end;
2507670    %end;
2507671    %mend varDept;
2507672    %macro optCode(outdata=fcmpdata);
2507673    %global fcmpStart;
2507674    %let fcmpStart = 0;
2507675    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2507676    %let NumNodes=9;
2507677    %do k=1 %to &NumNodes;
2507678    %vardept(fcmpdata=&outdata, id=&k);
2507679    %end;
2507680    %mend optCode;
2507681    %optcode(outData=EMWS8.Ensmbl47_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 179 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 130 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 49 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 49 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 49 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 49 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 53 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 49 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 92 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2507682    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2507683    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2507684    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2507685    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507686    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2507687    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2507688    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2507689    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507690    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2507691    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2507691  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2507692    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2507693    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2507694    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2507695    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507696    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2507697    * Ensmbl47: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Computing metadata for TRAIN data;
2507698    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL47_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl47_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl47_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl47_TRAIN out=WORK.M1SEH910 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1SEH910;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1SEH910(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1SEH910;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1SEH910;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1ZAJB6L NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1ZAJB6L;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1ZAJB6L;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3BEDJU1(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1ZAJB6L;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1ZAJB6L;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1ZAJB6L;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1ZAJB6L;
MPRINT(EMADVISECOLUMNS):   set WORK.M1ZAJB6L;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl47";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl47";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2508018    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2508019    set EMWS8.Ensmbl47_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMINFO;
2508020    where DATA='Ensmbl47' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl47' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
2508021    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_EMINFO.
      WHERE (DATA='Ensmbl47') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508022    data EMWS8.Ensmbl47_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl47_EMINFO;
2508023    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2508024    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2508025    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL47_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2508029    run;
2508030    data EMWS8.Ensmbl47_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMINFO;
2508031    set EMWS8.Ensmbl47_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMINFO WORK.MODELTEMP_INFO;
2508032    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL47_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL47_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508033    proc sort data = EMWS8.Ensmbl47_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl47_EMINFO NOTHREADS;
2508034    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2508035    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL47_EMINFO.
NOTE: The data set EMWS8.ENSMBL47_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508036    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO
NOTHREADS;
2508037    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2508038    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508039    proc sort data = EMWS8.Ensmbl47_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl47_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2508040    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2508041    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL47_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508042    data EMWS8.Ensmbl47_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMINFO;
2508043    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2508044    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2508045    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL47_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508046    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2508047    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2508048    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2508049    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.ENSMBL47_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL47_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.06 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                21. April 2016
Time:                19.06 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2JVH21B
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2JVH21B new;
MPRINT(EM_DIAGRAM):   run;
2508073    data EMWS8.Ensmbl47_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl47_EMOUTFIT;
2508074    set EMWS8.Ensmbl47_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMOUTFIT;
2508075    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2508076    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
2508076  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2508077    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2508078    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL47_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL47_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508079    proc sort data=EMWS8.Ensmbl47_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl47_EMREPORTFIT nothreads;
2508080    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2508081    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL47_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL47_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508082    %let _EMwarndup = 0;
2508083    %let _EMtargetdup =;
2508084    %let _EMASEtargetdup =;
2508085    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2508086    set EMWS8.Ensmbl47_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMOUTFIT;
2508087    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2508088    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2508089    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2508090    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2508091    end;
MPRINT(EM_DIAGRAM):   end;
2508092    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL47_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508093    proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=WORK.SUBSETINMETA;
2508094    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2508095    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL9_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 48 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2508096    proc sort data=EMWS8.Ensmbl47_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl47_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
2508097    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2508098    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 38 observations read from the data set EMWS8.ENSMBL47_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 38 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508099    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2508100    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2508101    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2508102    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 38 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 48 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508103    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2508104    set EMWS8.Ensmbl47_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_CMeta_TRAIN;
2508105    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2508105  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2508106    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL47_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508107    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2508108    set EMWS8.Ensmbl47_TRAIN(keep=
2508109    F_DepVar
2508110    I_DepVar
2508111    P_DepVar0
2508112    P_DepVar1
2508113    R_DepVar0
2508114    R_DepVar1
2508115    U_DepVar
2508116    _WARN_
2508117    DepVar
2508118    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2508119    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL47_TRAIN.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.20 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL9_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL47_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl47_0GP8WOA nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl47_0GP8WOA;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl47_0GP8WOA(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl47_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl47_0GP8WOA;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl47_0GP8WOA;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl47_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.000010037 OVLMAX 0.999701694 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2512385    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2512386    set EMWS8.Ensmbl47_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_CMeta_TRAIN;
2512387    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2512387  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2512388    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL47_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2512389    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2512390    set EMWS8.Ensmbl47_VALIDATE(keep=
2512391    F_DepVar
2512392    I_DepVar
2512393    P_DepVar0
2512394    P_DepVar1
2512395    R_DepVar0
2512396    R_DepVar1
2512397    U_DepVar
2512398    _WARN_
2512399    DepVar
2512400    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2512401    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL47_VALIDATE.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL9_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL47_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl47_35QJLSK nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl47_35QJLSK;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl47_35QJLSK(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl47_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMCLASSIFICATION WORK.Ensmbl47_35QJLSK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl47_35QJLSK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl47_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000104331 OVLMAX 0.9997338942 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2516676    %let _cn = %sysfunc(getoption(CENTER));
2516677    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2516678    proc print data=EMWS8.Ensmbl47_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl47_EMREPORTFIT noobs label;
2516679    var STAT LABEL TRAIN
2516680    VALIDATE
2516681    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
2516682    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2516683    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2516684    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2516685    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL47_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1634.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2516686    title10;
MPRINT(EM_DIAGRAM):   title10;
2516687    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2516688    proc sort data=EMWS8.Ensmbl47_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl47_EMCLASSIFICATION nothreads;
2516689    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2516690    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL47_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL47_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2516691    %let _cn = %sysfunc(getoption(CENTER));
2516692    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2516693    proc print data=EMWS8.Ensmbl47_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl47_EMCLASSIFICATION noobs label;
2516694    var from into pct_row pct_col count percent
2516695    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2516696    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2516697    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2516698    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2516699    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2516700    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2516701    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2516702    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2516703    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2516704    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2516705    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2516706    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL47_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1635.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2516707    title9;
MPRINT(EM_DIAGRAM):   title9;
2516708    title10;
MPRINT(EM_DIAGRAM):   title10;
2516709    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2516710    %let _cn = %sysfunc(getoption(CENTER));
2516711    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2516712    data EMWS8.Ensmbl47_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMEVENTREPORT;
2516713    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
2516713  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
2516714    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2516714  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
2516714  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
2516714  ! FALSEEVENT
2516715    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
2516715  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
2516715  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
2516716       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
2516717    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
2516718    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
2516719    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
2516720    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
2516721    set EMWS8.Ensmbl47_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMEVENTREPORT;
2516722    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL47_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL47_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2516723    proc print data=EMWS8.Ensmbl47_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl47_EMEVENTREPORT noobs label;
2516724    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2516725    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
2516726    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
2516727    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL47_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 1636.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2516728    title10;
MPRINT(EM_DIAGRAM):   title10;
2516729    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2516730    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2516731    modify Ensmbl47_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl47_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2516732    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2516733    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2516733  ! ;
MPRINT(EM_DIAGRAM):   run;
2516734    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL47_EMRANK.DATA.
2516735    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
 
2516736    %let _cn = %sysfunc(getoption(CENTER));
2516737    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2516738    proc print data=EMWS8.Ensmbl47_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl47_EMRANK label noobs;
2516739    var
2516740    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2516741    by
2516742    notsorted DATAROLE
2516743    notsorted TARGET
2516744    notsorted TARGETLABEL
2516745    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2516746    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2516747    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2516748    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL47_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1637.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2516749    title10;
MPRINT(EM_DIAGRAM):   title10;
2516750    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2516751    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2516752    modify Ensmbl47_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl47_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2516753    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
2516753  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2516754    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2516754  ! ;
MPRINT(EM_DIAGRAM):   run;
2516755    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL47_EMSCOREDIST.DATA.
2516756    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl47_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
