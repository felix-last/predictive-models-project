*------------------------------------------------------------*
User:                Lukas Fahr
Date:                20. April 2016
Time:                17.40 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.40 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                20. April 2016
Time:                17.40 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1V22GN0
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1V22GN0 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.40 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.40 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[300501] MAX=1 EXCEEDMAXVALUE='' )[300505] )[300499]
VALIDCHOICES=(CHOICE1='Y' )[300503] )[300787] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[300509]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[300513] )[300511] )[300507] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[300517]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[300523] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[300521] )[300519] )[300515] )[300497]
2492357    proc freq data=EMWS8.Ensmbl47_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl47_VariableSet noprint;
2492358    table ROLE*LEVEL/out=WORK.Ensmbl47META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl47META;
2492359    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL47_VARIABLESET.
NOTE: The data set WORK.ENSMBL47META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2492360    proc print data=WORK.Ensmbl47META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl47META label noobs;
2492361    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2492362    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
2492362  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
2492362  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
2492363    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2492364    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2492365    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL47META.
NOTE: The PROCEDURE PRINT printed page 2059.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2492366    title10;
MPRINT(EM_DIAGRAM):   title10;
2492367    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN EMWS8 AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN EMWS8 AutoNeural9_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.AutoNeural9_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural9_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2492396    data WORK.Ensmbl47_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl47_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
2492397    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2492398    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
2492398  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
2492398  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2492399       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
2492399  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
2492399  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2492400    set EMWS8.AUTONEURAL9_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL9_DEPVAR_DM( where=(_TYPE_="TARGET"));
2492401    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2492402    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2492403    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2492404    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2492405    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2492406    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2492407    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2492408    end;
MPRINT(EM_DIAGRAM):   end;
2492409    output;
MPRINT(EM_DIAGRAM):   output;
2492410    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL9_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL47_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2492411    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2492412    proc print data=WORK.Ensmbl47_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl47_EVENT noobs label;
2492413    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2492414    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2492415    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2492416    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL47_EVENT.
NOTE: The PROCEDURE PRINT printed page 2060.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2492417    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2492418    proc print data = EMWS8.AutoNeural9_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural9_DepVar_DM noobs label;
2492419    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2492420    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
2492421    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
2492421  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
2492421  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2492422    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2492423    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2492424    run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL9_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2061.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2492425    title10;
MPRINT(EM_DIAGRAM):   title10;
2492426    %let groupid =;
2492427    %let endGroupid =;
2492428    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2492429    set EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_EMINFO;
2492430    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2492430  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2492431    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2492432    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2492433    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2492434    %let groupid =;
2492435    %let endGroupid =;
2492436    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2492437    set EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO;
2492438    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2492438  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2492439    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2492440    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2492441    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2492442    %let groupid =;
2492443    %let endGroupid =;
2492444    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2492445    set EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMINFO;
2492446    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2492446  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2492447    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2492448    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2492449    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2492450    %let groupid =;
2492451    %let endGroupid =;
2492452    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2492453    set EMWS8.AutoNeural7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_EMINFO;
2492454    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2492454  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2492455    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2492456    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2492457    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2492458    %let groupid =;
2492459    %let endGroupid =;
2492460    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2492461    set EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO;
2492462    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2492462  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2492463    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2492464    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2492465    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2492466    data WORK.Ensmbl47;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl47;
2492467    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
2492468    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
2492468  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
2492469    nodeid="AUTONEURAL9";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL9";
2492470    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2492471    output;
MPRINT(EM_DIAGRAM):   output;
2492472    nodeid="AUTONEURAL11";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL11";
2492473    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2492474    output;
MPRINT(EM_DIAGRAM):   output;
2492475    nodeid="AUTONEURAL12";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL12";
2492476    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2492477    output;
MPRINT(EM_DIAGRAM):   output;
2492478    nodeid="AUTONEURAL7";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL7";
2492479    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2492480    output;
MPRINT(EM_DIAGRAM):   output;
2492481    nodeid="AUTONEURAL10";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL10";
2492482    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2492483    output;
MPRINT(EM_DIAGRAM):   output;
2492484    ;
MPRINT(EM_DIAGRAM):   ;
2492485    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL47 has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2492486    title;
MPRINT(EM_DIAGRAM):   title;
2492487    proc print data=WORK.Ensmbl47 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl47 label noobs;
2492488    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
2492489    title10 "Probability Function: Voting";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Voting";
MPRINT(EM_DIAGRAM):   run;
2492490    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL47.
NOTE: The PROCEDURE PRINT printed page 2062.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2492491    title9;
MPRINT(EM_DIAGRAM):   title9;
2492492    title10;
MPRINT(EM_DIAGRAM):   title10;
2492493    data WORK.M1I9Y1VF;
MPRINT(EM_DIAGRAM):    data WORK.M1I9Y1VF;
2492494    set WORK.M1I9Y1VF;
MPRINT(EM_DIAGRAM):   set WORK.M1I9Y1VF;
2492495    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
2492496    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M1I9Y1VF.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M1I9Y1VF has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2492497    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
2492498    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
2492499    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2492500    %macro DMDBClass;
2492501        DepVar(DESC)
2492502    %mend DMDBClass;
2492503    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2492504    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
2492505    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2492506    %macro DMDBVar;
2492507
2492508    %mend DMDBVar;
2492509    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492510    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
2492511    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492512    proc dmdb batch data=EMWS8.AutoNeural9_TRAIN
2492513    dmdbcat=WORK.EM_DMDB
2492514    maxlevel = 513
2492515    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.AutoNeural9_TRAIN dmdbcat=WORK.EM_DMDB
maxlevel = 513 ;
2492516    class %DMDBClass;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
2492517    target
2492518    DepVar
2492519    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
2492520    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL9_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
2492521    quit;
2492522    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.40 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.40 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0CPS7Y5
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0CPS7Y5 new;
MPRINT(EM_DIAGRAM):   run;
2492624    filename emflow
2492624  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring AUTONEURAL9_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492625    *------------------------------------------------------------*;
2492626    * Ensmbl47: Scoring AUTONEURAL9_TRAIN data;
2492627    *------------------------------------------------------------*;
2492628    data EMWS8.Ensmbl47_TRAIN
2492629    / view=EMWS8.Ensmbl47_TRAIN
2492630    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_TRAIN / view=EMWS8.Ensmbl47_TRAIN ;
2492631    set EMWS8.AutoNeural9_TRAIN
2492632    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_TRAIN ;
2492633    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMFLOWSCORE.sas.
2492634   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492635   +* Ensmbl47: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Combine model for DepVar;
2492636   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492637   +* Ensmbl47: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 1 of 5;
2492638   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492639   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492640   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2492641   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2492642   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2492643   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492644   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492645   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2492646   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2492647   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2492648   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492649   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492650   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2492651   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2492652   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2492653   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492654   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492655   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2492656   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2492657   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2492658   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492659   +
2492660   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2492661   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2492661  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2492662   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2492663   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2492664   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2492665   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2492666   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2492667   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492668   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2492669   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2492670   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2492671   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492672   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492673   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2492674   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492675   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2492676   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2492677   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2492678   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492679   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2492680   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2492681   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2492682   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492683   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492684   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2492685   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2492686   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2492687   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492688   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492689   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2492690   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2492691   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2492692   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2492693   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2492694   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2492695   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2492696   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2492697   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2492698   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2492699   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2492700   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2492701   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2492702   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2492703   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2492704   +LENGTH _WARN_ $4
2492705   +      F_DepVar  $ 12
2492706   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2492707   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2492708   +
2492709   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2492710   +
2492711   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2492712   +
2492713   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2492714   +
2492715   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2492716   +
2492717   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2492718   +
2492719   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2492720   +
2492721   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2492722   +
2492723   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2492724   +
2492725   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2492726   +
2492727   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2492728   +
2492729   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2492730   +
2492731   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2492732   +
2492733   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2492734   +
2492735   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2492736   +
2492737   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2492738   +
2492739   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2492740   +
2492741   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2492742   +
2492743   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2492744   +
2492745   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2492746   +
2492747   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2492748   +
2492749   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2492750   +
2492751   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2492752   +
2492753   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2492754   +
2492755   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2492756   +
2492757   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2492758   +
2492759   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2492760   +
2492761   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2492762   +
2492763   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2492764   +
2492765   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2492766   +
2492767   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2492768   +
2492769   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2492770   +
2492771   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2492772   +
2492773   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2492774   +
2492775   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2492776   +
2492777   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2492778   +
2492779   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2492780   +
2492781   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2492782   +
2492783   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2492784   +
2492785   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2492786   +
2492787   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2492788   +
2492789   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2492790   +
2492791   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2492792   +
2492793   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2492794   +
2492795   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2492796   +
2492797   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2492798   +
2492799   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2492800   +
2492801   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2492802   +
2492803   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2492804   +
2492805   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2492806   +
2492807   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2492808   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2492809   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2492810   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2492811   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2492812   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492813   +end;
MPRINT(EM_DIAGRAM):   end;
2492814   +else do;
MPRINT(EM_DIAGRAM):   else do;
2492815   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2492816   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2492817   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2492818   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2492819   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2492820   +   end;
MPRINT(EM_DIAGRAM):   end;
2492821   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2492822   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2492823   +   end;
MPRINT(EM_DIAGRAM):   end;
2492824   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2492825   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2492826   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2492827   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492828   +   end;
MPRINT(EM_DIAGRAM):   end;
2492829   +end;
MPRINT(EM_DIAGRAM):   end;
2492830   +
2492831   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2492832   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2492833   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2492834   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2492835   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2492836   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492837   +end;
MPRINT(EM_DIAGRAM):   end;
2492838   +else do;
MPRINT(EM_DIAGRAM):   else do;
2492839   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2492840   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2492841   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2492842   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2492843   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2492844   +   end;
MPRINT(EM_DIAGRAM):   end;
2492845   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2492846   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2492847   +   end;
MPRINT(EM_DIAGRAM):   end;
2492848   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2492849   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2492850   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2492851   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492852   +   end;
MPRINT(EM_DIAGRAM):   end;
2492853   +end;
MPRINT(EM_DIAGRAM):   end;
2492854   +
2492855   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2492856   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2492857   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2492858   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2492859   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2492860   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492861   +end;
MPRINT(EM_DIAGRAM):   end;
2492862   +else do;
MPRINT(EM_DIAGRAM):   else do;
2492863   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2492864   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2492865   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2492866   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2492867   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2492868   +   end;
MPRINT(EM_DIAGRAM):   end;
2492869   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2492870   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2492871   +   end;
MPRINT(EM_DIAGRAM):   end;
2492872   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2492873   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2492874   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2492875   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492876   +   end;
MPRINT(EM_DIAGRAM):   end;
2492877   +end;
MPRINT(EM_DIAGRAM):   end;
2492878   +
2492879   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2492880   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2492881   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2492882   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2492883   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2492884   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492885   +end;
MPRINT(EM_DIAGRAM):   end;
2492886   +else do;
MPRINT(EM_DIAGRAM):   else do;
2492887   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2492888   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2492889   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2492890   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2492891   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2492892   +   end;
MPRINT(EM_DIAGRAM):   end;
2492893   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2492894   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2492895   +   end;
MPRINT(EM_DIAGRAM):   end;
2492896   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2492897   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2492898   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2492899   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492900   +   end;
MPRINT(EM_DIAGRAM):   end;
2492901   +end;
MPRINT(EM_DIAGRAM):   end;
2492902   +
2492903   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2492904   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2492905   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2492906   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2492907   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2492908   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492909   +end;
MPRINT(EM_DIAGRAM):   end;
2492910   +else do;
MPRINT(EM_DIAGRAM):   else do;
2492911   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2492912   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2492913   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2492914   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2492915   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2492916   +   end;
MPRINT(EM_DIAGRAM):   end;
2492917   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2492918   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2492919   +   end;
MPRINT(EM_DIAGRAM):   end;
2492920   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2492921   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2492922   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2492923   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492924   +   end;
MPRINT(EM_DIAGRAM):   end;
2492925   +end;
MPRINT(EM_DIAGRAM):   end;
2492926   +
2492927   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2492928   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2492929   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2492930   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2492931   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2492932   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492933   +end;
MPRINT(EM_DIAGRAM):   end;
2492934   +else do;
MPRINT(EM_DIAGRAM):   else do;
2492935   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2492936   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2492937   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2492938   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2492939   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2492940   +   end;
MPRINT(EM_DIAGRAM):   end;
2492941   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2492942   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2492943   +   end;
MPRINT(EM_DIAGRAM):   end;
2492944   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2492945   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2492946   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2492947   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492948   +   end;
MPRINT(EM_DIAGRAM):   end;
2492949   +end;
MPRINT(EM_DIAGRAM):   end;
2492950   +
2492951   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2492952   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2492953   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2492954   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2492955   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2492956   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492957   +end;
MPRINT(EM_DIAGRAM):   end;
2492958   +else do;
MPRINT(EM_DIAGRAM):   else do;
2492959   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2492960   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2492961   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2492962   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2492963   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2492964   +   end;
MPRINT(EM_DIAGRAM):   end;
2492965   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2492966   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2492967   +   end;
MPRINT(EM_DIAGRAM):   end;
2492968   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2492969   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2492970   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2492971   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492972   +   end;
MPRINT(EM_DIAGRAM):   end;
2492973   +end;
MPRINT(EM_DIAGRAM):   end;
2492974   +
2492975   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2492976   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2492977   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2492978   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2492979   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2492980   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2492981   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2492982   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2492983   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2492984   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2492985   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2492986   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2492987   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2492988   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2492989   +end;
MPRINT(EM_DIAGRAM):   end;
2492990   +else do;
MPRINT(EM_DIAGRAM):   else do;
2492991   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2492992   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2492993   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2492994   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2492995   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2492996   +   end;
MPRINT(EM_DIAGRAM):   end;
2492997   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2492998   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2492999   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2493000   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2493001   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2493002   +   end;
MPRINT(EM_DIAGRAM):   end;
2493003   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2493004   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2493005   +   end;
MPRINT(EM_DIAGRAM):   end;
2493006   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2493007   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2493008   +   end;
MPRINT(EM_DIAGRAM):   end;
2493009   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2493010   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2493011   +   end;
MPRINT(EM_DIAGRAM):   end;
2493012   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493013   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2493014   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2493015   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2493016   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2493017   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493018   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493019   +   end;
MPRINT(EM_DIAGRAM):   end;
2493020   +end;
MPRINT(EM_DIAGRAM):   end;
2493021   +
2493022   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2493023   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2493024   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2493025   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2493026   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2493027   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2493028   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2493029   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2493030   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2493031   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2493032   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2493033   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2493034   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2493035   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493036   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493037   +end;
MPRINT(EM_DIAGRAM):   end;
2493038   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493039   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2493040   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2493041   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493042   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2493043   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2493044   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2493045   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2493046   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2493047   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2493048   +         end;
MPRINT(EM_DIAGRAM):   end;
2493049   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2493050   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2493051   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2493052   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2493053   +            end;
MPRINT(EM_DIAGRAM):   end;
2493054   +         end;
MPRINT(EM_DIAGRAM):   end;
2493055   +      end;
MPRINT(EM_DIAGRAM):   end;
2493056   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2493057   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2493058   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2493059   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2493060   +         end;
MPRINT(EM_DIAGRAM):   end;
2493061   +      end;
MPRINT(EM_DIAGRAM):   end;
2493062   +   end;
MPRINT(EM_DIAGRAM):   end;
2493063   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493064   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2493065   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2493066   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2493067   +      end;
MPRINT(EM_DIAGRAM):   end;
2493068   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2493069   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2493070   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2493071   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2493072   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2493073   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2493074   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2493075   +         end;
MPRINT(EM_DIAGRAM):   end;
2493076   +      end;
MPRINT(EM_DIAGRAM):   end;
2493077   +   end;
MPRINT(EM_DIAGRAM):   end;
2493078   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2493079   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2493080   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2493081   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2493082   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2493083   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493084   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493085   +   end;
MPRINT(EM_DIAGRAM):   end;
2493086   +end;
MPRINT(EM_DIAGRAM):   end;
2493087   +
2493088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493089   +*** Checking missing input Interval
2493090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2493091   +
2493092   +IF NMISS(
2493093   +   AcceptedCmpTotal ,
2493094   +   Age ,
2493095   +   Frq ,
2493096   +   Income ,
2493097   +   Kidhome ,
2493098   +   Mnt ,
2493099   +   MntFishProducts ,
2493100   +   MntFruits ,
2493101   +   MntGoldProds ,
2493102   +   MntMeatProducts ,
2493103   +   MntSweetProducts ,
2493104   +   MntWines ,
2493105   +   MonthsAsCustomer ,
2493106   +   NumCatalogPurchases ,
2493107   +   NumDealsPurchases ,
2493108   +   NumDistPurchases ,
2493109   +   NumStorePurchases ,
2493110   +   NumWebPurchases ,
2493111   +   NumWebVisitsMonth ,
2493112   +   RFMstat ,
2493113   +   RMntFrq ,
2493114   +   Recency ,
2493115   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2493116   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2493117   +
2493118   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493119   +END;
MPRINT(EM_DIAGRAM):   END;
2493120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493121   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2493122   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493123   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2493124   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2493125   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2493126   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2493127   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2493128   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2493129   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2493130   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2493131   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2493132   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2493133   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2493134   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2493135   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2493136   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2493137   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2493138   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2493139   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2493140   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2493141   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2493142   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2493143   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2493144   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2493145   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2493146   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2493147   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2493148   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2493149   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2493150   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2493151   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2493152   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2493153   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2493154   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2493155   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2493156   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2493157   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2493158   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2493159   +END;
MPRINT(EM_DIAGRAM):   END;
2493160   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2493161   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2493162   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2493163   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2493164   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2493165   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2493166   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2493167   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2493168   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2493169   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2493170   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2493171   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2493172   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2493173   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2493174   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2493175   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2493176   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2493177   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2493178   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2493179   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2493180   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2493181   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2493182   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2493183   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2493184   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2493185   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2493186   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2493187   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2493188   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2493189   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2493190   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2493191   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2493192   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2493193   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2493194   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2493195   +   ELSE S_NumCatalogPurchases
2493196   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2493197   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2493198   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2493199   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2493200   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2493201   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2493202   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2493203   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2493204   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2493205   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2493206   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2493207   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2493208   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2493209   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2493210   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2493211   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2493212   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2493213   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2493214   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2493215   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2493216   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2493217   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2493218   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2493219   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2493220   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2493221   +END;
MPRINT(EM_DIAGRAM):   END;
2493222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493223   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2493224   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493225   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493226   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2493227   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493228   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493229   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2493230   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493231   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2493232   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2493233   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2493234   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2493235   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2493236   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2493237   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2493238   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2493239   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2493240   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2493241   +          +    -1.09856598010056 * S_NumDealsPurchases
2493242   +          +    -0.10571850472514 * S_NumDistPurchases
2493243   +          +     0.11898210654227 * S_NumStorePurchases
2493244   +          +      0.5984912060231 * S_NumWebPurchases
2493245   +          +     0.78592531126942 * S_NumWebVisitsMonth
2493246   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2493247   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2493248   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 *
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 *
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts +
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 *
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines +
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases +
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases +
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases +
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 *
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2493249   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2493250   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2493251   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2493252   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2493253   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2493254   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2493255   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2493256   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2493257   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2493258   +          +    -0.84042044250624 * S_NumDealsPurchases
2493259   +          +    -0.10246261015488 * S_NumDistPurchases
2493260   +          +     0.06886149708824 * S_NumStorePurchases
2493261   +          +     0.63156910388199 * S_NumWebPurchases
2493262   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2493263   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2493264   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2493265   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 *
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 *
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts +
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 *
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 *
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 *
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 *
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq +
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2493266   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2493267   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2493268   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2493269   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2493270   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2493271   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2493272   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2493273   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2493274   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2493275   +          +     0.45393712455366 * S_NumDealsPurchases
2493276   +          +    -0.25292198053552 * S_NumDistPurchases
2493277   +          +    -1.35582215064749 * S_NumStorePurchases
2493278   +          +    -0.83132202302639 * S_NumWebPurchases
2493279   +          +     1.87116225272678 * S_NumWebVisitsMonth
2493280   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2493281   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2493282   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 *
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 *
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts +
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 *
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines +
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases +
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases +
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases +
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 *
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2493283   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2493284   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2493285   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2493286   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2493287   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 *
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 +
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 *
HigherEducationBinary0 ;
2493288   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2493289   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2493290   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2493291   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2493292   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 +
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 *
HigherEducationBinary0 ;
2493293   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2493294   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2493295   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2493296   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2493297   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 +
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 *
HigherEducationBinary0 ;
2493298   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2493299   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2493300   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2493301   +          +      0.4695898100094 * Marital_StatusDivorced
2493302   +          +    -0.52137742289262 * Marital_StatusMarried
2493303   +          +    -0.32382086914936 * Marital_StatusSingle
2493304   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle +
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation +
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced +
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle +
-0.66163012672344 * Marital_StatusTogether ;
2493305   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2493306   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2493307   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2493308   +          +    -1.04858218653238 * Marital_StatusDivorced
2493309   +          +     2.41098335093061 * Marital_StatusMarried
2493310   +          +    -1.94696044861334 * Marital_StatusSingle
2493311   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle +
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 *
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 *
Marital_StatusTogether ;
2493312   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2493313   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2493314   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2493315   +          +     0.42964114177062 * Marital_StatusDivorced
2493316   +          +    -0.38607635605816 * Marital_StatusMarried
2493317   +          +    -0.02157405407852 * Marital_StatusSingle
2493318   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle +
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation +
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced +
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle +
-0.59995619744527 * Marital_StatusTogether ;
2493319   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2493320   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2493321   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2493322   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2493323   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2493324   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2493325   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2493326   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2493327   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2493328   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2493329   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2493330   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2493331   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2493332   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2493333   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2493334   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2493335   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2493336   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2493337   +END;
MPRINT(EM_DIAGRAM):   END;
2493338   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2493339   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2493340   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2493341   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2493342   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2493343   +END;
MPRINT(EM_DIAGRAM):   END;
2493344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493345   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2493346   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493347   +
2493348   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2493349   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2493350   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2493351   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2493352   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2493353   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493354   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2493355   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2493356   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2493357   +end;
MPRINT(EM_DIAGRAM):   end;
2493358   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493359   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2493360   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2493361   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2493362   +   end;
MPRINT(EM_DIAGRAM):   end;
2493363   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2493364   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2493365   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2493366   +   end;
MPRINT(EM_DIAGRAM):   end;
2493367   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493368   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2493369   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2493370   +   end;
MPRINT(EM_DIAGRAM):   end;
2493371   +end;
MPRINT(EM_DIAGRAM):   end;
2493372   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2493373   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2493374   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 +
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2493375   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2493376   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2493377   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2493378   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2493379   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2493380   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2493381   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2493382   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2493383   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2493384   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2493385   +END;
MPRINT(EM_DIAGRAM):   END;
2493386   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2493387   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2493388   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2493389   +END;
MPRINT(EM_DIAGRAM):   END;
2493390   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2493391   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2493392   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2493393   +END;
MPRINT(EM_DIAGRAM):   END;
2493394   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2493395   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2493396   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2493397   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2493398   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2493399   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2493400   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2493401   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493402   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2493403   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493404   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2493405   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2493406   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2493407   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2493408   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2493409   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2493410   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2493411   +END;
MPRINT(EM_DIAGRAM):   END;
2493412   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2493413   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2493414   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2493415   +drop
2493416   +H1x1_1
2493417   +H1x1_2
2493418   +H1x1_3
2493419   +H1x1_4
2493420   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2493421   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2493422   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2493423   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493424   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2493425   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493426   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2493427   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2493428   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2493429   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2493430   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493431   +* Renaming Into variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural9;
2493432   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493433   +length AutoNeural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural9_I_DepVar $32;
2493434   +drop AutoNeural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_I_DepVar;
2493435   +AutoNeural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural9_I_DepVar = I_DepVar;
2493436   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493437   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2493438   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493439   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2493440   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2493441   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2493442   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493443   +* Ensmbl47: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 2 of 5;
2493444   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493445   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493446   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2493447   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2493448   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2493449   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2493450   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2493451   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2493452   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2493453   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2493454   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2493455   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2493456   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2493457   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2493458   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2493459   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2493460   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2493461   +LENGTH _WARN_ $4
2493462   +      F_DepVar  $ 12
2493463   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2493464   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2493465   +
2493466   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2493467   +
2493468   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2493469   +
2493470   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2493471   +
2493472   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2493473   +
2493474   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2493475   +
2493476   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2493477   +
2493478   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2493479   +
2493480   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2493481   +
2493482   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2493483   +
2493484   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2493485   +
2493486   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2493487   +
2493488   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2493489   +
2493490   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2493491   +
2493492   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2493493   +
2493494   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2493495   +
2493496   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2493497   +
2493498   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2493499   +
2493500   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2493501   +
2493502   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2493503   +
2493504   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2493505   +
2493506   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2493507   +
2493508   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2493509   +
2493510   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2493511   +
2493512   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2493513   +
2493514   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2493515   +
2493516   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2493517   +
2493518   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2493519   +
2493520   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2493521   +
2493522   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2493523   +
2493524   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2493525   +
2493526   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2493527   +
2493528   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2493529   +
2493530   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2493531   +
2493532   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2493533   +
2493534   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2493535   +
2493536   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2493537   +
2493538   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2493539   +
2493540   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2493541   +
2493542   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2493543   +
2493544   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2493545   +
2493546   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2493547   +
2493548   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2493549   +
2493550   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2493551   +
2493552   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2493553   +
2493554   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2493555   +
2493556   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2493557   +
2493558   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2493559   +
2493560   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2493561   +
2493562   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2493563   +
2493564   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2493565   +
2493566   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2493567   +
2493568   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2493569   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2493570   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2493571   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2493572   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493573   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493574   +end;
MPRINT(EM_DIAGRAM):   end;
2493575   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493576   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2493577   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2493578   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493579   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2493580   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2493581   +   end;
MPRINT(EM_DIAGRAM):   end;
2493582   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2493583   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2493584   +   end;
MPRINT(EM_DIAGRAM):   end;
2493585   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493586   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2493587   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493588   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493589   +   end;
MPRINT(EM_DIAGRAM):   end;
2493590   +end;
MPRINT(EM_DIAGRAM):   end;
2493591   +
2493592   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2493593   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2493594   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2493595   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2493596   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493597   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493598   +end;
MPRINT(EM_DIAGRAM):   end;
2493599   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493600   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2493601   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2493602   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493603   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2493604   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2493605   +   end;
MPRINT(EM_DIAGRAM):   end;
2493606   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2493607   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2493608   +   end;
MPRINT(EM_DIAGRAM):   end;
2493609   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493610   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2493611   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493612   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493613   +   end;
MPRINT(EM_DIAGRAM):   end;
2493614   +end;
MPRINT(EM_DIAGRAM):   end;
2493615   +
2493616   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2493617   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2493618   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2493619   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2493620   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493621   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493622   +end;
MPRINT(EM_DIAGRAM):   end;
2493623   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493624   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2493625   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2493626   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493627   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2493628   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2493629   +   end;
MPRINT(EM_DIAGRAM):   end;
2493630   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2493631   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2493632   +   end;
MPRINT(EM_DIAGRAM):   end;
2493633   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493634   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2493635   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493636   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493637   +   end;
MPRINT(EM_DIAGRAM):   end;
2493638   +end;
MPRINT(EM_DIAGRAM):   end;
2493639   +
2493640   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2493641   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2493642   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2493643   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2493644   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493645   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493646   +end;
MPRINT(EM_DIAGRAM):   end;
2493647   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493648   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2493649   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2493650   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493651   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2493652   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2493653   +   end;
MPRINT(EM_DIAGRAM):   end;
2493654   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2493655   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2493656   +   end;
MPRINT(EM_DIAGRAM):   end;
2493657   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493658   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2493659   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493660   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493661   +   end;
MPRINT(EM_DIAGRAM):   end;
2493662   +end;
MPRINT(EM_DIAGRAM):   end;
2493663   +
2493664   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2493665   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2493666   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2493667   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2493668   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493669   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493670   +end;
MPRINT(EM_DIAGRAM):   end;
2493671   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493672   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2493673   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2493674   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493675   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2493676   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2493677   +   end;
MPRINT(EM_DIAGRAM):   end;
2493678   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2493679   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2493680   +   end;
MPRINT(EM_DIAGRAM):   end;
2493681   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493682   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2493683   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493684   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493685   +   end;
MPRINT(EM_DIAGRAM):   end;
2493686   +end;
MPRINT(EM_DIAGRAM):   end;
2493687   +
2493688   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2493689   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2493690   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2493691   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2493692   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493693   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493694   +end;
MPRINT(EM_DIAGRAM):   end;
2493695   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493696   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2493697   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2493698   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493699   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2493700   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2493701   +   end;
MPRINT(EM_DIAGRAM):   end;
2493702   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2493703   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2493704   +   end;
MPRINT(EM_DIAGRAM):   end;
2493705   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493706   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2493707   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493708   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493709   +   end;
MPRINT(EM_DIAGRAM):   end;
2493710   +end;
MPRINT(EM_DIAGRAM):   end;
2493711   +
2493712   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2493713   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2493714   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2493715   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2493716   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493717   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493718   +end;
MPRINT(EM_DIAGRAM):   end;
2493719   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493720   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2493721   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2493722   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493723   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2493724   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2493725   +   end;
MPRINT(EM_DIAGRAM):   end;
2493726   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2493727   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2493728   +   end;
MPRINT(EM_DIAGRAM):   end;
2493729   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493730   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2493731   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493732   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493733   +   end;
MPRINT(EM_DIAGRAM):   end;
2493734   +end;
MPRINT(EM_DIAGRAM):   end;
2493735   +
2493736   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2493737   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2493738   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2493739   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2493740   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2493741   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2493742   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2493743   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2493744   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2493745   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2493746   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2493747   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2493748   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493749   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493750   +end;
MPRINT(EM_DIAGRAM):   end;
2493751   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493752   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2493753   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2493754   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493755   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2493756   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2493757   +   end;
MPRINT(EM_DIAGRAM):   end;
2493758   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2493759   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2493760   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2493761   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2493762   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2493763   +   end;
MPRINT(EM_DIAGRAM):   end;
2493764   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2493765   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2493766   +   end;
MPRINT(EM_DIAGRAM):   end;
2493767   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2493768   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2493769   +   end;
MPRINT(EM_DIAGRAM):   end;
2493770   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2493771   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2493772   +   end;
MPRINT(EM_DIAGRAM):   end;
2493773   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493774   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2493775   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2493776   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2493777   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2493778   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493779   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493780   +   end;
MPRINT(EM_DIAGRAM):   end;
2493781   +end;
MPRINT(EM_DIAGRAM):   end;
2493782   +
2493783   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2493784   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2493785   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2493786   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2493787   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2493788   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2493789   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2493790   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2493791   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2493792   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2493793   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2493794   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2493795   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2493796   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2493797   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493798   +end;
MPRINT(EM_DIAGRAM):   end;
2493799   +else do;
MPRINT(EM_DIAGRAM):   else do;
2493800   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2493801   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2493802   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2493803   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2493804   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2493805   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2493806   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2493807   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2493808   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2493809   +         end;
MPRINT(EM_DIAGRAM):   end;
2493810   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2493811   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2493812   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2493813   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2493814   +            end;
MPRINT(EM_DIAGRAM):   end;
2493815   +         end;
MPRINT(EM_DIAGRAM):   end;
2493816   +      end;
MPRINT(EM_DIAGRAM):   end;
2493817   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2493818   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2493819   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2493820   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2493821   +         end;
MPRINT(EM_DIAGRAM):   end;
2493822   +      end;
MPRINT(EM_DIAGRAM):   end;
2493823   +   end;
MPRINT(EM_DIAGRAM):   end;
2493824   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2493825   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2493826   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2493827   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2493828   +      end;
MPRINT(EM_DIAGRAM):   end;
2493829   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2493830   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2493831   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2493832   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2493833   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2493834   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2493835   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2493836   +         end;
MPRINT(EM_DIAGRAM):   end;
2493837   +      end;
MPRINT(EM_DIAGRAM):   end;
2493838   +   end;
MPRINT(EM_DIAGRAM):   end;
2493839   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2493840   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2493841   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2493842   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2493843   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2493844   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2493845   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493846   +   end;
MPRINT(EM_DIAGRAM):   end;
2493847   +end;
MPRINT(EM_DIAGRAM):   end;
2493848   +
2493849   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493850   +*** Checking missing input Interval
2493851   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2493852   +
2493853   +IF NMISS(
2493854   +   AcceptedCmpTotal ,
2493855   +   Age ,
2493856   +   Frq ,
2493857   +   Income ,
2493858   +   Kidhome ,
2493859   +   Mnt ,
2493860   +   MntFishProducts ,
2493861   +   MntFruits ,
2493862   +   MntGoldProds ,
2493863   +   MntMeatProducts ,
2493864   +   MntSweetProducts ,
2493865   +   MntWines ,
2493866   +   MonthsAsCustomer ,
2493867   +   NumCatalogPurchases ,
2493868   +   NumDealsPurchases ,
2493869   +   NumDistPurchases ,
2493870   +   NumStorePurchases ,
2493871   +   NumWebPurchases ,
2493872   +   NumWebVisitsMonth ,
2493873   +   RFMstat ,
2493874   +   RMntFrq ,
2493875   +   Recency ,
2493876   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2493877   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2493878   +
2493879   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2493880   +END;
MPRINT(EM_DIAGRAM):   END;
2493881   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493882   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2493883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493884   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2493885   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2493886   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2493887   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2493888   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2493889   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2493890   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2493891   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2493892   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2493893   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2493894   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2493895   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2493896   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2493897   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2493898   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2493899   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2493900   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2493901   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2493902   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2493903   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2493904   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2493905   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2493906   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2493907   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2493908   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2493909   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2493910   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2493911   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2493912   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2493913   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2493914   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2493915   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2493916   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2493917   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2493918   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2493919   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2493920   +END;
MPRINT(EM_DIAGRAM):   END;
2493921   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2493922   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2493923   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2493924   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2493925   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2493926   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2493927   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2493928   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2493929   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2493930   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2493931   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2493932   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2493933   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2493934   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2493935   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2493936   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2493937   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2493938   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2493939   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2493940   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2493941   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2493942   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2493943   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2493944   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2493945   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2493946   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2493947   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2493948   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2493949   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2493950   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2493951   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2493952   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2493953   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2493954   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2493955   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2493956   +   ELSE S_NumCatalogPurchases
2493957   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2493958   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2493959   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2493960   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2493961   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2493962   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2493963   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2493964   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2493965   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2493966   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2493967   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2493968   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2493969   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2493970   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2493971   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2493972   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2493973   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2493974   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2493975   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2493976   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2493977   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2493978   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2493979   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2493980   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2493981   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2493982   +END;
MPRINT(EM_DIAGRAM):   END;
2493983   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493984   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2493985   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493987   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2493988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493990   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2493991   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2493992   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2493993   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2493994   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2493995   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2493996   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2493997   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2493998   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2493999   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2494000   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2494001   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2494002   +          +     0.19770934886328 * S_NumDealsPurchases
2494003   +          +      0.0515215988111 * S_NumDistPurchases
2494004   +          +    -0.34569346346089 * S_NumStorePurchases
2494005   +          +    -0.27122293596124 * S_NumWebPurchases
2494006   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2494007   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2494008   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2494009   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 *
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 *
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts +
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 *
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 *
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 *
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 *
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq +
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2494010   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2494011   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2494012   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2494013   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2494014   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2494015   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2494016   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2494017   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2494018   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2494019   +          +     0.54308887602031 * S_NumDealsPurchases
2494020   +          +    -0.22507315320192 * S_NumDistPurchases
2494021   +          +    -0.79861387328361 * S_NumStorePurchases
2494022   +          +    -0.45467494002747 * S_NumWebPurchases
2494023   +          +      0.2119048824613 * S_NumWebVisitsMonth
2494024   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2494025   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2494026   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 *
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 *
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts +
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 *
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 *
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 *
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 *
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq +
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2494027   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2494028   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2494029   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2494030   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2494031   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2494032   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2494033   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2494034   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2494035   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2494036   +          +     -0.0771083149302 * S_NumDealsPurchases
2494037   +          +     0.03403621221162 * S_NumDistPurchases
2494038   +          +     0.61303946422025 * S_NumStorePurchases
2494039   +          +     0.27126793634053 * S_NumWebPurchases
2494040   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2494041   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2494042   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2494043   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 *
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 *
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts +
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 *
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 *
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 *
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 *
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq +
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2494044   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2494045   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2494046   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2494047   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2494048   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2494049   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2494050   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2494051   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2494052   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2494053   +          +     0.29894603062327 * S_NumDealsPurchases
2494054   +          +     0.07614620530875 * S_NumDistPurchases
2494055   +          +     0.15402335009896 * S_NumStorePurchases
2494056   +          +     0.10615749096863 * S_NumWebPurchases
2494057   +          +     0.41962286816879 * S_NumWebVisitsMonth
2494058   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2494059   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2494060   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome +
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 *
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts +
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 *
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 *
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 *
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 *
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq +
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2494061   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2494062   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2494063   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2494064   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2494065   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2494066   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2494067   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2494068   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2494069   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2494070   +          +     0.14392502416642 * S_NumDealsPurchases
2494071   +          +    -0.10026304978633 * S_NumDistPurchases
2494072   +          +     -0.0588453022746 * S_NumStorePurchases
2494073   +          +     0.24799398610395 * S_NumWebPurchases
2494074   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2494075   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2494076   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2494077   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 *
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 *
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts +
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 *
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines +
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases +
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases +
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases +
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 *
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2494078   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2494079   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2494080   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2494081   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2494082   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2494083   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2494084   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2494085   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2494086   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2494087   +          +     0.08149600854964 * S_NumDealsPurchases
2494088   +          +     0.16873541613513 * S_NumDistPurchases
2494089   +          +    -0.20437343413446 * S_NumStorePurchases
2494090   +          +     -0.1671107527288 * S_NumWebPurchases
2494091   +          +     0.03677043100993 * S_NumWebVisitsMonth
2494092   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2494093   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2494094   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 *
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 *
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts +
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 *
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 *
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 *
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 *
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq +
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2494095   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2494096   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2494097   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2494098   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2494099   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 *
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 +
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 *
HigherEducationBinary0 ;
2494100   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2494101   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2494102   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2494103   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2494104   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 *
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 +
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 *
HigherEducationBinary0 ;
2494105   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2494106   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2494107   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2494108   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2494109   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 *
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 +
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 *
HigherEducationBinary0 ;
2494110   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2494111   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2494112   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2494113   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2494114   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 +
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 *
HigherEducationBinary0 ;
2494115   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2494116   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2494117   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2494118   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2494119   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 +
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 *
HigherEducationBinary0 ;
2494120   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2494121   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2494122   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2494123   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2494124   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 *
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 +
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 *
HigherEducationBinary0 ;
2494125   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2494126   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2494127   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2494128   +          +    -0.31045295887604 * Marital_StatusDivorced
2494129   +          +    -0.01109401001539 * Marital_StatusMarried
2494130   +          +     0.01325135981025 * Marital_StatusSingle
2494131   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried +
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2494132   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2494133   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2494134   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2494135   +          +     0.02275101861599 * Marital_StatusDivorced
2494136   +          +     0.20271548664903 * Marital_StatusMarried
2494137   +          +    -0.12132069210718 * Marital_StatusSingle
2494138   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle +
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 *
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 *
Marital_StatusTogether ;
2494139   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2494140   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2494141   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2494142   +          +     -0.4992959703281 * Marital_StatusDivorced
2494143   +          +     0.62071659624138 * Marital_StatusMarried
2494144   +          +    -0.21776202274494 * Marital_StatusSingle
2494145   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle +
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 *
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 *
Marital_StatusTogether ;
2494146   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2494147   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2494148   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2494149   +          +     0.05626212670587 * Marital_StatusDivorced
2494150   +          +     0.14353891364597 * Marital_StatusMarried
2494151   +          +    -0.29006765622997 * Marital_StatusSingle
2494152   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle +
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation +
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced +
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle +
0.05503638282535 * Marital_StatusTogether ;
2494153   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2494154   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2494155   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2494156   +          +    -0.21206913700604 * Marital_StatusDivorced
2494157   +          +     0.58790643614629 * Marital_StatusMarried
2494158   +          +    -0.65995982578062 * Marital_StatusSingle
2494159   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle +
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation +
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced +
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle +
0.49642503732428 * Marital_StatusTogether ;
2494160   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2494161   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2494162   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2494163   +          +    -0.05047370516008 * Marital_StatusDivorced
2494164   +          +    -0.23139090963669 * Marital_StatusMarried
2494165   +          +     0.04816197463249 * Marital_StatusSingle
2494166   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle +
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation +
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced +
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle +
0.04977890114896 * Marital_StatusTogether ;
2494167   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2494168   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2494169   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2494170   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2494171   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2494172   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2494173   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2494174   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2494175   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2494176   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2494177   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2494178   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2494179   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2494180   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2494181   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2494182   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2494183   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2494184   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2494185   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2494186   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2494187   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2494188   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2494189   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2494190   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2494191   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2494192   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2494193   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2494194   +END;
MPRINT(EM_DIAGRAM):   END;
2494195   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2494196   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2494197   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2494198   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2494199   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2494200   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2494201   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2494202   +END;
MPRINT(EM_DIAGRAM):   END;
2494203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494204   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2494205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494206   +
2494207   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2494208   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2494209   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2494210   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2494211   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2494212   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494213   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2494214   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2494215   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2494216   +end;
MPRINT(EM_DIAGRAM):   end;
2494217   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494218   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2494219   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2494220   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2494221   +   end;
MPRINT(EM_DIAGRAM):   end;
2494222   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2494223   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2494224   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2494225   +   end;
MPRINT(EM_DIAGRAM):   end;
2494226   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494227   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2494228   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2494229   +   end;
MPRINT(EM_DIAGRAM):   end;
2494230   +end;
MPRINT(EM_DIAGRAM):   end;
2494231   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2494232   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2494233   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2494234   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 +
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 +
-0.0100306049679 * H1x1_6 ;
2494235   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2494236   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2494237   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2494238   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2494239   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2494240   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2494241   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2494242   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2494243   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2494244   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2494245   +END;
MPRINT(EM_DIAGRAM):   END;
2494246   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2494247   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2494248   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2494249   +END;
MPRINT(EM_DIAGRAM):   END;
2494250   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2494251   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2494252   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2494253   +END;
MPRINT(EM_DIAGRAM):   END;
2494254   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2494255   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2494256   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2494257   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2494258   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2494259   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2494260   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2494261   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494262   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2494263   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494264   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2494265   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2494266   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2494267   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2494268   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2494269   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2494270   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2494271   +END;
MPRINT(EM_DIAGRAM):   END;
2494272   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2494273   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2494274   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2494275   +drop
2494276   +H1x1_1
2494277   +H1x1_2
2494278   +H1x1_3
2494279   +H1x1_4
2494280   +H1x1_5
2494281   +H1x1_6
2494282   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2494283   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2494284   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2494285   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494286   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2494287   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494288   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2494289   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2494290   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2494291   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2494292   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494293   +* Renaming Into variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural11;
2494294   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494295   +length AutoNeural11_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural11_I_DepVar $32;
2494296   +drop AutoNeural11_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_I_DepVar;
2494297   +AutoNeural11_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural11_I_DepVar = I_DepVar;
2494298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494299   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2494300   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494301   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2494302   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2494303   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2494304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494305   +* Ensmbl47: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 3 of 5;
2494306   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494307   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494308   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2494309   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2494310   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2494311   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2494312   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2494313   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2494314   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2494315   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2494316   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2494317   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2494318   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2494319   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2494320   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2494321   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2494322   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2494323   +LENGTH _WARN_ $4
2494324   +      F_DepVar  $ 12
2494325   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2494326   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2494327   +
2494328   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2494329   +
2494330   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2494331   +
2494332   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2494333   +
2494334   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2494335   +
2494336   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2494337   +
2494338   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2494339   +
2494340   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2494341   +
2494342   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2494343   +
2494344   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2494345   +
2494346   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2494347   +
2494348   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2494349   +
2494350   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2494351   +
2494352   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2494353   +
2494354   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2494355   +
2494356   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2494357   +
2494358   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2494359   +
2494360   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2494361   +
2494362   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2494363   +
2494364   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2494365   +
2494366   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2494367   +
2494368   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2494369   +
2494370   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2494371   +
2494372   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2494373   +
2494374   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2494375   +
2494376   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2494377   +
2494378   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2494379   +
2494380   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2494381   +
2494382   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2494383   +
2494384   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2494385   +
2494386   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2494387   +
2494388   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2494389   +
2494390   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2494391   +
2494392   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2494393   +
2494394   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2494395   +
2494396   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2494397   +
2494398   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2494399   +
2494400   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2494401   +
2494402   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2494403   +
2494404   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2494405   +
2494406   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2494407   +
2494408   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2494409   +
2494410   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2494411   +
2494412   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2494413   +
2494414   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2494415   +
2494416   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2494417   +
2494418   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2494419   +
2494420   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2494421   +
2494422   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2494423   +
2494424   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2494425   +
2494426   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2494427   +
2494428   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2494429   +
2494430   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2494431   +
2494432   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2494433   +
2494434   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2494435   +
2494436   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2494437   +
2494438   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2494439   +
2494440   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2494441   +
2494442   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2494443   +
2494444   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2494445   +
2494446   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2494447   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2494448   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2494449   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2494450   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2494451   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494452   +end;
MPRINT(EM_DIAGRAM):   end;
2494453   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494454   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2494455   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2494456   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494457   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2494458   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2494459   +   end;
MPRINT(EM_DIAGRAM):   end;
2494460   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2494461   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2494462   +   end;
MPRINT(EM_DIAGRAM):   end;
2494463   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494464   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2494465   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2494466   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494467   +   end;
MPRINT(EM_DIAGRAM):   end;
2494468   +end;
MPRINT(EM_DIAGRAM):   end;
2494469   +
2494470   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2494471   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2494472   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2494473   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2494474   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2494475   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494476   +end;
MPRINT(EM_DIAGRAM):   end;
2494477   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494478   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2494479   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2494480   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494481   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2494482   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2494483   +   end;
MPRINT(EM_DIAGRAM):   end;
2494484   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2494485   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2494486   +   end;
MPRINT(EM_DIAGRAM):   end;
2494487   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494488   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2494489   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2494490   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494491   +   end;
MPRINT(EM_DIAGRAM):   end;
2494492   +end;
MPRINT(EM_DIAGRAM):   end;
2494493   +
2494494   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2494495   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2494496   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2494497   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2494498   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2494499   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494500   +end;
MPRINT(EM_DIAGRAM):   end;
2494501   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494502   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2494503   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2494504   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494505   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2494506   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2494507   +   end;
MPRINT(EM_DIAGRAM):   end;
2494508   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2494509   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2494510   +   end;
MPRINT(EM_DIAGRAM):   end;
2494511   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494512   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2494513   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2494514   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494515   +   end;
MPRINT(EM_DIAGRAM):   end;
2494516   +end;
MPRINT(EM_DIAGRAM):   end;
2494517   +
2494518   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2494519   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2494520   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2494521   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2494522   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2494523   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494524   +end;
MPRINT(EM_DIAGRAM):   end;
2494525   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494526   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2494527   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2494528   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494529   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2494530   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2494531   +   end;
MPRINT(EM_DIAGRAM):   end;
2494532   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2494533   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2494534   +   end;
MPRINT(EM_DIAGRAM):   end;
2494535   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494536   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2494537   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2494538   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494539   +   end;
MPRINT(EM_DIAGRAM):   end;
2494540   +end;
MPRINT(EM_DIAGRAM):   end;
2494541   +
2494542   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2494543   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2494544   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2494545   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2494546   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2494547   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494548   +end;
MPRINT(EM_DIAGRAM):   end;
2494549   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494550   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2494551   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2494552   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494553   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2494554   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2494555   +   end;
MPRINT(EM_DIAGRAM):   end;
2494556   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2494557   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2494558   +   end;
MPRINT(EM_DIAGRAM):   end;
2494559   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494560   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2494561   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2494562   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494563   +   end;
MPRINT(EM_DIAGRAM):   end;
2494564   +end;
MPRINT(EM_DIAGRAM):   end;
2494565   +
2494566   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2494567   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2494568   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2494569   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2494570   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2494571   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494572   +end;
MPRINT(EM_DIAGRAM):   end;
2494573   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494574   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2494575   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2494576   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494577   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2494578   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2494579   +   end;
MPRINT(EM_DIAGRAM):   end;
2494580   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2494581   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2494582   +   end;
MPRINT(EM_DIAGRAM):   end;
2494583   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494584   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2494585   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2494586   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494587   +   end;
MPRINT(EM_DIAGRAM):   end;
2494588   +end;
MPRINT(EM_DIAGRAM):   end;
2494589   +
2494590   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2494591   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2494592   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2494593   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2494594   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2494595   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494596   +end;
MPRINT(EM_DIAGRAM):   end;
2494597   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494598   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2494599   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2494600   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494601   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2494602   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2494603   +   end;
MPRINT(EM_DIAGRAM):   end;
2494604   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2494605   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2494606   +   end;
MPRINT(EM_DIAGRAM):   end;
2494607   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494608   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2494609   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2494610   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494611   +   end;
MPRINT(EM_DIAGRAM):   end;
2494612   +end;
MPRINT(EM_DIAGRAM):   end;
2494613   +
2494614   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2494615   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2494616   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2494617   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2494618   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2494619   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2494620   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2494621   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2494622   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2494623   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2494624   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2494625   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2494626   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2494627   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494628   +end;
MPRINT(EM_DIAGRAM):   end;
2494629   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494630   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2494631   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2494632   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494633   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2494634   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2494635   +   end;
MPRINT(EM_DIAGRAM):   end;
2494636   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2494637   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2494638   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2494639   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2494640   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2494641   +   end;
MPRINT(EM_DIAGRAM):   end;
2494642   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2494643   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2494644   +   end;
MPRINT(EM_DIAGRAM):   end;
2494645   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2494646   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2494647   +   end;
MPRINT(EM_DIAGRAM):   end;
2494648   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2494649   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2494650   +   end;
MPRINT(EM_DIAGRAM):   end;
2494651   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494652   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2494653   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2494654   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2494655   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2494656   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2494657   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494658   +   end;
MPRINT(EM_DIAGRAM):   end;
2494659   +end;
MPRINT(EM_DIAGRAM):   end;
2494660   +
2494661   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2494662   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2494663   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2494664   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2494665   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2494666   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2494667   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2494668   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2494669   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2494670   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2494671   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2494672   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2494673   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2494674   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2494675   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494676   +end;
MPRINT(EM_DIAGRAM):   end;
2494677   +else do;
MPRINT(EM_DIAGRAM):   else do;
2494678   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2494679   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2494680   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2494681   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2494682   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2494683   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2494684   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2494685   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2494686   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2494687   +         end;
MPRINT(EM_DIAGRAM):   end;
2494688   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2494689   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2494690   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2494691   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2494692   +            end;
MPRINT(EM_DIAGRAM):   end;
2494693   +         end;
MPRINT(EM_DIAGRAM):   end;
2494694   +      end;
MPRINT(EM_DIAGRAM):   end;
2494695   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2494696   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2494697   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2494698   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2494699   +         end;
MPRINT(EM_DIAGRAM):   end;
2494700   +      end;
MPRINT(EM_DIAGRAM):   end;
2494701   +   end;
MPRINT(EM_DIAGRAM):   end;
2494702   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2494703   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2494704   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2494705   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2494706   +      end;
MPRINT(EM_DIAGRAM):   end;
2494707   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2494708   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2494709   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2494710   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2494711   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2494712   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2494713   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2494714   +         end;
MPRINT(EM_DIAGRAM):   end;
2494715   +      end;
MPRINT(EM_DIAGRAM):   end;
2494716   +   end;
MPRINT(EM_DIAGRAM):   end;
2494717   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2494718   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2494719   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2494720   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2494721   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2494722   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2494723   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494724   +   end;
MPRINT(EM_DIAGRAM):   end;
2494725   +end;
MPRINT(EM_DIAGRAM):   end;
2494726   +
2494727   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494728   +*** Checking missing input Interval
2494729   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2494730   +
2494731   +IF NMISS(
2494732   +   AcceptedCmpTotal ,
2494733   +   Age ,
2494734   +   Frq ,
2494735   +   Income ,
2494736   +   Kidhome ,
2494737   +   Mnt ,
2494738   +   MntFishProducts ,
2494739   +   MntFruits ,
2494740   +   MntGoldProds ,
2494741   +   MntMeatProducts ,
2494742   +   MntSweetProducts ,
2494743   +   MntWines ,
2494744   +   MonthsAsCustomer ,
2494745   +   NumCatalogPurchases ,
2494746   +   NumDealsPurchases ,
2494747   +   NumDistPurchases ,
2494748   +   NumStorePurchases ,
2494749   +   NumWebPurchases ,
2494750   +   NumWebVisitsMonth ,
2494751   +   RFMstat ,
2494752   +   RMntFrq ,
2494753   +   Recency ,
2494754   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2494755   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2494756   +
2494757   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2494758   +END;
MPRINT(EM_DIAGRAM):   END;
2494759   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494760   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2494761   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494762   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2494763   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2494764   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2494765   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2494766   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2494767   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2494768   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2494769   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2494770   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2494771   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2494772   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2494773   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2494774   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2494775   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2494776   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2494777   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2494778   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2494779   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2494780   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2494781   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2494782   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2494783   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2494784   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2494785   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2494786   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2494787   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2494788   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2494789   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2494790   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2494791   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2494792   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2494793   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2494794   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2494795   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2494796   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2494797   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2494798   +END;
MPRINT(EM_DIAGRAM):   END;
2494799   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2494800   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2494801   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2494802   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2494803   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2494804   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2494805   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2494806   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2494807   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2494808   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2494809   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2494810   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2494811   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2494812   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2494813   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2494814   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2494815   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2494816   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2494817   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2494818   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2494819   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2494820   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2494821   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2494822   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2494823   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2494824   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2494825   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2494826   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2494827   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2494828   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2494829   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2494830   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2494831   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2494832   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2494833   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2494834   +   ELSE S_NumCatalogPurchases
2494835   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2494836   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2494837   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2494838   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2494839   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2494840   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2494841   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2494842   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2494843   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2494844   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2494845   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2494846   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2494847   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2494848   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2494849   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2494850   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2494851   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2494852   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2494853   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2494854   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2494855   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2494856   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2494857   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2494858   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2494859   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2494860   +END;
MPRINT(EM_DIAGRAM):   END;
2494861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494862   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2494863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494865   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2494866   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494868   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2494869   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2494870   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2494871   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2494872   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2494873   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2494874   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2494875   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2494876   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2494877   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2494878   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2494879   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2494880   +          +      0.1112677116841 * S_NumDealsPurchases
2494881   +          +     0.01563584187072 * S_NumDistPurchases
2494882   +          +     0.19193969522995 * S_NumStorePurchases
2494883   +          +      0.3133556199984 * S_NumWebPurchases
2494884   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2494885   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2494886   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2494887   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 *
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 *
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts +
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 *
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 *
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 *
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 *
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq +
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2494888   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2494889   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2494890   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2494891   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2494892   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2494893   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2494894   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2494895   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2494896   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2494897   +          +     0.30225032753275 * S_NumDealsPurchases
2494898   +          +     0.33833359923595 * S_NumDistPurchases
2494899   +          +    -0.20255599575849 * S_NumStorePurchases
2494900   +          +    -0.12040071168942 * S_NumWebPurchases
2494901   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2494902   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2494903   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2494904   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 *
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 *
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts +
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 *
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 *
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 *
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 *
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq +
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2494905   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2494906   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2494907   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2494908   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2494909   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2494910   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2494911   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2494912   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2494913   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2494914   +          +     0.16792903091627 * S_NumDealsPurchases
2494915   +          +    -0.37408945626745 * S_NumDistPurchases
2494916   +          +    -0.18067262995566 * S_NumStorePurchases
2494917   +          +     0.21192146789881 * S_NumWebPurchases
2494918   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2494919   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2494920   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2494921   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 *
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 *
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts +
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 *
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines +
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases +
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases +
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases +
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 *
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2494922   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2494923   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2494924   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2494925   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2494926   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2494927   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2494928   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2494929   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2494930   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2494931   +          +     0.29407429399136 * S_NumDealsPurchases
2494932   +          +     0.01610745252195 * S_NumDistPurchases
2494933   +          +    -0.17767939085628 * S_NumStorePurchases
2494934   +          +    -0.15168958538637 * S_NumWebPurchases
2494935   +          +     0.17433622143988 * S_NumWebVisitsMonth
2494936   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2494937   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2494938   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 *
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 *
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts +
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 *
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines +
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases +
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases +
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases +
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 *
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2494939   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2494940   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2494941   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2494942   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2494943   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2494944   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2494945   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2494946   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2494947   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2494948   +          +    -0.37976451362108 * S_NumDealsPurchases
2494949   +          +    -0.17027731520801 * S_NumDistPurchases
2494950   +          +     0.59849493667087 * S_NumStorePurchases
2494951   +          +     0.65481480560301 * S_NumWebPurchases
2494952   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2494953   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2494954   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2494955   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 *
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 *
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts +
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 *
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines +
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases +
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases +
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases +
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 *
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2494956   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2494957   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2494958   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2494959   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2494960   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2494961   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2494962   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2494963   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2494964   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2494965   +          +    -0.07686699131623 * S_NumDealsPurchases
2494966   +          +    -0.07220460738926 * S_NumDistPurchases
2494967   +          +    -0.06554027468389 * S_NumStorePurchases
2494968   +          +     0.10422838158001 * S_NumWebPurchases
2494969   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2494970   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2494971   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2494972   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 *
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 *
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts +
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 *
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 *
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 *
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 *
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq +
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2494973   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2494974   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2494975   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2494976   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2494977   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2494978   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2494979   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2494980   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2494981   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2494982   +          +    -0.07920122387563 * S_NumDealsPurchases
2494983   +          +      0.3649244061347 * S_NumDistPurchases
2494984   +          +     0.36475853688403 * S_NumStorePurchases
2494985   +          +     0.02153991404063 * S_NumWebPurchases
2494986   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2494987   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2494988   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2494989   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 *
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 *
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts +
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 *
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 *
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 *
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 *
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq +
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2494990   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2494991   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2494992   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2494993   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2494994   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 *
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 +
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 *
HigherEducationBinary0 ;
2494995   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2494996   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2494997   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2494998   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2494999   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 +
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 *
HigherEducationBinary0 ;
2495000   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2495001   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2495002   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2495003   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2495004   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 *
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 +
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 *
HigherEducationBinary0 ;
2495005   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2495006   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2495007   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2495008   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2495009   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 +
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 *
HigherEducationBinary0 ;
2495010   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2495011   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2495012   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2495013   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2495014   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 +
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 *
HigherEducationBinary0 ;
2495015   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2495016   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2495017   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2495018   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2495019   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 *
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 +
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 *
HigherEducationBinary0 ;
2495020   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2495021   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2495022   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2495023   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2495024   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 *
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 +
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 *
HigherEducationBinary0 ;
2495025   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2495026   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2495027   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2495028   +          +     0.07744097241553 * Marital_StatusDivorced
2495029   +          +     -0.0247463100385 * Marital_StatusMarried
2495030   +          +     0.05804915234573 * Marital_StatusSingle
2495031   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle +
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation +
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced +
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle +
-0.08320125047871 * Marital_StatusTogether ;
2495032   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2495033   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2495034   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2495035   +          +     0.01390668926269 * Marital_StatusDivorced
2495036   +          +     0.01136282152074 * Marital_StatusMarried
2495037   +          +     0.12450246418789 * Marital_StatusSingle
2495038   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle +
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 *
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 *
Marital_StatusTogether ;
2495039   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2495040   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2495041   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2495042   +          +    -0.19133456931879 * Marital_StatusDivorced
2495043   +          +     0.56263566654996 * Marital_StatusMarried
2495044   +          +    -0.42172822038882 * Marital_StatusSingle
2495045   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle +
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 *
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 *
Marital_StatusTogether ;
2495046   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2495047   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2495048   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2495049   +          +    -0.19871205065609 * Marital_StatusDivorced
2495050   +          +    -0.14730795681603 * Marital_StatusMarried
2495051   +          +     0.05055432510362 * Marital_StatusSingle
2495052   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle +
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation +
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced +
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle +
0.06558965292395 * Marital_StatusTogether ;
2495053   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2495054   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2495055   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2495056   +          +    -0.35623807358995 * Marital_StatusDivorced
2495057   +          +     0.30324726283965 * Marital_StatusMarried
2495058   +          +    -0.18561093467927 * Marital_StatusSingle
2495059   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle +
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation +
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced +
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle +
0.395424582152 * Marital_StatusTogether ;
2495060   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2495061   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2495062   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2495063   +          +     0.11581014663368 * Marital_StatusDivorced
2495064   +          +    -0.31070638037659 * Marital_StatusMarried
2495065   +          +     0.17131747253949 * Marital_StatusSingle
2495066   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle +
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 *
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 *
Marital_StatusTogether ;
2495067   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2495068   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2495069   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2495070   +          +    -0.42450599871892 * Marital_StatusDivorced
2495071   +          +     0.48162905075885 * Marital_StatusMarried
2495072   +          +    -0.26618507749283 * Marital_StatusSingle
2495073   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle +
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 *
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 *
Marital_StatusTogether ;
2495074   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2495075   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2495076   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2495077   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2495078   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2495079   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2495080   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2495081   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2495082   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2495083   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2495084   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2495085   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2495086   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2495087   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2495088   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2495089   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2495090   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2495091   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2495092   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2495093   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2495094   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2495095   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2495096   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2495097   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2495098   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2495099   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2495100   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2495101   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2495102   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2495103   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 *
H1x1_7 ;
2495104   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2495105   +END;
MPRINT(EM_DIAGRAM):   END;
2495106   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2495107   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2495108   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2495109   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2495110   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2495111   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2495112   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2495113   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2495114   +END;
MPRINT(EM_DIAGRAM):   END;
2495115   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495116   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2495117   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495118   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2495119   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2495120   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2495121   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2495122   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2495123   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2495124   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2495125   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2495126   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2495127   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2495128   +          +     1.96719021971894 * S_NumDealsPurchases
2495129   +          +    -0.44535354794671 * S_NumDistPurchases
2495130   +          +    -0.54827762736866 * S_NumStorePurchases
2495131   +          +     1.02703310241897 * S_NumWebPurchases
2495132   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2495133   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2495134   +        S_RMntFrq  +       0.651688575044 * S_Recency
2495135   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 *
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 *
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts +
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 *
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 *
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 *
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 *
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq +
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2495136   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2495137   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2495138   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2495139   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2495140   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2495141   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2495142   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2495143   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2495144   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2495145   +          +     1.34659447971131 * S_NumDealsPurchases
2495146   +          +    -0.51624251310423 * S_NumDistPurchases
2495147   +          +      -1.283121574848 * S_NumStorePurchases
2495148   +          +    -1.83517806228926 * S_NumWebPurchases
2495149   +          +     0.51321339475285 * S_NumWebVisitsMonth
2495150   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2495151   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2495152   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 *
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 *
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts +
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 *
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines +
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases +
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases +
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases +
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 *
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2495153   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2495154   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2495155   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2495156   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2495157   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2495158   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2495159   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2495160   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2495161   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2495162   +          +     0.67492297345004 * S_NumDealsPurchases
2495163   +          +    -0.40437875375926 * S_NumDistPurchases
2495164   +          +     0.36322603681545 * S_NumStorePurchases
2495165   +          +    -1.15315070635524 * S_NumWebPurchases
2495166   +          +     1.20707272201156 * S_NumWebVisitsMonth
2495167   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2495168   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2495169   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 *
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 *
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts +
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 *
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 *
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 *
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 *
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq +
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2495170   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2495171   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2495172   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2495173   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2495174   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2495175   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2495176   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2495177   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2495178   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2495179   +          +    -0.41427983342148 * S_NumDealsPurchases
2495180   +          +    -0.22714305629205 * S_NumDistPurchases
2495181   +          +    -0.78763182048862 * S_NumStorePurchases
2495182   +          +    -0.26669253451501 * S_NumWebPurchases
2495183   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2495184   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2495185   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2495186   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 *
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 *
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts +
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 *
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines +
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases +
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases +
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases +
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 *
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2495187   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2495188   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2495189   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2495190   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2495191   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2495192   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2495193   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2495194   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2495195   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2495196   +          +      0.7697882092212 * S_NumDealsPurchases
2495197   +          +     0.51864835453056 * S_NumDistPurchases
2495198   +          +    -1.18320366630444 * S_NumStorePurchases
2495199   +          +     -0.6608394639529 * S_NumWebPurchases
2495200   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2495201   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2495202   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2495203   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 *
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 *
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts +
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 *
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 *
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 *
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 *
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq +
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2495204   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2495205   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2495206   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2495207   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2495208   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2495209   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2495210   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2495211   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2495212   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2495213   +          +     1.45707983202269 * S_NumDealsPurchases
2495214   +          +     0.83341887728641 * S_NumDistPurchases
2495215   +          +    -0.36664450469423 * S_NumStorePurchases
2495216   +          +     0.63911579043339 * S_NumWebPurchases
2495217   +          +     0.67144790303554 * S_NumWebVisitsMonth
2495218   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2495219   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2495220   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 *
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 *
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts +
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 *
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines +
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases +
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases +
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases +
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 *
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2495221   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2495222   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2495223   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2495224   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2495225   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2495226   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2495227   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2495228   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2495229   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2495230   +          +     0.68491896063662 * S_NumDealsPurchases
2495231   +          +      0.5386312048592 * S_NumDistPurchases
2495232   +          +     1.28108942503912 * S_NumStorePurchases
2495233   +          +    -0.88282270505969 * S_NumWebPurchases
2495234   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2495235   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2495236   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2495237   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome +
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 *
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts +
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 *
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 *
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 *
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 *
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq +
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2495238   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2495239   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2495240   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2495241   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2495242   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 *
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 +
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 *
HigherEducationBinary0 ;
2495243   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2495244   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2495245   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2495246   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2495247   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 +
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 *
HigherEducationBinary0 ;
2495248   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2495249   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2495250   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2495251   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2495252   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 +
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 *
HigherEducationBinary0 ;
2495253   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2495254   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2495255   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2495256   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2495257   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 *
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 +
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 *
HigherEducationBinary0 ;
2495258   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2495259   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2495260   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2495261   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2495262   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 +
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 *
HigherEducationBinary0 ;
2495263   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2495264   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2495265   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2495266   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2495267   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 *
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 +
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 *
HigherEducationBinary0 ;
2495268   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2495269   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2495270   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2495271   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2495272   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 *
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 +
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 *
HigherEducationBinary0 ;
2495273   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2495274   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2495275   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2495276   +          +    -3.97961426831865 * Marital_StatusDivorced
2495277   +          +     0.00932639813867 * Marital_StatusMarried
2495278   +          +     1.29310186574718 * Marital_StatusSingle
2495279   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle +
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation +
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced +
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle +
1.60940802221114 * Marital_StatusTogether ;
2495280   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2495281   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2495282   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2495283   +          +    -0.30358516578188 * Marital_StatusDivorced
2495284   +          +    -0.96176709360703 * Marital_StatusMarried
2495285   +          +     1.26977690921649 * Marital_StatusSingle
2495286   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle +
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 *
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 *
Marital_StatusTogether ;
2495287   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2495288   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2495289   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2495290   +          +     0.55272671490757 * Marital_StatusDivorced
2495291   +          +      0.1499239288334 * Marital_StatusMarried
2495292   +          +    -0.46840941760604 * Marital_StatusSingle
2495293   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle +
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 *
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 *
Marital_StatusTogether ;
2495294   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2495295   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2495296   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2495297   +          +      -1.240735370138 * Marital_StatusDivorced
2495298   +          +    -1.20089294883599 * Marital_StatusMarried
2495299   +          +     0.57492674426149 * Marital_StatusSingle
2495300   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle +
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation +
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced +
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle +
1.44189292990255 * Marital_StatusTogether ;
2495301   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2495302   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2495303   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2495304   +          +     1.05435442049802 * Marital_StatusDivorced
2495305   +          +      0.3571256349717 * Marital_StatusMarried
2495306   +          +    -0.44741267266578 * Marital_StatusSingle
2495307   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle +
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation +
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced +
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle +
0.02948931507994 * Marital_StatusTogether ;
2495308   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2495309   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2495310   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2495311   +          +     2.06026721980778 * Marital_StatusDivorced
2495312   +          +    -0.49583258645166 * Marital_StatusMarried
2495313   +          +    -1.14824900824474 * Marital_StatusSingle
2495314   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle +
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation +
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced +
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle +
0.57690093967839 * Marital_StatusTogether ;
2495315   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2495316   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2495317   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2495318   +          +     -1.1890908607447 * Marital_StatusDivorced
2495319   +          +    -0.46668809907123 * Marital_StatusMarried
2495320   +          +     1.20342564763422 * Marital_StatusSingle
2495321   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle +
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation +
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced +
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle +
-1.75740662969578 * Marital_StatusTogether ;
2495322   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2495323   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2495324   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2495325   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2495326   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2495327   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2495328   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2495329   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2495330   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2495331   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2495332   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2495333   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2495334   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2495335   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2495336   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2495337   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2495338   +END;
MPRINT(EM_DIAGRAM):   END;
2495339   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2495340   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2495341   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2495342   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2495343   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2495344   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2495345   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2495346   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2495347   +END;
MPRINT(EM_DIAGRAM):   END;
2495348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495349   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2495350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495351   +
2495352   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2495353   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2495354   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2495355   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2495356   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2495357   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495358   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2495359   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2495360   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2495361   +end;
MPRINT(EM_DIAGRAM):   end;
2495362   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495363   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2495364   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2495365   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2495366   +   end;
MPRINT(EM_DIAGRAM):   end;
2495367   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2495368   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2495369   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2495370   +   end;
MPRINT(EM_DIAGRAM):   end;
2495371   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495372   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2495373   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2495374   +   end;
MPRINT(EM_DIAGRAM):   end;
2495375   +end;
MPRINT(EM_DIAGRAM):   end;
2495376   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2495377   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2495378   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2495379   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2495380   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 +
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 +
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2495381   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2495382   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2495383   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2495384   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 +
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 +
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2495385   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2495386   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2495387   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2495388   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2495389   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2495390   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2495391   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2495392   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2495393   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2495394   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2495395   +END;
MPRINT(EM_DIAGRAM):   END;
2495396   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2495397   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2495398   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2495399   +END;
MPRINT(EM_DIAGRAM):   END;
2495400   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2495401   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2495402   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2495403   +END;
MPRINT(EM_DIAGRAM):   END;
2495404   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2495405   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2495406   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2495407   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2495408   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2495409   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2495410   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2495411   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495412   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2495413   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495414   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2495415   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2495416   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2495417   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2495418   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2495419   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2495420   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2495421   +END;
MPRINT(EM_DIAGRAM):   END;
2495422   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2495423   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2495424   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2495425   +drop
2495426   +H1x1_1
2495427   +H1x1_2
2495428   +H1x1_3
2495429   +H1x1_4
2495430   +H1x1_5
2495431   +H1x1_6
2495432   +H1x1_7
2495433   +H1x2_1
2495434   +H1x2_2
2495435   +H1x2_3
2495436   +H1x2_4
2495437   +H1x2_5
2495438   +H1x2_6
2495439   +H1x2_7
2495440   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2495441   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2495442   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2495443   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495444   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2495445   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495446   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2495447   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2495448   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2495449   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2495450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495451   +* Renaming Into variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural12;
2495452   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495453   +length AutoNeural12_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural12_I_DepVar $32;
2495454   +drop AutoNeural12_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_I_DepVar;
2495455   +AutoNeural12_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural12_I_DepVar = I_DepVar;
2495456   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495457   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2495458   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495459   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2495460   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2495461   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2495462   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495463   +* Ensmbl47: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 4 of 5;
2495464   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495465   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495466   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2495467   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2495468   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2495469   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2495470   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2495471   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2495472   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2495473   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2495474   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2495475   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2495476   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2495477   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2495478   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2495479   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2495480   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2495481   +LENGTH _WARN_ $4
2495482   +      F_DepVar  $ 12
2495483   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2495484   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2495485   +
2495486   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2495487   +
2495488   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2495489   +
2495490   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2495491   +
2495492   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2495493   +
2495494   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2495495   +
2495496   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2495497   +
2495498   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2495499   +
2495500   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2495501   +
2495502   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2495503   +
2495504   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2495505   +
2495506   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2495507   +
2495508   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2495509   +
2495510   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2495511   +
2495512   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2495513   +
2495514   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2495515   +
2495516   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2495517   +
2495518   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2495519   +
2495520   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2495521   +
2495522   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2495523   +
2495524   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2495525   +
2495526   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2495527   +
2495528   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2495529   +
2495530   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2495531   +
2495532   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2495533   +
2495534   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2495535   +
2495536   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2495537   +
2495538   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2495539   +
2495540   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2495541   +
2495542   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2495543   +
2495544   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2495545   +
2495546   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2495547   +
2495548   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2495549   +
2495550   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2495551   +
2495552   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2495553   +
2495554   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2495555   +
2495556   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2495557   +
2495558   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2495559   +
2495560   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2495561   +
2495562   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2495563   +
2495564   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2495565   +
2495566   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2495567   +
2495568   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2495569   +
2495570   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2495571   +
2495572   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2495573   +
2495574   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2495575   +
2495576   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2495577   +
2495578   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2495579   +
2495580   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2495581   +
2495582   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2495583   +
2495584   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2495585   +
2495586   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2495587   +
2495588   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2495589   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2495590   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2495591   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2495592   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2495593   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495594   +end;
MPRINT(EM_DIAGRAM):   end;
2495595   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495596   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2495597   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2495598   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495599   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2495600   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2495601   +   end;
MPRINT(EM_DIAGRAM):   end;
2495602   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2495603   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2495604   +   end;
MPRINT(EM_DIAGRAM):   end;
2495605   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495606   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2495607   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2495608   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495609   +   end;
MPRINT(EM_DIAGRAM):   end;
2495610   +end;
MPRINT(EM_DIAGRAM):   end;
2495611   +
2495612   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2495613   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2495614   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2495615   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2495616   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2495617   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495618   +end;
MPRINT(EM_DIAGRAM):   end;
2495619   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495620   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2495621   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2495622   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495623   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2495624   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2495625   +   end;
MPRINT(EM_DIAGRAM):   end;
2495626   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2495627   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2495628   +   end;
MPRINT(EM_DIAGRAM):   end;
2495629   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495630   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2495631   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2495632   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495633   +   end;
MPRINT(EM_DIAGRAM):   end;
2495634   +end;
MPRINT(EM_DIAGRAM):   end;
2495635   +
2495636   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2495637   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2495638   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2495639   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2495640   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2495641   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495642   +end;
MPRINT(EM_DIAGRAM):   end;
2495643   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495644   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2495645   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2495646   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495647   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2495648   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2495649   +   end;
MPRINT(EM_DIAGRAM):   end;
2495650   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2495651   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2495652   +   end;
MPRINT(EM_DIAGRAM):   end;
2495653   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495654   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2495655   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2495656   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495657   +   end;
MPRINT(EM_DIAGRAM):   end;
2495658   +end;
MPRINT(EM_DIAGRAM):   end;
2495659   +
2495660   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2495661   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2495662   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2495663   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2495664   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2495665   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495666   +end;
MPRINT(EM_DIAGRAM):   end;
2495667   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495668   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2495669   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2495670   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495671   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2495672   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2495673   +   end;
MPRINT(EM_DIAGRAM):   end;
2495674   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2495675   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2495676   +   end;
MPRINT(EM_DIAGRAM):   end;
2495677   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495678   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2495679   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2495680   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495681   +   end;
MPRINT(EM_DIAGRAM):   end;
2495682   +end;
MPRINT(EM_DIAGRAM):   end;
2495683   +
2495684   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2495685   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2495686   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2495687   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2495688   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2495689   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495690   +end;
MPRINT(EM_DIAGRAM):   end;
2495691   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495692   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2495693   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2495694   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495695   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2495696   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2495697   +   end;
MPRINT(EM_DIAGRAM):   end;
2495698   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2495699   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2495700   +   end;
MPRINT(EM_DIAGRAM):   end;
2495701   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495702   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2495703   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2495704   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495705   +   end;
MPRINT(EM_DIAGRAM):   end;
2495706   +end;
MPRINT(EM_DIAGRAM):   end;
2495707   +
2495708   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2495709   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2495710   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2495711   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2495712   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2495713   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495714   +end;
MPRINT(EM_DIAGRAM):   end;
2495715   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495716   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2495717   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2495718   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495719   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2495720   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2495721   +   end;
MPRINT(EM_DIAGRAM):   end;
2495722   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2495723   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2495724   +   end;
MPRINT(EM_DIAGRAM):   end;
2495725   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495726   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2495727   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2495728   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495729   +   end;
MPRINT(EM_DIAGRAM):   end;
2495730   +end;
MPRINT(EM_DIAGRAM):   end;
2495731   +
2495732   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2495733   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2495734   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2495735   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2495736   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2495737   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495738   +end;
MPRINT(EM_DIAGRAM):   end;
2495739   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495740   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2495741   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2495742   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495743   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2495744   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2495745   +   end;
MPRINT(EM_DIAGRAM):   end;
2495746   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2495747   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2495748   +   end;
MPRINT(EM_DIAGRAM):   end;
2495749   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495750   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2495751   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2495752   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495753   +   end;
MPRINT(EM_DIAGRAM):   end;
2495754   +end;
MPRINT(EM_DIAGRAM):   end;
2495755   +
2495756   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2495757   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2495758   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2495759   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2495760   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2495761   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2495762   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2495763   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2495764   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2495765   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2495766   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2495767   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2495768   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2495769   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495770   +end;
MPRINT(EM_DIAGRAM):   end;
2495771   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495772   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2495773   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2495774   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495775   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2495776   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2495777   +   end;
MPRINT(EM_DIAGRAM):   end;
2495778   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2495779   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2495780   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2495781   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2495782   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2495783   +   end;
MPRINT(EM_DIAGRAM):   end;
2495784   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2495785   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2495786   +   end;
MPRINT(EM_DIAGRAM):   end;
2495787   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2495788   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2495789   +   end;
MPRINT(EM_DIAGRAM):   end;
2495790   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2495791   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2495792   +   end;
MPRINT(EM_DIAGRAM):   end;
2495793   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495794   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2495795   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2495796   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2495797   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2495798   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2495799   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495800   +   end;
MPRINT(EM_DIAGRAM):   end;
2495801   +end;
MPRINT(EM_DIAGRAM):   end;
2495802   +
2495803   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2495804   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2495805   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2495806   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2495807   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2495808   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2495809   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2495810   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2495811   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2495812   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2495813   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2495814   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2495815   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2495816   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2495817   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495818   +end;
MPRINT(EM_DIAGRAM):   end;
2495819   +else do;
MPRINT(EM_DIAGRAM):   else do;
2495820   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2495821   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2495822   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2495823   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2495824   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2495825   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2495826   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2495827   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2495828   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2495829   +         end;
MPRINT(EM_DIAGRAM):   end;
2495830   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2495831   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2495832   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2495833   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2495834   +            end;
MPRINT(EM_DIAGRAM):   end;
2495835   +         end;
MPRINT(EM_DIAGRAM):   end;
2495836   +      end;
MPRINT(EM_DIAGRAM):   end;
2495837   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2495838   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2495839   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2495840   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2495841   +         end;
MPRINT(EM_DIAGRAM):   end;
2495842   +      end;
MPRINT(EM_DIAGRAM):   end;
2495843   +   end;
MPRINT(EM_DIAGRAM):   end;
2495844   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2495845   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2495846   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2495847   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2495848   +      end;
MPRINT(EM_DIAGRAM):   end;
2495849   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2495850   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2495851   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2495852   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2495853   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2495854   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2495855   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2495856   +         end;
MPRINT(EM_DIAGRAM):   end;
2495857   +      end;
MPRINT(EM_DIAGRAM):   end;
2495858   +   end;
MPRINT(EM_DIAGRAM):   end;
2495859   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2495860   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2495861   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2495862   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2495863   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2495864   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2495865   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495866   +   end;
MPRINT(EM_DIAGRAM):   end;
2495867   +end;
MPRINT(EM_DIAGRAM):   end;
2495868   +
2495869   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495870   +*** Checking missing input Interval
2495871   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2495872   +
2495873   +IF NMISS(
2495874   +   AcceptedCmpTotal ,
2495875   +   Age ,
2495876   +   Frq ,
2495877   +   Income ,
2495878   +   Kidhome ,
2495879   +   Mnt ,
2495880   +   MntFishProducts ,
2495881   +   MntFruits ,
2495882   +   MntGoldProds ,
2495883   +   MntMeatProducts ,
2495884   +   MntSweetProducts ,
2495885   +   MntWines ,
2495886   +   MonthsAsCustomer ,
2495887   +   NumCatalogPurchases ,
2495888   +   NumDealsPurchases ,
2495889   +   NumDistPurchases ,
2495890   +   NumStorePurchases ,
2495891   +   NumWebPurchases ,
2495892   +   NumWebVisitsMonth ,
2495893   +   RFMstat ,
2495894   +   RMntFrq ,
2495895   +   Recency ,
2495896   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2495897   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2495898   +
2495899   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2495900   +END;
MPRINT(EM_DIAGRAM):   END;
2495901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495902   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2495903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2495904   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2495905   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2495906   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2495907   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2495908   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2495909   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2495910   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2495911   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2495912   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2495913   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2495914   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2495915   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2495916   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2495917   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2495918   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2495919   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2495920   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2495921   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2495922   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2495923   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2495924   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2495925   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2495926   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2495927   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2495928   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2495929   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2495930   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2495931   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2495932   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2495933   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2495934   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2495935   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2495936   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2495937   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2495938   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2495939   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2495940   +END;
MPRINT(EM_DIAGRAM):   END;
2495941   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2495942   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2495943   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2495944   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2495945   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2495946   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2495947   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2495948   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2495949   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2495950   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2495951   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2495952   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2495953   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2495954   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2495955   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2495956   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2495957   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2495958   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2495959   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2495960   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2495961   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2495962   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2495963   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2495964   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2495965   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2495966   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2495967   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2495968   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2495969   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2495970   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2495971   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2495972   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2495973   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2495974   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2495975   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2495976   +   ELSE S_NumCatalogPurchases
2495977   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2495978   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2495979   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2495980   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2495981   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2495982   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2495983   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2495984   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2495985   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2495986   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2495987   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2495988   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2495989   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2495990   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2495991   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2495992   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2495993   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2495994   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2495995   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2495996   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2495997   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2495998   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2495999   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2496000   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2496001   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2496002   +END;
MPRINT(EM_DIAGRAM):   END;
2496003   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496004   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2496005   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496007   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2496008   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496010   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2496011   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496012   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2496013   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2496014   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2496015   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2496016   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2496017   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2496018   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2496019   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2496020   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2496021   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2496022   +          +     0.08390531145773 * S_NumDealsPurchases
2496023   +          +    -0.29505970645775 * S_NumDistPurchases
2496024   +          +    -0.13820571170194 * S_NumStorePurchases
2496025   +          +     0.11468011313368 * S_NumWebPurchases
2496026   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2496027   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2496028   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2496029   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 *
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 *
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts +
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 *
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 *
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 *
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 *
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq +
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2496030   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2496031   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2496032   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2496033   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2496034   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2496035   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2496036   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2496037   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2496038   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2496039   +          +     0.18009076035363 * S_NumDealsPurchases
2496040   +          +     0.03853861006587 * S_NumDistPurchases
2496041   +          +    -0.05118063952874 * S_NumStorePurchases
2496042   +          +    -0.03282286120473 * S_NumWebPurchases
2496043   +          +     0.31160900419026 * S_NumWebVisitsMonth
2496044   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2496045   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2496046   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome +
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 *
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts +
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 *
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 *
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 *
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 *
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq +
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2496047   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2496048   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2496049   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2496050   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2496051   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 *
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 +
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 *
HigherEducationBinary0 ;
2496052   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2496053   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2496054   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2496055   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2496056   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 *
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 +
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 *
HigherEducationBinary0 ;
2496057   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2496058   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2496059   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2496060   +          +    -0.04750981393889 * Marital_StatusDivorced
2496061   +          +     0.28216925676677 * Marital_StatusMarried
2496062   +          +    -0.20757827413964 * Marital_StatusSingle
2496063   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle +
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 *
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 *
Marital_StatusTogether ;
2496064   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2496065   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2496066   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2496067   +          +     0.05981919620577 * Marital_StatusDivorced
2496068   +          +    -0.17161573846062 * Marital_StatusMarried
2496069   +          +     0.15869440681091 * Marital_StatusSingle
2496070   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle +
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation +
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced +
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle +
-0.13282372850158 * Marital_StatusTogether ;
2496071   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2496072   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2496073   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2496074   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2496075   +END;
MPRINT(EM_DIAGRAM):   END;
2496076   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2496077   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2496078   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2496079   +END;
MPRINT(EM_DIAGRAM):   END;
2496080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496081   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2496082   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496083   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2496084   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2496085   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2496086   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2496087   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2496088   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2496089   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2496090   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2496091   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2496092   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2496093   +          +     0.00741910846933 * S_NumDealsPurchases
2496094   +          +       1.334289252268 * S_NumDistPurchases
2496095   +          +    -0.29851567180932 * S_NumStorePurchases
2496096   +          +    -0.52115313259666 * S_NumWebPurchases
2496097   +          +     0.93907168501909 * S_NumWebVisitsMonth
2496098   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2496099   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2496100   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome +
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 *
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts +
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 *
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 *
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 *
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 *
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq +
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2496101   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2496102   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2496103   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2496104   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2496105   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2496106   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2496107   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2496108   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2496109   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2496110   +          +     1.60427001186844 * S_NumDealsPurchases
2496111   +          +    -0.18447618033353 * S_NumDistPurchases
2496112   +          +    -1.29966073003539 * S_NumStorePurchases
2496113   +          +    -1.12373457341536 * S_NumWebPurchases
2496114   +          +     1.46099221440494 * S_NumWebVisitsMonth
2496115   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2496116   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2496117   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 *
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 *
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts +
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 *
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines +
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases +
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases +
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases +
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 *
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2496118   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2496119   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2496120   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2496121   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2496122   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 *
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 +
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 *
HigherEducationBinary0 ;
2496123   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2496124   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2496125   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2496126   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2496127   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 *
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 +
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 *
HigherEducationBinary0 ;
2496128   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2496129   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2496130   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2496131   +          +     0.59819559998538 * Marital_StatusDivorced
2496132   +          +     0.92957772553633 * Marital_StatusMarried
2496133   +          +    -1.11796266958894 * Marital_StatusSingle
2496134   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 *
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster +
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried +
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2496135   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2496136   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2496137   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2496138   +          +      1.0870909562212 * Marital_StatusDivorced
2496139   +          +     1.50333961797515 * Marital_StatusMarried
2496140   +          +    -1.41407780765932 * Marital_StatusSingle
2496141   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle +
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation +
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced +
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle +
-0.52528072358697 * Marital_StatusTogether ;
2496142   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2496143   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2496144   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2496145   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2496146   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2496147   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2496148   +END;
MPRINT(EM_DIAGRAM):   END;
2496149   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2496150   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2496151   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2496152   +END;
MPRINT(EM_DIAGRAM):   END;
2496153   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496154   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2496155   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496156   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2496157   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2496158   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2496159   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2496160   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2496161   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2496162   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2496163   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2496164   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2496165   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2496166   +          +     -1.1174504455343 * S_NumDealsPurchases
2496167   +          +    -0.18561253113498 * S_NumDistPurchases
2496168   +          +    -0.35231054612792 * S_NumStorePurchases
2496169   +          +      0.9249490354172 * S_NumWebPurchases
2496170   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2496171   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2496172   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2496173   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 *
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 *
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts +
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 *
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines +
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases +
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases +
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases +
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 *
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2496174   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2496175   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2496176   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2496177   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2496178   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2496179   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2496180   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2496181   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2496182   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2496183   +          +     1.05434863590054 * S_NumDealsPurchases
2496184   +          +    -0.73255174632068 * S_NumDistPurchases
2496185   +          +     0.53949953455044 * S_NumStorePurchases
2496186   +          +    -0.61709467816649 * S_NumWebPurchases
2496187   +          +     1.36235282484348 * S_NumWebVisitsMonth
2496188   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2496189   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2496190   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 *
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 *
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts +
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 *
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 *
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 *
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 *
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq +
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2496191   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2496192   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2496193   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2496194   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2496195   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 *
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 +
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 *
HigherEducationBinary0 ;
2496196   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2496197   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2496198   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2496199   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2496200   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 +
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 *
HigherEducationBinary0 ;
2496201   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2496202   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2496203   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2496204   +          +     0.22253248036322 * Marital_StatusDivorced
2496205   +          +    -1.72455332745001 * Marital_StatusMarried
2496206   +          +     0.57787272107232 * Marital_StatusSingle
2496207   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle +
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation +
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced +
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle +
0.16267074825086 * Marital_StatusTogether ;
2496208   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2496209   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2496210   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2496211   +          +     0.14637124403046 * Marital_StatusDivorced
2496212   +          +     0.18905186437528 * Marital_StatusMarried
2496213   +          +     0.00511958458521 * Marital_StatusSingle
2496214   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle +
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation +
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced +
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle +
-0.915980703129 * Marital_StatusTogether ;
2496215   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2496216   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2496217   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2496218   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2496219   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2496220   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2496221   +END;
MPRINT(EM_DIAGRAM):   END;
2496222   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2496223   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2496224   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2496225   +END;
MPRINT(EM_DIAGRAM):   END;
2496226   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496227   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2496228   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496229   +
2496230   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2496231   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2496232   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2496233   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2496234   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2496235   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496236   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2496237   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2496238   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2496239   +end;
MPRINT(EM_DIAGRAM):   end;
2496240   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496241   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2496242   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2496243   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2496244   +   end;
MPRINT(EM_DIAGRAM):   end;
2496245   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2496246   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2496247   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2496248   +   end;
MPRINT(EM_DIAGRAM):   end;
2496249   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496250   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2496251   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2496252   +   end;
MPRINT(EM_DIAGRAM):   end;
2496253   +end;
MPRINT(EM_DIAGRAM):   end;
2496254   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2496255   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2496256   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2496257   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2496258   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 *
H1x2_2 ;
2496259   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2496260   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 *
H1x3_2 ;
2496261   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2496262   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2496263   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2496264   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2496265   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2496266   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2496267   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2496268   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2496269   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2496270   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2496271   +END;
MPRINT(EM_DIAGRAM):   END;
2496272   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2496273   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2496274   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2496275   +END;
MPRINT(EM_DIAGRAM):   END;
2496276   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2496277   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2496278   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2496279   +END;
MPRINT(EM_DIAGRAM):   END;
2496280   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2496281   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2496282   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2496283   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2496284   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2496285   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2496286   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2496287   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496288   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2496289   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496290   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2496291   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2496292   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2496293   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2496294   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2496295   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2496296   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2496297   +END;
MPRINT(EM_DIAGRAM):   END;
2496298   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2496299   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2496300   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2496301   +drop
2496302   +H1x1_1
2496303   +H1x1_2
2496304   +H1x2_1
2496305   +H1x2_2
2496306   +H1x3_1
2496307   +H1x3_2
2496308   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2496309   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2496310   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2496311   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496312   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2496313   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496314   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2496315   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2496316   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2496317   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2496318   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496319   +* Renaming Into variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural7;
2496320   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496321   +length AutoNeural7_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural7_I_DepVar $32;
2496322   +drop AutoNeural7_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_I_DepVar;
2496323   +AutoNeural7_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural7_I_DepVar = I_DepVar;
2496324   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496325   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2496326   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496327   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2496328   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2496329   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2496330   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496331   +* Ensmbl47: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 5 of 5;
2496332   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496333   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496334   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2496335   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2496336   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2496337   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2496338   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2496339   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2496340   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2496341   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2496342   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2496343   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2496344   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2496345   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2496346   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2496347   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2496348   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2496349   +LENGTH _WARN_ $4
2496350   +      F_DepVar  $ 12
2496351   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2496352   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2496353   +
2496354   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2496355   +
2496356   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2496357   +
2496358   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2496359   +
2496360   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2496361   +
2496362   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2496363   +
2496364   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2496365   +
2496366   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2496367   +
2496368   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2496369   +
2496370   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2496371   +
2496372   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2496373   +
2496374   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2496375   +
2496376   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2496377   +
2496378   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2496379   +
2496380   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2496381   +
2496382   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2496383   +
2496384   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2496385   +
2496386   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2496387   +
2496388   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2496389   +
2496390   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2496391   +
2496392   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2496393   +
2496394   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2496395   +
2496396   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2496397   +
2496398   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2496399   +
2496400   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2496401   +
2496402   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2496403   +
2496404   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2496405   +
2496406   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2496407   +
2496408   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2496409   +
2496410   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2496411   +
2496412   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2496413   +
2496414   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2496415   +
2496416   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2496417   +
2496418   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2496419   +
2496420   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2496421   +
2496422   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2496423   +
2496424   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2496425   +
2496426   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2496427   +
2496428   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2496429   +
2496430   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2496431   +
2496432   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2496433   +
2496434   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2496435   +
2496436   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2496437   +
2496438   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2496439   +
2496440   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2496441   +
2496442   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2496443   +
2496444   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2496445   +
2496446   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2496447   +
2496448   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2496449   +
2496450   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2496451   +
2496452   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2496453   +
2496454   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2496455   +
2496456   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2496457   +
2496458   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2496459   +
2496460   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2496461   +
2496462   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2496463   +
2496464   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2496465   +
2496466   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2496467   +
2496468   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2496469   +
2496470   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2496471   +
2496472   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2496473   +
2496474   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2496475   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2496476   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2496477   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2496478   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2496479   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496480   +end;
MPRINT(EM_DIAGRAM):   end;
2496481   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496482   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2496483   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2496484   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496485   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2496486   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2496487   +   end;
MPRINT(EM_DIAGRAM):   end;
2496488   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2496489   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2496490   +   end;
MPRINT(EM_DIAGRAM):   end;
2496491   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496492   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2496493   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2496494   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496495   +   end;
MPRINT(EM_DIAGRAM):   end;
2496496   +end;
MPRINT(EM_DIAGRAM):   end;
2496497   +
2496498   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2496499   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2496500   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2496501   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2496502   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2496503   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496504   +end;
MPRINT(EM_DIAGRAM):   end;
2496505   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496506   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2496507   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2496508   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496509   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2496510   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2496511   +   end;
MPRINT(EM_DIAGRAM):   end;
2496512   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2496513   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2496514   +   end;
MPRINT(EM_DIAGRAM):   end;
2496515   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496516   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2496517   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2496518   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496519   +   end;
MPRINT(EM_DIAGRAM):   end;
2496520   +end;
MPRINT(EM_DIAGRAM):   end;
2496521   +
2496522   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2496523   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2496524   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2496525   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2496526   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2496527   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496528   +end;
MPRINT(EM_DIAGRAM):   end;
2496529   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496530   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2496531   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2496532   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496533   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2496534   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2496535   +   end;
MPRINT(EM_DIAGRAM):   end;
2496536   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2496537   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2496538   +   end;
MPRINT(EM_DIAGRAM):   end;
2496539   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496540   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2496541   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2496542   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496543   +   end;
MPRINT(EM_DIAGRAM):   end;
2496544   +end;
MPRINT(EM_DIAGRAM):   end;
2496545   +
2496546   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2496547   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2496548   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2496549   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2496550   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2496551   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496552   +end;
MPRINT(EM_DIAGRAM):   end;
2496553   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496554   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2496555   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2496556   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496557   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2496558   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2496559   +   end;
MPRINT(EM_DIAGRAM):   end;
2496560   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2496561   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2496562   +   end;
MPRINT(EM_DIAGRAM):   end;
2496563   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496564   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2496565   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2496566   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496567   +   end;
MPRINT(EM_DIAGRAM):   end;
2496568   +end;
MPRINT(EM_DIAGRAM):   end;
2496569   +
2496570   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2496571   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2496572   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2496573   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2496574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2496575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496576   +end;
MPRINT(EM_DIAGRAM):   end;
2496577   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496578   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2496579   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2496580   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496581   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2496582   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2496583   +   end;
MPRINT(EM_DIAGRAM):   end;
2496584   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2496585   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2496586   +   end;
MPRINT(EM_DIAGRAM):   end;
2496587   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496588   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2496589   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2496590   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496591   +   end;
MPRINT(EM_DIAGRAM):   end;
2496592   +end;
MPRINT(EM_DIAGRAM):   end;
2496593   +
2496594   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2496595   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2496596   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2496597   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2496598   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2496599   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496600   +end;
MPRINT(EM_DIAGRAM):   end;
2496601   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496602   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2496603   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2496604   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496605   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2496606   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2496607   +   end;
MPRINT(EM_DIAGRAM):   end;
2496608   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2496609   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2496610   +   end;
MPRINT(EM_DIAGRAM):   end;
2496611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496612   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2496613   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2496614   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496615   +   end;
MPRINT(EM_DIAGRAM):   end;
2496616   +end;
MPRINT(EM_DIAGRAM):   end;
2496617   +
2496618   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2496619   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2496620   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2496621   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2496622   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2496623   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496624   +end;
MPRINT(EM_DIAGRAM):   end;
2496625   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496626   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2496627   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2496628   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496629   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2496630   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2496631   +   end;
MPRINT(EM_DIAGRAM):   end;
2496632   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2496633   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2496634   +   end;
MPRINT(EM_DIAGRAM):   end;
2496635   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496636   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2496637   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2496638   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496639   +   end;
MPRINT(EM_DIAGRAM):   end;
2496640   +end;
MPRINT(EM_DIAGRAM):   end;
2496641   +
2496642   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2496643   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2496644   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2496645   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2496646   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2496647   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2496648   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2496649   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2496650   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2496651   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2496652   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2496653   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2496654   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2496655   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496656   +end;
MPRINT(EM_DIAGRAM):   end;
2496657   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496658   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2496659   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2496660   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496661   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2496662   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2496663   +   end;
MPRINT(EM_DIAGRAM):   end;
2496664   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2496665   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2496666   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2496667   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2496668   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2496669   +   end;
MPRINT(EM_DIAGRAM):   end;
The SAS System
 
2496670   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2496671   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2496672   +   end;
MPRINT(EM_DIAGRAM):   end;
2496673   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2496674   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2496675   +   end;
MPRINT(EM_DIAGRAM):   end;
2496676   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2496677   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2496678   +   end;
MPRINT(EM_DIAGRAM):   end;
2496679   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496680   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2496681   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2496682   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2496683   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2496684   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2496685   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496686   +   end;
MPRINT(EM_DIAGRAM):   end;
2496687   +end;
MPRINT(EM_DIAGRAM):   end;
2496688   +
2496689   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2496690   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2496691   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2496692   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2496693   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2496694   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2496695   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2496696   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2496697   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2496698   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2496699   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2496700   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2496701   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2496702   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2496703   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496704   +end;
MPRINT(EM_DIAGRAM):   end;
2496705   +else do;
MPRINT(EM_DIAGRAM):   else do;
2496706   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2496707   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2496708   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2496709   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2496710   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2496711   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2496712   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2496713   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2496714   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2496715   +         end;
MPRINT(EM_DIAGRAM):   end;
2496716   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2496717   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2496718   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2496719   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2496720   +            end;
MPRINT(EM_DIAGRAM):   end;
2496721   +         end;
MPRINT(EM_DIAGRAM):   end;
2496722   +      end;
MPRINT(EM_DIAGRAM):   end;
2496723   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2496724   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2496725   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2496726   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2496727   +         end;
MPRINT(EM_DIAGRAM):   end;
2496728   +      end;
MPRINT(EM_DIAGRAM):   end;
2496729   +   end;
MPRINT(EM_DIAGRAM):   end;
2496730   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2496731   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2496732   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2496733   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2496734   +      end;
MPRINT(EM_DIAGRAM):   end;
2496735   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2496736   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2496737   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2496738   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2496739   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2496740   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2496741   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2496742   +         end;
MPRINT(EM_DIAGRAM):   end;
2496743   +      end;
MPRINT(EM_DIAGRAM):   end;
2496744   +   end;
MPRINT(EM_DIAGRAM):   end;
2496745   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2496746   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2496747   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2496748   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2496749   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2496750   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2496751   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496752   +   end;
MPRINT(EM_DIAGRAM):   end;
2496753   +end;
MPRINT(EM_DIAGRAM):   end;
2496754   +
2496755   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496756   +*** Checking missing input Interval
2496757   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2496758   +
2496759   +IF NMISS(
2496760   +   AcceptedCmpTotal ,
2496761   +   Age ,
2496762   +   Frq ,
2496763   +   Income ,
2496764   +   Kidhome ,
2496765   +   Mnt ,
2496766   +   MntFishProducts ,
2496767   +   MntFruits ,
2496768   +   MntGoldProds ,
2496769   +   MntMeatProducts ,
2496770   +   MntSweetProducts ,
2496771   +   MntWines ,
2496772   +   MonthsAsCustomer ,
2496773   +   NumCatalogPurchases ,
2496774   +   NumDealsPurchases ,
2496775   +   NumDistPurchases ,
2496776   +   NumStorePurchases ,
2496777   +   NumWebPurchases ,
2496778   +   NumWebVisitsMonth ,
2496779   +   RFMstat ,
2496780   +   RMntFrq ,
2496781   +   Recency ,
2496782   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2496783   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2496784   +
2496785   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2496786   +END;
MPRINT(EM_DIAGRAM):   END;
2496787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496788   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2496789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496790   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2496791   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2496792   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2496793   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2496794   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2496795   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2496796   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2496797   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2496798   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2496799   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2496800   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2496801   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2496802   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2496803   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2496804   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2496805   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2496806   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2496807   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2496808   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2496809   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2496810   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2496811   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2496812   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2496813   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2496814   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2496815   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2496816   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2496817   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2496818   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2496819   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2496820   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2496821   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2496822   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2496823   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2496824   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2496825   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2496826   +END;
MPRINT(EM_DIAGRAM):   END;
2496827   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2496828   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2496829   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2496830   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2496831   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2496832   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2496833   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2496834   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2496835   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2496836   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2496837   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2496838   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2496839   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2496840   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2496841   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2496842   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2496843   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2496844   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2496845   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2496846   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2496847   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2496848   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2496849   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2496850   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2496851   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2496852   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2496853   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2496854   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2496855   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2496856   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2496857   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2496858   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2496859   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2496860   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2496861   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2496862   +   ELSE S_NumCatalogPurchases
2496863   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2496864   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2496865   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2496866   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2496867   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2496868   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2496869   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2496870   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2496871   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2496872   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2496873   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2496874   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2496875   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2496876   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2496877   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2496878   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2496879   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2496880   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2496881   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2496882   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2496883   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2496884   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2496885   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2496886   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2496887   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2496888   +END;
MPRINT(EM_DIAGRAM):   END;
2496889   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496890   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2496891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496892   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496893   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2496894   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496896   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2496897   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2496898   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2496899   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2496900   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2496901   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2496902   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2496903   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2496904   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2496905   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2496906   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2496907   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2496908   +          +     3.21215425524619 * S_NumDealsPurchases
2496909   +          +     0.08695198777156 * S_NumDistPurchases
2496910   +          +    -2.58697971128295 * S_NumStorePurchases
2496911   +          +    -0.44431924796059 * S_NumWebPurchases
2496912   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2496913   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2496914   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2496915   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 *
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 *
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts +
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 *
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines +
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases +
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases +
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases +
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 *
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2496916   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2496917   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2496918   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2496919   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2496920   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2496921   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2496922   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2496923   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2496924   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2496925   +          +    -0.83844506398484 * S_NumDealsPurchases
2496926   +          +     0.60831936516804 * S_NumDistPurchases
2496927   +          +     1.79084087761626 * S_NumStorePurchases
2496928   +          +     1.17119196356453 * S_NumWebPurchases
2496929   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2496930   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2496931   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2496932   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 *
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 *
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts +
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 *
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 *
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 *
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 *
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq +
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2496933   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2496934   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2496935   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2496936   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2496937   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2496938   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2496939   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2496940   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2496941   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2496942   +          +    -0.31484031572628 * S_NumDealsPurchases
2496943   +          +    -0.18273941035679 * S_NumDistPurchases
2496944   +          +     0.99501789733882 * S_NumStorePurchases
2496945   +          +     1.32014078829379 * S_NumWebPurchases
2496946   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2496947   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2496948   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2496949   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 *
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 *
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts +
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 *
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 *
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 *
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 *
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq +
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2496950   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2496951   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2496952   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2496953   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2496954   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2496955   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2496956   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2496957   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2496958   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2496959   +          +     1.19658719134196 * S_NumDealsPurchases
2496960   +          +     0.87478204472986 * S_NumDistPurchases
2496961   +          +    -0.20635856288784 * S_NumStorePurchases
2496962   +          +    -0.89927356974242 * S_NumWebPurchases
2496963   +          +     2.92285244132576 * S_NumWebVisitsMonth
2496964   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2496965   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2496966   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 *
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 *
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts +
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 *
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 *
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 *
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 *
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq +
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2496967   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2496968   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2496969   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2496970   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2496971   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2496972   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2496973   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2496974   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2496975   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2496976   +          +       -2.32617124568 * S_NumDealsPurchases
2496977   +          +    -0.56589187730672 * S_NumDistPurchases
2496978   +          +     1.07062299863482 * S_NumStorePurchases
2496979   +          +     0.30077273739578 * S_NumWebPurchases
2496980   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2496981   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2496982   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2496983   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 *
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 *
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts +
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 *
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 *
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 *
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 *
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq +
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2496984   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2496985   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2496986   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2496987   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2496988   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 *
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 +
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 *
HigherEducationBinary0 ;
2496989   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2496990   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2496991   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2496992   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2496993   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 *
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 +
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 *
HigherEducationBinary0 ;
2496994   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2496995   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2496996   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2496997   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2496998   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 *
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 +
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 *
HigherEducationBinary0 ;
2496999   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2497000   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2497001   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2497002   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2497003   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 +
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 *
HigherEducationBinary0 ;
2497004   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2497005   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2497006   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2497007   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2497008   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 *
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 +
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 *
HigherEducationBinary0 ;
2497009   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2497010   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2497011   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2497012   +          +    -0.27797737429678 * Marital_StatusDivorced
2497013   +          +    -0.08137635862327 * Marital_StatusMarried
2497014   +          +     0.06275411820495 * Marital_StatusSingle
2497015   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle +
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 *
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 *
Marital_StatusTogether ;
2497016   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2497017   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2497018   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2497019   +          +     0.05151426841441 * Marital_StatusDivorced
2497020   +          +     1.19165082030442 * Marital_StatusMarried
2497021   +          +    -1.08257080662611 * Marital_StatusSingle
2497022   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle +
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 *
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 *
Marital_StatusTogether ;
2497023   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2497024   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2497025   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2497026   +          +      0.0238206459022 * Marital_StatusDivorced
2497027   +          +     -0.4653244204261 * Marital_StatusMarried
2497028   +          +     0.13051613619882 * Marital_StatusSingle
2497029   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle +
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation +
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced +
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle +
-0.35951366919755 * Marital_StatusTogether ;
2497030   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2497031   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2497032   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2497033   +          +     -0.7449356409222 * Marital_StatusDivorced
2497034   +          +    -1.46604673521535 * Marital_StatusMarried
2497035   +          +     0.74484771688818 * Marital_StatusSingle
2497036   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle +
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 *
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 *
Marital_StatusTogether ;
2497037   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2497038   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2497039   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2497040   +          +    -3.68044980584423 * Marital_StatusDivorced
2497041   +          +     3.14587407902338 * Marital_StatusMarried
2497042   +          +    -2.66118132753024 * Marital_StatusSingle
2497043   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle +
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation +
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced +
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle +
3.50991640149914 * Marital_StatusTogether ;
2497044   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2497045   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2497046   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2497047   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2497048   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2497049   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2497050   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2497051   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2497052   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2497053   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2497054   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2497055   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2497056   +END;
MPRINT(EM_DIAGRAM):   END;
2497057   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2497058   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2497059   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2497060   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2497061   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2497062   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2497063   +END;
MPRINT(EM_DIAGRAM):   END;
2497064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497065   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2497066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497067   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2497068   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2497069   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2497070   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2497071   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2497072   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2497073   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2497074   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2497075   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2497076   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2497077   +          +     0.89261880438741 * S_NumDealsPurchases
2497078   +          +    -1.61647413199892 * S_NumDistPurchases
2497079   +          +    -0.56304669045195 * S_NumStorePurchases
2497080   +          +      0.7766837080945 * S_NumWebPurchases
2497081   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2497082   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2497083   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2497084   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 *
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 *
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts +
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 *
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines +
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases +
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases +
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases +
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 *
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2497085   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2497086   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2497087   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2497088   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2497089   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2497090   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2497091   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2497092   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2497093   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2497094   +          +     1.02431289724643 * S_NumDealsPurchases
2497095   +          +    -0.90960173637405 * S_NumDistPurchases
2497096   +          +     1.24283490404772 * S_NumStorePurchases
2497097   +          +     1.23072413154592 * S_NumWebPurchases
2497098   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2497099   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2497100   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2497101   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome +
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 *
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts +
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 *
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 *
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 *
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 *
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq +
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2497102   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2497103   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2497104   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2497105   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2497106   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2497107   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2497108   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2497109   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2497110   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2497111   +          +    -0.26249596122198 * S_NumDealsPurchases
2497112   +          +    -0.63328519804758 * S_NumDistPurchases
2497113   +          +    -0.88467503575886 * S_NumStorePurchases
2497114   +          +    -0.83120537310738 * S_NumWebPurchases
2497115   +          +     1.40072282351719 * S_NumWebVisitsMonth
2497116   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2497117   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2497118   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 *
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 *
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts +
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 *
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines +
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases +
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases +
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases +
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 *
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2497119   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2497120   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2497121   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2497122   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2497123   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2497124   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2497125   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2497126   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2497127   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2497128   +          +     1.30167361451945 * S_NumDealsPurchases
2497129   +          +     1.45457613716235 * S_NumDistPurchases
2497130   +          +    -0.40226463685252 * S_NumStorePurchases
2497131   +          +     0.36369161683572 * S_NumWebPurchases
2497132   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2497133   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2497134   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2497135   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 *
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 *
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts +
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 *
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 *
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 *
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 *
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq +
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2497136   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2497137   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2497138   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2497139   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2497140   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2497141   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2497142   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2497143   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2497144   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2497145   +          +    -0.54572162665338 * S_NumDealsPurchases
2497146   +          +      0.9607390449318 * S_NumDistPurchases
2497147   +          +    -0.03259470545754 * S_NumStorePurchases
2497148   +          +     0.19202241423412 * S_NumWebPurchases
2497149   +          +     0.61085831658456 * S_NumWebVisitsMonth
2497150   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2497151   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2497152   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 *
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 *
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts +
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 *
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines +
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases +
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases +
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases +
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 *
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2497153   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2497154   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2497155   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2497156   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2497157   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 *
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 +
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 *
HigherEducationBinary0 ;
2497158   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2497159   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2497160   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2497161   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2497162   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 *
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 +
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 *
HigherEducationBinary0 ;
2497163   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2497164   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2497165   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2497166   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2497167   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 *
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 +
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 *
HigherEducationBinary0 ;
2497168   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2497169   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2497170   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2497171   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2497172   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 *
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 +
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 *
HigherEducationBinary0 ;
2497173   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2497174   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2497175   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2497176   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2497177   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 *
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 +
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 *
HigherEducationBinary0 ;
2497178   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2497179   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2497180   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2497181   +          +    -2.32430245081383 * Marital_StatusDivorced
2497182   +          +    -0.09815511356796 * Marital_StatusMarried
2497183   +          +     0.13075504294551 * Marital_StatusSingle
2497184   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle +
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 *
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 *
Marital_StatusTogether ;
2497185   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2497186   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2497187   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2497188   +          +    -0.65574603869224 * Marital_StatusDivorced
2497189   +          +     1.54672472575294 * Marital_StatusMarried
2497190   +          +    -1.59817602340208 * Marital_StatusSingle
2497191   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle +
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 *
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 *
Marital_StatusTogether ;
2497192   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2497193   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2497194   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2497195   +          +    -0.50911604604781 * Marital_StatusDivorced
2497196   +          +     0.30403066135719 * Marital_StatusMarried
2497197   +          +      0.1026950879545 * Marital_StatusSingle
2497198   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle +
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 *
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 *
Marital_StatusTogether ;
2497199   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2497200   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2497201   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2497202   +          +     1.07371507133318 * Marital_StatusDivorced
2497203   +          +    -0.07097334129051 * Marital_StatusMarried
2497204   +          +    -0.48339718568621 * Marital_StatusSingle
2497205   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle +
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 *
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 *
Marital_StatusTogether ;
2497206   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2497207   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2497208   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2497209   +          +     1.04342893515504 * Marital_StatusDivorced
2497210   +          +     1.16171312085032 * Marital_StatusMarried
2497211   +          +    -0.30201646939913 * Marital_StatusSingle
2497212   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle +
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 *
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 *
Marital_StatusTogether ;
2497213   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2497214   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2497215   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2497216   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2497217   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2497218   +END;
MPRINT(EM_DIAGRAM):   END;
2497219   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2497220   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2497221   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2497222   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2497223   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2497224   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2497225   +END;
MPRINT(EM_DIAGRAM):   END;
2497226   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497227   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2497228   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497229   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2497230   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2497231   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2497232   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2497233   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2497234   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2497235   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2497236   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2497237   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2497238   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2497239   +          +     1.32256781010645 * S_NumDealsPurchases
2497240   +          +    -1.43015438973619 * S_NumDistPurchases
2497241   +          +    -0.63489289584421 * S_NumStorePurchases
2497242   +          +     0.90508699686841 * S_NumWebPurchases
2497243   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2497244   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2497245   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2497246   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 *
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 *
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts +
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 *
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 *
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 *
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 *
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq +
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2497247   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2497248   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2497249   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2497250   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2497251   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2497252   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2497253   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2497254   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2497255   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2497256   +          +     0.85965187264096 * S_NumDealsPurchases
2497257   +          +    -1.15239933286756 * S_NumDistPurchases
2497258   +          +     1.20800889102387 * S_NumStorePurchases
2497259   +          +     1.08790389130242 * S_NumWebPurchases
2497260   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2497261   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2497262   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2497263   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 *
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 *
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts +
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 *
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 *
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 *
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 *
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq +
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2497264   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2497265   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2497266   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2497267   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2497268   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2497269   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2497270   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2497271   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2497272   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2497273   +          +     -0.5767607129654 * S_NumDealsPurchases
2497274   +          +     -0.2643921429796 * S_NumDistPurchases
2497275   +          +    -0.67417489911206 * S_NumStorePurchases
2497276   +          +    -0.51423877684891 * S_NumWebPurchases
2497277   +          +     1.40328299605176 * S_NumWebVisitsMonth
2497278   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2497279   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2497280   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 *
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 *
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts +
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 *
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 *
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 *
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 *
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq +
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2497281   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2497282   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2497283   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2497284   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2497285   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2497286   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2497287   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2497288   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2497289   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2497290   +          +      1.2821617657076 * S_NumDealsPurchases
2497291   +          +     1.26584115202735 * S_NumDistPurchases
2497292   +          +    -0.46597664211833 * S_NumStorePurchases
2497293   +          +     0.45652363472866 * S_NumWebPurchases
2497294   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2497295   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2497296   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2497297   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 *
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 *
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts +
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 *
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 *
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 *
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 *
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq +
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2497298   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2497299   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2497300   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2497301   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2497302   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2497303   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2497304   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2497305   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2497306   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2497307   +          +    -0.85162564171681 * S_NumDealsPurchases
2497308   +          +     0.64631099667221 * S_NumDistPurchases
2497309   +          +    -0.03081963858636 * S_NumStorePurchases
2497310   +          +    -0.24124717624664 * S_NumWebPurchases
2497311   +          +     0.56425980772372 * S_NumWebVisitsMonth
2497312   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2497313   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2497314   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 *
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 *
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts +
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 *
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines +
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases +
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases +
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases +
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 *
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2497315   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2497316   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2497317   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2497318   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2497319   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 *
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 +
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 *
HigherEducationBinary0 ;
2497320   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2497321   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2497322   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2497323   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2497324   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 *
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 +
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 *
HigherEducationBinary0 ;
2497325   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2497326   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2497327   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2497328   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2497329   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 *
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 +
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 *
HigherEducationBinary0 ;
2497330   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2497331   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2497332   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2497333   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2497334   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 +
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 *
HigherEducationBinary0 ;
2497335   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2497336   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2497337   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2497338   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2497339   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 *
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 +
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 *
HigherEducationBinary0 ;
2497340   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2497341   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2497342   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2497343   +          +    -2.49973437075558 * Marital_StatusDivorced
2497344   +          +    -0.18076948182574 * Marital_StatusMarried
2497345   +          +     0.13498525495231 * Marital_StatusSingle
2497346   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle +
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 *
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 *
Marital_StatusTogether ;
2497347   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2497348   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2497349   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2497350   +          +       -0.59463732835 * Marital_StatusDivorced
2497351   +          +     1.37741332427598 * Marital_StatusMarried
2497352   +          +     -1.5833455713231 * Marital_StatusSingle
2497353   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle +
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation +
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced +
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle +
1.79205360628448 * Marital_StatusTogether ;
2497354   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2497355   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2497356   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2497357   +          +    -0.44569556289443 * Marital_StatusDivorced
2497358   +          +     0.29918053103557 * Marital_StatusMarried
2497359   +          +    -0.10337314064224 * Marital_StatusSingle
2497360   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle +
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 *
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 *
Marital_StatusTogether ;
2497361   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2497362   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2497363   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2497364   +          +     1.13881957277462 * Marital_StatusDivorced
2497365   +          +    -0.35849807146313 * Marital_StatusMarried
2497366   +          +    -0.22168731316885 * Marital_StatusSingle
2497367   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle +
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 *
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 *
Marital_StatusTogether ;
2497368   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2497369   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2497370   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2497371   +          +     1.10774969923269 * Marital_StatusDivorced
2497372   +          +     1.08409594073043 * Marital_StatusMarried
2497373   +          +    -0.33145048007894 * Marital_StatusSingle
2497374   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle +
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 *
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 *
Marital_StatusTogether ;
2497375   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2497376   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2497377   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2497378   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2497379   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2497380   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2497381   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2497382   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2497383   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2497384   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
2497385   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2497386   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2497387   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 *
H1x3_2 ;
2497388   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2497389   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2497390   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 *
H1x3_3 ;
2497391   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2497392   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2497393   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 *
H1x3_4 ;
2497394   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2497395   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2497396   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 *
H1x3_5 ;
2497397   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2497398   +END;
MPRINT(EM_DIAGRAM):   END;
2497399   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2497400   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2497401   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2497402   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2497403   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2497404   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2497405   +END;
MPRINT(EM_DIAGRAM):   END;
2497406   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497407   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2497408   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497409   +
2497410   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2497411   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2497412   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2497413   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2497414   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2497415   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2497416   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2497417   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2497418   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2497419   +end;
MPRINT(EM_DIAGRAM):   end;
2497420   +else do;
MPRINT(EM_DIAGRAM):   else do;
2497421   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2497422   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2497423   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2497424   +   end;
MPRINT(EM_DIAGRAM):   end;
2497425   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2497426   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2497427   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2497428   +   end;
MPRINT(EM_DIAGRAM):   end;
2497429   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2497430   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2497431   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2497432   +   end;
MPRINT(EM_DIAGRAM):   end;
2497433   +end;
MPRINT(EM_DIAGRAM):   end;
2497434   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2497435   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2497436   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2497437   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 +
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2497438   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2497439   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2497440   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 *
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2497441   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2497442   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2497443   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 *
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2497444   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2497445   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2497446   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2497447   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2497448   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2497449   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2497450   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2497451   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2497452   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2497453   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2497454   +END;
MPRINT(EM_DIAGRAM):   END;
2497455   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2497456   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2497457   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2497458   +END;
MPRINT(EM_DIAGRAM):   END;
2497459   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2497460   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2497461   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2497462   +END;
MPRINT(EM_DIAGRAM):   END;
2497463   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2497464   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2497465   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2497466   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2497467   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2497468   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2497469   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2497470   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497471   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2497472   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2497473   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2497474   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2497475   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2497476   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2497477   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2497478   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2497479   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2497480   +END;
MPRINT(EM_DIAGRAM):   END;
2497481   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2497482   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2497483   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2497484   +drop
2497485   +H1x1_1
2497486   +H1x1_2
2497487   +H1x1_3
2497488   +H1x1_4
2497489   +H1x1_5
2497490   +H1x2_1
2497491   +H1x2_2
2497492   +H1x2_3
2497493   +H1x2_4
2497494   +H1x2_5
2497495   +H1x3_1
2497496   +H1x3_2
2497497   +H1x3_3
2497498   +H1x3_4
2497499   +H1x3_5
2497500   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2497501   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2497502   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2497503   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497504   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2497505   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497506   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2497507   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2497508   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2497509   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2497510   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497511   +* Renaming Into variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural10;
2497512   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497513   +length AutoNeural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural10_I_DepVar $32;
2497514   +drop AutoNeural10_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_I_DepVar;
2497515   +AutoNeural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural10_I_DepVar = I_DepVar;
2497516   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497517   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2497518   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497519   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2497520   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2497521   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2497522   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497523   +* Ensmbl47: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Voting to produce predicted target;
2497524   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497525   +array Ensmbl47_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl47_post{2} _temporary_;
2497526   +array Ensmbl47_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl47_count{2} _temporary_;
2497527   +array Ensmbl47_level{2} $32 _temporary_ (
2497528   +"1"
2497529   +"0"
2497530   +);
MPRINT(EM_DIAGRAM):   array Ensmbl47_level{2} $32 _temporary_ ( "1" "0" );
2497531   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2497532   +Ensmbl47_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{i} = 0;
2497533   +Ensmbl47_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{i} = 0;
2497534   +end;
MPRINT(EM_DIAGRAM):   end;
2497535   +if AutoNeural9_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl47_level{1} then do;
2497536   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2497537   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural9_P_DepVar1;
2497538   +end;
MPRINT(EM_DIAGRAM):   end;
2497539   +if AutoNeural11_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl47_level{1} then do;
2497540   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2497541   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural11_P_DepVar1;
2497542   +end;
MPRINT(EM_DIAGRAM):   end;
2497543   +if AutoNeural12_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl47_level{1} then do;
2497544   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2497545   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural12_P_DepVar1;
2497546   +end;
MPRINT(EM_DIAGRAM):   end;
2497547   +if AutoNeural7_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl47_level{1} then do;
2497548   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2497549   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural7_P_DepVar1;
2497550   +end;
MPRINT(EM_DIAGRAM):   end;
2497551   +if AutoNeural10_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl47_level{1} then do;
2497552   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2497553   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural10_P_DepVar1;
2497554   +end;
MPRINT(EM_DIAGRAM):   end;
2497555   +if AutoNeural9_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl47_level{2} then do;
2497556   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2497557   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural9_P_DepVar0;
2497558   +end;
MPRINT(EM_DIAGRAM):   end;
2497559   +if AutoNeural11_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl47_level{2} then do;
2497560   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2497561   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural11_P_DepVar0;
2497562   +end;
MPRINT(EM_DIAGRAM):   end;
2497563   +if AutoNeural12_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl47_level{2} then do;
2497564   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2497565   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural12_P_DepVar0;
2497566   +end;
MPRINT(EM_DIAGRAM):   end;
2497567   +if AutoNeural7_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl47_level{2} then do;
2497568   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2497569   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural7_P_DepVar0;
2497570   +end;
MPRINT(EM_DIAGRAM):   end;
2497571   +if AutoNeural10_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl47_level{2} then do;
2497572   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2497573   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural10_P_DepVar0;
2497574   +end;
MPRINT(EM_DIAGRAM):   end;
2497575   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497576   +* Ensmbl47: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Determine Into Variable;
2497577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497578   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
2497579   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
2497580   +vote_count = max(
2497581   +Ensmbl47_count{1} ,
2497582   +Ensmbl47_count{2}
2497583   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl47_count{1} , Ensmbl47_count{2} );
2497584   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2497585   +if Ensmbl47_count{i}=vote_count and Ensmbl47_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl47_count{i}=vote_count and Ensmbl47_post{i}>vote_post then do;
2497586   +I_DepVar = Ensmbl47_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl47_level{i};
2497587   +vote_post = Ensmbl47_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl47_count{i};
2497588   +end;
MPRINT(EM_DIAGRAM):   end;
2497589   +end;
MPRINT(EM_DIAGRAM):   end;
2497590   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497591   +* Ensmbl47: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Compute posterior vars using models predicting the chosen
level;
2497592   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497593   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
2497594   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2497595   +if I_DepVar = AutoNeural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural9_I_DepVar then do;
2497596   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
2497597   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
2497598   +end;
MPRINT(EM_DIAGRAM):   end;
2497599   +if I_DepVar = AutoNeural11_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural11_I_DepVar then do;
2497600   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
2497601   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
2497602   +end;
MPRINT(EM_DIAGRAM):   end;
2497603   +if I_DepVar = AutoNeural12_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural12_I_DepVar then do;
2497604   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
2497605   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
2497606   +end;
MPRINT(EM_DIAGRAM):   end;
2497607   +if I_DepVar = AutoNeural7_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural7_I_DepVar then do;
2497608   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
2497609   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
2497610   +end;
MPRINT(EM_DIAGRAM):   end;
2497611   +if I_DepVar = AutoNeural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural10_I_DepVar then do;
2497612   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
2497613   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
2497614   +end;
MPRINT(EM_DIAGRAM):   end;
2497615   +* Ensmbl47: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Averaging posterior;
2497616   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
2497617   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
2497618   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497619   +* Ensmbl47: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Producing Unformatted variable;
2497620   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497621   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2497622   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2497623   +else
2497624   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2497625   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497626   +* Ensmbl47: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Computing _WARN_ Variable;
2497627   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497628   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2497629   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2497630   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2497631   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2497631  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2497632   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2497632  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2497633   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2497633  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2497634   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2497634  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2497635   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2497635  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2497636   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2497636  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2497637   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2497637  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2497638   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2497638  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2497639   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2497639  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2497640   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2497640  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2497641   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2497641  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2497642   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2497642  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2497643   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2497643  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2497644   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2497644  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2497645   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2497645  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2497646   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2497646  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2497647   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2497647  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2497648   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2497648  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2497649   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2497649  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2497650   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2497650  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2497651   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497652   +* Ensmbl47: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Computing Residual Vars;
2497653   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497654   +if
2497655   +F_DepVar NE '1'
2497656   +AND F_DepVar NE '0'
2497657   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2497658   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2497659   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2497660   +end;
MPRINT(EM_DIAGRAM):   end;
2497661   +else do;
MPRINT(EM_DIAGRAM):   else do;
2497662   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2497663   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2497664   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2497665   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2497666   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2497667   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2497668   +END;
MPRINT(EM_DIAGRAM):   END;
2497669   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2497670    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL47_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2497671    quit;
2497672    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2497673    filename emflow
2497673  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring AUTONEURAL9_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497674    *------------------------------------------------------------*;
2497675    * Ensmbl47: Scoring AUTONEURAL9_VALIDATE data;
2497676    *------------------------------------------------------------*;
2497677    data EMWS8.Ensmbl47_VALIDATE
2497678    / view=EMWS8.Ensmbl47_VALIDATE
2497679    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_VALIDATE / view=EMWS8.Ensmbl47_VALIDATE ;
2497680    set EMWS8.AutoNeural9_VALIDATE
2497681    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_VALIDATE ;
2497682    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMFLOWSCORE.sas.
2497683   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497684   +* Ensmbl47: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Combine model for DepVar;
2497685   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497686   +* Ensmbl47: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 1 of 5;
2497687   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497688   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497689   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2497690   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2497691   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2497692   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497693   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497694   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2497695   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2497696   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2497697   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497698   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497699   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2497700   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2497701   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2497702   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497703   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497704   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2497705   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2497706   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2497707   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497708   +
2497709   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2497710   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2497710  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2497711   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2497712   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2497713   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2497714   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2497715   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2497716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497717   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2497718   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2497719   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2497720   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497722   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2497723   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497724   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2497725   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2497726   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2497727   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497728   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2497729   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2497730   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2497731   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497732   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497733   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2497734   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2497735   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2497736   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497737   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497738   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2497739   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2497740   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2497741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2497742   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2497743   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2497744   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2497745   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2497746   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2497747   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2497748   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2497749   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2497750   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2497751   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2497752   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2497753   +LENGTH _WARN_ $4
2497754   +      F_DepVar  $ 12
2497755   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2497756   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2497757   +
2497758   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2497759   +
2497760   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2497761   +
2497762   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2497763   +
2497764   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2497765   +
2497766   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2497767   +
2497768   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2497769   +
2497770   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2497771   +
2497772   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2497773   +
2497774   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2497775   +
2497776   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2497777   +
2497778   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2497779   +
2497780   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2497781   +
2497782   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2497783   +
2497784   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2497785   +
2497786   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2497787   +
2497788   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2497789   +
2497790   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2497791   +
2497792   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2497793   +
2497794   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2497795   +
2497796   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2497797   +
2497798   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2497799   +
2497800   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2497801   +
2497802   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2497803   +
2497804   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2497805   +
2497806   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2497807   +
2497808   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2497809   +
2497810   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2497811   +
2497812   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2497813   +
2497814   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2497815   +
2497816   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2497817   +
2497818   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2497819   +
2497820   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2497821   +
2497822   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2497823   +
2497824   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2497825   +
2497826   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2497827   +
2497828   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2497829   +
2497830   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2497831   +
2497832   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2497833   +
2497834   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2497835   +
2497836   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2497837   +
2497838   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2497839   +
2497840   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2497841   +
2497842   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2497843   +
2497844   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2497845   +
2497846   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2497847   +
2497848   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2497849   +
2497850   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2497851   +
2497852   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2497853   +
2497854   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2497855   +
2497856   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2497857   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2497858   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2497859   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2497860   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2497861   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497862   +end;
MPRINT(EM_DIAGRAM):   end;
2497863   +else do;
MPRINT(EM_DIAGRAM):   else do;
2497864   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2497865   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2497866   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2497867   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2497868   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2497869   +   end;
MPRINT(EM_DIAGRAM):   end;
2497870   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2497871   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2497872   +   end;
MPRINT(EM_DIAGRAM):   end;
2497873   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2497874   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2497875   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2497876   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497877   +   end;
MPRINT(EM_DIAGRAM):   end;
2497878   +end;
MPRINT(EM_DIAGRAM):   end;
2497879   +
2497880   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2497881   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2497882   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2497883   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2497884   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2497885   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497886   +end;
MPRINT(EM_DIAGRAM):   end;
2497887   +else do;
MPRINT(EM_DIAGRAM):   else do;
2497888   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2497889   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2497890   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2497891   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2497892   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2497893   +   end;
MPRINT(EM_DIAGRAM):   end;
2497894   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2497895   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2497896   +   end;
MPRINT(EM_DIAGRAM):   end;
2497897   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2497898   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2497899   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2497900   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497901   +   end;
MPRINT(EM_DIAGRAM):   end;
2497902   +end;
MPRINT(EM_DIAGRAM):   end;
2497903   +
2497904   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2497905   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2497906   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2497907   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2497908   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2497909   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497910   +end;
MPRINT(EM_DIAGRAM):   end;
2497911   +else do;
MPRINT(EM_DIAGRAM):   else do;
2497912   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2497913   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2497914   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2497915   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2497916   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2497917   +   end;
MPRINT(EM_DIAGRAM):   end;
2497918   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2497919   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2497920   +   end;
MPRINT(EM_DIAGRAM):   end;
2497921   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2497922   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2497923   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2497924   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497925   +   end;
MPRINT(EM_DIAGRAM):   end;
2497926   +end;
MPRINT(EM_DIAGRAM):   end;
2497927   +
2497928   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2497929   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2497930   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2497931   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2497932   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2497933   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497934   +end;
MPRINT(EM_DIAGRAM):   end;
2497935   +else do;
MPRINT(EM_DIAGRAM):   else do;
2497936   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2497937   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2497938   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2497939   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2497940   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2497941   +   end;
MPRINT(EM_DIAGRAM):   end;
2497942   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2497943   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2497944   +   end;
MPRINT(EM_DIAGRAM):   end;
2497945   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2497946   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2497947   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2497948   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497949   +   end;
MPRINT(EM_DIAGRAM):   end;
2497950   +end;
MPRINT(EM_DIAGRAM):   end;
2497951   +
2497952   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2497953   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2497954   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2497955   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2497956   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2497957   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497958   +end;
MPRINT(EM_DIAGRAM):   end;
2497959   +else do;
MPRINT(EM_DIAGRAM):   else do;
2497960   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2497961   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2497962   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2497963   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2497964   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2497965   +   end;
MPRINT(EM_DIAGRAM):   end;
2497966   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2497967   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2497968   +   end;
MPRINT(EM_DIAGRAM):   end;
2497969   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2497970   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2497971   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2497972   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497973   +   end;
MPRINT(EM_DIAGRAM):   end;
2497974   +end;
MPRINT(EM_DIAGRAM):   end;
2497975   +
2497976   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2497977   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2497978   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2497979   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2497980   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2497981   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497982   +end;
MPRINT(EM_DIAGRAM):   end;
2497983   +else do;
MPRINT(EM_DIAGRAM):   else do;
2497984   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2497985   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2497986   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2497987   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2497988   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2497989   +   end;
MPRINT(EM_DIAGRAM):   end;
2497990   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2497991   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2497992   +   end;
MPRINT(EM_DIAGRAM):   end;
2497993   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2497994   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2497995   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2497996   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2497997   +   end;
MPRINT(EM_DIAGRAM):   end;
2497998   +end;
MPRINT(EM_DIAGRAM):   end;
2497999   +
2498000   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2498001   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2498002   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2498003   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2498004   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2498005   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498006   +end;
MPRINT(EM_DIAGRAM):   end;
2498007   +else do;
MPRINT(EM_DIAGRAM):   else do;
2498008   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2498009   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2498010   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2498011   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2498012   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2498013   +   end;
MPRINT(EM_DIAGRAM):   end;
2498014   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2498015   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2498016   +   end;
MPRINT(EM_DIAGRAM):   end;
2498017   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2498018   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2498019   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2498020   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498021   +   end;
MPRINT(EM_DIAGRAM):   end;
2498022   +end;
MPRINT(EM_DIAGRAM):   end;
2498023   +
2498024   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2498025   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2498026   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2498027   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2498028   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2498029   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2498030   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2498031   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2498032   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2498033   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2498034   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2498035   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2498036   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2498037   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498038   +end;
MPRINT(EM_DIAGRAM):   end;
2498039   +else do;
MPRINT(EM_DIAGRAM):   else do;
2498040   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2498041   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2498042   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2498043   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2498044   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2498045   +   end;
MPRINT(EM_DIAGRAM):   end;
2498046   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2498047   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2498048   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2498049   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2498050   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2498051   +   end;
MPRINT(EM_DIAGRAM):   end;
2498052   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2498053   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2498054   +   end;
MPRINT(EM_DIAGRAM):   end;
2498055   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2498056   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2498057   +   end;
MPRINT(EM_DIAGRAM):   end;
2498058   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2498059   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2498060   +   end;
MPRINT(EM_DIAGRAM):   end;
2498061   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2498062   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2498063   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2498064   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2498065   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2498066   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2498067   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498068   +   end;
MPRINT(EM_DIAGRAM):   end;
2498069   +end;
MPRINT(EM_DIAGRAM):   end;
2498070   +
2498071   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2498072   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2498073   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2498074   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2498075   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2498076   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2498077   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2498078   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2498079   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2498080   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2498081   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2498082   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2498083   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2498084   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2498085   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498086   +end;
MPRINT(EM_DIAGRAM):   end;
2498087   +else do;
MPRINT(EM_DIAGRAM):   else do;
2498088   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2498089   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2498090   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2498091   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2498092   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2498093   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2498094   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2498095   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2498096   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2498097   +         end;
MPRINT(EM_DIAGRAM):   end;
2498098   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2498099   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2498100   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2498101   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2498102   +            end;
MPRINT(EM_DIAGRAM):   end;
2498103   +         end;
MPRINT(EM_DIAGRAM):   end;
2498104   +      end;
MPRINT(EM_DIAGRAM):   end;
2498105   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2498106   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2498107   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2498108   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2498109   +         end;
MPRINT(EM_DIAGRAM):   end;
2498110   +      end;
MPRINT(EM_DIAGRAM):   end;
2498111   +   end;
MPRINT(EM_DIAGRAM):   end;
2498112   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2498113   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2498114   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2498115   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2498116   +      end;
MPRINT(EM_DIAGRAM):   end;
2498117   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2498118   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2498119   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2498120   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2498121   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2498122   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2498123   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2498124   +         end;
MPRINT(EM_DIAGRAM):   end;
2498125   +      end;
MPRINT(EM_DIAGRAM):   end;
2498126   +   end;
MPRINT(EM_DIAGRAM):   end;
2498127   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2498128   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2498129   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2498130   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2498131   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2498132   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2498133   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498134   +   end;
MPRINT(EM_DIAGRAM):   end;
2498135   +end;
MPRINT(EM_DIAGRAM):   end;
2498136   +
2498137   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498138   +*** Checking missing input Interval
2498139   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2498140   +
2498141   +IF NMISS(
2498142   +   AcceptedCmpTotal ,
2498143   +   Age ,
2498144   +   Frq ,
2498145   +   Income ,
2498146   +   Kidhome ,
2498147   +   Mnt ,
2498148   +   MntFishProducts ,
2498149   +   MntFruits ,
2498150   +   MntGoldProds ,
2498151   +   MntMeatProducts ,
2498152   +   MntSweetProducts ,
2498153   +   MntWines ,
2498154   +   MonthsAsCustomer ,
2498155   +   NumCatalogPurchases ,
2498156   +   NumDealsPurchases ,
2498157   +   NumDistPurchases ,
2498158   +   NumStorePurchases ,
2498159   +   NumWebPurchases ,
2498160   +   NumWebVisitsMonth ,
2498161   +   RFMstat ,
2498162   +   RMntFrq ,
2498163   +   Recency ,
2498164   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2498165   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2498166   +
2498167   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498168   +END;
MPRINT(EM_DIAGRAM):   END;
2498169   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498170   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2498171   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498172   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2498173   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2498174   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2498175   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2498176   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2498177   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2498178   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2498179   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2498180   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2498181   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2498182   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2498183   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2498184   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2498185   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2498186   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2498187   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2498188   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2498189   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2498190   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2498191   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2498192   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2498193   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2498194   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2498195   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2498196   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2498197   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2498198   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2498199   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2498200   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2498201   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2498202   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2498203   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2498204   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2498205   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2498206   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2498207   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2498208   +END;
MPRINT(EM_DIAGRAM):   END;
2498209   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2498210   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2498211   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2498212   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2498213   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2498214   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2498215   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2498216   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2498217   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2498218   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2498219   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2498220   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2498221   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2498222   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2498223   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2498224   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2498225   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2498226   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2498227   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2498228   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2498229   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2498230   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2498231   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2498232   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2498233   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2498234   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2498235   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2498236   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2498237   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2498238   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2498239   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2498240   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2498241   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2498242   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2498243   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2498244   +   ELSE S_NumCatalogPurchases
2498245   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2498246   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2498247   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2498248   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2498249   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2498250   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2498251   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2498252   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2498253   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2498254   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2498255   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2498256   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2498257   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2498258   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2498259   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2498260   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2498261   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2498262   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2498263   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2498264   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2498265   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2498266   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2498267   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2498268   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2498269   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2498270   +END;
MPRINT(EM_DIAGRAM):   END;
2498271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498272   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2498273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498275   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2498276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498278   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2498279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498280   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2498281   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2498282   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2498283   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2498284   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2498285   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2498286   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2498287   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2498288   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2498289   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2498290   +          +    -1.09856598010056 * S_NumDealsPurchases
2498291   +          +    -0.10571850472514 * S_NumDistPurchases
2498292   +          +     0.11898210654227 * S_NumStorePurchases
2498293   +          +      0.5984912060231 * S_NumWebPurchases
2498294   +          +     0.78592531126942 * S_NumWebVisitsMonth
2498295   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2498296   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2498297   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 *
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 *
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts +
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 *
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines +
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases +
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases +
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases +
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 *
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2498298   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2498299   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2498300   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2498301   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2498302   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2498303   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2498304   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2498305   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2498306   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2498307   +          +    -0.84042044250624 * S_NumDealsPurchases
2498308   +          +    -0.10246261015488 * S_NumDistPurchases
2498309   +          +     0.06886149708824 * S_NumStorePurchases
2498310   +          +     0.63156910388199 * S_NumWebPurchases
2498311   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2498312   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2498313   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2498314   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 *
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 *
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts +
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 *
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 *
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 *
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 *
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq +
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2498315   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2498316   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2498317   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2498318   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2498319   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2498320   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2498321   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2498322   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2498323   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2498324   +          +     0.45393712455366 * S_NumDealsPurchases
2498325   +          +    -0.25292198053552 * S_NumDistPurchases
2498326   +          +    -1.35582215064749 * S_NumStorePurchases
2498327   +          +    -0.83132202302639 * S_NumWebPurchases
2498328   +          +     1.87116225272678 * S_NumWebVisitsMonth
2498329   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2498330   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2498331   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 *
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 *
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts +
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 *
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines +
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases +
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases +
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases +
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 *
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2498332   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2498333   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2498334   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2498335   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2498336   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 *
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 +
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 *
HigherEducationBinary0 ;
2498337   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2498338   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2498339   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2498340   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2498341   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 +
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 *
HigherEducationBinary0 ;
2498342   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2498343   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2498344   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2498345   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2498346   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 +
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 *
HigherEducationBinary0 ;
2498347   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2498348   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2498349   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2498350   +          +      0.4695898100094 * Marital_StatusDivorced
2498351   +          +    -0.52137742289262 * Marital_StatusMarried
2498352   +          +    -0.32382086914936 * Marital_StatusSingle
2498353   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle +
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation +
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced +
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle +
-0.66163012672344 * Marital_StatusTogether ;
2498354   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2498355   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2498356   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2498357   +          +    -1.04858218653238 * Marital_StatusDivorced
2498358   +          +     2.41098335093061 * Marital_StatusMarried
2498359   +          +    -1.94696044861334 * Marital_StatusSingle
2498360   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle +
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 *
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 *
Marital_StatusTogether ;
2498361   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2498362   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2498363   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2498364   +          +     0.42964114177062 * Marital_StatusDivorced
2498365   +          +    -0.38607635605816 * Marital_StatusMarried
2498366   +          +    -0.02157405407852 * Marital_StatusSingle
2498367   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle +
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation +
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced +
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle +
-0.59995619744527 * Marital_StatusTogether ;
2498368   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2498369   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2498370   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2498371   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2498372   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2498373   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2498374   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2498375   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2498376   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2498377   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2498378   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2498379   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2498380   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2498381   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2498382   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2498383   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2498384   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2498385   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2498386   +END;
MPRINT(EM_DIAGRAM):   END;
2498387   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2498388   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2498389   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2498390   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2498391   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2498392   +END;
MPRINT(EM_DIAGRAM):   END;
2498393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498394   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2498395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498396   +
2498397   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2498398   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2498399   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2498400   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2498401   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2498402   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2498403   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2498404   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2498405   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2498406   +end;
MPRINT(EM_DIAGRAM):   end;
2498407   +else do;
MPRINT(EM_DIAGRAM):   else do;
2498408   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2498409   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2498410   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2498411   +   end;
MPRINT(EM_DIAGRAM):   end;
2498412   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2498413   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2498414   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2498415   +   end;
MPRINT(EM_DIAGRAM):   end;
2498416   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2498417   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2498418   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2498419   +   end;
MPRINT(EM_DIAGRAM):   end;
2498420   +end;
MPRINT(EM_DIAGRAM):   end;
2498421   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2498422   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2498423   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 +
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2498424   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2498425   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2498426   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2498427   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2498428   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2498429   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2498430   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2498431   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2498432   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2498433   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2498434   +END;
MPRINT(EM_DIAGRAM):   END;
2498435   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2498436   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2498437   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2498438   +END;
MPRINT(EM_DIAGRAM):   END;
2498439   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2498440   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2498441   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2498442   +END;
MPRINT(EM_DIAGRAM):   END;
2498443   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2498444   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2498445   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2498446   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2498447   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2498448   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2498449   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2498450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498451   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2498452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498453   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2498454   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2498455   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2498456   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2498457   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2498458   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2498459   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2498460   +END;
MPRINT(EM_DIAGRAM):   END;
2498461   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2498462   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2498463   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2498464   +drop
2498465   +H1x1_1
2498466   +H1x1_2
2498467   +H1x1_3
2498468   +H1x1_4
2498469   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2498470   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2498471   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2498472   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498473   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2498474   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498475   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2498476   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2498477   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2498478   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2498479   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498480   +* Renaming Into variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural9;
2498481   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498482   +length AutoNeural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural9_I_DepVar $32;
2498483   +drop AutoNeural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_I_DepVar;
2498484   +AutoNeural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural9_I_DepVar = I_DepVar;
2498485   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498486   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2498487   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498488   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2498489   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2498490   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2498491   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498492   +* Ensmbl47: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 2 of 5;
2498493   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498494   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498495   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2498496   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2498497   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2498498   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2498499   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2498500   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2498501   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2498502   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2498503   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2498504   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2498505   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2498506   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2498507   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2498508   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2498509   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2498510   +LENGTH _WARN_ $4
2498511   +      F_DepVar  $ 12
2498512   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2498513   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2498514   +
2498515   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2498516   +
2498517   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2498518   +
2498519   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2498520   +
2498521   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2498522   +
2498523   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2498524   +
2498525   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2498526   +
2498527   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2498528   +
2498529   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2498530   +
2498531   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2498532   +
2498533   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2498534   +
2498535   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2498536   +
2498537   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2498538   +
2498539   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2498540   +
2498541   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2498542   +
2498543   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2498544   +
2498545   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2498546   +
2498547   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2498548   +
2498549   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2498550   +
2498551   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2498552   +
2498553   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2498554   +
2498555   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2498556   +
2498557   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2498558   +
2498559   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2498560   +
2498561   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2498562   +
2498563   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2498564   +
2498565   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2498566   +
2498567   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2498568   +
2498569   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2498570   +
2498571   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2498572   +
2498573   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2498574   +
2498575   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2498576   +
2498577   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2498578   +
2498579   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2498580   +
2498581   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2498582   +
2498583   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2498584   +
2498585   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2498586   +
2498587   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2498588   +
2498589   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2498590   +
2498591   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2498592   +
2498593   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2498594   +
2498595   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2498596   +
2498597   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2498598   +
2498599   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2498600   +
2498601   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2498602   +
2498603   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2498604   +
2498605   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2498606   +
2498607   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2498608   +
2498609   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2498610   +
2498611   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2498612   +
2498613   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2498614   +
2498615   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2498616   +
2498617   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2498618   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2498619   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2498620   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2498621   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2498622   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498623   +end;
MPRINT(EM_DIAGRAM):   end;
2498624   +else do;
MPRINT(EM_DIAGRAM):   else do;
2498625   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2498626   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2498627   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2498628   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2498629   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2498630   +   end;
MPRINT(EM_DIAGRAM):   end;
2498631   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2498632   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2498633   +   end;
MPRINT(EM_DIAGRAM):   end;
2498634   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2498635   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2498636   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2498637   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498638   +   end;
MPRINT(EM_DIAGRAM):   end;
2498639   +end;
MPRINT(EM_DIAGRAM):   end;
2498640   +
2498641   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2498642   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2498643   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2498644   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2498645   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2498646   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498647   +end;
MPRINT(EM_DIAGRAM):   end;
2498648   +else do;
MPRINT(EM_DIAGRAM):   else do;
2498649   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2498650   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2498651   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2498652   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2498653   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2498654   +   end;
MPRINT(EM_DIAGRAM):   end;
2498655   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2498656   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2498657   +   end;
MPRINT(EM_DIAGRAM):   end;
2498658   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2498659   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2498660   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2498661   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498662   +   end;
MPRINT(EM_DIAGRAM):   end;
2498663   +end;
MPRINT(EM_DIAGRAM):   end;
2498664   +
2498665   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2498666   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2498667   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2498668   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2498669   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2498670   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498671   +end;
MPRINT(EM_DIAGRAM):   end;
2498672   +else do;
MPRINT(EM_DIAGRAM):   else do;
2498673   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2498674   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2498675   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2498676   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2498677   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2498678   +   end;
MPRINT(EM_DIAGRAM):   end;
2498679   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2498680   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2498681   +   end;
MPRINT(EM_DIAGRAM):   end;
2498682   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2498683   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2498684   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2498685   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498686   +   end;
MPRINT(EM_DIAGRAM):   end;
2498687   +end;
MPRINT(EM_DIAGRAM):   end;
2498688   +
2498689   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2498690   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2498691   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2498692   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2498693   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2498694   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498695   +end;
MPRINT(EM_DIAGRAM):   end;
2498696   +else do;
MPRINT(EM_DIAGRAM):   else do;
2498697   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2498698   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2498699   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2498700   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2498701   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2498702   +   end;
MPRINT(EM_DIAGRAM):   end;
2498703   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2498704   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2498705   +   end;
MPRINT(EM_DIAGRAM):   end;
2498706   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2498707   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2498708   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2498709   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498710   +   end;
MPRINT(EM_DIAGRAM):   end;
2498711   +end;
MPRINT(EM_DIAGRAM):   end;
2498712   +
2498713   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2498714   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2498715   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2498716   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2498717   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2498718   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498719   +end;
MPRINT(EM_DIAGRAM):   end;
2498720   +else do;
MPRINT(EM_DIAGRAM):   else do;
2498721   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2498722   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2498723   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2498724   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2498725   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2498726   +   end;
MPRINT(EM_DIAGRAM):   end;
2498727   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2498728   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2498729   +   end;
MPRINT(EM_DIAGRAM):   end;
2498730   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2498731   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2498732   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2498733   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498734   +   end;
MPRINT(EM_DIAGRAM):   end;
2498735   +end;
MPRINT(EM_DIAGRAM):   end;
2498736   +
2498737   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2498738   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2498739   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2498740   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2498741   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2498742   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498743   +end;
MPRINT(EM_DIAGRAM):   end;
2498744   +else do;
MPRINT(EM_DIAGRAM):   else do;
2498745   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2498746   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2498747   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2498748   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2498749   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2498750   +   end;
MPRINT(EM_DIAGRAM):   end;
2498751   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2498752   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2498753   +   end;
MPRINT(EM_DIAGRAM):   end;
2498754   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2498755   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2498756   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2498757   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498758   +   end;
MPRINT(EM_DIAGRAM):   end;
2498759   +end;
MPRINT(EM_DIAGRAM):   end;
2498760   +
2498761   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2498762   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2498763   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2498764   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2498765   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2498766   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498767   +end;
MPRINT(EM_DIAGRAM):   end;
2498768   +else do;
MPRINT(EM_DIAGRAM):   else do;
2498769   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2498770   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2498771   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2498772   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2498773   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2498774   +   end;
MPRINT(EM_DIAGRAM):   end;
2498775   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2498776   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2498777   +   end;
MPRINT(EM_DIAGRAM):   end;
2498778   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2498779   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2498780   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2498781   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498782   +   end;
MPRINT(EM_DIAGRAM):   end;
2498783   +end;
MPRINT(EM_DIAGRAM):   end;
2498784   +
2498785   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2498786   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2498787   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2498788   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2498789   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2498790   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2498791   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2498792   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2498793   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2498794   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2498795   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2498796   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2498797   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2498798   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498799   +end;
MPRINT(EM_DIAGRAM):   end;
2498800   +else do;
MPRINT(EM_DIAGRAM):   else do;
2498801   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2498802   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2498803   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2498804   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2498805   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2498806   +   end;
MPRINT(EM_DIAGRAM):   end;
2498807   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2498808   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2498809   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2498810   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2498811   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2498812   +   end;
MPRINT(EM_DIAGRAM):   end;
2498813   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2498814   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2498815   +   end;
MPRINT(EM_DIAGRAM):   end;
2498816   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2498817   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2498818   +   end;
MPRINT(EM_DIAGRAM):   end;
2498819   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2498820   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2498821   +   end;
MPRINT(EM_DIAGRAM):   end;
2498822   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2498823   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2498824   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2498825   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2498826   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2498827   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2498828   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498829   +   end;
MPRINT(EM_DIAGRAM):   end;
2498830   +end;
MPRINT(EM_DIAGRAM):   end;
2498831   +
2498832   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2498833   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2498834   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2498835   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2498836   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2498837   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2498838   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2498839   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2498840   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2498841   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2498842   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2498843   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2498844   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2498845   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2498846   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498847   +end;
MPRINT(EM_DIAGRAM):   end;
2498848   +else do;
MPRINT(EM_DIAGRAM):   else do;
2498849   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2498850   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2498851   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2498852   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2498853   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2498854   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2498855   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2498856   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2498857   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2498858   +         end;
MPRINT(EM_DIAGRAM):   end;
2498859   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2498860   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2498861   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2498862   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2498863   +            end;
MPRINT(EM_DIAGRAM):   end;
2498864   +         end;
MPRINT(EM_DIAGRAM):   end;
2498865   +      end;
MPRINT(EM_DIAGRAM):   end;
2498866   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2498867   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2498868   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2498869   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2498870   +         end;
MPRINT(EM_DIAGRAM):   end;
2498871   +      end;
MPRINT(EM_DIAGRAM):   end;
2498872   +   end;
MPRINT(EM_DIAGRAM):   end;
2498873   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2498874   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2498875   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2498876   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2498877   +      end;
MPRINT(EM_DIAGRAM):   end;
2498878   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2498879   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2498880   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2498881   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2498882   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2498883   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2498884   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2498885   +         end;
MPRINT(EM_DIAGRAM):   end;
2498886   +      end;
MPRINT(EM_DIAGRAM):   end;
2498887   +   end;
MPRINT(EM_DIAGRAM):   end;
2498888   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2498889   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2498890   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2498891   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2498892   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2498893   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2498894   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498895   +   end;
MPRINT(EM_DIAGRAM):   end;
2498896   +end;
MPRINT(EM_DIAGRAM):   end;
2498897   +
2498898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498899   +*** Checking missing input Interval
2498900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2498901   +
2498902   +IF NMISS(
2498903   +   AcceptedCmpTotal ,
2498904   +   Age ,
2498905   +   Frq ,
2498906   +   Income ,
2498907   +   Kidhome ,
2498908   +   Mnt ,
2498909   +   MntFishProducts ,
2498910   +   MntFruits ,
2498911   +   MntGoldProds ,
2498912   +   MntMeatProducts ,
2498913   +   MntSweetProducts ,
2498914   +   MntWines ,
2498915   +   MonthsAsCustomer ,
2498916   +   NumCatalogPurchases ,
2498917   +   NumDealsPurchases ,
2498918   +   NumDistPurchases ,
2498919   +   NumStorePurchases ,
2498920   +   NumWebPurchases ,
2498921   +   NumWebVisitsMonth ,
2498922   +   RFMstat ,
2498923   +   RMntFrq ,
2498924   +   Recency ,
2498925   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2498926   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2498927   +
2498928   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2498929   +END;
MPRINT(EM_DIAGRAM):   END;
2498930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498931   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2498932   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2498933   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2498934   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2498935   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2498936   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2498937   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2498938   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2498939   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2498940   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2498941   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2498942   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2498943   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2498944   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2498945   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2498946   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2498947   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2498948   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2498949   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2498950   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2498951   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2498952   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2498953   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2498954   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2498955   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2498956   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2498957   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2498958   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2498959   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2498960   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2498961   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2498962   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2498963   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2498964   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2498965   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2498966   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2498967   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2498968   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2498969   +END;
MPRINT(EM_DIAGRAM):   END;
2498970   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2498971   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2498972   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2498973   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2498974   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2498975   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2498976   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2498977   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2498978   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2498979   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2498980   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2498981   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2498982   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2498983   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2498984   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2498985   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2498986   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2498987   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2498988   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2498989   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2498990   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2498991   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2498992   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2498993   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2498994   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2498995   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2498996   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2498997   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2498998   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2498999   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2499000   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2499001   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2499002   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2499003   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2499004   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2499005   +   ELSE S_NumCatalogPurchases
2499006   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2499007   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2499008   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2499009   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2499010   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2499011   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2499012   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2499013   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2499014   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2499015   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2499016   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2499017   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2499018   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2499019   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2499020   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2499021   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2499022   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2499023   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2499024   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2499025   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2499026   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2499027   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2499028   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2499029   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2499030   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2499031   +END;
MPRINT(EM_DIAGRAM):   END;
2499032   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499033   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2499034   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499036   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2499037   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499038   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499039   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2499040   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499041   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2499042   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2499043   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2499044   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2499045   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2499046   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2499047   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2499048   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2499049   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2499050   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2499051   +          +     0.19770934886328 * S_NumDealsPurchases
2499052   +          +      0.0515215988111 * S_NumDistPurchases
2499053   +          +    -0.34569346346089 * S_NumStorePurchases
2499054   +          +    -0.27122293596124 * S_NumWebPurchases
2499055   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2499056   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2499057   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2499058   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 *
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 *
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts +
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 *
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 *
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 *
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 *
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq +
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2499059   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2499060   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2499061   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2499062   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2499063   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2499064   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2499065   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2499066   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2499067   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2499068   +          +     0.54308887602031 * S_NumDealsPurchases
2499069   +          +    -0.22507315320192 * S_NumDistPurchases
2499070   +          +    -0.79861387328361 * S_NumStorePurchases
2499071   +          +    -0.45467494002747 * S_NumWebPurchases
2499072   +          +      0.2119048824613 * S_NumWebVisitsMonth
2499073   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2499074   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2499075   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 *
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 *
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts +
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 *
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 *
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 *
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 *
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq +
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2499076   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2499077   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2499078   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2499079   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2499080   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2499081   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2499082   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2499083   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2499084   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2499085   +          +     -0.0771083149302 * S_NumDealsPurchases
2499086   +          +     0.03403621221162 * S_NumDistPurchases
2499087   +          +     0.61303946422025 * S_NumStorePurchases
2499088   +          +     0.27126793634053 * S_NumWebPurchases
2499089   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2499090   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2499091   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2499092   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 *
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 *
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts +
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 *
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 *
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 *
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 *
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq +
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2499093   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2499094   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2499095   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2499096   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2499097   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2499098   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2499099   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2499100   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2499101   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2499102   +          +     0.29894603062327 * S_NumDealsPurchases
2499103   +          +     0.07614620530875 * S_NumDistPurchases
2499104   +          +     0.15402335009896 * S_NumStorePurchases
2499105   +          +     0.10615749096863 * S_NumWebPurchases
2499106   +          +     0.41962286816879 * S_NumWebVisitsMonth
2499107   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2499108   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2499109   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome +
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 *
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts +
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 *
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 *
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 *
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 *
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq +
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2499110   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2499111   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2499112   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2499113   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2499114   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2499115   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2499116   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2499117   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2499118   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2499119   +          +     0.14392502416642 * S_NumDealsPurchases
2499120   +          +    -0.10026304978633 * S_NumDistPurchases
2499121   +          +     -0.0588453022746 * S_NumStorePurchases
2499122   +          +     0.24799398610395 * S_NumWebPurchases
2499123   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2499124   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2499125   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2499126   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 *
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 *
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts +
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 *
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines +
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases +
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases +
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases +
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 *
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2499127   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2499128   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2499129   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2499130   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2499131   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2499132   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2499133   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2499134   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2499135   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2499136   +          +     0.08149600854964 * S_NumDealsPurchases
2499137   +          +     0.16873541613513 * S_NumDistPurchases
2499138   +          +    -0.20437343413446 * S_NumStorePurchases
2499139   +          +     -0.1671107527288 * S_NumWebPurchases
2499140   +          +     0.03677043100993 * S_NumWebVisitsMonth
2499141   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2499142   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2499143   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 *
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 *
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts +
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 *
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 *
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 *
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 *
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq +
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2499144   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2499145   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2499146   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2499147   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2499148   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 *
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 +
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 *
HigherEducationBinary0 ;
2499149   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2499150   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2499151   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2499152   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2499153   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 *
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 +
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 *
HigherEducationBinary0 ;
2499154   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2499155   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2499156   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2499157   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2499158   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 *
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 +
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 *
HigherEducationBinary0 ;
2499159   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2499160   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2499161   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2499162   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2499163   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 +
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 *
HigherEducationBinary0 ;
2499164   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2499165   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2499166   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2499167   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2499168   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 +
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 *
HigherEducationBinary0 ;
2499169   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2499170   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2499171   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2499172   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2499173   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 *
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 +
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 *
HigherEducationBinary0 ;
2499174   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2499175   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2499176   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2499177   +          +    -0.31045295887604 * Marital_StatusDivorced
2499178   +          +    -0.01109401001539 * Marital_StatusMarried
2499179   +          +     0.01325135981025 * Marital_StatusSingle
2499180   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried +
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2499181   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2499182   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2499183   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2499184   +          +     0.02275101861599 * Marital_StatusDivorced
2499185   +          +     0.20271548664903 * Marital_StatusMarried
2499186   +          +    -0.12132069210718 * Marital_StatusSingle
2499187   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle +
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 *
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 *
Marital_StatusTogether ;
2499188   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2499189   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2499190   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2499191   +          +     -0.4992959703281 * Marital_StatusDivorced
2499192   +          +     0.62071659624138 * Marital_StatusMarried
2499193   +          +    -0.21776202274494 * Marital_StatusSingle
2499194   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle +
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 *
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 *
Marital_StatusTogether ;
2499195   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2499196   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2499197   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2499198   +          +     0.05626212670587 * Marital_StatusDivorced
2499199   +          +     0.14353891364597 * Marital_StatusMarried
2499200   +          +    -0.29006765622997 * Marital_StatusSingle
2499201   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle +
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation +
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced +
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle +
0.05503638282535 * Marital_StatusTogether ;
2499202   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2499203   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2499204   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2499205   +          +    -0.21206913700604 * Marital_StatusDivorced
2499206   +          +     0.58790643614629 * Marital_StatusMarried
2499207   +          +    -0.65995982578062 * Marital_StatusSingle
2499208   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle +
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation +
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced +
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle +
0.49642503732428 * Marital_StatusTogether ;
2499209   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2499210   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2499211   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2499212   +          +    -0.05047370516008 * Marital_StatusDivorced
2499213   +          +    -0.23139090963669 * Marital_StatusMarried
2499214   +          +     0.04816197463249 * Marital_StatusSingle
2499215   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle +
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation +
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced +
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle +
0.04977890114896 * Marital_StatusTogether ;
2499216   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2499217   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2499218   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2499219   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2499220   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2499221   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2499222   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2499223   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2499224   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2499225   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2499226   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2499227   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2499228   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2499229   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2499230   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2499231   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2499232   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2499233   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2499234   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2499235   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2499236   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2499237   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2499238   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2499239   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2499240   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2499241   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2499242   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2499243   +END;
MPRINT(EM_DIAGRAM):   END;
2499244   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2499245   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2499246   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2499247   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2499248   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2499249   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2499250   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2499251   +END;
MPRINT(EM_DIAGRAM):   END;
2499252   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499253   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2499254   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499255   +
2499256   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2499257   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2499258   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2499259   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2499260   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2499261   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499262   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2499263   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2499264   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2499265   +end;
MPRINT(EM_DIAGRAM):   end;
2499266   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499267   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2499268   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2499269   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2499270   +   end;
MPRINT(EM_DIAGRAM):   end;
2499271   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2499272   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2499273   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2499274   +   end;
MPRINT(EM_DIAGRAM):   end;
2499275   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499276   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2499277   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2499278   +   end;
MPRINT(EM_DIAGRAM):   end;
2499279   +end;
MPRINT(EM_DIAGRAM):   end;
2499280   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2499281   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2499282   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2499283   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 +
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 +
-0.0100306049679 * H1x1_6 ;
2499284   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2499285   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2499286   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2499287   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2499288   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2499289   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2499290   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2499291   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2499292   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2499293   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2499294   +END;
MPRINT(EM_DIAGRAM):   END;
2499295   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2499296   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2499297   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2499298   +END;
MPRINT(EM_DIAGRAM):   END;
2499299   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2499300   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2499301   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2499302   +END;
MPRINT(EM_DIAGRAM):   END;
2499303   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2499304   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2499305   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2499306   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2499307   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2499308   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2499309   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2499310   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499311   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2499312   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499313   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2499314   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2499315   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2499316   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2499317   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2499318   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2499319   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2499320   +END;
MPRINT(EM_DIAGRAM):   END;
2499321   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2499322   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2499323   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2499324   +drop
2499325   +H1x1_1
2499326   +H1x1_2
2499327   +H1x1_3
2499328   +H1x1_4
2499329   +H1x1_5
2499330   +H1x1_6
2499331   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2499332   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2499333   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2499334   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499335   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2499336   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499337   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2499338   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2499339   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2499340   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2499341   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499342   +* Renaming Into variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural11;
2499343   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499344   +length AutoNeural11_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural11_I_DepVar $32;
2499345   +drop AutoNeural11_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_I_DepVar;
2499346   +AutoNeural11_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural11_I_DepVar = I_DepVar;
2499347   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499348   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2499349   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499350   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2499351   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2499352   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2499353   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499354   +* Ensmbl47: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 3 of 5;
2499355   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499356   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499357   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2499358   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2499359   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2499360   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2499361   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2499362   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2499363   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2499364   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2499365   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2499366   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2499367   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2499368   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2499369   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2499370   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2499371   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2499372   +LENGTH _WARN_ $4
2499373   +      F_DepVar  $ 12
2499374   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2499375   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2499376   +
2499377   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2499378   +
2499379   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2499380   +
2499381   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2499382   +
2499383   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2499384   +
2499385   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2499386   +
2499387   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2499388   +
2499389   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2499390   +
2499391   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2499392   +
2499393   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2499394   +
2499395   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2499396   +
2499397   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2499398   +
2499399   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2499400   +
2499401   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2499402   +
2499403   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2499404   +
2499405   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2499406   +
2499407   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2499408   +
2499409   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2499410   +
2499411   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2499412   +
2499413   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2499414   +
2499415   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2499416   +
2499417   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2499418   +
2499419   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2499420   +
2499421   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2499422   +
2499423   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2499424   +
2499425   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2499426   +
2499427   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2499428   +
2499429   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2499430   +
2499431   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2499432   +
2499433   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2499434   +
2499435   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2499436   +
2499437   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2499438   +
2499439   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2499440   +
2499441   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2499442   +
2499443   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2499444   +
2499445   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2499446   +
2499447   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2499448   +
2499449   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2499450   +
2499451   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2499452   +
2499453   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2499454   +
2499455   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2499456   +
2499457   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2499458   +
2499459   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2499460   +
2499461   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2499462   +
2499463   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2499464   +
2499465   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2499466   +
2499467   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2499468   +
2499469   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2499470   +
2499471   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2499472   +
2499473   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2499474   +
2499475   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2499476   +
2499477   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2499478   +
2499479   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2499480   +
2499481   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2499482   +
2499483   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2499484   +
2499485   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2499486   +
2499487   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2499488   +
2499489   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2499490   +
2499491   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2499492   +
2499493   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2499494   +
2499495   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2499496   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2499497   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2499498   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2499499   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499500   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499501   +end;
MPRINT(EM_DIAGRAM):   end;
2499502   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499503   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499504   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2499505   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499506   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2499507   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2499508   +   end;
MPRINT(EM_DIAGRAM):   end;
2499509   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2499510   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2499511   +   end;
MPRINT(EM_DIAGRAM):   end;
2499512   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499513   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2499514   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499515   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499516   +   end;
MPRINT(EM_DIAGRAM):   end;
2499517   +end;
MPRINT(EM_DIAGRAM):   end;
2499518   +
2499519   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2499520   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2499521   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2499522   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2499523   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499524   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499525   +end;
MPRINT(EM_DIAGRAM):   end;
2499526   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499527   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499528   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2499529   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499530   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2499531   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2499532   +   end;
MPRINT(EM_DIAGRAM):   end;
2499533   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2499534   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2499535   +   end;
MPRINT(EM_DIAGRAM):   end;
2499536   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499537   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2499538   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499539   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499540   +   end;
MPRINT(EM_DIAGRAM):   end;
2499541   +end;
MPRINT(EM_DIAGRAM):   end;
2499542   +
2499543   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2499544   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2499545   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2499546   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2499547   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499548   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499549   +end;
MPRINT(EM_DIAGRAM):   end;
2499550   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499551   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499552   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2499553   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499554   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2499555   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2499556   +   end;
MPRINT(EM_DIAGRAM):   end;
2499557   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2499558   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2499559   +   end;
MPRINT(EM_DIAGRAM):   end;
2499560   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499561   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2499562   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499563   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499564   +   end;
MPRINT(EM_DIAGRAM):   end;
2499565   +end;
MPRINT(EM_DIAGRAM):   end;
2499566   +
2499567   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2499568   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2499569   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2499570   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2499571   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499572   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499573   +end;
MPRINT(EM_DIAGRAM):   end;
2499574   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499575   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499576   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2499577   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499578   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2499579   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2499580   +   end;
MPRINT(EM_DIAGRAM):   end;
2499581   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2499582   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2499583   +   end;
MPRINT(EM_DIAGRAM):   end;
2499584   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499585   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2499586   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499587   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499588   +   end;
MPRINT(EM_DIAGRAM):   end;
2499589   +end;
MPRINT(EM_DIAGRAM):   end;
2499590   +
2499591   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2499592   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2499593   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2499594   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2499595   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499596   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499597   +end;
MPRINT(EM_DIAGRAM):   end;
2499598   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499599   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499600   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2499601   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499602   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2499603   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2499604   +   end;
MPRINT(EM_DIAGRAM):   end;
2499605   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2499606   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2499607   +   end;
MPRINT(EM_DIAGRAM):   end;
2499608   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499609   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2499610   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499611   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499612   +   end;
MPRINT(EM_DIAGRAM):   end;
2499613   +end;
MPRINT(EM_DIAGRAM):   end;
2499614   +
2499615   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2499616   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2499617   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2499618   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2499619   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499620   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499621   +end;
MPRINT(EM_DIAGRAM):   end;
2499622   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499623   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499624   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2499625   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499626   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2499627   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2499628   +   end;
MPRINT(EM_DIAGRAM):   end;
2499629   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2499630   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2499631   +   end;
MPRINT(EM_DIAGRAM):   end;
2499632   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499633   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2499634   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499635   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499636   +   end;
MPRINT(EM_DIAGRAM):   end;
2499637   +end;
MPRINT(EM_DIAGRAM):   end;
2499638   +
2499639   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2499640   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2499641   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2499642   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2499643   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499644   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499645   +end;
MPRINT(EM_DIAGRAM):   end;
2499646   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499647   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2499648   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2499649   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499650   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2499651   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2499652   +   end;
MPRINT(EM_DIAGRAM):   end;
2499653   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2499654   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2499655   +   end;
MPRINT(EM_DIAGRAM):   end;
2499656   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499657   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2499658   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499659   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499660   +   end;
MPRINT(EM_DIAGRAM):   end;
2499661   +end;
MPRINT(EM_DIAGRAM):   end;
2499662   +
2499663   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2499664   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2499665   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2499666   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2499667   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2499668   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2499669   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2499670   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2499671   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2499672   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2499673   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2499674   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2499675   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499676   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499677   +end;
MPRINT(EM_DIAGRAM):   end;
2499678   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499679   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2499680   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2499681   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499682   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2499683   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2499684   +   end;
MPRINT(EM_DIAGRAM):   end;
2499685   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2499686   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2499687   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2499688   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2499689   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2499690   +   end;
MPRINT(EM_DIAGRAM):   end;
2499691   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2499692   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2499693   +   end;
MPRINT(EM_DIAGRAM):   end;
2499694   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2499695   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2499696   +   end;
MPRINT(EM_DIAGRAM):   end;
2499697   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2499698   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2499699   +   end;
MPRINT(EM_DIAGRAM):   end;
2499700   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499701   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2499702   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2499703   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2499704   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2499705   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499706   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499707   +   end;
MPRINT(EM_DIAGRAM):   end;
2499708   +end;
MPRINT(EM_DIAGRAM):   end;
2499709   +
2499710   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2499711   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2499712   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2499713   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2499714   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2499715   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2499716   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2499717   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2499718   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2499719   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2499720   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2499721   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2499722   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2499723   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2499724   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499725   +end;
MPRINT(EM_DIAGRAM):   end;
2499726   +else do;
MPRINT(EM_DIAGRAM):   else do;
2499727   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2499728   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2499729   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2499730   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2499731   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2499732   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2499733   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2499734   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2499735   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2499736   +         end;
MPRINT(EM_DIAGRAM):   end;
2499737   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2499738   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2499739   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2499740   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2499741   +            end;
MPRINT(EM_DIAGRAM):   end;
2499742   +         end;
MPRINT(EM_DIAGRAM):   end;
2499743   +      end;
MPRINT(EM_DIAGRAM):   end;
2499744   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2499745   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2499746   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2499747   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2499748   +         end;
MPRINT(EM_DIAGRAM):   end;
2499749   +      end;
MPRINT(EM_DIAGRAM):   end;
2499750   +   end;
MPRINT(EM_DIAGRAM):   end;
2499751   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2499752   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2499753   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2499754   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2499755   +      end;
MPRINT(EM_DIAGRAM):   end;
2499756   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2499757   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2499758   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2499759   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2499760   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2499761   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2499762   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2499763   +         end;
MPRINT(EM_DIAGRAM):   end;
2499764   +      end;
MPRINT(EM_DIAGRAM):   end;
2499765   +   end;
MPRINT(EM_DIAGRAM):   end;
2499766   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2499767   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2499768   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2499769   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2499770   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2499771   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2499772   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499773   +   end;
MPRINT(EM_DIAGRAM):   end;
2499774   +end;
MPRINT(EM_DIAGRAM):   end;
2499775   +
2499776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499777   +*** Checking missing input Interval
2499778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2499779   +
2499780   +IF NMISS(
2499781   +   AcceptedCmpTotal ,
2499782   +   Age ,
2499783   +   Frq ,
2499784   +   Income ,
2499785   +   Kidhome ,
2499786   +   Mnt ,
2499787   +   MntFishProducts ,
2499788   +   MntFruits ,
2499789   +   MntGoldProds ,
2499790   +   MntMeatProducts ,
2499791   +   MntSweetProducts ,
2499792   +   MntWines ,
2499793   +   MonthsAsCustomer ,
2499794   +   NumCatalogPurchases ,
2499795   +   NumDealsPurchases ,
2499796   +   NumDistPurchases ,
2499797   +   NumStorePurchases ,
2499798   +   NumWebPurchases ,
2499799   +   NumWebVisitsMonth ,
2499800   +   RFMstat ,
2499801   +   RMntFrq ,
2499802   +   Recency ,
2499803   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2499804   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2499805   +
2499806   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2499807   +END;
MPRINT(EM_DIAGRAM):   END;
2499808   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499809   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2499810   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499811   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2499812   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2499813   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2499814   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2499815   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2499816   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2499817   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2499818   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2499819   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2499820   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2499821   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2499822   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2499823   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2499824   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2499825   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2499826   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2499827   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2499828   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2499829   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2499830   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2499831   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2499832   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2499833   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2499834   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2499835   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2499836   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2499837   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2499838   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2499839   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2499840   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2499841   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2499842   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2499843   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2499844   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2499845   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2499846   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2499847   +END;
MPRINT(EM_DIAGRAM):   END;
2499848   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2499849   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2499850   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2499851   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2499852   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2499853   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2499854   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2499855   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2499856   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2499857   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2499858   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2499859   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2499860   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2499861   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2499862   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2499863   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2499864   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2499865   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2499866   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2499867   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2499868   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2499869   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2499870   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2499871   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2499872   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2499873   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2499874   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2499875   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2499876   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2499877   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2499878   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2499879   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2499880   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2499881   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2499882   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2499883   +   ELSE S_NumCatalogPurchases
2499884   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2499885   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2499886   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2499887   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2499888   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2499889   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2499890   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2499891   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2499892   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2499893   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2499894   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2499895   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2499896   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2499897   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2499898   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2499899   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2499900   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2499901   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2499902   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2499903   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2499904   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2499905   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2499906   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2499907   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2499908   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2499909   +END;
MPRINT(EM_DIAGRAM):   END;
2499910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499911   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2499912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499914   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2499915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499916   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499917   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2499918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2499919   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2499920   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2499921   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2499922   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2499923   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2499924   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2499925   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2499926   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2499927   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2499928   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2499929   +          +      0.1112677116841 * S_NumDealsPurchases
2499930   +          +     0.01563584187072 * S_NumDistPurchases
2499931   +          +     0.19193969522995 * S_NumStorePurchases
2499932   +          +      0.3133556199984 * S_NumWebPurchases
2499933   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2499934   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2499935   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2499936   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 *
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 *
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts +
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 *
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 *
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 *
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 *
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq +
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2499937   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2499938   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2499939   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2499940   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2499941   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2499942   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2499943   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2499944   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2499945   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2499946   +          +     0.30225032753275 * S_NumDealsPurchases
2499947   +          +     0.33833359923595 * S_NumDistPurchases
2499948   +          +    -0.20255599575849 * S_NumStorePurchases
2499949   +          +    -0.12040071168942 * S_NumWebPurchases
2499950   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2499951   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2499952   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2499953   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 *
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 *
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts +
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 *
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 *
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 *
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 *
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq +
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2499954   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2499955   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2499956   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2499957   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2499958   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2499959   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2499960   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2499961   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2499962   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2499963   +          +     0.16792903091627 * S_NumDealsPurchases
2499964   +          +    -0.37408945626745 * S_NumDistPurchases
2499965   +          +    -0.18067262995566 * S_NumStorePurchases
2499966   +          +     0.21192146789881 * S_NumWebPurchases
2499967   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2499968   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2499969   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2499970   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 *
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 *
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts +
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 *
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines +
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases +
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases +
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases +
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 *
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2499971   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2499972   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2499973   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2499974   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2499975   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2499976   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2499977   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2499978   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2499979   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2499980   +          +     0.29407429399136 * S_NumDealsPurchases
2499981   +          +     0.01610745252195 * S_NumDistPurchases
2499982   +          +    -0.17767939085628 * S_NumStorePurchases
2499983   +          +    -0.15168958538637 * S_NumWebPurchases
2499984   +          +     0.17433622143988 * S_NumWebVisitsMonth
2499985   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2499986   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2499987   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 *
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 *
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts +
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 *
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines +
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases +
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases +
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases +
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 *
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2499988   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2499989   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2499990   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2499991   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2499992   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2499993   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2499994   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2499995   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2499996   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2499997   +          +    -0.37976451362108 * S_NumDealsPurchases
2499998   +          +    -0.17027731520801 * S_NumDistPurchases
2499999   +          +     0.59849493667087 * S_NumStorePurchases
2500000   +          +     0.65481480560301 * S_NumWebPurchases
2500001   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2500002   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2500003   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2500004   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 *
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 *
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts +
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 *
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines +
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases +
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases +
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases +
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 *
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2500005   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2500006   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2500007   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2500008   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2500009   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2500010   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2500011   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2500012   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2500013   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2500014   +          +    -0.07686699131623 * S_NumDealsPurchases
2500015   +          +    -0.07220460738926 * S_NumDistPurchases
2500016   +          +    -0.06554027468389 * S_NumStorePurchases
2500017   +          +     0.10422838158001 * S_NumWebPurchases
2500018   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2500019   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2500020   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2500021   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 *
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 *
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts +
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 *
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 *
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 *
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 *
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq +
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2500022   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2500023   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2500024   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2500025   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2500026   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2500027   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2500028   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2500029   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2500030   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2500031   +          +    -0.07920122387563 * S_NumDealsPurchases
2500032   +          +      0.3649244061347 * S_NumDistPurchases
2500033   +          +     0.36475853688403 * S_NumStorePurchases
2500034   +          +     0.02153991404063 * S_NumWebPurchases
2500035   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2500036   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2500037   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2500038   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 *
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 *
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts +
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 *
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 *
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 *
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 *
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq +
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2500039   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2500040   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2500041   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2500042   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2500043   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 *
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 +
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 *
HigherEducationBinary0 ;
2500044   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2500045   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2500046   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2500047   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2500048   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 +
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 *
HigherEducationBinary0 ;
2500049   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2500050   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2500051   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2500052   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2500053   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 *
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 +
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 *
HigherEducationBinary0 ;
2500054   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2500055   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2500056   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2500057   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2500058   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 +
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 *
HigherEducationBinary0 ;
2500059   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2500060   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2500061   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2500062   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2500063   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 +
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 *
HigherEducationBinary0 ;
2500064   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2500065   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2500066   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2500067   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2500068   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 *
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 +
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 *
HigherEducationBinary0 ;
2500069   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2500070   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2500071   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2500072   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2500073   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 *
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 +
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 *
HigherEducationBinary0 ;
2500074   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2500075   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2500076   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2500077   +          +     0.07744097241553 * Marital_StatusDivorced
2500078   +          +     -0.0247463100385 * Marital_StatusMarried
2500079   +          +     0.05804915234573 * Marital_StatusSingle
2500080   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle +
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation +
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced +
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle +
-0.08320125047871 * Marital_StatusTogether ;
2500081   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2500082   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2500083   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2500084   +          +     0.01390668926269 * Marital_StatusDivorced
2500085   +          +     0.01136282152074 * Marital_StatusMarried
2500086   +          +     0.12450246418789 * Marital_StatusSingle
2500087   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle +
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 *
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 *
Marital_StatusTogether ;
2500088   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2500089   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2500090   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2500091   +          +    -0.19133456931879 * Marital_StatusDivorced
2500092   +          +     0.56263566654996 * Marital_StatusMarried
2500093   +          +    -0.42172822038882 * Marital_StatusSingle
2500094   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle +
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 *
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 *
Marital_StatusTogether ;
2500095   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2500096   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2500097   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2500098   +          +    -0.19871205065609 * Marital_StatusDivorced
2500099   +          +    -0.14730795681603 * Marital_StatusMarried
2500100   +          +     0.05055432510362 * Marital_StatusSingle
2500101   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle +
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation +
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced +
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle +
0.06558965292395 * Marital_StatusTogether ;
2500102   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2500103   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2500104   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2500105   +          +    -0.35623807358995 * Marital_StatusDivorced
2500106   +          +     0.30324726283965 * Marital_StatusMarried
2500107   +          +    -0.18561093467927 * Marital_StatusSingle
2500108   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle +
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation +
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced +
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle +
0.395424582152 * Marital_StatusTogether ;
2500109   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2500110   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2500111   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2500112   +          +     0.11581014663368 * Marital_StatusDivorced
2500113   +          +    -0.31070638037659 * Marital_StatusMarried
2500114   +          +     0.17131747253949 * Marital_StatusSingle
2500115   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle +
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 *
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 *
Marital_StatusTogether ;
2500116   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2500117   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2500118   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2500119   +          +    -0.42450599871892 * Marital_StatusDivorced
2500120   +          +     0.48162905075885 * Marital_StatusMarried
2500121   +          +    -0.26618507749283 * Marital_StatusSingle
2500122   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle +
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 *
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 *
Marital_StatusTogether ;
2500123   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2500124   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2500125   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2500126   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2500127   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2500128   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2500129   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2500130   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2500131   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2500132   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2500133   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2500134   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2500135   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2500136   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2500137   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2500138   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2500139   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2500140   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2500141   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2500142   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2500143   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2500144   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2500145   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2500146   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2500147   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2500148   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2500149   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2500150   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2500151   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2500152   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 *
H1x1_7 ;
2500153   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2500154   +END;
MPRINT(EM_DIAGRAM):   END;
2500155   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2500156   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2500157   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2500158   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2500159   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2500160   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2500161   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2500162   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2500163   +END;
MPRINT(EM_DIAGRAM):   END;
2500164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500165   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2500166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500167   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2500168   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2500169   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2500170   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2500171   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2500172   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2500173   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2500174   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2500175   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2500176   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2500177   +          +     1.96719021971894 * S_NumDealsPurchases
2500178   +          +    -0.44535354794671 * S_NumDistPurchases
2500179   +          +    -0.54827762736866 * S_NumStorePurchases
2500180   +          +     1.02703310241897 * S_NumWebPurchases
2500181   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2500182   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2500183   +        S_RMntFrq  +       0.651688575044 * S_Recency
2500184   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 *
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 *
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts +
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 *
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 *
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 *
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 *
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq +
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2500185   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2500186   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2500187   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2500188   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2500189   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2500190   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2500191   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2500192   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2500193   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2500194   +          +     1.34659447971131 * S_NumDealsPurchases
2500195   +          +    -0.51624251310423 * S_NumDistPurchases
2500196   +          +      -1.283121574848 * S_NumStorePurchases
2500197   +          +    -1.83517806228926 * S_NumWebPurchases
2500198   +          +     0.51321339475285 * S_NumWebVisitsMonth
2500199   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2500200   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2500201   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 *
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 *
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts +
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 *
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines +
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases +
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases +
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases +
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 *
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2500202   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2500203   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2500204   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2500205   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2500206   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2500207   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2500208   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2500209   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2500210   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2500211   +          +     0.67492297345004 * S_NumDealsPurchases
2500212   +          +    -0.40437875375926 * S_NumDistPurchases
2500213   +          +     0.36322603681545 * S_NumStorePurchases
2500214   +          +    -1.15315070635524 * S_NumWebPurchases
2500215   +          +     1.20707272201156 * S_NumWebVisitsMonth
2500216   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2500217   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2500218   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 *
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 *
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts +
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 *
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 *
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 *
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 *
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq +
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2500219   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2500220   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2500221   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2500222   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2500223   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2500224   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2500225   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2500226   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2500227   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2500228   +          +    -0.41427983342148 * S_NumDealsPurchases
2500229   +          +    -0.22714305629205 * S_NumDistPurchases
2500230   +          +    -0.78763182048862 * S_NumStorePurchases
2500231   +          +    -0.26669253451501 * S_NumWebPurchases
2500232   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2500233   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2500234   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2500235   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 *
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 *
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts +
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 *
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines +
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases +
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases +
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases +
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 *
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2500236   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2500237   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2500238   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2500239   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2500240   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2500241   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2500242   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2500243   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2500244   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2500245   +          +      0.7697882092212 * S_NumDealsPurchases
2500246   +          +     0.51864835453056 * S_NumDistPurchases
2500247   +          +    -1.18320366630444 * S_NumStorePurchases
2500248   +          +     -0.6608394639529 * S_NumWebPurchases
2500249   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2500250   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2500251   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2500252   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 *
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 *
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts +
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 *
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 *
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 *
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 *
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq +
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2500253   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2500254   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2500255   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2500256   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2500257   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2500258   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2500259   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2500260   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2500261   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2500262   +          +     1.45707983202269 * S_NumDealsPurchases
2500263   +          +     0.83341887728641 * S_NumDistPurchases
2500264   +          +    -0.36664450469423 * S_NumStorePurchases
2500265   +          +     0.63911579043339 * S_NumWebPurchases
2500266   +          +     0.67144790303554 * S_NumWebVisitsMonth
2500267   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2500268   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2500269   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 *
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 *
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts +
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 *
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines +
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases +
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases +
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases +
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 *
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2500270   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2500271   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2500272   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2500273   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2500274   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2500275   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2500276   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2500277   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2500278   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2500279   +          +     0.68491896063662 * S_NumDealsPurchases
2500280   +          +      0.5386312048592 * S_NumDistPurchases
2500281   +          +     1.28108942503912 * S_NumStorePurchases
2500282   +          +    -0.88282270505969 * S_NumWebPurchases
2500283   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2500284   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2500285   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2500286   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome +
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 *
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts +
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 *
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 *
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 *
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 *
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq +
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2500287   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2500288   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2500289   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2500290   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2500291   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 *
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 +
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 *
HigherEducationBinary0 ;
2500292   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2500293   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2500294   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2500295   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2500296   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 +
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 *
HigherEducationBinary0 ;
2500297   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2500298   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2500299   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2500300   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2500301   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 +
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 *
HigherEducationBinary0 ;
2500302   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2500303   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2500304   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2500305   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2500306   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 *
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 +
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 *
HigherEducationBinary0 ;
2500307   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2500308   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2500309   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2500310   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2500311   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 +
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 *
HigherEducationBinary0 ;
2500312   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2500313   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2500314   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2500315   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2500316   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 *
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 +
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 *
HigherEducationBinary0 ;
2500317   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2500318   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2500319   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2500320   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2500321   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 *
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 +
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 *
HigherEducationBinary0 ;
2500322   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2500323   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2500324   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2500325   +          +    -3.97961426831865 * Marital_StatusDivorced
2500326   +          +     0.00932639813867 * Marital_StatusMarried
2500327   +          +     1.29310186574718 * Marital_StatusSingle
2500328   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle +
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation +
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced +
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle +
1.60940802221114 * Marital_StatusTogether ;
2500329   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2500330   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2500331   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2500332   +          +    -0.30358516578188 * Marital_StatusDivorced
2500333   +          +    -0.96176709360703 * Marital_StatusMarried
2500334   +          +     1.26977690921649 * Marital_StatusSingle
2500335   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle +
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 *
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 *
Marital_StatusTogether ;
2500336   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2500337   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2500338   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2500339   +          +     0.55272671490757 * Marital_StatusDivorced
2500340   +          +      0.1499239288334 * Marital_StatusMarried
2500341   +          +    -0.46840941760604 * Marital_StatusSingle
2500342   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle +
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 *
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 *
Marital_StatusTogether ;
2500343   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2500344   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2500345   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2500346   +          +      -1.240735370138 * Marital_StatusDivorced
2500347   +          +    -1.20089294883599 * Marital_StatusMarried
2500348   +          +     0.57492674426149 * Marital_StatusSingle
2500349   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle +
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation +
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced +
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle +
1.44189292990255 * Marital_StatusTogether ;
2500350   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2500351   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2500352   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2500353   +          +     1.05435442049802 * Marital_StatusDivorced
2500354   +          +      0.3571256349717 * Marital_StatusMarried
2500355   +          +    -0.44741267266578 * Marital_StatusSingle
2500356   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle +
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation +
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced +
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle +
0.02948931507994 * Marital_StatusTogether ;
2500357   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2500358   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2500359   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2500360   +          +     2.06026721980778 * Marital_StatusDivorced
2500361   +          +    -0.49583258645166 * Marital_StatusMarried
2500362   +          +    -1.14824900824474 * Marital_StatusSingle
2500363   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle +
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation +
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced +
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle +
0.57690093967839 * Marital_StatusTogether ;
2500364   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2500365   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2500366   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2500367   +          +     -1.1890908607447 * Marital_StatusDivorced
2500368   +          +    -0.46668809907123 * Marital_StatusMarried
2500369   +          +     1.20342564763422 * Marital_StatusSingle
2500370   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle +
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation +
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced +
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle +
-1.75740662969578 * Marital_StatusTogether ;
2500371   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2500372   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2500373   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2500374   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2500375   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2500376   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2500377   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2500378   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2500379   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2500380   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2500381   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2500382   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2500383   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2500384   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2500385   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2500386   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2500387   +END;
MPRINT(EM_DIAGRAM):   END;
2500388   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2500389   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2500390   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2500391   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2500392   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2500393   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2500394   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2500395   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2500396   +END;
MPRINT(EM_DIAGRAM):   END;
2500397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500398   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2500399   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500400   +
2500401   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2500402   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2500403   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2500404   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2500405   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2500406   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2500407   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2500408   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2500409   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2500410   +end;
MPRINT(EM_DIAGRAM):   end;
2500411   +else do;
MPRINT(EM_DIAGRAM):   else do;
2500412   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2500413   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2500414   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2500415   +   end;
MPRINT(EM_DIAGRAM):   end;
2500416   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2500417   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2500418   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2500419   +   end;
MPRINT(EM_DIAGRAM):   end;
2500420   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2500421   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2500422   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2500423   +   end;
MPRINT(EM_DIAGRAM):   end;
2500424   +end;
MPRINT(EM_DIAGRAM):   end;
2500425   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2500426   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2500427   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2500428   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2500429   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 +
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 +
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2500430   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2500431   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2500432   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2500433   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 +
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 +
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2500434   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2500435   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2500436   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2500437   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2500438   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2500439   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2500440   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2500441   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2500442   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2500443   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2500444   +END;
MPRINT(EM_DIAGRAM):   END;
2500445   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2500446   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2500447   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2500448   +END;
MPRINT(EM_DIAGRAM):   END;
2500449   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2500450   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2500451   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2500452   +END;
MPRINT(EM_DIAGRAM):   END;
2500453   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2500454   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2500455   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2500456   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2500457   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2500458   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2500459   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2500460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500461   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2500462   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500463   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2500464   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2500465   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2500466   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2500467   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2500468   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2500469   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2500470   +END;
MPRINT(EM_DIAGRAM):   END;
2500471   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2500472   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2500473   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2500474   +drop
2500475   +H1x1_1
2500476   +H1x1_2
2500477   +H1x1_3
2500478   +H1x1_4
2500479   +H1x1_5
2500480   +H1x1_6
2500481   +H1x1_7
2500482   +H1x2_1
2500483   +H1x2_2
2500484   +H1x2_3
2500485   +H1x2_4
2500486   +H1x2_5
2500487   +H1x2_6
2500488   +H1x2_7
2500489   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2500490   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2500491   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2500492   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500493   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2500494   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500495   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2500496   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2500497   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2500498   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2500499   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500500   +* Renaming Into variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural12;
2500501   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500502   +length AutoNeural12_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural12_I_DepVar $32;
2500503   +drop AutoNeural12_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_I_DepVar;
2500504   +AutoNeural12_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural12_I_DepVar = I_DepVar;
2500505   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500506   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2500507   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500508   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2500509   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2500510   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2500511   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500512   +* Ensmbl47: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 4 of 5;
2500513   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500514   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500515   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2500516   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2500517   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2500518   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2500519   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2500520   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2500521   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2500522   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2500523   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2500524   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2500525   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2500526   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2500527   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2500528   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2500529   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2500530   +LENGTH _WARN_ $4
2500531   +      F_DepVar  $ 12
2500532   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2500533   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2500534   +
2500535   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2500536   +
2500537   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2500538   +
2500539   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2500540   +
2500541   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2500542   +
2500543   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2500544   +
2500545   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2500546   +
2500547   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2500548   +
2500549   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2500550   +
2500551   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2500552   +
2500553   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2500554   +
2500555   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2500556   +
2500557   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2500558   +
2500559   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2500560   +
2500561   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2500562   +
2500563   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2500564   +
2500565   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2500566   +
2500567   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2500568   +
2500569   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2500570   +
2500571   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2500572   +
2500573   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2500574   +
2500575   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2500576   +
2500577   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2500578   +
2500579   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2500580   +
2500581   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2500582   +
2500583   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2500584   +
2500585   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2500586   +
2500587   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2500588   +
2500589   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2500590   +
2500591   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2500592   +
2500593   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2500594   +
2500595   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2500596   +
2500597   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2500598   +
2500599   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2500600   +
2500601   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2500602   +
2500603   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2500604   +
2500605   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2500606   +
2500607   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2500608   +
2500609   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2500610   +
2500611   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2500612   +
2500613   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2500614   +
2500615   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2500616   +
2500617   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2500618   +
2500619   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2500620   +
2500621   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2500622   +
2500623   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2500624   +
2500625   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2500626   +
2500627   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2500628   +
2500629   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2500630   +
2500631   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2500632   +
2500633   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2500634   +
2500635   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2500636   +
2500637   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2500638   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2500639   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2500640   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2500641   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2500642   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500643   +end;
MPRINT(EM_DIAGRAM):   end;
2500644   +else do;
MPRINT(EM_DIAGRAM):   else do;
2500645   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2500646   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2500647   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2500648   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2500649   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2500650   +   end;
MPRINT(EM_DIAGRAM):   end;
2500651   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2500652   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2500653   +   end;
MPRINT(EM_DIAGRAM):   end;
2500654   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2500655   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2500656   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2500657   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500658   +   end;
MPRINT(EM_DIAGRAM):   end;
2500659   +end;
MPRINT(EM_DIAGRAM):   end;
2500660   +
2500661   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2500662   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2500663   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2500664   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2500665   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2500666   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500667   +end;
MPRINT(EM_DIAGRAM):   end;
2500668   +else do;
MPRINT(EM_DIAGRAM):   else do;
2500669   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2500670   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2500671   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2500672   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2500673   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2500674   +   end;
MPRINT(EM_DIAGRAM):   end;
2500675   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2500676   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2500677   +   end;
MPRINT(EM_DIAGRAM):   end;
2500678   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2500679   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2500680   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2500681   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500682   +   end;
MPRINT(EM_DIAGRAM):   end;
2500683   +end;
MPRINT(EM_DIAGRAM):   end;
2500684   +
2500685   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2500686   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2500687   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2500688   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2500689   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2500690   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500691   +end;
MPRINT(EM_DIAGRAM):   end;
2500692   +else do;
MPRINT(EM_DIAGRAM):   else do;
2500693   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2500694   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2500695   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2500696   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2500697   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2500698   +   end;
MPRINT(EM_DIAGRAM):   end;
2500699   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2500700   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2500701   +   end;
MPRINT(EM_DIAGRAM):   end;
2500702   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2500703   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2500704   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2500705   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500706   +   end;
MPRINT(EM_DIAGRAM):   end;
2500707   +end;
MPRINT(EM_DIAGRAM):   end;
2500708   +
2500709   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2500710   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2500711   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2500712   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2500713   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2500714   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500715   +end;
MPRINT(EM_DIAGRAM):   end;
2500716   +else do;
MPRINT(EM_DIAGRAM):   else do;
2500717   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2500718   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2500719   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2500720   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2500721   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2500722   +   end;
MPRINT(EM_DIAGRAM):   end;
2500723   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2500724   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2500725   +   end;
MPRINT(EM_DIAGRAM):   end;
2500726   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2500727   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2500728   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2500729   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500730   +   end;
MPRINT(EM_DIAGRAM):   end;
2500731   +end;
MPRINT(EM_DIAGRAM):   end;
2500732   +
2500733   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2500734   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2500735   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2500736   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2500737   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2500738   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500739   +end;
MPRINT(EM_DIAGRAM):   end;
2500740   +else do;
MPRINT(EM_DIAGRAM):   else do;
2500741   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2500742   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2500743   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2500744   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2500745   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2500746   +   end;
MPRINT(EM_DIAGRAM):   end;
2500747   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2500748   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2500749   +   end;
MPRINT(EM_DIAGRAM):   end;
2500750   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2500751   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2500752   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2500753   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500754   +   end;
MPRINT(EM_DIAGRAM):   end;
2500755   +end;
MPRINT(EM_DIAGRAM):   end;
2500756   +
2500757   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2500758   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2500759   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2500760   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2500761   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2500762   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500763   +end;
MPRINT(EM_DIAGRAM):   end;
2500764   +else do;
MPRINT(EM_DIAGRAM):   else do;
2500765   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2500766   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2500767   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2500768   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2500769   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2500770   +   end;
MPRINT(EM_DIAGRAM):   end;
2500771   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2500772   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2500773   +   end;
MPRINT(EM_DIAGRAM):   end;
2500774   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2500775   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2500776   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2500777   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500778   +   end;
MPRINT(EM_DIAGRAM):   end;
2500779   +end;
MPRINT(EM_DIAGRAM):   end;
2500780   +
2500781   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2500782   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2500783   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2500784   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2500785   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2500786   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500787   +end;
MPRINT(EM_DIAGRAM):   end;
2500788   +else do;
MPRINT(EM_DIAGRAM):   else do;
2500789   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2500790   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2500791   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2500792   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2500793   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2500794   +   end;
MPRINT(EM_DIAGRAM):   end;
2500795   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2500796   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2500797   +   end;
MPRINT(EM_DIAGRAM):   end;
2500798   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2500799   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2500800   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2500801   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500802   +   end;
MPRINT(EM_DIAGRAM):   end;
2500803   +end;
MPRINT(EM_DIAGRAM):   end;
2500804   +
2500805   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2500806   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2500807   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2500808   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2500809   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2500810   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2500811   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2500812   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2500813   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2500814   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2500815   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2500816   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2500817   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2500818   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500819   +end;
MPRINT(EM_DIAGRAM):   end;
2500820   +else do;
MPRINT(EM_DIAGRAM):   else do;
2500821   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2500822   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2500823   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2500824   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2500825   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2500826   +   end;
MPRINT(EM_DIAGRAM):   end;
2500827   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2500828   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2500829   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2500830   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2500831   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2500832   +   end;
MPRINT(EM_DIAGRAM):   end;
2500833   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2500834   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2500835   +   end;
MPRINT(EM_DIAGRAM):   end;
2500836   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2500837   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2500838   +   end;
MPRINT(EM_DIAGRAM):   end;
2500839   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2500840   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2500841   +   end;
MPRINT(EM_DIAGRAM):   end;
2500842   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2500843   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2500844   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2500845   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2500846   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2500847   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2500848   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500849   +   end;
MPRINT(EM_DIAGRAM):   end;
2500850   +end;
MPRINT(EM_DIAGRAM):   end;
2500851   +
2500852   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2500853   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2500854   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2500855   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2500856   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2500857   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2500858   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2500859   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2500860   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2500861   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2500862   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2500863   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2500864   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2500865   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2500866   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500867   +end;
MPRINT(EM_DIAGRAM):   end;
2500868   +else do;
MPRINT(EM_DIAGRAM):   else do;
2500869   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2500870   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2500871   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2500872   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2500873   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2500874   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2500875   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2500876   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2500877   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2500878   +         end;
MPRINT(EM_DIAGRAM):   end;
2500879   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2500880   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2500881   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2500882   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2500883   +            end;
MPRINT(EM_DIAGRAM):   end;
2500884   +         end;
MPRINT(EM_DIAGRAM):   end;
2500885   +      end;
MPRINT(EM_DIAGRAM):   end;
2500886   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2500887   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2500888   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2500889   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2500890   +         end;
MPRINT(EM_DIAGRAM):   end;
2500891   +      end;
MPRINT(EM_DIAGRAM):   end;
2500892   +   end;
MPRINT(EM_DIAGRAM):   end;
2500893   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2500894   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2500895   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2500896   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2500897   +      end;
MPRINT(EM_DIAGRAM):   end;
2500898   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2500899   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2500900   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2500901   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2500902   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2500903   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2500904   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2500905   +         end;
MPRINT(EM_DIAGRAM):   end;
2500906   +      end;
MPRINT(EM_DIAGRAM):   end;
2500907   +   end;
MPRINT(EM_DIAGRAM):   end;
2500908   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2500909   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2500910   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2500911   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2500912   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2500913   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2500914   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500915   +   end;
MPRINT(EM_DIAGRAM):   end;
2500916   +end;
MPRINT(EM_DIAGRAM):   end;
2500917   +
2500918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500919   +*** Checking missing input Interval
2500920   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2500921   +
2500922   +IF NMISS(
2500923   +   AcceptedCmpTotal ,
2500924   +   Age ,
2500925   +   Frq ,
2500926   +   Income ,
2500927   +   Kidhome ,
2500928   +   Mnt ,
2500929   +   MntFishProducts ,
2500930   +   MntFruits ,
2500931   +   MntGoldProds ,
2500932   +   MntMeatProducts ,
2500933   +   MntSweetProducts ,
2500934   +   MntWines ,
2500935   +   MonthsAsCustomer ,
2500936   +   NumCatalogPurchases ,
2500937   +   NumDealsPurchases ,
2500938   +   NumDistPurchases ,
2500939   +   NumStorePurchases ,
2500940   +   NumWebPurchases ,
2500941   +   NumWebVisitsMonth ,
2500942   +   RFMstat ,
2500943   +   RMntFrq ,
2500944   +   Recency ,
2500945   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2500946   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2500947   +
2500948   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2500949   +END;
MPRINT(EM_DIAGRAM):   END;
2500950   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500951   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2500952   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2500953   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2500954   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2500955   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2500956   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2500957   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2500958   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2500959   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2500960   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2500961   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2500962   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2500963   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2500964   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2500965   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2500966   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2500967   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2500968   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2500969   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2500970   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2500971   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2500972   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2500973   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2500974   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2500975   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2500976   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2500977   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2500978   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2500979   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2500980   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2500981   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2500982   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2500983   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2500984   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2500985   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2500986   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2500987   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2500988   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2500989   +END;
MPRINT(EM_DIAGRAM):   END;
2500990   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2500991   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2500992   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2500993   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2500994   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2500995   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2500996   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2500997   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2500998   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2500999   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2501000   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2501001   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2501002   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2501003   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2501004   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2501005   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2501006   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2501007   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2501008   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2501009   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2501010   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2501011   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2501012   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2501013   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2501014   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2501015   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2501016   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2501017   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2501018   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2501019   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2501020   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2501021   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2501022   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2501023   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2501024   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2501025   +   ELSE S_NumCatalogPurchases
2501026   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2501027   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2501028   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2501029   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2501030   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2501031   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2501032   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2501033   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2501034   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2501035   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2501036   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2501037   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2501038   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2501039   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2501040   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2501041   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2501042   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2501043   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2501044   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2501045   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2501046   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2501047   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2501048   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2501049   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2501050   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2501051   +END;
MPRINT(EM_DIAGRAM):   END;
2501052   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501053   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2501054   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501055   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501056   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2501057   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501059   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2501060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501061   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2501062   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2501063   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2501064   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2501065   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2501066   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2501067   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2501068   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2501069   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2501070   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2501071   +          +     0.08390531145773 * S_NumDealsPurchases
2501072   +          +    -0.29505970645775 * S_NumDistPurchases
2501073   +          +    -0.13820571170194 * S_NumStorePurchases
2501074   +          +     0.11468011313368 * S_NumWebPurchases
2501075   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2501076   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2501077   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2501078   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 *
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 *
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts +
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 *
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 *
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 *
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 *
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq +
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2501079   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2501080   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2501081   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2501082   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2501083   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2501084   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2501085   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2501086   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2501087   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2501088   +          +     0.18009076035363 * S_NumDealsPurchases
2501089   +          +     0.03853861006587 * S_NumDistPurchases
2501090   +          +    -0.05118063952874 * S_NumStorePurchases
2501091   +          +    -0.03282286120473 * S_NumWebPurchases
2501092   +          +     0.31160900419026 * S_NumWebVisitsMonth
2501093   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2501094   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2501095   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome +
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 *
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts +
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 *
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 *
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 *
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 *
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq +
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2501096   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2501097   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2501098   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2501099   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2501100   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 *
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 +
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 *
HigherEducationBinary0 ;
2501101   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2501102   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2501103   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2501104   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2501105   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 *
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 +
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 *
HigherEducationBinary0 ;
2501106   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2501107   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2501108   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2501109   +          +    -0.04750981393889 * Marital_StatusDivorced
2501110   +          +     0.28216925676677 * Marital_StatusMarried
2501111   +          +    -0.20757827413964 * Marital_StatusSingle
2501112   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle +
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 *
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 *
Marital_StatusTogether ;
2501113   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2501114   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2501115   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2501116   +          +     0.05981919620577 * Marital_StatusDivorced
2501117   +          +    -0.17161573846062 * Marital_StatusMarried
2501118   +          +     0.15869440681091 * Marital_StatusSingle
2501119   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle +
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation +
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced +
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle +
-0.13282372850158 * Marital_StatusTogether ;
2501120   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2501121   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2501122   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2501123   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2501124   +END;
MPRINT(EM_DIAGRAM):   END;
2501125   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2501126   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2501127   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2501128   +END;
MPRINT(EM_DIAGRAM):   END;
2501129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501130   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2501131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501132   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2501133   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2501134   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2501135   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2501136   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2501137   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2501138   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2501139   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2501140   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2501141   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2501142   +          +     0.00741910846933 * S_NumDealsPurchases
2501143   +          +       1.334289252268 * S_NumDistPurchases
2501144   +          +    -0.29851567180932 * S_NumStorePurchases
2501145   +          +    -0.52115313259666 * S_NumWebPurchases
2501146   +          +     0.93907168501909 * S_NumWebVisitsMonth
2501147   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2501148   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2501149   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome +
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 *
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts +
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 *
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 *
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 *
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 *
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq +
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2501150   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2501151   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2501152   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2501153   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2501154   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2501155   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2501156   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2501157   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2501158   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2501159   +          +     1.60427001186844 * S_NumDealsPurchases
2501160   +          +    -0.18447618033353 * S_NumDistPurchases
2501161   +          +    -1.29966073003539 * S_NumStorePurchases
2501162   +          +    -1.12373457341536 * S_NumWebPurchases
2501163   +          +     1.46099221440494 * S_NumWebVisitsMonth
2501164   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2501165   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2501166   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 *
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 *
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts +
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 *
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines +
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases +
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases +
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases +
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 *
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2501167   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2501168   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2501169   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2501170   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2501171   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 *
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 +
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 *
HigherEducationBinary0 ;
2501172   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2501173   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2501174   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2501175   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2501176   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 *
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 +
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 *
HigherEducationBinary0 ;
2501177   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2501178   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2501179   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2501180   +          +     0.59819559998538 * Marital_StatusDivorced
2501181   +          +     0.92957772553633 * Marital_StatusMarried
2501182   +          +    -1.11796266958894 * Marital_StatusSingle
2501183   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 *
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster +
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried +
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2501184   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2501185   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2501186   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2501187   +          +      1.0870909562212 * Marital_StatusDivorced
2501188   +          +     1.50333961797515 * Marital_StatusMarried
2501189   +          +    -1.41407780765932 * Marital_StatusSingle
2501190   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle +
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation +
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced +
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle +
-0.52528072358697 * Marital_StatusTogether ;
2501191   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2501192   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2501193   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2501194   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2501195   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2501196   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2501197   +END;
MPRINT(EM_DIAGRAM):   END;
2501198   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2501199   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2501200   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2501201   +END;
MPRINT(EM_DIAGRAM):   END;
2501202   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501203   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2501204   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501205   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2501206   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2501207   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2501208   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2501209   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2501210   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2501211   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2501212   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2501213   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2501214   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2501215   +          +     -1.1174504455343 * S_NumDealsPurchases
2501216   +          +    -0.18561253113498 * S_NumDistPurchases
2501217   +          +    -0.35231054612792 * S_NumStorePurchases
2501218   +          +      0.9249490354172 * S_NumWebPurchases
2501219   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2501220   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2501221   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2501222   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 *
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 *
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts +
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 *
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines +
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases +
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases +
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases +
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 *
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2501223   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2501224   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2501225   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2501226   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2501227   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2501228   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2501229   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2501230   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2501231   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2501232   +          +     1.05434863590054 * S_NumDealsPurchases
2501233   +          +    -0.73255174632068 * S_NumDistPurchases
2501234   +          +     0.53949953455044 * S_NumStorePurchases
2501235   +          +    -0.61709467816649 * S_NumWebPurchases
2501236   +          +     1.36235282484348 * S_NumWebVisitsMonth
2501237   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2501238   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2501239   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 *
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 *
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts +
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 *
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 *
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 *
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 *
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq +
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2501240   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2501241   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2501242   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2501243   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2501244   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 *
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 +
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 *
HigherEducationBinary0 ;
2501245   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2501246   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2501247   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2501248   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2501249   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 +
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 *
HigherEducationBinary0 ;
2501250   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2501251   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2501252   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2501253   +          +     0.22253248036322 * Marital_StatusDivorced
2501254   +          +    -1.72455332745001 * Marital_StatusMarried
2501255   +          +     0.57787272107232 * Marital_StatusSingle
2501256   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle +
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation +
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced +
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle +
0.16267074825086 * Marital_StatusTogether ;
2501257   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2501258   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2501259   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2501260   +          +     0.14637124403046 * Marital_StatusDivorced
2501261   +          +     0.18905186437528 * Marital_StatusMarried
2501262   +          +     0.00511958458521 * Marital_StatusSingle
2501263   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle +
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation +
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced +
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle +
-0.915980703129 * Marital_StatusTogether ;
2501264   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2501265   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2501266   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2501267   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2501268   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2501269   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2501270   +END;
MPRINT(EM_DIAGRAM):   END;
2501271   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2501272   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2501273   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2501274   +END;
MPRINT(EM_DIAGRAM):   END;
2501275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501276   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2501277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501278   +
2501279   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2501280   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2501281   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2501282   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2501283   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2501284   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501285   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2501286   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2501287   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2501288   +end;
MPRINT(EM_DIAGRAM):   end;
2501289   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501290   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2501291   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2501292   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2501293   +   end;
MPRINT(EM_DIAGRAM):   end;
2501294   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2501295   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2501296   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2501297   +   end;
MPRINT(EM_DIAGRAM):   end;
2501298   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501299   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2501300   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2501301   +   end;
MPRINT(EM_DIAGRAM):   end;
2501302   +end;
MPRINT(EM_DIAGRAM):   end;
2501303   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2501304   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2501305   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2501306   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2501307   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 *
H1x2_2 ;
2501308   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2501309   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 *
H1x3_2 ;
2501310   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2501311   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2501312   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2501313   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2501314   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2501315   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2501316   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2501317   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2501318   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2501319   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2501320   +END;
MPRINT(EM_DIAGRAM):   END;
2501321   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2501322   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2501323   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2501324   +END;
MPRINT(EM_DIAGRAM):   END;
2501325   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2501326   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2501327   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2501328   +END;
MPRINT(EM_DIAGRAM):   END;
2501329   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2501330   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2501331   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2501332   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2501333   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2501334   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2501335   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2501336   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501337   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2501338   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501339   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2501340   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2501341   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2501342   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2501343   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2501344   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2501345   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2501346   +END;
MPRINT(EM_DIAGRAM):   END;
2501347   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2501348   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2501349   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2501350   +drop
2501351   +H1x1_1
2501352   +H1x1_2
2501353   +H1x2_1
2501354   +H1x2_2
2501355   +H1x3_1
2501356   +H1x3_2
2501357   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2501358   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2501359   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2501360   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2501361   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2501362   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2501363   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2501364   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2501365   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2501366   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2501367   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2501368   +* Renaming Into variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural7;
2501369   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2501370   +length AutoNeural7_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural7_I_DepVar $32;
2501371   +drop AutoNeural7_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_I_DepVar;
2501372   +AutoNeural7_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural7_I_DepVar = I_DepVar;
2501373   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2501374   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2501375   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2501376   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2501377   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2501378   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2501379   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2501380   +* Ensmbl47: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Scoring Code of model 5 of 5;
2501381   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2501382   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2501383   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2501384   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2501385   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2501386   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2501387   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2501388   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2501389   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2501390   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2501391   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2501392   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2501393   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2501394   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2501395   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2501396   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2501397   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2501398   +LENGTH _WARN_ $4
2501399   +      F_DepVar  $ 12
2501400   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2501401   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2501402   +
2501403   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2501404   +
2501405   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2501406   +
2501407   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2501408   +
2501409   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2501410   +
2501411   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2501412   +
2501413   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2501414   +
2501415   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2501416   +
2501417   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2501418   +
2501419   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2501420   +
2501421   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2501422   +
2501423   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2501424   +
2501425   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2501426   +
2501427   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2501428   +
2501429   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2501430   +
2501431   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2501432   +
2501433   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2501434   +
2501435   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2501436   +
2501437   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2501438   +
2501439   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2501440   +
2501441   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2501442   +
2501443   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2501444   +
2501445   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2501446   +
2501447   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2501448   +
2501449   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2501450   +
2501451   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2501452   +
2501453   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2501454   +
2501455   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2501456   +
2501457   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2501458   +
2501459   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2501460   +
2501461   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2501462   +
2501463   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2501464   +
2501465   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2501466   +
2501467   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2501468   +
2501469   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2501470   +
2501471   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2501472   +
2501473   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2501474   +
2501475   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2501476   +
2501477   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2501478   +
2501479   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2501480   +
2501481   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2501482   +
2501483   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2501484   +
2501485   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2501486   +
2501487   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2501488   +
2501489   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2501490   +
2501491   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2501492   +
2501493   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2501494   +
2501495   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2501496   +
2501497   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2501498   +
2501499   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2501500   +
2501501   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2501502   +
2501503   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2501504   +
2501505   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2501506   +
2501507   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2501508   +
2501509   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2501510   +
2501511   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2501512   +
2501513   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2501514   +
2501515   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2501516   +
2501517   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2501518   +
2501519   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2501520   +
2501521   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2501522   +
2501523   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2501524   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2501525   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2501526   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2501527   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2501528   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501529   +end;
MPRINT(EM_DIAGRAM):   end;
2501530   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501531   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2501532   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2501533   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501534   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2501535   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2501536   +   end;
MPRINT(EM_DIAGRAM):   end;
2501537   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2501538   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2501539   +   end;
MPRINT(EM_DIAGRAM):   end;
2501540   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501541   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2501542   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2501543   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501544   +   end;
MPRINT(EM_DIAGRAM):   end;
2501545   +end;
MPRINT(EM_DIAGRAM):   end;
2501546   +
2501547   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2501548   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2501549   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2501550   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2501551   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2501552   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501553   +end;
MPRINT(EM_DIAGRAM):   end;
2501554   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501555   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2501556   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2501557   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501558   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2501559   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2501560   +   end;
MPRINT(EM_DIAGRAM):   end;
2501561   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2501562   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2501563   +   end;
MPRINT(EM_DIAGRAM):   end;
2501564   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501565   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2501566   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2501567   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501568   +   end;
MPRINT(EM_DIAGRAM):   end;
2501569   +end;
MPRINT(EM_DIAGRAM):   end;
2501570   +
2501571   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2501572   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2501573   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2501574   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2501575   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2501576   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501577   +end;
MPRINT(EM_DIAGRAM):   end;
2501578   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501579   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2501580   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2501581   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501582   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2501583   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2501584   +   end;
MPRINT(EM_DIAGRAM):   end;
2501585   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2501586   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2501587   +   end;
MPRINT(EM_DIAGRAM):   end;
2501588   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501589   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2501590   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2501591   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501592   +   end;
MPRINT(EM_DIAGRAM):   end;
2501593   +end;
MPRINT(EM_DIAGRAM):   end;
2501594   +
2501595   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2501596   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2501597   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2501598   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2501599   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2501600   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501601   +end;
MPRINT(EM_DIAGRAM):   end;
2501602   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501603   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2501604   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2501605   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501606   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2501607   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2501608   +   end;
MPRINT(EM_DIAGRAM):   end;
2501609   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2501610   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2501611   +   end;
MPRINT(EM_DIAGRAM):   end;
2501612   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501613   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2501614   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2501615   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501616   +   end;
MPRINT(EM_DIAGRAM):   end;
2501617   +end;
MPRINT(EM_DIAGRAM):   end;
2501618   +
2501619   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2501620   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2501621   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2501622   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2501623   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2501624   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501625   +end;
MPRINT(EM_DIAGRAM):   end;
2501626   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501627   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2501628   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2501629   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501630   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2501631   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2501632   +   end;
MPRINT(EM_DIAGRAM):   end;
2501633   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2501634   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2501635   +   end;
MPRINT(EM_DIAGRAM):   end;
2501636   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501637   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2501638   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2501639   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501640   +   end;
MPRINT(EM_DIAGRAM):   end;
2501641   +end;
MPRINT(EM_DIAGRAM):   end;
2501642   +
2501643   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2501644   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2501645   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2501646   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2501647   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2501648   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501649   +end;
MPRINT(EM_DIAGRAM):   end;
2501650   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501651   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2501652   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2501653   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501654   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2501655   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2501656   +   end;
MPRINT(EM_DIAGRAM):   end;
2501657   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2501658   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2501659   +   end;
MPRINT(EM_DIAGRAM):   end;
2501660   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501661   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2501662   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2501663   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501664   +   end;
MPRINT(EM_DIAGRAM):   end;
2501665   +end;
MPRINT(EM_DIAGRAM):   end;
2501666   +
2501667   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2501668   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2501669   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2501670   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2501671   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2501672   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501673   +end;
MPRINT(EM_DIAGRAM):   end;
2501674   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501675   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2501676   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2501677   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501678   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2501679   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2501680   +   end;
MPRINT(EM_DIAGRAM):   end;
2501681   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2501682   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2501683   +   end;
MPRINT(EM_DIAGRAM):   end;
2501684   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501685   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2501686   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2501687   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501688   +   end;
MPRINT(EM_DIAGRAM):   end;
2501689   +end;
MPRINT(EM_DIAGRAM):   end;
2501690   +
2501691   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2501692   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2501693   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2501694   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2501695   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2501696   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2501697   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2501698   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2501699   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2501700   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2501701   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2501702   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2501703   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2501704   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501705   +end;
MPRINT(EM_DIAGRAM):   end;
2501706   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501707   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2501708   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2501709   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501710   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2501711   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2501712   +   end;
MPRINT(EM_DIAGRAM):   end;
2501713   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2501714   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2501715   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2501716   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2501717   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2501718   +   end;
MPRINT(EM_DIAGRAM):   end;
2501719   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2501720   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2501721   +   end;
MPRINT(EM_DIAGRAM):   end;
2501722   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2501723   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2501724   +   end;
MPRINT(EM_DIAGRAM):   end;
2501725   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2501726   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2501727   +   end;
MPRINT(EM_DIAGRAM):   end;
2501728   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501729   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2501730   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2501731   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2501732   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2501733   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2501734   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501735   +   end;
MPRINT(EM_DIAGRAM):   end;
2501736   +end;
MPRINT(EM_DIAGRAM):   end;
2501737   +
2501738   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2501739   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2501740   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2501741   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2501742   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2501743   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2501744   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2501745   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2501746   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2501747   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2501748   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2501749   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2501750   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2501751   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2501752   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501753   +end;
MPRINT(EM_DIAGRAM):   end;
2501754   +else do;
MPRINT(EM_DIAGRAM):   else do;
2501755   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2501756   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2501757   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2501758   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2501759   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2501760   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2501761   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2501762   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2501763   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2501764   +         end;
MPRINT(EM_DIAGRAM):   end;
2501765   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2501766   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2501767   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2501768   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2501769   +            end;
MPRINT(EM_DIAGRAM):   end;
2501770   +         end;
MPRINT(EM_DIAGRAM):   end;
2501771   +      end;
MPRINT(EM_DIAGRAM):   end;
2501772   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2501773   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2501774   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2501775   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2501776   +         end;
MPRINT(EM_DIAGRAM):   end;
2501777   +      end;
MPRINT(EM_DIAGRAM):   end;
2501778   +   end;
MPRINT(EM_DIAGRAM):   end;
2501779   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2501780   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2501781   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2501782   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2501783   +      end;
MPRINT(EM_DIAGRAM):   end;
2501784   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2501785   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2501786   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2501787   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2501788   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2501789   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2501790   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2501791   +         end;
MPRINT(EM_DIAGRAM):   end;
2501792   +      end;
MPRINT(EM_DIAGRAM):   end;
2501793   +   end;
MPRINT(EM_DIAGRAM):   end;
2501794   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2501795   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2501796   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2501797   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2501798   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2501799   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2501800   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501801   +   end;
MPRINT(EM_DIAGRAM):   end;
2501802   +end;
MPRINT(EM_DIAGRAM):   end;
2501803   +
2501804   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501805   +*** Checking missing input Interval
2501806   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2501807   +
2501808   +IF NMISS(
2501809   +   AcceptedCmpTotal ,
2501810   +   Age ,
2501811   +   Frq ,
2501812   +   Income ,
2501813   +   Kidhome ,
2501814   +   Mnt ,
2501815   +   MntFishProducts ,
2501816   +   MntFruits ,
2501817   +   MntGoldProds ,
2501818   +   MntMeatProducts ,
2501819   +   MntSweetProducts ,
2501820   +   MntWines ,
2501821   +   MonthsAsCustomer ,
2501822   +   NumCatalogPurchases ,
2501823   +   NumDealsPurchases ,
2501824   +   NumDistPurchases ,
2501825   +   NumStorePurchases ,
2501826   +   NumWebPurchases ,
2501827   +   NumWebVisitsMonth ,
2501828   +   RFMstat ,
2501829   +   RMntFrq ,
2501830   +   Recency ,
2501831   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2501832   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2501833   +
2501834   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2501835   +END;
MPRINT(EM_DIAGRAM):   END;
2501836   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501837   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2501838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501839   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2501840   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2501841   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2501842   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2501843   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2501844   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2501845   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2501846   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2501847   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2501848   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2501849   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2501850   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2501851   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2501852   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2501853   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2501854   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2501855   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2501856   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2501857   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2501858   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2501859   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2501860   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2501861   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2501862   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2501863   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2501864   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2501865   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2501866   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2501867   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2501868   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2501869   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2501870   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2501871   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2501872   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2501873   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2501874   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2501875   +END;
MPRINT(EM_DIAGRAM):   END;
2501876   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2501877   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2501878   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2501879   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2501880   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2501881   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2501882   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2501883   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2501884   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2501885   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2501886   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2501887   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2501888   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2501889   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2501890   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2501891   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2501892   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2501893   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2501894   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2501895   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2501896   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2501897   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2501898   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2501899   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2501900   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2501901   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2501902   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2501903   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2501904   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2501905   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2501906   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2501907   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2501908   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2501909   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2501910   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2501911   +   ELSE S_NumCatalogPurchases
2501912   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2501913   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2501914   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2501915   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2501916   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2501917   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2501918   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2501919   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2501920   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2501921   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2501922   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2501923   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2501924   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2501925   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2501926   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2501927   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2501928   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2501929   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2501930   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2501931   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2501932   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2501933   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2501934   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2501935   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2501936   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2501937   +END;
MPRINT(EM_DIAGRAM):   END;
2501938   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501939   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2501940   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501941   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501942   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2501943   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501945   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2501946   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2501947   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2501948   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2501949   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2501950   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2501951   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2501952   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2501953   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2501954   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2501955   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2501956   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2501957   +          +     3.21215425524619 * S_NumDealsPurchases
2501958   +          +     0.08695198777156 * S_NumDistPurchases
2501959   +          +    -2.58697971128295 * S_NumStorePurchases
2501960   +          +    -0.44431924796059 * S_NumWebPurchases
2501961   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2501962   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2501963   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2501964   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 *
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 *
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts +
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 *
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines +
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases +
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases +
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases +
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 *
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2501965   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2501966   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2501967   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2501968   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2501969   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2501970   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2501971   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2501972   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2501973   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2501974   +          +    -0.83844506398484 * S_NumDealsPurchases
2501975   +          +     0.60831936516804 * S_NumDistPurchases
2501976   +          +     1.79084087761626 * S_NumStorePurchases
2501977   +          +     1.17119196356453 * S_NumWebPurchases
2501978   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2501979   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2501980   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2501981   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 *
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 *
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts +
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 *
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 *
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 *
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 *
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq +
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2501982   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2501983   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2501984   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2501985   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2501986   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2501987   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2501988   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2501989   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2501990   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2501991   +          +    -0.31484031572628 * S_NumDealsPurchases
2501992   +          +    -0.18273941035679 * S_NumDistPurchases
2501993   +          +     0.99501789733882 * S_NumStorePurchases
2501994   +          +     1.32014078829379 * S_NumWebPurchases
2501995   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2501996   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2501997   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2501998   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 *
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 *
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts +
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 *
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 *
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 *
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 *
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq +
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2501999   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2502000   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2502001   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2502002   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2502003   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2502004   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2502005   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2502006   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2502007   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2502008   +          +     1.19658719134196 * S_NumDealsPurchases
2502009   +          +     0.87478204472986 * S_NumDistPurchases
2502010   +          +    -0.20635856288784 * S_NumStorePurchases
2502011   +          +    -0.89927356974242 * S_NumWebPurchases
2502012   +          +     2.92285244132576 * S_NumWebVisitsMonth
2502013   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2502014   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2502015   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 *
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 *
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts +
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 *
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 *
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 *
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 *
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq +
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2502016   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2502017   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2502018   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2502019   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2502020   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2502021   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2502022   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2502023   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2502024   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2502025   +          +       -2.32617124568 * S_NumDealsPurchases
2502026   +          +    -0.56589187730672 * S_NumDistPurchases
2502027   +          +     1.07062299863482 * S_NumStorePurchases
2502028   +          +     0.30077273739578 * S_NumWebPurchases
2502029   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2502030   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2502031   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2502032   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 *
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 *
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts +
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 *
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 *
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 *
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 *
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq +
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2502033   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2502034   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2502035   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2502036   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2502037   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 *
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 +
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 *
HigherEducationBinary0 ;
2502038   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2502039   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2502040   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2502041   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2502042   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 *
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 +
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 *
HigherEducationBinary0 ;
2502043   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2502044   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2502045   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2502046   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2502047   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 *
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 +
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 *
HigherEducationBinary0 ;
2502048   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2502049   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2502050   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2502051   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2502052   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 +
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 *
HigherEducationBinary0 ;
2502053   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2502054   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2502055   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2502056   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2502057   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 *
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 +
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 *
HigherEducationBinary0 ;
2502058   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2502059   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2502060   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2502061   +          +    -0.27797737429678 * Marital_StatusDivorced
2502062   +          +    -0.08137635862327 * Marital_StatusMarried
2502063   +          +     0.06275411820495 * Marital_StatusSingle
2502064   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle +
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 *
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 *
Marital_StatusTogether ;
2502065   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2502066   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2502067   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2502068   +          +     0.05151426841441 * Marital_StatusDivorced
2502069   +          +     1.19165082030442 * Marital_StatusMarried
2502070   +          +    -1.08257080662611 * Marital_StatusSingle
2502071   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle +
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 *
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 *
Marital_StatusTogether ;
2502072   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2502073   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2502074   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2502075   +          +      0.0238206459022 * Marital_StatusDivorced
2502076   +          +     -0.4653244204261 * Marital_StatusMarried
2502077   +          +     0.13051613619882 * Marital_StatusSingle
2502078   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle +
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation +
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced +
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle +
-0.35951366919755 * Marital_StatusTogether ;
The SAS System
 
2502079   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2502080   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2502081   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2502082   +          +     -0.7449356409222 * Marital_StatusDivorced
2502083   +          +    -1.46604673521535 * Marital_StatusMarried
2502084   +          +     0.74484771688818 * Marital_StatusSingle
2502085   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle +
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 *
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 *
Marital_StatusTogether ;
2502086   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2502087   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2502088   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2502089   +          +    -3.68044980584423 * Marital_StatusDivorced
2502090   +          +     3.14587407902338 * Marital_StatusMarried
2502091   +          +    -2.66118132753024 * Marital_StatusSingle
2502092   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle +
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation +
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced +
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle +
3.50991640149914 * Marital_StatusTogether ;
2502093   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2502094   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2502095   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2502096   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2502097   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2502098   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2502099   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2502100   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2502101   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2502102   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2502103   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2502104   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2502105   +END;
MPRINT(EM_DIAGRAM):   END;
2502106   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2502107   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2502108   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2502109   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2502110   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2502111   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2502112   +END;
MPRINT(EM_DIAGRAM):   END;
2502113   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502114   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2502115   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502116   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2502117   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2502118   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2502119   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2502120   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2502121   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2502122   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2502123   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2502124   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2502125   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2502126   +          +     0.89261880438741 * S_NumDealsPurchases
2502127   +          +    -1.61647413199892 * S_NumDistPurchases
2502128   +          +    -0.56304669045195 * S_NumStorePurchases
2502129   +          +      0.7766837080945 * S_NumWebPurchases
2502130   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2502131   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2502132   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2502133   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 *
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 *
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts +
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 *
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines +
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases +
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases +
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases +
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 *
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2502134   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2502135   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2502136   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2502137   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2502138   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2502139   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2502140   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2502141   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2502142   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2502143   +          +     1.02431289724643 * S_NumDealsPurchases
2502144   +          +    -0.90960173637405 * S_NumDistPurchases
2502145   +          +     1.24283490404772 * S_NumStorePurchases
2502146   +          +     1.23072413154592 * S_NumWebPurchases
2502147   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2502148   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2502149   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2502150   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome +
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 *
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts +
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 *
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 *
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 *
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 *
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq +
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2502151   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2502152   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2502153   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2502154   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2502155   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2502156   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2502157   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2502158   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2502159   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2502160   +          +    -0.26249596122198 * S_NumDealsPurchases
2502161   +          +    -0.63328519804758 * S_NumDistPurchases
2502162   +          +    -0.88467503575886 * S_NumStorePurchases
2502163   +          +    -0.83120537310738 * S_NumWebPurchases
2502164   +          +     1.40072282351719 * S_NumWebVisitsMonth
2502165   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2502166   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2502167   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 *
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 *
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts +
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 *
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines +
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases +
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases +
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases +
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 *
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2502168   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2502169   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2502170   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2502171   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2502172   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2502173   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2502174   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2502175   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2502176   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2502177   +          +     1.30167361451945 * S_NumDealsPurchases
2502178   +          +     1.45457613716235 * S_NumDistPurchases
2502179   +          +    -0.40226463685252 * S_NumStorePurchases
2502180   +          +     0.36369161683572 * S_NumWebPurchases
2502181   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2502182   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2502183   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2502184   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 *
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 *
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts +
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 *
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 *
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 *
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 *
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq +
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2502185   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2502186   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2502187   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2502188   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2502189   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2502190   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2502191   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2502192   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2502193   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2502194   +          +    -0.54572162665338 * S_NumDealsPurchases
2502195   +          +      0.9607390449318 * S_NumDistPurchases
2502196   +          +    -0.03259470545754 * S_NumStorePurchases
2502197   +          +     0.19202241423412 * S_NumWebPurchases
2502198   +          +     0.61085831658456 * S_NumWebVisitsMonth
2502199   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2502200   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2502201   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 *
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 *
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts +
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 *
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines +
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases +
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases +
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases +
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 *
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2502202   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2502203   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2502204   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2502205   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2502206   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 *
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 +
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 *
HigherEducationBinary0 ;
2502207   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2502208   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2502209   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2502210   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2502211   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 *
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 +
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 *
HigherEducationBinary0 ;
2502212   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2502213   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2502214   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2502215   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2502216   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 *
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 +
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 *
HigherEducationBinary0 ;
2502217   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2502218   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2502219   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2502220   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2502221   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 *
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 +
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 *
HigherEducationBinary0 ;
2502222   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2502223   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2502224   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2502225   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2502226   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 *
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 +
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 *
HigherEducationBinary0 ;
2502227   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2502228   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2502229   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2502230   +          +    -2.32430245081383 * Marital_StatusDivorced
2502231   +          +    -0.09815511356796 * Marital_StatusMarried
2502232   +          +     0.13075504294551 * Marital_StatusSingle
2502233   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle +
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 *
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 *
Marital_StatusTogether ;
2502234   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2502235   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2502236   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2502237   +          +    -0.65574603869224 * Marital_StatusDivorced
2502238   +          +     1.54672472575294 * Marital_StatusMarried
2502239   +          +    -1.59817602340208 * Marital_StatusSingle
2502240   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle +
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 *
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 *
Marital_StatusTogether ;
2502241   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2502242   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2502243   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2502244   +          +    -0.50911604604781 * Marital_StatusDivorced
2502245   +          +     0.30403066135719 * Marital_StatusMarried
2502246   +          +      0.1026950879545 * Marital_StatusSingle
2502247   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle +
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 *
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 *
Marital_StatusTogether ;
2502248   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2502249   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2502250   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2502251   +          +     1.07371507133318 * Marital_StatusDivorced
2502252   +          +    -0.07097334129051 * Marital_StatusMarried
2502253   +          +    -0.48339718568621 * Marital_StatusSingle
2502254   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle +
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 *
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 *
Marital_StatusTogether ;
2502255   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2502256   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2502257   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2502258   +          +     1.04342893515504 * Marital_StatusDivorced
2502259   +          +     1.16171312085032 * Marital_StatusMarried
2502260   +          +    -0.30201646939913 * Marital_StatusSingle
2502261   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle +
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 *
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 *
Marital_StatusTogether ;
2502262   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2502263   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2502264   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2502265   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2502266   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2502267   +END;
MPRINT(EM_DIAGRAM):   END;
2502268   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2502269   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2502270   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2502271   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2502272   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2502273   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2502274   +END;
MPRINT(EM_DIAGRAM):   END;
2502275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502276   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2502277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502278   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2502279   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2502280   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2502281   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2502282   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2502283   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2502284   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2502285   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2502286   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2502287   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2502288   +          +     1.32256781010645 * S_NumDealsPurchases
2502289   +          +    -1.43015438973619 * S_NumDistPurchases
2502290   +          +    -0.63489289584421 * S_NumStorePurchases
2502291   +          +     0.90508699686841 * S_NumWebPurchases
2502292   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2502293   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2502294   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2502295   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 *
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 *
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts +
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 *
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 *
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 *
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 *
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq +
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2502296   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2502297   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2502298   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2502299   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2502300   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2502301   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2502302   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2502303   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2502304   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2502305   +          +     0.85965187264096 * S_NumDealsPurchases
2502306   +          +    -1.15239933286756 * S_NumDistPurchases
2502307   +          +     1.20800889102387 * S_NumStorePurchases
2502308   +          +     1.08790389130242 * S_NumWebPurchases
2502309   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2502310   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2502311   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2502312   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 *
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 *
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts +
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 *
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 *
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 *
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 *
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq +
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2502313   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2502314   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2502315   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2502316   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2502317   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2502318   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2502319   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2502320   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2502321   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2502322   +          +     -0.5767607129654 * S_NumDealsPurchases
2502323   +          +     -0.2643921429796 * S_NumDistPurchases
2502324   +          +    -0.67417489911206 * S_NumStorePurchases
2502325   +          +    -0.51423877684891 * S_NumWebPurchases
2502326   +          +     1.40328299605176 * S_NumWebVisitsMonth
2502327   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2502328   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2502329   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 *
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 *
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts +
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 *
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 *
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 *
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 *
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq +
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2502330   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2502331   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2502332   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2502333   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2502334   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2502335   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2502336   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2502337   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2502338   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2502339   +          +      1.2821617657076 * S_NumDealsPurchases
2502340   +          +     1.26584115202735 * S_NumDistPurchases
2502341   +          +    -0.46597664211833 * S_NumStorePurchases
2502342   +          +     0.45652363472866 * S_NumWebPurchases
2502343   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2502344   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2502345   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2502346   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 *
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 *
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts +
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 *
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 *
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 *
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 *
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq +
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2502347   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2502348   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2502349   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2502350   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2502351   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2502352   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2502353   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2502354   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2502355   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2502356   +          +    -0.85162564171681 * S_NumDealsPurchases
2502357   +          +     0.64631099667221 * S_NumDistPurchases
2502358   +          +    -0.03081963858636 * S_NumStorePurchases
2502359   +          +    -0.24124717624664 * S_NumWebPurchases
2502360   +          +     0.56425980772372 * S_NumWebVisitsMonth
2502361   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2502362   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2502363   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 *
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 *
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts +
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 *
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines +
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases +
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases +
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases +
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 *
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2502364   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2502365   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2502366   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2502367   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2502368   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 *
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 +
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 *
HigherEducationBinary0 ;
2502369   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2502370   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2502371   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2502372   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2502373   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 *
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 +
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 *
HigherEducationBinary0 ;
2502374   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2502375   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2502376   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2502377   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2502378   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 *
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 +
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 *
HigherEducationBinary0 ;
2502379   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2502380   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2502381   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2502382   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2502383   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 +
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 *
HigherEducationBinary0 ;
2502384   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2502385   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2502386   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2502387   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2502388   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 *
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 +
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 *
HigherEducationBinary0 ;
2502389   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2502390   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2502391   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2502392   +          +    -2.49973437075558 * Marital_StatusDivorced
2502393   +          +    -0.18076948182574 * Marital_StatusMarried
2502394   +          +     0.13498525495231 * Marital_StatusSingle
2502395   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle +
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 *
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 *
Marital_StatusTogether ;
2502396   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2502397   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2502398   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2502399   +          +       -0.59463732835 * Marital_StatusDivorced
2502400   +          +     1.37741332427598 * Marital_StatusMarried
2502401   +          +     -1.5833455713231 * Marital_StatusSingle
2502402   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle +
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation +
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced +
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle +
1.79205360628448 * Marital_StatusTogether ;
2502403   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2502404   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2502405   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2502406   +          +    -0.44569556289443 * Marital_StatusDivorced
2502407   +          +     0.29918053103557 * Marital_StatusMarried
2502408   +          +    -0.10337314064224 * Marital_StatusSingle
2502409   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle +
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 *
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 *
Marital_StatusTogether ;
2502410   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2502411   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2502412   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2502413   +          +     1.13881957277462 * Marital_StatusDivorced
2502414   +          +    -0.35849807146313 * Marital_StatusMarried
2502415   +          +    -0.22168731316885 * Marital_StatusSingle
2502416   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle +
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 *
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 *
Marital_StatusTogether ;
2502417   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2502418   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2502419   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2502420   +          +     1.10774969923269 * Marital_StatusDivorced
2502421   +          +     1.08409594073043 * Marital_StatusMarried
2502422   +          +    -0.33145048007894 * Marital_StatusSingle
2502423   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle +
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 *
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 *
Marital_StatusTogether ;
2502424   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2502425   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2502426   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2502427   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2502428   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2502429   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2502430   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2502431   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2502432   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2502433   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
2502434   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2502435   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2502436   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 *
H1x3_2 ;
2502437   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2502438   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2502439   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 *
H1x3_3 ;
2502440   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2502441   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2502442   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 *
H1x3_4 ;
2502443   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2502444   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2502445   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 *
H1x3_5 ;
2502446   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2502447   +END;
MPRINT(EM_DIAGRAM):   END;
2502448   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2502449   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2502450   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2502451   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2502452   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2502453   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2502454   +END;
MPRINT(EM_DIAGRAM):   END;
2502455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502456   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2502457   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502458   +
2502459   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2502460   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2502461   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2502462   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2502463   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2502464   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2502465   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2502466   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2502467   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2502468   +end;
MPRINT(EM_DIAGRAM):   end;
2502469   +else do;
MPRINT(EM_DIAGRAM):   else do;
2502470   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2502471   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2502472   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2502473   +   end;
MPRINT(EM_DIAGRAM):   end;
2502474   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2502475   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2502476   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2502477   +   end;
MPRINT(EM_DIAGRAM):   end;
2502478   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2502479   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2502480   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2502481   +   end;
MPRINT(EM_DIAGRAM):   end;
2502482   +end;
MPRINT(EM_DIAGRAM):   end;
2502483   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2502484   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2502485   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2502486   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 +
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2502487   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2502488   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2502489   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 *
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2502490   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2502491   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2502492   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 *
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2502493   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2502494   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2502495   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2502496   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2502497   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2502498   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2502499   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2502500   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2502501   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2502502   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2502503   +END;
MPRINT(EM_DIAGRAM):   END;
2502504   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2502505   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2502506   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2502507   +END;
MPRINT(EM_DIAGRAM):   END;
2502508   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2502509   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2502510   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2502511   +END;
MPRINT(EM_DIAGRAM):   END;
2502512   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2502513   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2502514   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2502515   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2502516   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2502517   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2502518   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2502519   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502520   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2502521   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2502522   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2502523   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2502524   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2502525   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2502526   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2502527   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2502528   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2502529   +END;
MPRINT(EM_DIAGRAM):   END;
2502530   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2502531   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2502532   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2502533   +drop
2502534   +H1x1_1
2502535   +H1x1_2
2502536   +H1x1_3
2502537   +H1x1_4
2502538   +H1x1_5
2502539   +H1x2_1
2502540   +H1x2_2
2502541   +H1x2_3
2502542   +H1x2_4
2502543   +H1x2_5
2502544   +H1x3_1
2502545   +H1x3_2
2502546   +H1x3_3
2502547   +H1x3_4
2502548   +H1x3_5
2502549   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2502550   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2502551   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2502552   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2502553   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2502554   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2502555   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2502556   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2502557   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2502558   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2502559   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2502560   +* Renaming Into variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural10;
2502561   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2502562   +length AutoNeural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural10_I_DepVar $32;
2502563   +drop AutoNeural10_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_I_DepVar;
2502564   +AutoNeural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural10_I_DepVar = I_DepVar;
2502565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2502566   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2502567   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2502568   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2502569   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2502570   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2502571   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2502572   +* Ensmbl47: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Voting to produce predicted target;
2502573   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2502574   +array Ensmbl47_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl47_post{2} _temporary_;
2502575   +array Ensmbl47_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl47_count{2} _temporary_;
2502576   +array Ensmbl47_level{2} $32 _temporary_ (
2502577   +"1"
2502578   +"0"
2502579   +);
MPRINT(EM_DIAGRAM):   array Ensmbl47_level{2} $32 _temporary_ ( "1" "0" );
2502580   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2502581   +Ensmbl47_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{i} = 0;
2502582   +Ensmbl47_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{i} = 0;
2502583   +end;
MPRINT(EM_DIAGRAM):   end;
2502584   +if AutoNeural9_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl47_level{1} then do;
2502585   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2502586   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural9_P_DepVar1;
2502587   +end;
MPRINT(EM_DIAGRAM):   end;
2502588   +if AutoNeural11_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl47_level{1} then do;
2502589   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2502590   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural11_P_DepVar1;
2502591   +end;
MPRINT(EM_DIAGRAM):   end;
2502592   +if AutoNeural12_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl47_level{1} then do;
2502593   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2502594   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural12_P_DepVar1;
2502595   +end;
MPRINT(EM_DIAGRAM):   end;
2502596   +if AutoNeural7_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl47_level{1} then do;
2502597   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2502598   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural7_P_DepVar1;
2502599   +end;
MPRINT(EM_DIAGRAM):   end;
2502600   +if AutoNeural10_I_DepVar = Ensmbl47_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl47_level{1} then do;
2502601   +Ensmbl47_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{1} + 1;
2502602   +Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{1}=Ensmbl47_post{1}+ AutoNeural10_P_DepVar1;
2502603   +end;
MPRINT(EM_DIAGRAM):   end;
2502604   +if AutoNeural9_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl47_level{2} then do;
2502605   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2502606   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural9_P_DepVar0;
2502607   +end;
MPRINT(EM_DIAGRAM):   end;
2502608   +if AutoNeural11_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl47_level{2} then do;
2502609   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2502610   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural11_P_DepVar0;
2502611   +end;
MPRINT(EM_DIAGRAM):   end;
2502612   +if AutoNeural12_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl47_level{2} then do;
2502613   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2502614   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural12_P_DepVar0;
2502615   +end;
MPRINT(EM_DIAGRAM):   end;
2502616   +if AutoNeural7_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl47_level{2} then do;
2502617   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2502618   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural7_P_DepVar0;
2502619   +end;
MPRINT(EM_DIAGRAM):   end;
2502620   +if AutoNeural10_I_DepVar = Ensmbl47_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl47_level{2} then do;
2502621   +Ensmbl47_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl47_count{2} + 1;
2502622   +Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl47_post{2}=Ensmbl47_post{2}+ AutoNeural10_P_DepVar0;
2502623   +end;
MPRINT(EM_DIAGRAM):   end;
2502624   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2502625   +* Ensmbl47: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Determine Into Variable;
2502626   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2502627   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
2502628   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
2502629   +vote_count = max(
2502630   +Ensmbl47_count{1} ,
2502631   +Ensmbl47_count{2}
2502632   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl47_count{1} , Ensmbl47_count{2} );
2502633   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2502634   +if Ensmbl47_count{i}=vote_count and Ensmbl47_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl47_count{i}=vote_count and Ensmbl47_post{i}>vote_post then do;
2502635   +I_DepVar = Ensmbl47_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl47_level{i};
2502636   +vote_post = Ensmbl47_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl47_count{i};
2502637   +end;
MPRINT(EM_DIAGRAM):   end;
2502638   +end;
MPRINT(EM_DIAGRAM):   end;
2502639   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2502640   +* Ensmbl47: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Compute posterior vars using models predicting the chosen
level;
2502641   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2502642   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
2502643   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2502644   +if I_DepVar = AutoNeural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural9_I_DepVar then do;
2502645   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
2502646   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
2502647   +end;
MPRINT(EM_DIAGRAM):   end;
2502648   +if I_DepVar = AutoNeural11_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural11_I_DepVar then do;
2502649   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
2502650   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
2502651   +end;
MPRINT(EM_DIAGRAM):   end;
2502652   +if I_DepVar = AutoNeural12_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural12_I_DepVar then do;
2502653   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
2502654   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
2502655   +end;
MPRINT(EM_DIAGRAM):   end;
2502656   +if I_DepVar = AutoNeural7_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural7_I_DepVar then do;
2502657   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
2502658   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
2502659   +end;
MPRINT(EM_DIAGRAM):   end;
2502660   +if I_DepVar = AutoNeural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural10_I_DepVar then do;
2502661   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
2502662   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
2502663   +end;
MPRINT(EM_DIAGRAM):   end;
2502664   +* Ensmbl47: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Averaging posterior;
2502665   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
2502666   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
2502667   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2502668   +* Ensmbl47: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Producing Unformatted variable;
2502669   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2502670   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2502671   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2502672   +else
2502673   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2502674   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2502675   +* Ensmbl47: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Computing _WARN_ Variable;
2502676   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2502677   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2502678   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2502679   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2502680   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2502680  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2502681   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2502681  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2502682   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2502682  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2502683   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2502683  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2502684   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2502684  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2502685   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2502685  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2502686   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2502686  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2502687   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2502687  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2502688   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2502688  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2502689   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2502689  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2502690   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2502690  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2502691   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2502691  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2502692   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2502692  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2502693   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2502693  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2502694   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2502694  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2502695   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2502695  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2502696   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2502696  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2502697   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2502697  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2502698   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2502698  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2502699   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2502699  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2502700   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2502701   +* Ensmbl47: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Computing Residual Vars;
2502702   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2502703   +if
2502704   +F_DepVar NE '1'
2502705   +AND F_DepVar NE '0'
2502706   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2502707   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2502708   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2502709   +end;
MPRINT(EM_DIAGRAM):   end;
2502710   +else do;
MPRINT(EM_DIAGRAM):   else do;
2502711   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2502712   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2502713   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2502714   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2502715   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2502716   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2502717   +END;
MPRINT(EM_DIAGRAM):   END;
2502718   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2502719    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL47_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_VALIDATE.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2502720    quit;
2502721    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl47_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl47_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl47_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2502781    filename _pref
2502781  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
2502782    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2502783    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
2502784   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2502785   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2502786   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2502787   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2502788   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2502789   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2502790   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2502791   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2502792   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2502793   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2502794   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2502795   +LENGTH _WARN_ $4
2502796   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2502797   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2502798   +
2502799   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2502800   +
2502801   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2502802   +
2502803   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2502804   +
2502805   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2502806   +
2502807   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2502808   +
2502809   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2502810   +
2502811   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2502812   +
2502813   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2502814   +
2502815   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2502816   +
2502817   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2502818   +
2502819   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2502820   +
2502821   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2502822   +
2502823   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2502824   +
2502825   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2502826   +
2502827   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2502828   +
2502829   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2502830   +
2502831   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2502832   +
2502833   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2502834   +
2502835   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2502836   +
2502837   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2502838   +
2502839   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2502840   +
2502841   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2502842   +
2502843   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2502844   +
2502845   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2502846   +
2502847   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2502848   +
2502849   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2502850   +
2502851   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2502852   +
2502853   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2502854   +
2502855   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2502856   +
2502857   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2502858   +
2502859   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2502860   +
2502861   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2502862   +
2502863   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2502864   +
2502865   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2502866   +
2502867   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2502868   +
2502869   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2502870   +
2502871   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2502872   +
2502873   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2502874   +
2502875   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2502876   +
2502877   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2502878   +
2502879   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2502880   +
2502881   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2502882   +
2502883   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2502884   +
2502885   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2502886   +
2502887   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2502888   +
2502889   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2502890   +
2502891   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2502892   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2502893   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2502894   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2502895   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2502896   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502897   +end;
MPRINT(EM_DIAGRAM):   end;
2502898   +else do;
MPRINT(EM_DIAGRAM):   else do;
2502899   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2502900   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2502901   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2502902   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2502903   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2502904   +   end;
MPRINT(EM_DIAGRAM):   end;
2502905   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2502906   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2502907   +   end;
MPRINT(EM_DIAGRAM):   end;
2502908   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2502909   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2502910   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2502911   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502912   +   end;
MPRINT(EM_DIAGRAM):   end;
2502913   +end;
MPRINT(EM_DIAGRAM):   end;
2502914   +
2502915   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2502916   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2502917   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2502918   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2502919   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2502920   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502921   +end;
MPRINT(EM_DIAGRAM):   end;
2502922   +else do;
MPRINT(EM_DIAGRAM):   else do;
2502923   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2502924   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2502925   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2502926   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2502927   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2502928   +   end;
MPRINT(EM_DIAGRAM):   end;
2502929   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2502930   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2502931   +   end;
MPRINT(EM_DIAGRAM):   end;
2502932   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2502933   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2502934   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2502935   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502936   +   end;
MPRINT(EM_DIAGRAM):   end;
2502937   +end;
MPRINT(EM_DIAGRAM):   end;
2502938   +
2502939   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2502940   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2502941   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2502942   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2502943   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2502944   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502945   +end;
MPRINT(EM_DIAGRAM):   end;
2502946   +else do;
MPRINT(EM_DIAGRAM):   else do;
2502947   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2502948   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2502949   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2502950   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2502951   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2502952   +   end;
MPRINT(EM_DIAGRAM):   end;
2502953   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2502954   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2502955   +   end;
MPRINT(EM_DIAGRAM):   end;
2502956   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2502957   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2502958   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2502959   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502960   +   end;
MPRINT(EM_DIAGRAM):   end;
2502961   +end;
MPRINT(EM_DIAGRAM):   end;
2502962   +
2502963   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2502964   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2502965   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2502966   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2502967   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2502968   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502969   +end;
MPRINT(EM_DIAGRAM):   end;
2502970   +else do;
MPRINT(EM_DIAGRAM):   else do;
2502971   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2502972   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2502973   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2502974   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2502975   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2502976   +   end;
MPRINT(EM_DIAGRAM):   end;
2502977   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2502978   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2502979   +   end;
MPRINT(EM_DIAGRAM):   end;
2502980   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2502981   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2502982   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2502983   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502984   +   end;
MPRINT(EM_DIAGRAM):   end;
2502985   +end;
MPRINT(EM_DIAGRAM):   end;
2502986   +
2502987   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2502988   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2502989   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2502990   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2502991   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2502992   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2502993   +end;
MPRINT(EM_DIAGRAM):   end;
2502994   +else do;
MPRINT(EM_DIAGRAM):   else do;
2502995   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2502996   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2502997   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2502998   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2502999   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2503000   +   end;
MPRINT(EM_DIAGRAM):   end;
2503001   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2503002   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2503003   +   end;
MPRINT(EM_DIAGRAM):   end;
2503004   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2503005   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2503006   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2503007   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503008   +   end;
MPRINT(EM_DIAGRAM):   end;
2503009   +end;
MPRINT(EM_DIAGRAM):   end;
2503010   +
2503011   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2503012   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2503013   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2503014   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2503015   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2503016   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503017   +end;
MPRINT(EM_DIAGRAM):   end;
2503018   +else do;
MPRINT(EM_DIAGRAM):   else do;
2503019   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2503020   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2503021   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2503022   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2503023   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2503024   +   end;
MPRINT(EM_DIAGRAM):   end;
2503025   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2503026   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2503027   +   end;
MPRINT(EM_DIAGRAM):   end;
2503028   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2503029   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2503030   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2503031   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503032   +   end;
MPRINT(EM_DIAGRAM):   end;
2503033   +end;
MPRINT(EM_DIAGRAM):   end;
2503034   +
2503035   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2503036   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2503037   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2503038   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2503039   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2503040   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503041   +end;
MPRINT(EM_DIAGRAM):   end;
2503042   +else do;
MPRINT(EM_DIAGRAM):   else do;
2503043   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2503044   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2503045   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2503046   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2503047   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2503048   +   end;
MPRINT(EM_DIAGRAM):   end;
2503049   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2503050   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2503051   +   end;
MPRINT(EM_DIAGRAM):   end;
2503052   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2503053   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2503054   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2503055   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503056   +   end;
MPRINT(EM_DIAGRAM):   end;
2503057   +end;
MPRINT(EM_DIAGRAM):   end;
2503058   +
2503059   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2503060   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2503061   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2503062   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2503063   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2503064   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2503065   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2503066   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2503067   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2503068   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2503069   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2503070   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2503071   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2503072   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503073   +end;
MPRINT(EM_DIAGRAM):   end;
2503074   +else do;
MPRINT(EM_DIAGRAM):   else do;
2503075   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2503076   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2503077   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2503078   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2503079   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2503080   +   end;
MPRINT(EM_DIAGRAM):   end;
2503081   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2503082   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2503083   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2503084   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2503085   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2503086   +   end;
MPRINT(EM_DIAGRAM):   end;
2503087   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2503088   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2503089   +   end;
MPRINT(EM_DIAGRAM):   end;
2503090   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2503091   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2503092   +   end;
MPRINT(EM_DIAGRAM):   end;
2503093   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2503094   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2503095   +   end;
MPRINT(EM_DIAGRAM):   end;
2503096   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2503097   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2503098   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2503099   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2503100   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2503101   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2503102   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503103   +   end;
MPRINT(EM_DIAGRAM):   end;
2503104   +end;
MPRINT(EM_DIAGRAM):   end;
2503105   +
2503106   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2503107   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2503108   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2503109   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2503110   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2503111   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2503112   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2503113   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2503114   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2503115   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2503116   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2503117   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2503118   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2503119   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2503120   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503121   +end;
MPRINT(EM_DIAGRAM):   end;
2503122   +else do;
MPRINT(EM_DIAGRAM):   else do;
2503123   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2503124   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2503125   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2503126   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2503127   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2503128   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2503129   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2503130   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2503131   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2503132   +         end;
MPRINT(EM_DIAGRAM):   end;
2503133   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2503134   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2503135   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2503136   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2503137   +            end;
MPRINT(EM_DIAGRAM):   end;
2503138   +         end;
MPRINT(EM_DIAGRAM):   end;
2503139   +      end;
MPRINT(EM_DIAGRAM):   end;
2503140   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2503141   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2503142   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2503143   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2503144   +         end;
MPRINT(EM_DIAGRAM):   end;
2503145   +      end;
MPRINT(EM_DIAGRAM):   end;
2503146   +   end;
MPRINT(EM_DIAGRAM):   end;
2503147   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2503148   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2503149   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2503150   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2503151   +      end;
MPRINT(EM_DIAGRAM):   end;
2503152   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2503153   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2503154   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2503155   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2503156   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2503157   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2503158   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2503159   +         end;
MPRINT(EM_DIAGRAM):   end;
2503160   +      end;
MPRINT(EM_DIAGRAM):   end;
2503161   +   end;
MPRINT(EM_DIAGRAM):   end;
2503162   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2503163   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2503164   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2503165   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2503166   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2503167   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2503168   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503169   +   end;
MPRINT(EM_DIAGRAM):   end;
2503170   +end;
MPRINT(EM_DIAGRAM):   end;
2503171   +
2503172   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503173   +*** Checking missing input Interval
2503174   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2503175   +
2503176   +IF NMISS(
2503177   +   AcceptedCmpTotal ,
2503178   +   Age ,
2503179   +   Frq ,
2503180   +   Income ,
2503181   +   Kidhome ,
2503182   +   Mnt ,
2503183   +   MntFishProducts ,
2503184   +   MntFruits ,
2503185   +   MntGoldProds ,
2503186   +   MntMeatProducts ,
2503187   +   MntSweetProducts ,
2503188   +   MntWines ,
2503189   +   MonthsAsCustomer ,
2503190   +   NumCatalogPurchases ,
2503191   +   NumDealsPurchases ,
2503192   +   NumDistPurchases ,
2503193   +   NumStorePurchases ,
2503194   +   NumWebPurchases ,
2503195   +   NumWebVisitsMonth ,
2503196   +   RFMstat ,
2503197   +   RMntFrq ,
2503198   +   Recency ,
2503199   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2503200   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2503201   +
2503202   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503203   +END;
MPRINT(EM_DIAGRAM):   END;
2503204   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503205   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2503206   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503207   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2503208   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2503209   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2503210   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2503211   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2503212   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2503213   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2503214   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2503215   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2503216   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2503217   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2503218   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2503219   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2503220   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2503221   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2503222   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2503223   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2503224   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2503225   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2503226   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2503227   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2503228   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2503229   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2503230   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2503231   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2503232   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2503233   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2503234   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2503235   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2503236   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2503237   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2503238   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2503239   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2503240   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2503241   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2503242   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2503243   +END;
MPRINT(EM_DIAGRAM):   END;
2503244   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2503245   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2503246   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2503247   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2503248   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2503249   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2503250   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2503251   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2503252   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2503253   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2503254   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2503255   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2503256   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2503257   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2503258   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2503259   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2503260   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2503261   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2503262   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2503263   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2503264   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2503265   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2503266   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2503267   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2503268   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2503269   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2503270   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2503271   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2503272   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2503273   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2503274   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2503275   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2503276   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2503277   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2503278   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2503279   +   ELSE S_NumCatalogPurchases
2503280   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2503281   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2503282   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2503283   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2503284   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2503285   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2503286   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2503287   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2503288   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2503289   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2503290   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2503291   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2503292   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2503293   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2503294   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2503295   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2503296   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2503297   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2503298   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2503299   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2503300   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2503301   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2503302   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2503303   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2503304   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2503305   +END;
MPRINT(EM_DIAGRAM):   END;
2503306   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503307   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2503308   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503310   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2503311   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503312   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503313   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2503314   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503315   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2503316   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2503317   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2503318   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2503319   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2503320   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2503321   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2503322   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2503323   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2503324   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2503325   +          +    -1.09856598010056 * S_NumDealsPurchases
2503326   +          +    -0.10571850472514 * S_NumDistPurchases
2503327   +          +     0.11898210654227 * S_NumStorePurchases
2503328   +          +      0.5984912060231 * S_NumWebPurchases
2503329   +          +     0.78592531126942 * S_NumWebVisitsMonth
2503330   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2503331   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2503332   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 *
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 *
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts +
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 *
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines +
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases +
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases +
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases +
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 *
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2503333   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2503334   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2503335   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2503336   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2503337   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2503338   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2503339   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2503340   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2503341   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2503342   +          +    -0.84042044250624 * S_NumDealsPurchases
2503343   +          +    -0.10246261015488 * S_NumDistPurchases
2503344   +          +     0.06886149708824 * S_NumStorePurchases
2503345   +          +     0.63156910388199 * S_NumWebPurchases
2503346   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2503347   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2503348   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2503349   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 *
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 *
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts +
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 *
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 *
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 *
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 *
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq +
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2503350   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2503351   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2503352   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2503353   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2503354   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2503355   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2503356   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2503357   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2503358   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2503359   +          +     0.45393712455366 * S_NumDealsPurchases
2503360   +          +    -0.25292198053552 * S_NumDistPurchases
2503361   +          +    -1.35582215064749 * S_NumStorePurchases
2503362   +          +    -0.83132202302639 * S_NumWebPurchases
2503363   +          +     1.87116225272678 * S_NumWebVisitsMonth
2503364   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2503365   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2503366   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 *
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 *
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts +
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 *
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines +
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases +
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases +
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases +
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 *
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2503367   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2503368   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2503369   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2503370   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2503371   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 *
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 +
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 *
HigherEducationBinary0 ;
2503372   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2503373   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2503374   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2503375   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2503376   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 +
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 *
HigherEducationBinary0 ;
2503377   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2503378   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2503379   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2503380   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2503381   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 +
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 *
HigherEducationBinary0 ;
2503382   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2503383   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2503384   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2503385   +          +      0.4695898100094 * Marital_StatusDivorced
2503386   +          +    -0.52137742289262 * Marital_StatusMarried
2503387   +          +    -0.32382086914936 * Marital_StatusSingle
2503388   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle +
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation +
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced +
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle +
-0.66163012672344 * Marital_StatusTogether ;
2503389   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2503390   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2503391   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2503392   +          +    -1.04858218653238 * Marital_StatusDivorced
2503393   +          +     2.41098335093061 * Marital_StatusMarried
2503394   +          +    -1.94696044861334 * Marital_StatusSingle
2503395   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle +
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 *
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 *
Marital_StatusTogether ;
2503396   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2503397   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2503398   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2503399   +          +     0.42964114177062 * Marital_StatusDivorced
2503400   +          +    -0.38607635605816 * Marital_StatusMarried
2503401   +          +    -0.02157405407852 * Marital_StatusSingle
2503402   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle +
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation +
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced +
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle +
-0.59995619744527 * Marital_StatusTogether ;
2503403   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2503404   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2503405   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2503406   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2503407   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2503408   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2503409   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2503410   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2503411   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2503412   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2503413   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2503414   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2503415   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2503416   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2503417   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2503418   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2503419   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2503420   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2503421   +END;
MPRINT(EM_DIAGRAM):   END;
2503422   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2503423   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2503424   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2503425   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2503426   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2503427   +END;
MPRINT(EM_DIAGRAM):   END;
2503428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503429   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2503430   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503431   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2503432   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2503433   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 +
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2503434   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2503435   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2503436   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2503437   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2503438   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2503439   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2503440   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2503441   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2503442   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2503443   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2503444   +END;
MPRINT(EM_DIAGRAM):   END;
2503445   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2503446   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2503447   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2503448   +END;
MPRINT(EM_DIAGRAM):   END;
2503449   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2503450   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2503451   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2503452   +END;
MPRINT(EM_DIAGRAM):   END;
2503453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503454   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2503455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2503456   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2503457   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2503458   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2503459   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2503460   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2503461   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2503462   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2503463   +END;
MPRINT(EM_DIAGRAM):   END;
2503464   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2503465   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2503466   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2503467   +drop
2503468   +H1x1_1
2503469   +H1x1_2
2503470   +H1x1_3
2503471   +H1x1_4
2503472   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2503473   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2503474    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2503475    quit;
2503476    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2503477    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2503478    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2503479    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
2503480    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2503481    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2503482    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2503483    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503484    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503485    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME
CREATOR);
2503486    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503487    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2503488    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2503489    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2503490    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2503491    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503492    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
2503493    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2503494    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2503495    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503496    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503497    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2503498    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2503499    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503500    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503501    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2503502    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2503502  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1479 rows and 5 columns.
 
2503503    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2503504    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2503505    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1479 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1479 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503506    filename _pref
2503506  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2503507    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2503508    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2503509   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2503510   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2503511   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2503512   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2503513   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2503514   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2503515    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2503516    quit;
2503517    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2503518    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2503519    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2503520    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2503521    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2503522    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503523    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2503524    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503525    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2503526    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2503527    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503528    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503529    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2503530    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2503531    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2503532    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503533    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2503534    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2503535    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2503536    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503537    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503538    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2503539    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2503540    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503541    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503542    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2503543    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2503543  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2503544    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503545    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2503546    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1483 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503547    filename _pref
2503547  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2503548    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2503549    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2503550   +
2503551   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2503552   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2503552  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2503553   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2503554   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2503555   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2503556   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2503557   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2503558    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2503559    quit;
2503560    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2503561    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2503562    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2503563    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2503564    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2503565    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2503566    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2503567    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503568    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503569    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2503570    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503571    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503572    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2503573    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2503574    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2503575    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2503576    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2503577    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503578    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2503579    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503580    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503581    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2503582    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2503583    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503584    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503585    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2503586    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2503586  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2503587    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503588    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2503589    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1522 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503590    filename _pref
2503590  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2503591    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2503592    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2503593   +
2503594   +
2503595   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2503596   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2503597   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2503598   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2503599   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2503600   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2503601   +
2503602   +
2503603   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2503604   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2503605   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2503606   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2503607   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2503608   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2503609   +
2503610   +
2503611   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2503612   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2503613   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2503614   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2503615   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2503616   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2503617   +
2503618   +
2503619   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2503620   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2503621   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2503622   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2503623   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2503624   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2503625   +
2503626   +
2503627   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2503628   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2503629   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2503630   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2503631   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2503632   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2503633   +
2503634   +
2503635   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2503636   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2503637   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2503638   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2503639   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2503640   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2503641   +
2503642   +
2503643   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2503644   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2503645   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2503646   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2503647   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2503648   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2503649   +
2503650   +
2503651   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2503652   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2503653   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2503654   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2503655   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2503656   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2503657   +if
2503658   +_FILTERNORM1 not in ( '.')
2503659   + and
2503660   +_FILTERNORM2 not in ( '.')
2503661   + and
2503662   +_FILTERNORM3 not in ( '.')
2503663   + and
2503664   +_FILTERNORM4 not in ( '.')
2503665   + and
2503666   +_FILTERNORM5 not in ( '.')
2503667   + and
2503668   +_FILTERNORM6 not in ( '.')
2503669   + and
2503670   +_FILTERNORM7 not in ( ' ')
2503671   + and
2503672   +_FILTERNORM8 not in ( ' ')
2503673   +and
2503674   +( Dt_Customer ne .)
2503675   +and ( Income ne . and (Income<=107000))
2503676   +and ( Kidhome ne .)
2503677   +and ( MntFishProducts ne .)
2503678   +and ( MntFruits ne .)
2503679   +and ( MntGoldProds ne .)
2503680   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2503681   +and ( MntSweetProducts ne .)
2503682   +and ( MntWines ne .)
2503683   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2503684   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2503685   +and ( NumStorePurchases ne .)
2503686   +and ( NumWebPurchases ne .)
2503687   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2503688   +and ( Recency ne .)
2503689   +and ( Teenhome ne .)
2503690   +and ( Year_Birth ne .)
2503691   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2503692   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2503693   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2503694   +end;
MPRINT(EM_DIAGRAM):   end;
2503695   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2503696   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2503697    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2503698    quit;
2503699    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2503700    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2503701    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2503702    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2503703    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2503704    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503705    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2503706    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503707    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503708    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2503709    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503710    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2503711    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2503712    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2503713    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2503714    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503715    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2503716    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2503717    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2503718    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503719    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503720    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2503721    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2503722    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2503723    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503724    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2503725    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2503725  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2503726    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2503727    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2503728    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1588 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503729    %macro varDept(fcmpdata=,id=);
2503730    %global nobs&id scoreFlag&id;
2503731    %let scoreFlag&id = 0;
2503732    %if &id=1 or ^&fcmpStart %then %do;
2503733    proc sort data=&fcmpdata out=_temp&id nodupkey;
2503734    by NAME;
2503735    where id=&id and LHS in( %let j=1;
2503736    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2503737    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2503738    "&var" %let j = %eval(&j+1);
2503739    %end;
2503740    );
2503741    run;
2503742    %let dsid = %sysfunc(open(_temp&id));
2503743    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2503744    %let dsid = %sysfunc(close(&dsid));
2503745    %if &&nobs&id %then %do;
2503746    %let scoreFlag&id = 1;
2503747    %let fcmpStart = 1;
2503748    %end;
2503749    %else %let fcmpStart = 0;
2503750    %end;
2503751    %else %do;
2503752    proc sort data=&fcmpdata out=_tempid;
2503753    where id=&id;
2503754    by LHS;
2503755    run;
2503756    %let dsid = %sysfunc(open(_tempid));
2503757    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2503758    %let dsid = %sysfunc(close(&dsid));
2503759    %if ^&&nobs&id %then %do;
2503760    proc datasets lib=work nolist;
2503761    delete _tempid;
2503762    run;
2503763    quit;
2503764    %end;
2503765    %else %do;
2503766    data _tempAll;
2503767    set %let j=%eval(&id-1);
2503768    %do x=1 %to &j;
2503769    %if &&nobs&x %then %do;
2503770    _temp&x %end;
2503771    %end;
2503772    ;
2503773    run;
2503774    proc sql;
2503775    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2503775  ! work._tempid p2 where p.name=p2.lhs;
2503776    quit;
2503777    data _temp&id;
2503778    set _temp&id;
2503779    where LHS ne '' and NAME ne '' and Node ne '';
2503780    run;
2503781    proc datasets lib=work nolist;
2503782    delete _tempAll;
2503783    run;
2503784    %let dsid = %sysfunc(open(_temp&id));
2503785    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2503786    %let dsid = %sysfunc(close(&dsid));
2503787    %if ^&&nobs&id %then %do;
2503788    proc datasets lib=work nolist;
2503789    delete _temp&id;
2503790    run;
2503791    quit;
2503792    %end;
2503793    %else %do;
2503794    %let scoreFlag&id = 1;
2503795    data _temp&id;
2503796    set _temp&id;
2503797    where LHS ne NAME and node ne '';
2503798    run;
2503799    %let dsid = %sysfunc(open(_temp&id));
2503800    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2503801    %let dsid = %sysfunc(close(&dsid));
2503802    %if ^&&nobs&id %then %do;
2503803    proc datasets lib=work nolist;
2503804    delete _temp&id;
2503805    run;
2503806    quit;
2503807    %end;
2503808    %else %do;
2503809    proc sort data=_temp&id nodupkey;
2503810    by LHS NAME;
2503811    run;
2503812    %end;
2503813    %end;
2503814    %end;
2503815    %end;
2503816    %mend varDept;
2503817    %macro optCode(outdata=fcmpdata);
2503818    %global fcmpStart;
2503819    %let fcmpStart = 0;
2503820    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2503821    %let NumNodes=9;
2503822    %do k=1 %to &NumNodes;
2503823    %vardept(fcmpdata=&outdata, id=&k);
2503824    %end;
2503825    %mend optCode;
2503826    %optcode(outData=EMWS8.Ensmbl47_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2503827    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2503828    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2503829    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2503830    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503831    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2503832    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2503833    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2503834    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2503835    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2503836    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2503836  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2503837    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503838    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2503839    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2503840    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2503841    filename _pref
2503841  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
2503842    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2503843    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
2503844   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2503845   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2503846   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2503847   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2503848   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2503849   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2503850   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2503851   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2503852   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2503853   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2503854   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2503855   +LENGTH _WARN_ $4
2503856   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2503857   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2503858   +
2503859   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2503860   +
2503861   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2503862   +
2503863   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2503864   +
2503865   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2503866   +
2503867   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2503868   +
2503869   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2503870   +
2503871   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2503872   +
2503873   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2503874   +
2503875   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2503876   +
2503877   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2503878   +
2503879   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2503880   +
2503881   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2503882   +
2503883   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2503884   +
2503885   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2503886   +
2503887   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2503888   +
2503889   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2503890   +
2503891   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2503892   +
2503893   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2503894   +
2503895   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2503896   +
2503897   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2503898   +
2503899   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2503900   +
2503901   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2503902   +
2503903   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2503904   +
2503905   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2503906   +
2503907   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2503908   +
2503909   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2503910   +
2503911   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2503912   +
2503913   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2503914   +
2503915   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2503916   +
2503917   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2503918   +
2503919   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2503920   +
2503921   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2503922   +
2503923   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2503924   +
2503925   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2503926   +
2503927   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2503928   +
2503929   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2503930   +
2503931   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2503932   +
2503933   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2503934   +
2503935   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2503936   +
2503937   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2503938   +
2503939   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2503940   +
2503941   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2503942   +
2503943   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2503944   +
2503945   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2503946   +
2503947   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2503948   +
2503949   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2503950   +
2503951   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2503952   +
2503953   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2503954   +
2503955   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2503956   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2503957   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2503958   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2503959   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2503960   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503961   +end;
MPRINT(EM_DIAGRAM):   end;
2503962   +else do;
MPRINT(EM_DIAGRAM):   else do;
2503963   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2503964   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2503965   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2503966   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2503967   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2503968   +   end;
MPRINT(EM_DIAGRAM):   end;
2503969   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2503970   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2503971   +   end;
MPRINT(EM_DIAGRAM):   end;
2503972   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2503973   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2503974   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2503975   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503976   +   end;
MPRINT(EM_DIAGRAM):   end;
2503977   +end;
MPRINT(EM_DIAGRAM):   end;
2503978   +
2503979   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2503980   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2503981   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2503982   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2503983   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2503984   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2503985   +end;
MPRINT(EM_DIAGRAM):   end;
2503986   +else do;
MPRINT(EM_DIAGRAM):   else do;
2503987   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2503988   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2503989   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2503990   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2503991   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2503992   +   end;
MPRINT(EM_DIAGRAM):   end;
2503993   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2503994   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2503995   +   end;
MPRINT(EM_DIAGRAM):   end;
2503996   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2503997   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2503998   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2503999   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2504000   +   end;
MPRINT(EM_DIAGRAM):   end;
2504001   +end;
MPRINT(EM_DIAGRAM):   end;
2504002   +
2504003   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2504004   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2504005   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2504006   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2504007   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2504008   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2504009   +end;
MPRINT(EM_DIAGRAM):   end;
2504010   +else do;
MPRINT(EM_DIAGRAM):   else do;
2504011   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2504012   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2504013   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2504014   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2504015   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2504016   +   end;
MPRINT(EM_DIAGRAM):   end;
2504017   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2504018   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2504019   +   end;
MPRINT(EM_DIAGRAM):   end;
2504020   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2504021   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2504022   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2504023   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2504024   +   end;
MPRINT(EM_DIAGRAM):   end;
2504025   +end;
MPRINT(EM_DIAGRAM):   end;
2504026   +
2504027   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2504028   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2504029   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2504030   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2504031   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2504032   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2504033   +end;
MPRINT(EM_DIAGRAM):   end;
2504034   +else do;
MPRINT(EM_DIAGRAM):   else do;
2504035   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2504036   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2504037   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2504038   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2504039   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2504040   +   end;
MPRINT(EM_DIAGRAM):   end;
2504041   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2504042   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2504043   +   end;
MPRINT(EM_DIAGRAM):   end;
2504044   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2504045   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2504046   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2504047   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2504048   +   end;
MPRINT(EM_DIAGRAM):   end;
2504049   +end;
MPRINT(EM_DIAGRAM):   end;
2504050   +
2504051   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2504052   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2504053   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2504054   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2504055   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2504056   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2504057   +end;
MPRINT(EM_DIAGRAM):   end;
2504058   +else do;
MPRINT(EM_DIAGRAM):   else do;
2504059   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2504060   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2504061   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2504062   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2504063   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2504064   +   end;
MPRINT(EM_DIAGRAM):   end;
2504065   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2504066   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2504067   +   end;
MPRINT(EM_DIAGRAM):   end;
2504068   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2504069   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2504070   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2504071   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2504072   +   end;
MPRINT(EM_DIAGRAM):   end;
2504073   +end;
MPRINT(EM_DIAGRAM):   end;
2504074   +
2504075   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2504076   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2504077   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2504078   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2504079   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2504080   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2504081   +end;
MPRINT(EM_DIAGRAM):   end;
2504082   +else do;
MPRINT(EM_DIAGRAM):   else do;
2504083   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2504084   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2504085   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2504086   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2504087   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2504088   +   end;
MPRINT(EM_DIAGRAM):   end;
2504089   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2504090   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2504091   +   end;
MPRINT(EM_DIAGRAM):   end;
2504092   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2504093   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2504094   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2504095   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2504096   +   end;
MPRINT(EM_DIAGRAM):   end;
2504097   +end;
MPRINT(EM_DIAGRAM):   end;
2504098   +
2504099   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2504100   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2504101   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2504102   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2504103   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2504104   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2504105   +end;
MPRINT(EM_DIAGRAM):   end;
2504106   +else do;
MPRINT(EM_DIAGRAM):   else do;
2504107   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2504108   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2504109   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2504110   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2504111   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2504112   +   end;
MPRINT(EM_DIAGRAM):   end;
2504113   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2504114   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2504115   +   end;
MPRINT(EM_DIAGRAM):   end;
2504116   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2504117   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2504118   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2504119   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2504120   +   end;
MPRINT(EM_DIAGRAM):   end;
2504121   +end;
MPRINT(EM_DIAGRAM):   end;
2504122   +
2504123   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2504124   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2504125   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2504126   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2504127   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2504128   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2504129   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2504130   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2504131   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2504132   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2504133   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2504134   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2504135   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2504136   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2504137   +end;
MPRINT(EM_DIAGRAM):   end;
2504138   +else do;
MPRINT(EM_DIAGRAM):   else do;
2504139   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2504140   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2504141   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2504142   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2504143   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2504144   +   end;
MPRINT(EM_DIAGRAM):   end;
2504145   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2504146   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2504147   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2504148   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2504149   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2504150   +   end;
MPRINT(EM_DIAGRAM):   end;
2504151   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2504152   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2504153   +   end;
MPRINT(EM_DIAGRAM):   end;
2504154   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2504155   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2504156   +   end;
MPRINT(EM_DIAGRAM):   end;
2504157   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2504158   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2504159   +   end;
MPRINT(EM_DIAGRAM):   end;
2504160   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2504161   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2504162   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2504163   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2504164   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2504165   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2504166   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2504167   +   end;
MPRINT(EM_DIAGRAM):   end;
2504168   +end;
MPRINT(EM_DIAGRAM):   end;
2504169   +
2504170   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2504171   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2504172   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2504173   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2504174   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2504175   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2504176   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2504177   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2504178   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2504179   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2504180   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2504181   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2504182   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2504183   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2504184   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2504185   +end;
MPRINT(EM_DIAGRAM):   end;
2504186   +else do;
MPRINT(EM_DIAGRAM):   else do;
2504187   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2504188   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2504189   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2504190   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2504191   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2504192   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2504193   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2504194   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2504195   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2504196   +         end;
MPRINT(EM_DIAGRAM):   end;
2504197   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2504198   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2504199   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2504200   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2504201   +            end;
MPRINT(EM_DIAGRAM):   end;
2504202   +         end;
MPRINT(EM_DIAGRAM):   end;
2504203   +      end;
MPRINT(EM_DIAGRAM):   end;
2504204   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2504205   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2504206   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2504207   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2504208   +         end;
MPRINT(EM_DIAGRAM):   end;
2504209   +      end;
MPRINT(EM_DIAGRAM):   end;
2504210   +   end;
MPRINT(EM_DIAGRAM):   end;
2504211   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2504212   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2504213   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2504214   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2504215   +      end;
MPRINT(EM_DIAGRAM):   end;
2504216   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2504217   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2504218   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2504219   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2504220   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2504221   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2504222   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2504223   +         end;
MPRINT(EM_DIAGRAM):   end;
2504224   +      end;
MPRINT(EM_DIAGRAM):   end;
2504225   +   end;
MPRINT(EM_DIAGRAM):   end;
2504226   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2504227   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2504228   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2504229   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2504230   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2504231   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2504232   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2504233   +   end;
MPRINT(EM_DIAGRAM):   end;
2504234   +end;
MPRINT(EM_DIAGRAM):   end;
2504235   +
2504236   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504237   +*** Checking missing input Interval
2504238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2504239   +
2504240   +IF NMISS(
2504241   +   AcceptedCmpTotal ,
2504242   +   Age ,
2504243   +   Frq ,
2504244   +   Income ,
2504245   +   Kidhome ,
2504246   +   Mnt ,
2504247   +   MntFishProducts ,
2504248   +   MntFruits ,
2504249   +   MntGoldProds ,
2504250   +   MntMeatProducts ,
2504251   +   MntSweetProducts ,
2504252   +   MntWines ,
2504253   +   MonthsAsCustomer ,
2504254   +   NumCatalogPurchases ,
2504255   +   NumDealsPurchases ,
2504256   +   NumDistPurchases ,
2504257   +   NumStorePurchases ,
2504258   +   NumWebPurchases ,
2504259   +   NumWebVisitsMonth ,
2504260   +   RFMstat ,
2504261   +   RMntFrq ,
2504262   +   Recency ,
2504263   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2504264   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2504265   +
2504266   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2504267   +END;
MPRINT(EM_DIAGRAM):   END;
2504268   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504269   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2504270   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504271   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2504272   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2504273   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2504274   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2504275   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2504276   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2504277   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2504278   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2504279   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2504280   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2504281   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2504282   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2504283   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2504284   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2504285   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2504286   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2504287   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2504288   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2504289   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2504290   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2504291   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2504292   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2504293   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2504294   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2504295   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2504296   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2504297   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2504298   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2504299   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2504300   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2504301   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2504302   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2504303   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2504304   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2504305   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2504306   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2504307   +END;
MPRINT(EM_DIAGRAM):   END;
2504308   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2504309   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2504310   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2504311   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2504312   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2504313   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2504314   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2504315   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2504316   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2504317   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2504318   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2504319   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2504320   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2504321   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2504322   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2504323   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2504324   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2504325   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2504326   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2504327   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2504328   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2504329   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2504330   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2504331   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2504332   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2504333   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2504334   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2504335   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2504336   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2504337   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2504338   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2504339   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2504340   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2504341   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2504342   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2504343   +   ELSE S_NumCatalogPurchases
2504344   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2504345   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2504346   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2504347   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2504348   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2504349   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2504350   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2504351   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2504352   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2504353   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2504354   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2504355   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2504356   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2504357   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2504358   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2504359   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2504360   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2504361   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2504362   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2504363   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2504364   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2504365   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2504366   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2504367   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2504368   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2504369   +END;
MPRINT(EM_DIAGRAM):   END;
2504370   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504371   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2504372   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504373   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504374   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2504375   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504377   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2504378   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504379   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2504380   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2504381   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2504382   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2504383   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2504384   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2504385   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2504386   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2504387   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2504388   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2504389   +          +     0.19770934886328 * S_NumDealsPurchases
2504390   +          +      0.0515215988111 * S_NumDistPurchases
2504391   +          +    -0.34569346346089 * S_NumStorePurchases
2504392   +          +    -0.27122293596124 * S_NumWebPurchases
2504393   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2504394   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2504395   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2504396   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 *
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 *
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts +
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 *
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 *
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 *
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 *
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq +
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2504397   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2504398   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2504399   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2504400   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2504401   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2504402   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2504403   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2504404   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2504405   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2504406   +          +     0.54308887602031 * S_NumDealsPurchases
2504407   +          +    -0.22507315320192 * S_NumDistPurchases
2504408   +          +    -0.79861387328361 * S_NumStorePurchases
2504409   +          +    -0.45467494002747 * S_NumWebPurchases
2504410   +          +      0.2119048824613 * S_NumWebVisitsMonth
2504411   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2504412   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2504413   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 *
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 *
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts +
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 *
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 *
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 *
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 *
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq +
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2504414   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2504415   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2504416   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2504417   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2504418   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2504419   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2504420   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2504421   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2504422   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2504423   +          +     -0.0771083149302 * S_NumDealsPurchases
2504424   +          +     0.03403621221162 * S_NumDistPurchases
2504425   +          +     0.61303946422025 * S_NumStorePurchases
2504426   +          +     0.27126793634053 * S_NumWebPurchases
2504427   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2504428   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2504429   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2504430   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 *
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 *
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts +
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 *
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 *
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 *
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 *
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq +
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2504431   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2504432   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2504433   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2504434   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2504435   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2504436   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2504437   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2504438   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2504439   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2504440   +          +     0.29894603062327 * S_NumDealsPurchases
2504441   +          +     0.07614620530875 * S_NumDistPurchases
2504442   +          +     0.15402335009896 * S_NumStorePurchases
2504443   +          +     0.10615749096863 * S_NumWebPurchases
2504444   +          +     0.41962286816879 * S_NumWebVisitsMonth
2504445   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2504446   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2504447   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome +
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 *
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts +
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 *
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 *
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 *
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 *
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq +
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2504448   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2504449   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2504450   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2504451   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2504452   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2504453   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2504454   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2504455   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2504456   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2504457   +          +     0.14392502416642 * S_NumDealsPurchases
2504458   +          +    -0.10026304978633 * S_NumDistPurchases
2504459   +          +     -0.0588453022746 * S_NumStorePurchases
2504460   +          +     0.24799398610395 * S_NumWebPurchases
2504461   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2504462   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2504463   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2504464   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 *
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 *
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts +
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 *
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines +
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases +
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases +
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases +
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 *
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2504465   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2504466   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2504467   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2504468   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2504469   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2504470   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2504471   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2504472   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2504473   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2504474   +          +     0.08149600854964 * S_NumDealsPurchases
2504475   +          +     0.16873541613513 * S_NumDistPurchases
2504476   +          +    -0.20437343413446 * S_NumStorePurchases
2504477   +          +     -0.1671107527288 * S_NumWebPurchases
2504478   +          +     0.03677043100993 * S_NumWebVisitsMonth
2504479   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2504480   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2504481   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 *
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 *
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts +
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 *
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 *
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 *
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 *
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq +
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2504482   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2504483   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2504484   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2504485   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2504486   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 *
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 +
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 *
HigherEducationBinary0 ;
2504487   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2504488   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2504489   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2504490   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2504491   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 *
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 +
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 *
HigherEducationBinary0 ;
2504492   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2504493   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2504494   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2504495   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2504496   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 *
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 +
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 *
HigherEducationBinary0 ;
2504497   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2504498   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2504499   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2504500   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2504501   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 +
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 *
HigherEducationBinary0 ;
2504502   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2504503   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2504504   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2504505   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2504506   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 +
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 *
HigherEducationBinary0 ;
2504507   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2504508   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2504509   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2504510   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2504511   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 *
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 +
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 *
HigherEducationBinary0 ;
2504512   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2504513   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2504514   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2504515   +          +    -0.31045295887604 * Marital_StatusDivorced
2504516   +          +    -0.01109401001539 * Marital_StatusMarried
2504517   +          +     0.01325135981025 * Marital_StatusSingle
2504518   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried +
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2504519   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2504520   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2504521   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2504522   +          +     0.02275101861599 * Marital_StatusDivorced
2504523   +          +     0.20271548664903 * Marital_StatusMarried
2504524   +          +    -0.12132069210718 * Marital_StatusSingle
2504525   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle +
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 *
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 *
Marital_StatusTogether ;
2504526   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2504527   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2504528   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2504529   +          +     -0.4992959703281 * Marital_StatusDivorced
2504530   +          +     0.62071659624138 * Marital_StatusMarried
2504531   +          +    -0.21776202274494 * Marital_StatusSingle
2504532   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle +
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 *
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 *
Marital_StatusTogether ;
2504533   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2504534   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2504535   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2504536   +          +     0.05626212670587 * Marital_StatusDivorced
2504537   +          +     0.14353891364597 * Marital_StatusMarried
2504538   +          +    -0.29006765622997 * Marital_StatusSingle
2504539   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle +
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation +
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced +
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle +
0.05503638282535 * Marital_StatusTogether ;
2504540   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2504541   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2504542   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2504543   +          +    -0.21206913700604 * Marital_StatusDivorced
2504544   +          +     0.58790643614629 * Marital_StatusMarried
2504545   +          +    -0.65995982578062 * Marital_StatusSingle
2504546   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle +
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation +
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced +
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle +
0.49642503732428 * Marital_StatusTogether ;
2504547   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2504548   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2504549   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2504550   +          +    -0.05047370516008 * Marital_StatusDivorced
2504551   +          +    -0.23139090963669 * Marital_StatusMarried
2504552   +          +     0.04816197463249 * Marital_StatusSingle
2504553   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle +
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation +
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced +
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle +
0.04977890114896 * Marital_StatusTogether ;
2504554   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2504555   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2504556   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2504557   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2504558   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2504559   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2504560   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2504561   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2504562   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2504563   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2504564   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2504565   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2504566   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2504567   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2504568   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2504569   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2504570   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2504571   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2504572   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2504573   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2504574   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2504575   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2504576   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2504577   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2504578   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2504579   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2504580   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2504581   +END;
MPRINT(EM_DIAGRAM):   END;
2504582   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2504583   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2504584   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2504585   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2504586   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2504587   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2504588   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2504589   +END;
MPRINT(EM_DIAGRAM):   END;
2504590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504591   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2504592   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504593   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2504594   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2504595   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2504596   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 +
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 +
-0.0100306049679 * H1x1_6 ;
2504597   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2504598   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2504599   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2504600   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2504601   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2504602   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2504603   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2504604   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2504605   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2504606   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2504607   +END;
MPRINT(EM_DIAGRAM):   END;
2504608   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2504609   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2504610   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2504611   +END;
MPRINT(EM_DIAGRAM):   END;
2504612   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2504613   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2504614   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2504615   +END;
MPRINT(EM_DIAGRAM):   END;
2504616   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504617   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2504618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2504619   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2504620   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2504621   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2504622   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2504623   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2504624   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2504625   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2504626   +END;
MPRINT(EM_DIAGRAM):   END;
2504627   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2504628   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2504629   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2504630   +drop
2504631   +H1x1_1
2504632   +H1x1_2
2504633   +H1x1_3
2504634   +H1x1_4
2504635   +H1x1_5
2504636   +H1x1_6
2504637   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2504638   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2504639    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2504640    quit;
2504641    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2504642    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2504643    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2504644    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
2504645    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2504646    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2995 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504647    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2504648    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504649    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2995 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2504650    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME
CREATOR);
2504651    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504652    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504653    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2504654    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2504655    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2504656    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504657    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
2504658    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2504659    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2504660    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504661    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504662    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2504663    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2504664    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504665    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2504666    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2504667    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2504667  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.
 
2504668    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504669    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2504670    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2504671    filename _pref
2504671  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2504672    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2504673    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2504674   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2504675   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2504676   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2504677   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2504678   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2504679   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2504680    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2504681    quit;
2504682    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2504683    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2504684    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2504685    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2504686    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2504687    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504688    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2504689    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504690    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504691    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2504692    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504693    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2504694    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2504695    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2504696    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2504697    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504698    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2504699    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2504700    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2504701    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504702    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504703    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2504704    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2504705    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504706    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504707    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2504708    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2504708  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2504709    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2504710    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2504711    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504712    filename _pref
2504712  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2504713    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2504714    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2504715   +
2504716   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2504717   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2504717  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2504718   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2504719   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2504720   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2504721   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2504722   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2504723    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2504724    quit;
2504725    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2504726    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2504727    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2504728    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2504729    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2504730    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504731    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2504732    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504733    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504734    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2504735    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504736    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504737    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2504738    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2504739    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2504740    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504741    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2504742    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504743    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2504744    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504745    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504746    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2504747    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2504748    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504749    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504750    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2504751    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2504751  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2504752    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2504753    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2504754    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504755    filename _pref
2504755  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2504756    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2504757    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2504758   +
2504759   +
2504760   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2504761   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2504762   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2504763   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2504764   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2504765   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2504766   +
2504767   +
2504768   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2504769   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2504770   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2504771   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2504772   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2504773   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2504774   +
2504775   +
2504776   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2504777   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2504778   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2504779   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2504780   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2504781   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2504782   +
2504783   +
2504784   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2504785   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2504786   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2504787   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2504788   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2504789   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2504790   +
2504791   +
2504792   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2504793   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2504794   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2504795   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2504796   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2504797   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2504798   +
2504799   +
2504800   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2504801   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2504802   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2504803   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2504804   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2504805   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2504806   +
2504807   +
2504808   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2504809   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2504810   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2504811   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2504812   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2504813   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2504814   +
2504815   +
2504816   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2504817   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2504818   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2504819   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2504820   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2504821   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2504822   +if
2504823   +_FILTERNORM1 not in ( '.')
2504824   + and
2504825   +_FILTERNORM2 not in ( '.')
2504826   + and
2504827   +_FILTERNORM3 not in ( '.')
2504828   + and
2504829   +_FILTERNORM4 not in ( '.')
2504830   + and
2504831   +_FILTERNORM5 not in ( '.')
2504832   + and
2504833   +_FILTERNORM6 not in ( '.')
2504834   + and
2504835   +_FILTERNORM7 not in ( ' ')
2504836   + and
2504837   +_FILTERNORM8 not in ( ' ')
2504838   +and
2504839   +( Dt_Customer ne .)
2504840   +and ( Income ne . and (Income<=107000))
2504841   +and ( Kidhome ne .)
2504842   +and ( MntFishProducts ne .)
2504843   +and ( MntFruits ne .)
2504844   +and ( MntGoldProds ne .)
2504845   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2504846   +and ( MntSweetProducts ne .)
2504847   +and ( MntWines ne .)
2504848   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2504849   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2504850   +and ( NumStorePurchases ne .)
2504851   +and ( NumWebPurchases ne .)
2504852   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2504853   +and ( Recency ne .)
2504854   +and ( Teenhome ne .)
2504855   +and ( Year_Birth ne .)
2504856   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2504857   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2504858   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2504859   +end;
MPRINT(EM_DIAGRAM):   end;
2504860   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2504861   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2504862    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2504863    quit;
2504864    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2504865    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2504866    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2504867    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2504868    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2504869    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504870    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2504871    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504872    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2504873    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2504874    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504875    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504876    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2504877    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2504878    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2504879    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2504880    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2504881    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2504882    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2504883    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504884    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2504885    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2504886    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2504887    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2504888    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504889    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2504890    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2504890  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2504891    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504892    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2504893    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504894    %macro varDept(fcmpdata=,id=);
2504895    %global nobs&id scoreFlag&id;
2504896    %let scoreFlag&id = 0;
2504897    %if &id=1 or ^&fcmpStart %then %do;
2504898    proc sort data=&fcmpdata out=_temp&id nodupkey;
2504899    by NAME;
2504900    where id=&id and LHS in( %let j=1;
2504901    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2504902    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2504903    "&var" %let j = %eval(&j+1);
2504904    %end;
2504905    );
2504906    run;
2504907    %let dsid = %sysfunc(open(_temp&id));
2504908    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2504909    %let dsid = %sysfunc(close(&dsid));
2504910    %if &&nobs&id %then %do;
2504911    %let scoreFlag&id = 1;
2504912    %let fcmpStart = 1;
2504913    %end;
2504914    %else %let fcmpStart = 0;
2504915    %end;
2504916    %else %do;
2504917    proc sort data=&fcmpdata out=_tempid;
2504918    where id=&id;
2504919    by LHS;
2504920    run;
2504921    %let dsid = %sysfunc(open(_tempid));
2504922    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2504923    %let dsid = %sysfunc(close(&dsid));
2504924    %if ^&&nobs&id %then %do;
2504925    proc datasets lib=work nolist;
2504926    delete _tempid;
2504927    run;
2504928    quit;
2504929    %end;
2504930    %else %do;
2504931    data _tempAll;
2504932    set %let j=%eval(&id-1);
2504933    %do x=1 %to &j;
2504934    %if &&nobs&x %then %do;
2504935    _temp&x %end;
2504936    %end;
2504937    ;
2504938    run;
2504939    proc sql;
2504940    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2504940  ! work._tempid p2 where p.name=p2.lhs;
2504941    quit;
2504942    data _temp&id;
2504943    set _temp&id;
2504944    where LHS ne '' and NAME ne '' and Node ne '';
2504945    run;
2504946    proc datasets lib=work nolist;
2504947    delete _tempAll;
2504948    run;
2504949    %let dsid = %sysfunc(open(_temp&id));
2504950    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2504951    %let dsid = %sysfunc(close(&dsid));
2504952    %if ^&&nobs&id %then %do;
2504953    proc datasets lib=work nolist;
2504954    delete _temp&id;
2504955    run;
2504956    quit;
2504957    %end;
2504958    %else %do;
2504959    %let scoreFlag&id = 1;
2504960    data _temp&id;
2504961    set _temp&id;
2504962    where LHS ne NAME and node ne '';
2504963    run;
2504964    %let dsid = %sysfunc(open(_temp&id));
2504965    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2504966    %let dsid = %sysfunc(close(&dsid));
2504967    %if ^&&nobs&id %then %do;
2504968    proc datasets lib=work nolist;
2504969    delete _temp&id;
2504970    run;
2504971    quit;
2504972    %end;
2504973    %else %do;
2504974    proc sort data=_temp&id nodupkey;
2504975    by LHS NAME;
2504976    run;
2504977    %end;
2504978    %end;
2504979    %end;
2504980    %end;
2504981    %mend varDept;
2504982    %macro optCode(outdata=fcmpdata);
2504983    %global fcmpStart;
2504984    %let fcmpStart = 0;
2504985    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2504986    %let NumNodes=9;
2504987    %do k=1 %to &NumNodes;
2504988    %vardept(fcmpdata=&outdata, id=&k);
2504989    %end;
2504990    %mend optCode;
2504991    %optcode(outData=EMWS8.Ensmbl47_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2504992    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2504993    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2504994    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2504995    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2504996    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2504997    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2504998    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2504999    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505000    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2505001    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2505001  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2505002    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2505003    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2505004    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2505005    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2505006    filename _pref
2505006  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
2505007    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2505008    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
2505009   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2505010   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2505011   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2505012   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2505013   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2505014   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2505015   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2505016   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2505017   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2505018   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2505019   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2505020   +LENGTH _WARN_ $4
2505021   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2505022   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2505023   +
2505024   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2505025   +
2505026   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2505027   +
2505028   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2505029   +
2505030   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2505031   +
2505032   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2505033   +
2505034   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2505035   +
2505036   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2505037   +
2505038   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2505039   +
2505040   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2505041   +
2505042   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2505043   +
2505044   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2505045   +
2505046   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2505047   +
2505048   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2505049   +
2505050   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2505051   +
2505052   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2505053   +
2505054   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2505055   +
2505056   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2505057   +
2505058   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2505059   +
2505060   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2505061   +
2505062   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2505063   +
2505064   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2505065   +
2505066   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2505067   +
2505068   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2505069   +
2505070   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2505071   +
2505072   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2505073   +
2505074   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2505075   +
2505076   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2505077   +
2505078   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2505079   +
2505080   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2505081   +
2505082   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2505083   +
2505084   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2505085   +
2505086   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2505087   +
2505088   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2505089   +
2505090   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2505091   +
2505092   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2505093   +
2505094   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2505095   +
2505096   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2505097   +
2505098   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2505099   +
2505100   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2505101   +
2505102   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2505103   +
2505104   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2505105   +
2505106   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2505107   +
2505108   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2505109   +
2505110   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2505111   +
2505112   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2505113   +
2505114   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2505115   +
2505116   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2505117   +
2505118   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2505119   +
2505120   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2505121   +
2505122   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2505123   +
2505124   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2505125   +
2505126   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2505127   +
2505128   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2505129   +
2505130   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2505131   +
2505132   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2505133   +
2505134   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2505135   +
2505136   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2505137   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2505138   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2505139   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2505140   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2505141   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505142   +end;
MPRINT(EM_DIAGRAM):   end;
2505143   +else do;
MPRINT(EM_DIAGRAM):   else do;
2505144   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2505145   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2505146   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2505147   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2505148   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2505149   +   end;
MPRINT(EM_DIAGRAM):   end;
2505150   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2505151   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2505152   +   end;
MPRINT(EM_DIAGRAM):   end;
2505153   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2505154   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2505155   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2505156   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505157   +   end;
MPRINT(EM_DIAGRAM):   end;
2505158   +end;
MPRINT(EM_DIAGRAM):   end;
2505159   +
2505160   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2505161   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2505162   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2505163   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2505164   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2505165   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505166   +end;
MPRINT(EM_DIAGRAM):   end;
2505167   +else do;
MPRINT(EM_DIAGRAM):   else do;
2505168   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2505169   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2505170   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2505171   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2505172   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2505173   +   end;
MPRINT(EM_DIAGRAM):   end;
2505174   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2505175   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2505176   +   end;
MPRINT(EM_DIAGRAM):   end;
2505177   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2505178   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2505179   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2505180   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505181   +   end;
MPRINT(EM_DIAGRAM):   end;
2505182   +end;
MPRINT(EM_DIAGRAM):   end;
2505183   +
2505184   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2505185   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2505186   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2505187   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2505188   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2505189   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505190   +end;
MPRINT(EM_DIAGRAM):   end;
2505191   +else do;
MPRINT(EM_DIAGRAM):   else do;
2505192   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2505193   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2505194   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2505195   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2505196   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2505197   +   end;
MPRINT(EM_DIAGRAM):   end;
2505198   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2505199   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2505200   +   end;
MPRINT(EM_DIAGRAM):   end;
2505201   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2505202   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2505203   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2505204   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505205   +   end;
MPRINT(EM_DIAGRAM):   end;
2505206   +end;
MPRINT(EM_DIAGRAM):   end;
2505207   +
2505208   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2505209   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2505210   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2505211   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2505212   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2505213   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505214   +end;
MPRINT(EM_DIAGRAM):   end;
2505215   +else do;
MPRINT(EM_DIAGRAM):   else do;
2505216   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2505217   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2505218   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2505219   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2505220   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2505221   +   end;
MPRINT(EM_DIAGRAM):   end;
2505222   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2505223   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2505224   +   end;
MPRINT(EM_DIAGRAM):   end;
2505225   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2505226   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2505227   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2505228   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505229   +   end;
MPRINT(EM_DIAGRAM):   end;
2505230   +end;
MPRINT(EM_DIAGRAM):   end;
2505231   +
2505232   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2505233   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2505234   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2505235   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2505236   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2505237   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505238   +end;
MPRINT(EM_DIAGRAM):   end;
2505239   +else do;
MPRINT(EM_DIAGRAM):   else do;
2505240   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2505241   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2505242   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2505243   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2505244   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2505245   +   end;
MPRINT(EM_DIAGRAM):   end;
2505246   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2505247   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2505248   +   end;
MPRINT(EM_DIAGRAM):   end;
2505249   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2505250   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2505251   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2505252   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505253   +   end;
MPRINT(EM_DIAGRAM):   end;
2505254   +end;
MPRINT(EM_DIAGRAM):   end;
2505255   +
2505256   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2505257   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2505258   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2505259   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2505260   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2505261   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505262   +end;
MPRINT(EM_DIAGRAM):   end;
2505263   +else do;
MPRINT(EM_DIAGRAM):   else do;
2505264   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2505265   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2505266   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2505267   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2505268   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2505269   +   end;
MPRINT(EM_DIAGRAM):   end;
2505270   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2505271   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2505272   +   end;
MPRINT(EM_DIAGRAM):   end;
2505273   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2505274   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2505275   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2505276   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505277   +   end;
MPRINT(EM_DIAGRAM):   end;
2505278   +end;
MPRINT(EM_DIAGRAM):   end;
2505279   +
2505280   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2505281   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2505282   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2505283   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2505284   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2505285   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505286   +end;
MPRINT(EM_DIAGRAM):   end;
2505287   +else do;
MPRINT(EM_DIAGRAM):   else do;
2505288   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2505289   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2505290   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2505291   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2505292   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2505293   +   end;
MPRINT(EM_DIAGRAM):   end;
2505294   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2505295   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2505296   +   end;
MPRINT(EM_DIAGRAM):   end;
2505297   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2505298   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2505299   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2505300   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505301   +   end;
MPRINT(EM_DIAGRAM):   end;
2505302   +end;
MPRINT(EM_DIAGRAM):   end;
2505303   +
2505304   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2505305   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2505306   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2505307   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2505308   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2505309   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2505310   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2505311   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2505312   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2505313   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2505314   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2505315   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2505316   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2505317   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505318   +end;
MPRINT(EM_DIAGRAM):   end;
2505319   +else do;
MPRINT(EM_DIAGRAM):   else do;
2505320   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2505321   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2505322   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2505323   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2505324   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2505325   +   end;
MPRINT(EM_DIAGRAM):   end;
2505326   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2505327   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2505328   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2505329   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2505330   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2505331   +   end;
MPRINT(EM_DIAGRAM):   end;
2505332   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2505333   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2505334   +   end;
MPRINT(EM_DIAGRAM):   end;
2505335   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2505336   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2505337   +   end;
MPRINT(EM_DIAGRAM):   end;
2505338   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2505339   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2505340   +   end;
MPRINT(EM_DIAGRAM):   end;
2505341   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2505342   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2505343   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2505344   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2505345   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2505346   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2505347   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505348   +   end;
MPRINT(EM_DIAGRAM):   end;
2505349   +end;
MPRINT(EM_DIAGRAM):   end;
2505350   +
2505351   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2505352   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2505353   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2505354   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2505355   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2505356   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2505357   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2505358   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2505359   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2505360   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2505361   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2505362   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2505363   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2505364   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2505365   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505366   +end;
MPRINT(EM_DIAGRAM):   end;
2505367   +else do;
MPRINT(EM_DIAGRAM):   else do;
2505368   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2505369   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2505370   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2505371   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2505372   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2505373   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2505374   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2505375   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2505376   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2505377   +         end;
MPRINT(EM_DIAGRAM):   end;
2505378   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2505379   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2505380   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2505381   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2505382   +            end;
MPRINT(EM_DIAGRAM):   end;
2505383   +         end;
MPRINT(EM_DIAGRAM):   end;
2505384   +      end;
MPRINT(EM_DIAGRAM):   end;
2505385   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2505386   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2505387   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2505388   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2505389   +         end;
MPRINT(EM_DIAGRAM):   end;
2505390   +      end;
MPRINT(EM_DIAGRAM):   end;
2505391   +   end;
MPRINT(EM_DIAGRAM):   end;
2505392   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2505393   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2505394   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2505395   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2505396   +      end;
MPRINT(EM_DIAGRAM):   end;
2505397   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2505398   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2505399   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2505400   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2505401   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2505402   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2505403   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2505404   +         end;
MPRINT(EM_DIAGRAM):   end;
2505405   +      end;
MPRINT(EM_DIAGRAM):   end;
2505406   +   end;
MPRINT(EM_DIAGRAM):   end;
2505407   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2505408   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2505409   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2505410   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2505411   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2505412   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2505413   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505414   +   end;
MPRINT(EM_DIAGRAM):   end;
2505415   +end;
MPRINT(EM_DIAGRAM):   end;
2505416   +
2505417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505418   +*** Checking missing input Interval
2505419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2505420   +
2505421   +IF NMISS(
2505422   +   AcceptedCmpTotal ,
2505423   +   Age ,
2505424   +   Frq ,
2505425   +   Income ,
2505426   +   Kidhome ,
2505427   +   Mnt ,
2505428   +   MntFishProducts ,
2505429   +   MntFruits ,
2505430   +   MntGoldProds ,
2505431   +   MntMeatProducts ,
2505432   +   MntSweetProducts ,
2505433   +   MntWines ,
2505434   +   MonthsAsCustomer ,
2505435   +   NumCatalogPurchases ,
2505436   +   NumDealsPurchases ,
2505437   +   NumDistPurchases ,
2505438   +   NumStorePurchases ,
2505439   +   NumWebPurchases ,
2505440   +   NumWebVisitsMonth ,
2505441   +   RFMstat ,
2505442   +   RMntFrq ,
2505443   +   Recency ,
2505444   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2505445   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2505446   +
2505447   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2505448   +END;
MPRINT(EM_DIAGRAM):   END;
2505449   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505450   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2505451   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505452   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2505453   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2505454   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2505455   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2505456   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2505457   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2505458   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2505459   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2505460   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2505461   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2505462   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2505463   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2505464   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2505465   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2505466   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2505467   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2505468   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2505469   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2505470   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2505471   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2505472   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2505473   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2505474   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2505475   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2505476   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2505477   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2505478   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2505479   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2505480   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2505481   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2505482   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2505483   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2505484   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2505485   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2505486   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2505487   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2505488   +END;
MPRINT(EM_DIAGRAM):   END;
2505489   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2505490   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2505491   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2505492   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2505493   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2505494   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2505495   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2505496   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2505497   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2505498   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2505499   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2505500   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2505501   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2505502   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2505503   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2505504   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2505505   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2505506   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2505507   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2505508   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2505509   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2505510   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2505511   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2505512   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2505513   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2505514   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2505515   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2505516   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2505517   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2505518   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2505519   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2505520   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2505521   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2505522   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2505523   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2505524   +   ELSE S_NumCatalogPurchases
2505525   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2505526   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2505527   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2505528   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2505529   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2505530   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2505531   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2505532   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2505533   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2505534   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2505535   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2505536   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2505537   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2505538   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2505539   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2505540   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2505541   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2505542   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2505543   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2505544   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2505545   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2505546   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2505547   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2505548   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2505549   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2505550   +END;
MPRINT(EM_DIAGRAM):   END;
2505551   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505552   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2505553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505555   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2505556   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505557   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505558   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2505559   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505560   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2505561   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2505562   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2505563   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2505564   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2505565   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2505566   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2505567   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2505568   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2505569   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2505570   +          +      0.1112677116841 * S_NumDealsPurchases
2505571   +          +     0.01563584187072 * S_NumDistPurchases
2505572   +          +     0.19193969522995 * S_NumStorePurchases
2505573   +          +      0.3133556199984 * S_NumWebPurchases
2505574   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2505575   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2505576   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2505577   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 *
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 *
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts +
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 *
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 *
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 *
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 *
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq +
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2505578   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2505579   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2505580   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2505581   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2505582   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2505583   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2505584   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2505585   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2505586   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2505587   +          +     0.30225032753275 * S_NumDealsPurchases
2505588   +          +     0.33833359923595 * S_NumDistPurchases
2505589   +          +    -0.20255599575849 * S_NumStorePurchases
2505590   +          +    -0.12040071168942 * S_NumWebPurchases
2505591   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2505592   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2505593   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2505594   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 *
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 *
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts +
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 *
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 *
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 *
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 *
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq +
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2505595   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2505596   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2505597   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2505598   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2505599   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2505600   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2505601   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2505602   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2505603   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2505604   +          +     0.16792903091627 * S_NumDealsPurchases
2505605   +          +    -0.37408945626745 * S_NumDistPurchases
2505606   +          +    -0.18067262995566 * S_NumStorePurchases
2505607   +          +     0.21192146789881 * S_NumWebPurchases
2505608   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2505609   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2505610   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2505611   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 *
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 *
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts +
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 *
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines +
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases +
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases +
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases +
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 *
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2505612   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2505613   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2505614   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2505615   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2505616   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2505617   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2505618   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2505619   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2505620   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2505621   +          +     0.29407429399136 * S_NumDealsPurchases
2505622   +          +     0.01610745252195 * S_NumDistPurchases
2505623   +          +    -0.17767939085628 * S_NumStorePurchases
2505624   +          +    -0.15168958538637 * S_NumWebPurchases
2505625   +          +     0.17433622143988 * S_NumWebVisitsMonth
2505626   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2505627   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2505628   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 *
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 *
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts +
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 *
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines +
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases +
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases +
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases +
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 *
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2505629   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2505630   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2505631   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2505632   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2505633   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2505634   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2505635   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2505636   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2505637   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2505638   +          +    -0.37976451362108 * S_NumDealsPurchases
2505639   +          +    -0.17027731520801 * S_NumDistPurchases
2505640   +          +     0.59849493667087 * S_NumStorePurchases
2505641   +          +     0.65481480560301 * S_NumWebPurchases
2505642   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2505643   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2505644   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2505645   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 *
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 *
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts +
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 *
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines +
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases +
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases +
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases +
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 *
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2505646   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2505647   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2505648   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2505649   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2505650   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2505651   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2505652   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2505653   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2505654   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2505655   +          +    -0.07686699131623 * S_NumDealsPurchases
2505656   +          +    -0.07220460738926 * S_NumDistPurchases
2505657   +          +    -0.06554027468389 * S_NumStorePurchases
2505658   +          +     0.10422838158001 * S_NumWebPurchases
2505659   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2505660   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2505661   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2505662   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 *
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 *
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts +
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 *
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 *
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 *
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 *
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq +
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2505663   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2505664   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2505665   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2505666   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2505667   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2505668   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2505669   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2505670   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2505671   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2505672   +          +    -0.07920122387563 * S_NumDealsPurchases
2505673   +          +      0.3649244061347 * S_NumDistPurchases
2505674   +          +     0.36475853688403 * S_NumStorePurchases
2505675   +          +     0.02153991404063 * S_NumWebPurchases
2505676   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2505677   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2505678   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2505679   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 *
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 *
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts +
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 *
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 *
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 *
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 *
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq +
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2505680   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2505681   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2505682   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2505683   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2505684   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 *
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 +
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 *
HigherEducationBinary0 ;
2505685   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2505686   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2505687   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2505688   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2505689   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 +
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 *
HigherEducationBinary0 ;
2505690   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2505691   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2505692   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2505693   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2505694   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 *
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 +
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 *
HigherEducationBinary0 ;
2505695   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2505696   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2505697   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2505698   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2505699   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 +
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 *
HigherEducationBinary0 ;
2505700   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2505701   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2505702   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2505703   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2505704   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 +
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 *
HigherEducationBinary0 ;
2505705   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2505706   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2505707   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2505708   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2505709   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 *
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 +
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 *
HigherEducationBinary0 ;
2505710   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2505711   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2505712   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2505713   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2505714   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 *
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 +
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 *
HigherEducationBinary0 ;
2505715   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2505716   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2505717   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2505718   +          +     0.07744097241553 * Marital_StatusDivorced
2505719   +          +     -0.0247463100385 * Marital_StatusMarried
2505720   +          +     0.05804915234573 * Marital_StatusSingle
2505721   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle +
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation +
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced +
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle +
-0.08320125047871 * Marital_StatusTogether ;
2505722   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2505723   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2505724   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2505725   +          +     0.01390668926269 * Marital_StatusDivorced
2505726   +          +     0.01136282152074 * Marital_StatusMarried
2505727   +          +     0.12450246418789 * Marital_StatusSingle
2505728   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle +
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 *
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 *
Marital_StatusTogether ;
2505729   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2505730   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2505731   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2505732   +          +    -0.19133456931879 * Marital_StatusDivorced
2505733   +          +     0.56263566654996 * Marital_StatusMarried
2505734   +          +    -0.42172822038882 * Marital_StatusSingle
2505735   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle +
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 *
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 *
Marital_StatusTogether ;
2505736   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2505737   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2505738   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2505739   +          +    -0.19871205065609 * Marital_StatusDivorced
2505740   +          +    -0.14730795681603 * Marital_StatusMarried
2505741   +          +     0.05055432510362 * Marital_StatusSingle
2505742   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle +
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation +
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced +
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle +
0.06558965292395 * Marital_StatusTogether ;
2505743   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2505744   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2505745   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2505746   +          +    -0.35623807358995 * Marital_StatusDivorced
2505747   +          +     0.30324726283965 * Marital_StatusMarried
2505748   +          +    -0.18561093467927 * Marital_StatusSingle
2505749   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle +
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation +
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced +
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle +
0.395424582152 * Marital_StatusTogether ;
2505750   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2505751   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2505752   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2505753   +          +     0.11581014663368 * Marital_StatusDivorced
2505754   +          +    -0.31070638037659 * Marital_StatusMarried
2505755   +          +     0.17131747253949 * Marital_StatusSingle
2505756   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle +
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 *
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 *
Marital_StatusTogether ;
2505757   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2505758   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2505759   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2505760   +          +    -0.42450599871892 * Marital_StatusDivorced
2505761   +          +     0.48162905075885 * Marital_StatusMarried
2505762   +          +    -0.26618507749283 * Marital_StatusSingle
2505763   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle +
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 *
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 *
Marital_StatusTogether ;
2505764   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2505765   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2505766   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2505767   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2505768   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2505769   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2505770   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2505771   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2505772   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2505773   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2505774   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2505775   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2505776   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2505777   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2505778   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2505779   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2505780   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2505781   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2505782   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2505783   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2505784   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2505785   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2505786   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2505787   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2505788   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2505789   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2505790   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2505791   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2505792   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2505793   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 *
H1x1_7 ;
2505794   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2505795   +END;
MPRINT(EM_DIAGRAM):   END;
2505796   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2505797   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2505798   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2505799   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2505800   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2505801   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2505802   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2505803   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2505804   +END;
MPRINT(EM_DIAGRAM):   END;
2505805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505806   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2505807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2505808   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2505809   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2505810   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2505811   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2505812   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2505813   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2505814   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2505815   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2505816   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2505817   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2505818   +          +     1.96719021971894 * S_NumDealsPurchases
2505819   +          +    -0.44535354794671 * S_NumDistPurchases
2505820   +          +    -0.54827762736866 * S_NumStorePurchases
2505821   +          +     1.02703310241897 * S_NumWebPurchases
2505822   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2505823   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2505824   +        S_RMntFrq  +       0.651688575044 * S_Recency
2505825   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 *
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 *
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts +
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 *
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 *
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 *
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 *
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq +
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2505826   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2505827   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2505828   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2505829   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2505830   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2505831   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2505832   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2505833   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2505834   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2505835   +          +     1.34659447971131 * S_NumDealsPurchases
2505836   +          +    -0.51624251310423 * S_NumDistPurchases
2505837   +          +      -1.283121574848 * S_NumStorePurchases
2505838   +          +    -1.83517806228926 * S_NumWebPurchases
2505839   +          +     0.51321339475285 * S_NumWebVisitsMonth
2505840   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2505841   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2505842   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 *
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 *
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts +
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 *
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines +
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases +
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases +
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases +
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 *
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2505843   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2505844   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2505845   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2505846   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2505847   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2505848   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2505849   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2505850   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2505851   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2505852   +          +     0.67492297345004 * S_NumDealsPurchases
2505853   +          +    -0.40437875375926 * S_NumDistPurchases
2505854   +          +     0.36322603681545 * S_NumStorePurchases
2505855   +          +    -1.15315070635524 * S_NumWebPurchases
2505856   +          +     1.20707272201156 * S_NumWebVisitsMonth
2505857   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2505858   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2505859   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 *
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 *
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts +
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 *
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 *
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 *
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 *
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq +
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2505860   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2505861   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2505862   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2505863   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2505864   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2505865   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2505866   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2505867   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2505868   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2505869   +          +    -0.41427983342148 * S_NumDealsPurchases
2505870   +          +    -0.22714305629205 * S_NumDistPurchases
2505871   +          +    -0.78763182048862 * S_NumStorePurchases
2505872   +          +    -0.26669253451501 * S_NumWebPurchases
2505873   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2505874   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2505875   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2505876   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 *
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 *
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts +
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 *
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines +
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases +
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases +
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases +
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 *
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2505877   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2505878   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2505879   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2505880   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2505881   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2505882   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2505883   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2505884   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2505885   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2505886   +          +      0.7697882092212 * S_NumDealsPurchases
2505887   +          +     0.51864835453056 * S_NumDistPurchases
2505888   +          +    -1.18320366630444 * S_NumStorePurchases
2505889   +          +     -0.6608394639529 * S_NumWebPurchases
2505890   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2505891   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2505892   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2505893   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 *
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 *
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts +
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 *
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 *
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 *
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 *
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq +
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2505894   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2505895   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2505896   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2505897   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2505898   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2505899   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2505900   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2505901   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2505902   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2505903   +          +     1.45707983202269 * S_NumDealsPurchases
2505904   +          +     0.83341887728641 * S_NumDistPurchases
2505905   +          +    -0.36664450469423 * S_NumStorePurchases
2505906   +          +     0.63911579043339 * S_NumWebPurchases
2505907   +          +     0.67144790303554 * S_NumWebVisitsMonth
2505908   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2505909   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2505910   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 *
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 *
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts +
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 *
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines +
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases +
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases +
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases +
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 *
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2505911   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2505912   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2505913   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2505914   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2505915   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2505916   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2505917   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2505918   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2505919   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2505920   +          +     0.68491896063662 * S_NumDealsPurchases
2505921   +          +      0.5386312048592 * S_NumDistPurchases
2505922   +          +     1.28108942503912 * S_NumStorePurchases
2505923   +          +    -0.88282270505969 * S_NumWebPurchases
2505924   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2505925   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2505926   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2505927   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome +
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 *
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts +
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 *
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 *
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 *
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 *
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq +
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2505928   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2505929   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2505930   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2505931   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2505932   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 *
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 +
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 *
HigherEducationBinary0 ;
2505933   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2505934   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2505935   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2505936   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2505937   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 +
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 *
HigherEducationBinary0 ;
2505938   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2505939   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2505940   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2505941   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2505942   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 +
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 *
HigherEducationBinary0 ;
2505943   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2505944   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2505945   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2505946   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2505947   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 *
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 +
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 *
HigherEducationBinary0 ;
2505948   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2505949   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2505950   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2505951   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2505952   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 +
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 *
HigherEducationBinary0 ;
2505953   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2505954   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2505955   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2505956   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2505957   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 *
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 +
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 *
HigherEducationBinary0 ;
2505958   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2505959   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2505960   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2505961   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2505962   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 *
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 +
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 *
HigherEducationBinary0 ;
2505963   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2505964   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2505965   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2505966   +          +    -3.97961426831865 * Marital_StatusDivorced
2505967   +          +     0.00932639813867 * Marital_StatusMarried
2505968   +          +     1.29310186574718 * Marital_StatusSingle
2505969   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle +
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation +
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced +
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle +
1.60940802221114 * Marital_StatusTogether ;
2505970   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2505971   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2505972   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2505973   +          +    -0.30358516578188 * Marital_StatusDivorced
2505974   +          +    -0.96176709360703 * Marital_StatusMarried
2505975   +          +     1.26977690921649 * Marital_StatusSingle
2505976   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle +
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 *
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 *
Marital_StatusTogether ;
2505977   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2505978   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2505979   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2505980   +          +     0.55272671490757 * Marital_StatusDivorced
2505981   +          +      0.1499239288334 * Marital_StatusMarried
2505982   +          +    -0.46840941760604 * Marital_StatusSingle
2505983   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle +
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 *
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 *
Marital_StatusTogether ;
2505984   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2505985   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2505986   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2505987   +          +      -1.240735370138 * Marital_StatusDivorced
2505988   +          +    -1.20089294883599 * Marital_StatusMarried
2505989   +          +     0.57492674426149 * Marital_StatusSingle
2505990   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle +
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation +
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced +
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle +
1.44189292990255 * Marital_StatusTogether ;
2505991   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2505992   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2505993   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2505994   +          +     1.05435442049802 * Marital_StatusDivorced
2505995   +          +      0.3571256349717 * Marital_StatusMarried
2505996   +          +    -0.44741267266578 * Marital_StatusSingle
2505997   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle +
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation +
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced +
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle +
0.02948931507994 * Marital_StatusTogether ;
2505998   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2505999   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2506000   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2506001   +          +     2.06026721980778 * Marital_StatusDivorced
2506002   +          +    -0.49583258645166 * Marital_StatusMarried
2506003   +          +    -1.14824900824474 * Marital_StatusSingle
2506004   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle +
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation +
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced +
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle +
0.57690093967839 * Marital_StatusTogether ;
2506005   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2506006   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2506007   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2506008   +          +     -1.1890908607447 * Marital_StatusDivorced
2506009   +          +    -0.46668809907123 * Marital_StatusMarried
2506010   +          +     1.20342564763422 * Marital_StatusSingle
2506011   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle +
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation +
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced +
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle +
-1.75740662969578 * Marital_StatusTogether ;
2506012   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2506013   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2506014   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2506015   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2506016   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2506017   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2506018   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2506019   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2506020   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2506021   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2506022   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2506023   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2506024   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2506025   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2506026   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2506027   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2506028   +END;
MPRINT(EM_DIAGRAM):   END;
2506029   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2506030   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2506031   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2506032   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2506033   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2506034   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2506035   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2506036   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2506037   +END;
MPRINT(EM_DIAGRAM):   END;
2506038   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2506039   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2506040   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2506041   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2506042   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2506043   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2506044   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2506045   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 +
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 +
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2506046   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2506047   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2506048   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2506049   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 +
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 +
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2506050   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2506051   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2506052   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2506053   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2506054   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2506055   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2506056   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2506057   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2506058   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2506059   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2506060   +END;
MPRINT(EM_DIAGRAM):   END;
2506061   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2506062   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2506063   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2506064   +END;
MPRINT(EM_DIAGRAM):   END;
2506065   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2506066   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2506067   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2506068   +END;
MPRINT(EM_DIAGRAM):   END;
2506069   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2506070   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2506071   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2506072   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2506073   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2506074   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2506075   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2506076   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2506077   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2506078   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2506079   +END;
MPRINT(EM_DIAGRAM):   END;
2506080   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2506081   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2506082   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2506083   +drop
2506084   +H1x1_1
2506085   +H1x1_2
2506086   +H1x1_3
2506087   +H1x1_4
2506088   +H1x1_5
2506089   +H1x1_6
2506090   +H1x1_7
2506091   +H1x2_1
2506092   +H1x2_2
2506093   +H1x2_3
2506094   +H1x2_4
2506095   +H1x2_5
2506096   +H1x2_6
2506097   +H1x2_7
2506098   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2506099   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2506100    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2506101    quit;
2506102    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2506103    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2506104    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2506105    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
2506106    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2506107    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4452 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4452 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506108    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2506109    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506110    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4452 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4452 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2506111    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME
CREATOR);
2506112    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506113    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506114    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2506115    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2506116    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2506117    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506118    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
2506119    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2506120    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2506121    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506122    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506123    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2506124    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2506125    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506126    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506127    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2506128    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2506128  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2199 rows and 5 columns.
 
2506129    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2506130    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2506131    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2199 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 2199 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506132    filename _pref
2506132  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2506133    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2506134    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2506135   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2506136   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2506137   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2506138   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2506139   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2506140   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2506141    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2506142    quit;
2506143    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2506144    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2506145    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2506146    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2506147    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2506148    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506149    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2506150    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506151    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506152    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2506153    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506154    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506155    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2506156    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2506157    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2506158    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506159    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2506160    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2506161    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2506162    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506163    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506164    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2506165    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2506166    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506167    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506168    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2506169    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2506169  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2506170    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506171    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2506172    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 2203 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506173    filename _pref
2506173  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2506174    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2506175    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2506176   +
2506177   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2506178   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2506178  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2506179   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2506180   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2506181   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2506182   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2506183   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2506184    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2506185    quit;
2506186    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2506187    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2506188    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2506189    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2506190    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2506191    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2506192    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2506193    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506194    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506195    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2506196    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506197    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506198    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2506199    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2506200    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2506201    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2506202    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2506203    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506204    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2506205    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506206    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506207    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2506208    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2506209    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506210    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506211    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2506212    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2506212  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2506213    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506214    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2506215    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 2242 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506216    filename _pref
2506216  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2506217    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2506218    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2506219   +
2506220   +
2506221   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2506222   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2506223   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2506224   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2506225   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2506226   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2506227   +
2506228   +
2506229   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2506230   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2506231   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2506232   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2506233   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2506234   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2506235   +
2506236   +
2506237   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2506238   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2506239   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2506240   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2506241   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2506242   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2506243   +
2506244   +
2506245   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2506246   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2506247   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2506248   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2506249   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2506250   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2506251   +
2506252   +
2506253   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2506254   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2506255   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2506256   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2506257   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2506258   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2506259   +
2506260   +
2506261   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2506262   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2506263   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2506264   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2506265   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2506266   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2506267   +
2506268   +
2506269   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2506270   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2506271   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2506272   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2506273   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2506274   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2506275   +
2506276   +
2506277   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2506278   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2506279   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2506280   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2506281   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2506282   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2506283   +if
2506284   +_FILTERNORM1 not in ( '.')
2506285   + and
2506286   +_FILTERNORM2 not in ( '.')
2506287   + and
2506288   +_FILTERNORM3 not in ( '.')
2506289   + and
2506290   +_FILTERNORM4 not in ( '.')
2506291   + and
2506292   +_FILTERNORM5 not in ( '.')
2506293   + and
2506294   +_FILTERNORM6 not in ( '.')
2506295   + and
2506296   +_FILTERNORM7 not in ( ' ')
2506297   + and
2506298   +_FILTERNORM8 not in ( ' ')
2506299   +and
2506300   +( Dt_Customer ne .)
2506301   +and ( Income ne . and (Income<=107000))
2506302   +and ( Kidhome ne .)
2506303   +and ( MntFishProducts ne .)
2506304   +and ( MntFruits ne .)
2506305   +and ( MntGoldProds ne .)
2506306   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2506307   +and ( MntSweetProducts ne .)
2506308   +and ( MntWines ne .)
2506309   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2506310   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2506311   +and ( NumStorePurchases ne .)
2506312   +and ( NumWebPurchases ne .)
2506313   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2506314   +and ( Recency ne .)
2506315   +and ( Teenhome ne .)
2506316   +and ( Year_Birth ne .)
2506317   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2506318   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2506319   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2506320   +end;
MPRINT(EM_DIAGRAM):   end;
2506321   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2506322   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2506323    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2506324    quit;
2506325    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2506326    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2506327    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2506328    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2506329    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2506330    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506331    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2506332    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506333    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506334    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2506335    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506336    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2506337    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2506338    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2506339    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2506340    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506341    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2506342    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2506343    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2506344    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506345    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506346    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2506347    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2506348    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2506349    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506350    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2506351    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2506351  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2506352    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2506353    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2506354    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 2308 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506355    %macro varDept(fcmpdata=,id=);
2506356    %global nobs&id scoreFlag&id;
2506357    %let scoreFlag&id = 0;
2506358    %if &id=1 or ^&fcmpStart %then %do;
2506359    proc sort data=&fcmpdata out=_temp&id nodupkey;
2506360    by NAME;
2506361    where id=&id and LHS in( %let j=1;
2506362    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2506363    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2506364    "&var" %let j = %eval(&j+1);
2506365    %end;
2506366    );
2506367    run;
2506368    %let dsid = %sysfunc(open(_temp&id));
2506369    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2506370    %let dsid = %sysfunc(close(&dsid));
2506371    %if &&nobs&id %then %do;
2506372    %let scoreFlag&id = 1;
2506373    %let fcmpStart = 1;
2506374    %end;
2506375    %else %let fcmpStart = 0;
2506376    %end;
2506377    %else %do;
2506378    proc sort data=&fcmpdata out=_tempid;
2506379    where id=&id;
2506380    by LHS;
2506381    run;
2506382    %let dsid = %sysfunc(open(_tempid));
2506383    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2506384    %let dsid = %sysfunc(close(&dsid));
2506385    %if ^&&nobs&id %then %do;
2506386    proc datasets lib=work nolist;
2506387    delete _tempid;
2506388    run;
2506389    quit;
2506390    %end;
2506391    %else %do;
2506392    data _tempAll;
2506393    set %let j=%eval(&id-1);
2506394    %do x=1 %to &j;
2506395    %if &&nobs&x %then %do;
2506396    _temp&x %end;
2506397    %end;
2506398    ;
2506399    run;
2506400    proc sql;
2506401    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2506401  ! work._tempid p2 where p.name=p2.lhs;
2506402    quit;
2506403    data _temp&id;
2506404    set _temp&id;
2506405    where LHS ne '' and NAME ne '' and Node ne '';
2506406    run;
2506407    proc datasets lib=work nolist;
2506408    delete _tempAll;
2506409    run;
2506410    %let dsid = %sysfunc(open(_temp&id));
2506411    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2506412    %let dsid = %sysfunc(close(&dsid));
2506413    %if ^&&nobs&id %then %do;
2506414    proc datasets lib=work nolist;
2506415    delete _temp&id;
2506416    run;
2506417    quit;
2506418    %end;
2506419    %else %do;
2506420    %let scoreFlag&id = 1;
2506421    data _temp&id;
2506422    set _temp&id;
2506423    where LHS ne NAME and node ne '';
2506424    run;
2506425    %let dsid = %sysfunc(open(_temp&id));
2506426    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2506427    %let dsid = %sysfunc(close(&dsid));
2506428    %if ^&&nobs&id %then %do;
2506429    proc datasets lib=work nolist;
2506430    delete _temp&id;
2506431    run;
2506432    quit;
2506433    %end;
2506434    %else %do;
2506435    proc sort data=_temp&id nodupkey;
2506436    by LHS NAME;
2506437    run;
2506438    %end;
2506439    %end;
2506440    %end;
2506441    %end;
2506442    %mend varDept;
2506443    %macro optCode(outdata=fcmpdata);
2506444    %global fcmpStart;
2506445    %let fcmpStart = 0;
2506446    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2506447    %let NumNodes=9;
2506448    %do k=1 %to &NumNodes;
2506449    %vardept(fcmpdata=&outdata, id=&k);
2506450    %end;
2506451    %mend optCode;
2506452    %optcode(outData=EMWS8.Ensmbl47_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
The SAS System
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2506453    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2506454    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2506455    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2506456    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2506457    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2506458    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2506459    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2506460    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506461    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2506462    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2506462  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2506463    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2506464    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2506465    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2506466    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2506467    filename _pref
2506467  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
2506468    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2506469    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
2506470   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2506471   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2506472   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2506473   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2506474   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2506475   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2506476   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2506477   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2506478   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2506479   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2506480   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2506481   +LENGTH _WARN_ $4
2506482   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2506483   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2506484   +
2506485   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2506486   +
2506487   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2506488   +
2506489   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2506490   +
2506491   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2506492   +
2506493   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2506494   +
2506495   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2506496   +
2506497   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2506498   +
2506499   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2506500   +
2506501   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2506502   +
2506503   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2506504   +
2506505   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2506506   +
2506507   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2506508   +
2506509   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2506510   +
2506511   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2506512   +
2506513   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2506514   +
2506515   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2506516   +
2506517   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2506518   +
2506519   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2506520   +
2506521   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2506522   +
2506523   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2506524   +
2506525   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2506526   +
2506527   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2506528   +
2506529   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2506530   +
2506531   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2506532   +
2506533   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2506534   +
2506535   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2506536   +
2506537   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2506538   +
2506539   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2506540   +
2506541   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2506542   +
2506543   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2506544   +
2506545   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2506546   +
2506547   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2506548   +
2506549   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2506550   +
2506551   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2506552   +
2506553   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2506554   +
2506555   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2506556   +
2506557   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2506558   +
2506559   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2506560   +
2506561   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2506562   +
2506563   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2506564   +
2506565   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2506566   +
2506567   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2506568   +
2506569   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2506570   +
2506571   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2506572   +
2506573   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2506574   +
2506575   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2506576   +
2506577   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2506578   +
2506579   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2506580   +
2506581   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2506582   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2506583   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2506584   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2506585   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2506586   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506587   +end;
MPRINT(EM_DIAGRAM):   end;
2506588   +else do;
MPRINT(EM_DIAGRAM):   else do;
2506589   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2506590   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2506591   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2506592   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2506593   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2506594   +   end;
MPRINT(EM_DIAGRAM):   end;
2506595   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2506596   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2506597   +   end;
MPRINT(EM_DIAGRAM):   end;
2506598   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2506599   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2506600   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2506601   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506602   +   end;
MPRINT(EM_DIAGRAM):   end;
2506603   +end;
MPRINT(EM_DIAGRAM):   end;
2506604   +
2506605   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2506606   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2506607   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2506608   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2506609   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2506610   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506611   +end;
MPRINT(EM_DIAGRAM):   end;
2506612   +else do;
MPRINT(EM_DIAGRAM):   else do;
2506613   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2506614   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2506615   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2506616   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2506617   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2506618   +   end;
MPRINT(EM_DIAGRAM):   end;
2506619   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2506620   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2506621   +   end;
MPRINT(EM_DIAGRAM):   end;
2506622   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2506623   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2506624   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2506625   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506626   +   end;
MPRINT(EM_DIAGRAM):   end;
2506627   +end;
MPRINT(EM_DIAGRAM):   end;
2506628   +
2506629   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2506630   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2506631   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2506632   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2506633   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2506634   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506635   +end;
MPRINT(EM_DIAGRAM):   end;
2506636   +else do;
MPRINT(EM_DIAGRAM):   else do;
2506637   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2506638   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2506639   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2506640   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2506641   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2506642   +   end;
MPRINT(EM_DIAGRAM):   end;
2506643   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2506644   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2506645   +   end;
MPRINT(EM_DIAGRAM):   end;
2506646   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2506647   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2506648   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2506649   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506650   +   end;
MPRINT(EM_DIAGRAM):   end;
2506651   +end;
MPRINT(EM_DIAGRAM):   end;
2506652   +
2506653   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2506654   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2506655   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2506656   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2506657   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2506658   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506659   +end;
MPRINT(EM_DIAGRAM):   end;
2506660   +else do;
MPRINT(EM_DIAGRAM):   else do;
2506661   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2506662   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2506663   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2506664   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2506665   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2506666   +   end;
MPRINT(EM_DIAGRAM):   end;
2506667   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2506668   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2506669   +   end;
MPRINT(EM_DIAGRAM):   end;
2506670   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2506671   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2506672   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2506673   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506674   +   end;
MPRINT(EM_DIAGRAM):   end;
2506675   +end;
MPRINT(EM_DIAGRAM):   end;
2506676   +
2506677   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2506678   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2506679   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2506680   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2506681   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2506682   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506683   +end;
MPRINT(EM_DIAGRAM):   end;
2506684   +else do;
MPRINT(EM_DIAGRAM):   else do;
2506685   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2506686   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2506687   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2506688   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2506689   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2506690   +   end;
MPRINT(EM_DIAGRAM):   end;
2506691   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2506692   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2506693   +   end;
MPRINT(EM_DIAGRAM):   end;
2506694   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2506695   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2506696   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2506697   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506698   +   end;
MPRINT(EM_DIAGRAM):   end;
2506699   +end;
MPRINT(EM_DIAGRAM):   end;
2506700   +
2506701   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2506702   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2506703   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2506704   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2506705   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2506706   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506707   +end;
MPRINT(EM_DIAGRAM):   end;
2506708   +else do;
MPRINT(EM_DIAGRAM):   else do;
2506709   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2506710   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2506711   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2506712   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2506713   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2506714   +   end;
MPRINT(EM_DIAGRAM):   end;
2506715   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2506716   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2506717   +   end;
MPRINT(EM_DIAGRAM):   end;
2506718   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2506719   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2506720   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2506721   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506722   +   end;
MPRINT(EM_DIAGRAM):   end;
2506723   +end;
MPRINT(EM_DIAGRAM):   end;
2506724   +
2506725   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2506726   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2506727   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2506728   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2506729   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2506730   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506731   +end;
MPRINT(EM_DIAGRAM):   end;
2506732   +else do;
MPRINT(EM_DIAGRAM):   else do;
2506733   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2506734   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2506735   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2506736   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2506737   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2506738   +   end;
MPRINT(EM_DIAGRAM):   end;
2506739   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2506740   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2506741   +   end;
MPRINT(EM_DIAGRAM):   end;
2506742   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2506743   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2506744   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2506745   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506746   +   end;
MPRINT(EM_DIAGRAM):   end;
2506747   +end;
MPRINT(EM_DIAGRAM):   end;
2506748   +
2506749   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2506750   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2506751   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2506752   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2506753   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2506754   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2506755   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2506756   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2506757   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2506758   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2506759   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2506760   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2506761   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2506762   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506763   +end;
MPRINT(EM_DIAGRAM):   end;
2506764   +else do;
MPRINT(EM_DIAGRAM):   else do;
2506765   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2506766   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2506767   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2506768   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2506769   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2506770   +   end;
MPRINT(EM_DIAGRAM):   end;
2506771   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2506772   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2506773   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2506774   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2506775   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2506776   +   end;
MPRINT(EM_DIAGRAM):   end;
2506777   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2506778   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2506779   +   end;
MPRINT(EM_DIAGRAM):   end;
2506780   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2506781   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2506782   +   end;
MPRINT(EM_DIAGRAM):   end;
2506783   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2506784   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2506785   +   end;
MPRINT(EM_DIAGRAM):   end;
2506786   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2506787   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2506788   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2506789   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2506790   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2506791   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2506792   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506793   +   end;
MPRINT(EM_DIAGRAM):   end;
2506794   +end;
MPRINT(EM_DIAGRAM):   end;
2506795   +
2506796   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2506797   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2506798   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2506799   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2506800   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2506801   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2506802   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2506803   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2506804   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2506805   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2506806   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2506807   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2506808   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2506809   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2506810   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506811   +end;
MPRINT(EM_DIAGRAM):   end;
2506812   +else do;
MPRINT(EM_DIAGRAM):   else do;
2506813   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2506814   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2506815   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2506816   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2506817   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2506818   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2506819   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2506820   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2506821   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2506822   +         end;
MPRINT(EM_DIAGRAM):   end;
2506823   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2506824   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2506825   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2506826   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2506827   +            end;
MPRINT(EM_DIAGRAM):   end;
2506828   +         end;
MPRINT(EM_DIAGRAM):   end;
2506829   +      end;
MPRINT(EM_DIAGRAM):   end;
2506830   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2506831   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2506832   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2506833   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2506834   +         end;
MPRINT(EM_DIAGRAM):   end;
2506835   +      end;
MPRINT(EM_DIAGRAM):   end;
2506836   +   end;
MPRINT(EM_DIAGRAM):   end;
2506837   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2506838   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2506839   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2506840   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2506841   +      end;
MPRINT(EM_DIAGRAM):   end;
2506842   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2506843   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2506844   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2506845   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2506846   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2506847   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2506848   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2506849   +         end;
MPRINT(EM_DIAGRAM):   end;
2506850   +      end;
MPRINT(EM_DIAGRAM):   end;
2506851   +   end;
MPRINT(EM_DIAGRAM):   end;
2506852   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2506853   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2506854   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2506855   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2506856   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2506857   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2506858   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506859   +   end;
MPRINT(EM_DIAGRAM):   end;
2506860   +end;
MPRINT(EM_DIAGRAM):   end;
2506861   +
2506862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2506863   +*** Checking missing input Interval
2506864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2506865   +
2506866   +IF NMISS(
2506867   +   AcceptedCmpTotal ,
2506868   +   Age ,
2506869   +   Frq ,
2506870   +   Income ,
2506871   +   Kidhome ,
2506872   +   Mnt ,
2506873   +   MntFishProducts ,
2506874   +   MntFruits ,
2506875   +   MntGoldProds ,
2506876   +   MntMeatProducts ,
2506877   +   MntSweetProducts ,
2506878   +   MntWines ,
2506879   +   MonthsAsCustomer ,
2506880   +   NumCatalogPurchases ,
2506881   +   NumDealsPurchases ,
2506882   +   NumDistPurchases ,
2506883   +   NumStorePurchases ,
2506884   +   NumWebPurchases ,
2506885   +   NumWebVisitsMonth ,
2506886   +   RFMstat ,
2506887   +   RMntFrq ,
2506888   +   Recency ,
2506889   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2506890   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2506891   +
2506892   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2506893   +END;
MPRINT(EM_DIAGRAM):   END;
2506894   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2506895   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2506896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2506897   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2506898   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2506899   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2506900   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2506901   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2506902   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2506903   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2506904   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2506905   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2506906   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2506907   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2506908   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2506909   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2506910   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2506911   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2506912   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2506913   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2506914   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2506915   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2506916   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2506917   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2506918   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2506919   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2506920   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2506921   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2506922   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2506923   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2506924   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2506925   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2506926   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2506927   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2506928   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2506929   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2506930   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2506931   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2506932   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2506933   +END;
MPRINT(EM_DIAGRAM):   END;
2506934   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2506935   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2506936   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2506937   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2506938   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2506939   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2506940   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2506941   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2506942   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2506943   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2506944   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2506945   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2506946   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2506947   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2506948   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2506949   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2506950   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2506951   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2506952   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2506953   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2506954   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2506955   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2506956   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2506957   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2506958   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2506959   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2506960   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2506961   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2506962   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2506963   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2506964   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2506965   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2506966   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2506967   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2506968   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2506969   +   ELSE S_NumCatalogPurchases
2506970   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2506971   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2506972   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2506973   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2506974   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2506975   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2506976   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2506977   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2506978   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2506979   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2506980   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2506981   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2506982   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2506983   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2506984   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2506985   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2506986   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2506987   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2506988   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2506989   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2506990   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2506991   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2506992   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2506993   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2506994   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2506995   +END;
MPRINT(EM_DIAGRAM):   END;
2506996   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2506997   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2506998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2506999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507000   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2507001   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507003   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2507004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507005   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2507006   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2507007   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2507008   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2507009   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2507010   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2507011   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2507012   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2507013   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2507014   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2507015   +          +     0.08390531145773 * S_NumDealsPurchases
2507016   +          +    -0.29505970645775 * S_NumDistPurchases
2507017   +          +    -0.13820571170194 * S_NumStorePurchases
2507018   +          +     0.11468011313368 * S_NumWebPurchases
2507019   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2507020   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2507021   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2507022   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 *
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 *
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts +
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 *
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 *
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 *
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 *
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq +
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2507023   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2507024   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2507025   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2507026   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2507027   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2507028   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2507029   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2507030   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2507031   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2507032   +          +     0.18009076035363 * S_NumDealsPurchases
2507033   +          +     0.03853861006587 * S_NumDistPurchases
2507034   +          +    -0.05118063952874 * S_NumStorePurchases
2507035   +          +    -0.03282286120473 * S_NumWebPurchases
2507036   +          +     0.31160900419026 * S_NumWebVisitsMonth
2507037   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2507038   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2507039   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome +
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 *
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts +
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 *
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 *
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 *
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 *
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq +
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2507040   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2507041   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2507042   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2507043   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2507044   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 *
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 +
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 *
HigherEducationBinary0 ;
2507045   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2507046   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2507047   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2507048   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2507049   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 *
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 +
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 *
HigherEducationBinary0 ;
2507050   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2507051   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2507052   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2507053   +          +    -0.04750981393889 * Marital_StatusDivorced
2507054   +          +     0.28216925676677 * Marital_StatusMarried
2507055   +          +    -0.20757827413964 * Marital_StatusSingle
2507056   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle +
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 *
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 *
Marital_StatusTogether ;
2507057   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2507058   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2507059   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2507060   +          +     0.05981919620577 * Marital_StatusDivorced
2507061   +          +    -0.17161573846062 * Marital_StatusMarried
2507062   +          +     0.15869440681091 * Marital_StatusSingle
2507063   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle +
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation +
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced +
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle +
-0.13282372850158 * Marital_StatusTogether ;
2507064   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2507065   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2507066   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2507067   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2507068   +END;
MPRINT(EM_DIAGRAM):   END;
2507069   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2507070   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2507071   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2507072   +END;
MPRINT(EM_DIAGRAM):   END;
2507073   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507074   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2507075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507076   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2507077   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2507078   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2507079   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2507080   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2507081   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2507082   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2507083   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2507084   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2507085   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2507086   +          +     0.00741910846933 * S_NumDealsPurchases
2507087   +          +       1.334289252268 * S_NumDistPurchases
2507088   +          +    -0.29851567180932 * S_NumStorePurchases
2507089   +          +    -0.52115313259666 * S_NumWebPurchases
2507090   +          +     0.93907168501909 * S_NumWebVisitsMonth
2507091   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2507092   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2507093   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome +
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 *
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts +
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 *
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 *
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 *
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 *
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq +
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2507094   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2507095   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2507096   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2507097   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2507098   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2507099   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2507100   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2507101   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2507102   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2507103   +          +     1.60427001186844 * S_NumDealsPurchases
2507104   +          +    -0.18447618033353 * S_NumDistPurchases
2507105   +          +    -1.29966073003539 * S_NumStorePurchases
2507106   +          +    -1.12373457341536 * S_NumWebPurchases
2507107   +          +     1.46099221440494 * S_NumWebVisitsMonth
2507108   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2507109   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2507110   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 *
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 *
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts +
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 *
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines +
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases +
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases +
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases +
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 *
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2507111   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2507112   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2507113   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2507114   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2507115   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 *
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 +
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 *
HigherEducationBinary0 ;
2507116   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2507117   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2507118   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2507119   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2507120   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 *
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 +
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 *
HigherEducationBinary0 ;
2507121   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2507122   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2507123   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2507124   +          +     0.59819559998538 * Marital_StatusDivorced
2507125   +          +     0.92957772553633 * Marital_StatusMarried
2507126   +          +    -1.11796266958894 * Marital_StatusSingle
2507127   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 *
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster +
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried +
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2507128   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2507129   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2507130   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2507131   +          +      1.0870909562212 * Marital_StatusDivorced
2507132   +          +     1.50333961797515 * Marital_StatusMarried
2507133   +          +    -1.41407780765932 * Marital_StatusSingle
2507134   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle +
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation +
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced +
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle +
-0.52528072358697 * Marital_StatusTogether ;
2507135   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2507136   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2507137   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2507138   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2507139   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2507140   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2507141   +END;
MPRINT(EM_DIAGRAM):   END;
2507142   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2507143   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2507144   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2507145   +END;
MPRINT(EM_DIAGRAM):   END;
2507146   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507147   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2507148   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507149   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2507150   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2507151   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2507152   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2507153   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2507154   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2507155   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2507156   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2507157   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2507158   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2507159   +          +     -1.1174504455343 * S_NumDealsPurchases
2507160   +          +    -0.18561253113498 * S_NumDistPurchases
2507161   +          +    -0.35231054612792 * S_NumStorePurchases
2507162   +          +      0.9249490354172 * S_NumWebPurchases
2507163   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2507164   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2507165   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2507166   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 *
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 *
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts +
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 *
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines +
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases +
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases +
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases +
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 *
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2507167   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2507168   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2507169   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2507170   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2507171   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2507172   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2507173   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2507174   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2507175   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2507176   +          +     1.05434863590054 * S_NumDealsPurchases
2507177   +          +    -0.73255174632068 * S_NumDistPurchases
2507178   +          +     0.53949953455044 * S_NumStorePurchases
2507179   +          +    -0.61709467816649 * S_NumWebPurchases
2507180   +          +     1.36235282484348 * S_NumWebVisitsMonth
2507181   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2507182   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2507183   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 *
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 *
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts +
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 *
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 *
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 *
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 *
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq +
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2507184   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2507185   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2507186   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2507187   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2507188   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 *
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 +
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 *
HigherEducationBinary0 ;
2507189   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2507190   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2507191   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2507192   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2507193   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 +
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 *
HigherEducationBinary0 ;
2507194   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2507195   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2507196   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2507197   +          +     0.22253248036322 * Marital_StatusDivorced
2507198   +          +    -1.72455332745001 * Marital_StatusMarried
2507199   +          +     0.57787272107232 * Marital_StatusSingle
2507200   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle +
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation +
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced +
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle +
0.16267074825086 * Marital_StatusTogether ;
2507201   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2507202   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2507203   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2507204   +          +     0.14637124403046 * Marital_StatusDivorced
2507205   +          +     0.18905186437528 * Marital_StatusMarried
2507206   +          +     0.00511958458521 * Marital_StatusSingle
2507207   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle +
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation +
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced +
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle +
-0.915980703129 * Marital_StatusTogether ;
2507208   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2507209   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2507210   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2507211   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2507212   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2507213   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2507214   +END;
MPRINT(EM_DIAGRAM):   END;
2507215   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2507216   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2507217   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2507218   +END;
MPRINT(EM_DIAGRAM):   END;
2507219   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507220   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2507221   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507222   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2507223   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2507224   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2507225   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2507226   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 *
H1x2_2 ;
2507227   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2507228   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 *
H1x3_2 ;
2507229   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2507230   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2507231   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2507232   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2507233   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2507234   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2507235   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2507236   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2507237   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2507238   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2507239   +END;
MPRINT(EM_DIAGRAM):   END;
2507240   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2507241   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2507242   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2507243   +END;
MPRINT(EM_DIAGRAM):   END;
2507244   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2507245   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2507246   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2507247   +END;
MPRINT(EM_DIAGRAM):   END;
2507248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507249   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2507250   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2507251   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2507252   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2507253   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2507254   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2507255   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2507256   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2507257   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2507258   +END;
MPRINT(EM_DIAGRAM):   END;
2507259   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2507260   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2507261   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2507262   +drop
2507263   +H1x1_1
2507264   +H1x1_2
2507265   +H1x2_1
2507266   +H1x2_2
2507267   +H1x3_1
2507268   +H1x3_2
2507269   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2507270   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2507271    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2507272    quit;
2507273    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2507274    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2507275    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2507276    retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
2507277    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2507278    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2931 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2931 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507279    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2507280    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507281    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2931 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2931 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507282    proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME
CREATOR);
2507283    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507284    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507285    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2507286    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2507287    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2507288    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507289    proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
2507290    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2507291    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2507292    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507293    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507294    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2507295    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2507296    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507297    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507298    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2507299    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2507299  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1623 rows and 5 columns.
 
2507300    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507301    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2507302    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1623 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1623 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507303    filename _pref
2507303  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2507304    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2507305    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2507306   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2507307   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2507308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2507309   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2507310   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2507311   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2507312    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2507313    quit;
2507314    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2507315    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2507316    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2507317    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2507318    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2507319    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507320    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2507321    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507322    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507323    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2507324    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507325    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507326    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2507327    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2507328    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2507329    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507330    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2507331    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2507332    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2507333    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507334    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507335    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2507336    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2507337    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507338    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507339    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2507340    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2507340  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2507341    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507342    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2507343    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1627 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507344    filename _pref
2507344  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2507345    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2507346    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2507347   +
2507348   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2507349   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2507349  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2507350   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2507351   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2507352   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2507353   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2507354   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2507355    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2507356    quit;
2507357    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2507358    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2507359    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2507360    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2507361    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2507362    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507363    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2507364    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507365    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507366    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2507367    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507368    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507369    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2507370    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2507371    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2507372    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507373    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2507374    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507375    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2507376    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507377    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507378    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2507379    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2507380    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507381    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507382    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2507383    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2507383  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2507384    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507385    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2507386    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1666 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507387    filename _pref
2507387  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2507388    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2507389    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2507390   +
2507391   +
2507392   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2507393   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2507394   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2507395   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2507396   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2507397   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2507398   +
2507399   +
2507400   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2507401   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2507402   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2507403   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2507404   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2507405   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2507406   +
2507407   +
2507408   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2507409   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2507410   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2507411   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2507412   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2507413   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2507414   +
2507415   +
2507416   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2507417   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2507418   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2507419   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2507420   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2507421   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2507422   +
2507423   +
2507424   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2507425   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2507426   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2507427   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2507428   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2507429   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2507430   +
2507431   +
2507432   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2507433   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2507434   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2507435   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2507436   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2507437   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2507438   +
2507439   +
2507440   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2507441   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2507442   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2507443   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2507444   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2507445   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2507446   +
2507447   +
2507448   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2507449   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2507450   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2507451   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2507452   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2507453   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2507454   +if
2507455   +_FILTERNORM1 not in ( '.')
2507456   + and
2507457   +_FILTERNORM2 not in ( '.')
2507458   + and
2507459   +_FILTERNORM3 not in ( '.')
2507460   + and
2507461   +_FILTERNORM4 not in ( '.')
2507462   + and
2507463   +_FILTERNORM5 not in ( '.')
2507464   + and
2507465   +_FILTERNORM6 not in ( '.')
2507466   + and
2507467   +_FILTERNORM7 not in ( ' ')
2507468   + and
2507469   +_FILTERNORM8 not in ( ' ')
2507470   +and
2507471   +( Dt_Customer ne .)
2507472   +and ( Income ne . and (Income<=107000))
2507473   +and ( Kidhome ne .)
2507474   +and ( MntFishProducts ne .)
2507475   +and ( MntFruits ne .)
2507476   +and ( MntGoldProds ne .)
2507477   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2507478   +and ( MntSweetProducts ne .)
2507479   +and ( MntWines ne .)
2507480   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2507481   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2507482   +and ( NumStorePurchases ne .)
2507483   +and ( NumWebPurchases ne .)
2507484   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2507485   +and ( Recency ne .)
2507486   +and ( Teenhome ne .)
2507487   +and ( Year_Birth ne .)
2507488   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2507489   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2507490   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2507491   +end;
MPRINT(EM_DIAGRAM):   end;
2507492   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2507493   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2507494    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2507495    quit;
2507496    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2507497    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2507498    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2507499    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2507500    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2507501    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507502    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2507503    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507504    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507505    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2507506    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507507    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507508    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2507509    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2507510    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2507511    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507512    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2507513    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2507514    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2507515    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507516    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507517    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2507518    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2507519    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2507520    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507521    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2507522    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2507522  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2507523    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507524    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2507525    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 1732 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507526    %macro varDept(fcmpdata=,id=);
2507527    %global nobs&id scoreFlag&id;
2507528    %let scoreFlag&id = 0;
2507529    %if &id=1 or ^&fcmpStart %then %do;
2507530    proc sort data=&fcmpdata out=_temp&id nodupkey;
2507531    by NAME;
2507532    where id=&id and LHS in( %let j=1;
2507533    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2507534    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2507535    "&var" %let j = %eval(&j+1);
2507536    %end;
2507537    );
2507538    run;
2507539    %let dsid = %sysfunc(open(_temp&id));
2507540    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2507541    %let dsid = %sysfunc(close(&dsid));
2507542    %if &&nobs&id %then %do;
2507543    %let scoreFlag&id = 1;
2507544    %let fcmpStart = 1;
2507545    %end;
2507546    %else %let fcmpStart = 0;
2507547    %end;
2507548    %else %do;
2507549    proc sort data=&fcmpdata out=_tempid;
2507550    where id=&id;
2507551    by LHS;
2507552    run;
2507553    %let dsid = %sysfunc(open(_tempid));
2507554    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2507555    %let dsid = %sysfunc(close(&dsid));
2507556    %if ^&&nobs&id %then %do;
2507557    proc datasets lib=work nolist;
2507558    delete _tempid;
2507559    run;
2507560    quit;
2507561    %end;
2507562    %else %do;
2507563    data _tempAll;
2507564    set %let j=%eval(&id-1);
2507565    %do x=1 %to &j;
2507566    %if &&nobs&x %then %do;
2507567    _temp&x %end;
2507568    %end;
2507569    ;
2507570    run;
2507571    proc sql;
2507572    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2507572  ! work._tempid p2 where p.name=p2.lhs;
2507573    quit;
2507574    data _temp&id;
2507575    set _temp&id;
2507576    where LHS ne '' and NAME ne '' and Node ne '';
2507577    run;
2507578    proc datasets lib=work nolist;
2507579    delete _tempAll;
2507580    run;
2507581    %let dsid = %sysfunc(open(_temp&id));
2507582    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2507583    %let dsid = %sysfunc(close(&dsid));
2507584    %if ^&&nobs&id %then %do;
2507585    proc datasets lib=work nolist;
2507586    delete _temp&id;
2507587    run;
2507588    quit;
2507589    %end;
2507590    %else %do;
2507591    %let scoreFlag&id = 1;
2507592    data _temp&id;
2507593    set _temp&id;
2507594    where LHS ne NAME and node ne '';
2507595    run;
2507596    %let dsid = %sysfunc(open(_temp&id));
2507597    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2507598    %let dsid = %sysfunc(close(&dsid));
2507599    %if ^&&nobs&id %then %do;
2507600    proc datasets lib=work nolist;
2507601    delete _temp&id;
2507602    run;
2507603    quit;
2507604    %end;
2507605    %else %do;
2507606    proc sort data=_temp&id nodupkey;
2507607    by LHS NAME;
2507608    run;
2507609    %end;
2507610    %end;
2507611    %end;
2507612    %end;
2507613    %mend varDept;
2507614    %macro optCode(outdata=fcmpdata);
2507615    %global fcmpStart;
2507616    %let fcmpStart = 0;
2507617    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2507618    %let NumNodes=9;
2507619    %do k=1 %to &NumNodes;
2507620    %vardept(fcmpdata=&outdata, id=&k);
2507621    %end;
2507622    %mend optCode;
2507623    %optcode(outData=EMWS8.Ensmbl47_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2507624    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2507625    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2507626    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2507627    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2507628    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2507629    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2507630    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2507631    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507632    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2507633    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2507633  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2507634    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2507635    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2507636    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2507637    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2507638    filename _pref
2507638  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
2507639    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2507640    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas.
2507641   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2507642   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2507643   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2507644   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2507645   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2507646   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2507647   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2507648   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2507649   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2507650   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2507651   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2507652   +LENGTH _WARN_ $4
2507653   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2507654   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2507655   +
2507656   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2507657   +
2507658   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2507659   +
2507660   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2507661   +
2507662   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2507663   +
2507664   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2507665   +
2507666   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2507667   +
2507668   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2507669   +
2507670   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2507671   +
2507672   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2507673   +
2507674   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2507675   +
2507676   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2507677   +
2507678   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2507679   +
2507680   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2507681   +
2507682   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2507683   +
2507684   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2507685   +
2507686   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2507687   +
2507688   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2507689   +
2507690   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2507691   +
2507692   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2507693   +
2507694   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2507695   +
2507696   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2507697   +
2507698   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2507699   +
2507700   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2507701   +
2507702   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2507703   +
2507704   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2507705   +
2507706   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2507707   +
2507708   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2507709   +
2507710   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2507711   +
2507712   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2507713   +
2507714   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2507715   +
2507716   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2507717   +
2507718   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2507719   +
2507720   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2507721   +
2507722   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2507723   +
2507724   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2507725   +
2507726   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2507727   +
2507728   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2507729   +
2507730   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2507731   +
2507732   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2507733   +
2507734   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2507735   +
2507736   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2507737   +
2507738   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2507739   +
2507740   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2507741   +
2507742   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2507743   +
2507744   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2507745   +
2507746   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2507747   +
2507748   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2507749   +
2507750   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2507751   +
2507752   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2507753   +
2507754   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2507755   +
2507756   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2507757   +
2507758   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2507759   +
2507760   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2507761   +
2507762   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2507763   +
2507764   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2507765   +
2507766   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2507767   +
2507768   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2507769   +
2507770   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2507771   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2507772   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2507773   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2507774   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2507775   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2507776   +end;
MPRINT(EM_DIAGRAM):   end;
2507777   +else do;
MPRINT(EM_DIAGRAM):   else do;
2507778   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2507779   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2507780   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2507781   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2507782   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2507783   +   end;
MPRINT(EM_DIAGRAM):   end;
2507784   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2507785   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2507786   +   end;
MPRINT(EM_DIAGRAM):   end;
2507787   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2507788   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2507789   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2507790   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2507791   +   end;
MPRINT(EM_DIAGRAM):   end;
2507792   +end;
MPRINT(EM_DIAGRAM):   end;
2507793   +
2507794   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2507795   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2507796   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2507797   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2507798   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2507799   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2507800   +end;
MPRINT(EM_DIAGRAM):   end;
2507801   +else do;
MPRINT(EM_DIAGRAM):   else do;
2507802   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2507803   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2507804   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2507805   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2507806   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2507807   +   end;
MPRINT(EM_DIAGRAM):   end;
2507808   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2507809   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2507810   +   end;
MPRINT(EM_DIAGRAM):   end;
2507811   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2507812   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2507813   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2507814   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2507815   +   end;
MPRINT(EM_DIAGRAM):   end;
2507816   +end;
MPRINT(EM_DIAGRAM):   end;
2507817   +
2507818   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2507819   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2507820   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2507821   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2507822   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2507823   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2507824   +end;
MPRINT(EM_DIAGRAM):   end;
2507825   +else do;
MPRINT(EM_DIAGRAM):   else do;
2507826   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2507827   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2507828   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2507829   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2507830   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2507831   +   end;
MPRINT(EM_DIAGRAM):   end;
2507832   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2507833   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2507834   +   end;
MPRINT(EM_DIAGRAM):   end;
2507835   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2507836   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2507837   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2507838   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2507839   +   end;
MPRINT(EM_DIAGRAM):   end;
2507840   +end;
MPRINT(EM_DIAGRAM):   end;
2507841   +
2507842   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2507843   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2507844   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2507845   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2507846   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2507847   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2507848   +end;
MPRINT(EM_DIAGRAM):   end;
2507849   +else do;
MPRINT(EM_DIAGRAM):   else do;
2507850   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2507851   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2507852   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2507853   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2507854   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2507855   +   end;
MPRINT(EM_DIAGRAM):   end;
2507856   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2507857   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2507858   +   end;
MPRINT(EM_DIAGRAM):   end;
2507859   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2507860   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2507861   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2507862   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2507863   +   end;
MPRINT(EM_DIAGRAM):   end;
2507864   +end;
MPRINT(EM_DIAGRAM):   end;
2507865   +
2507866   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2507867   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2507868   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2507869   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2507870   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2507871   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2507872   +end;
MPRINT(EM_DIAGRAM):   end;
2507873   +else do;
MPRINT(EM_DIAGRAM):   else do;
2507874   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2507875   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2507876   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2507877   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2507878   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2507879   +   end;
MPRINT(EM_DIAGRAM):   end;
2507880   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2507881   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2507882   +   end;
MPRINT(EM_DIAGRAM):   end;
2507883   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2507884   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2507885   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2507886   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2507887   +   end;
MPRINT(EM_DIAGRAM):   end;
2507888   +end;
MPRINT(EM_DIAGRAM):   end;
2507889   +
2507890   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2507891   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2507892   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2507893   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2507894   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2507895   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2507896   +end;
MPRINT(EM_DIAGRAM):   end;
2507897   +else do;
MPRINT(EM_DIAGRAM):   else do;
2507898   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2507899   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2507900   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2507901   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2507902   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2507903   +   end;
MPRINT(EM_DIAGRAM):   end;
2507904   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2507905   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2507906   +   end;
MPRINT(EM_DIAGRAM):   end;
2507907   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2507908   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2507909   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2507910   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2507911   +   end;
MPRINT(EM_DIAGRAM):   end;
2507912   +end;
MPRINT(EM_DIAGRAM):   end;
2507913   +
2507914   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2507915   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2507916   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2507917   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2507918   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2507919   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2507920   +end;
MPRINT(EM_DIAGRAM):   end;
2507921   +else do;
MPRINT(EM_DIAGRAM):   else do;
2507922   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2507923   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2507924   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2507925   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2507926   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2507927   +   end;
MPRINT(EM_DIAGRAM):   end;
2507928   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2507929   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2507930   +   end;
MPRINT(EM_DIAGRAM):   end;
2507931   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2507932   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2507933   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2507934   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2507935   +   end;
MPRINT(EM_DIAGRAM):   end;
2507936   +end;
MPRINT(EM_DIAGRAM):   end;
2507937   +
2507938   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2507939   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2507940   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2507941   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2507942   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2507943   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2507944   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2507945   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2507946   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2507947   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2507948   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2507949   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2507950   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2507951   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2507952   +end;
MPRINT(EM_DIAGRAM):   end;
2507953   +else do;
MPRINT(EM_DIAGRAM):   else do;
2507954   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2507955   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2507956   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2507957   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2507958   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2507959   +   end;
MPRINT(EM_DIAGRAM):   end;
2507960   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2507961   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2507962   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2507963   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2507964   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2507965   +   end;
MPRINT(EM_DIAGRAM):   end;
2507966   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2507967   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2507968   +   end;
MPRINT(EM_DIAGRAM):   end;
2507969   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2507970   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2507971   +   end;
MPRINT(EM_DIAGRAM):   end;
2507972   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2507973   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2507974   +   end;
MPRINT(EM_DIAGRAM):   end;
2507975   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2507976   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2507977   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2507978   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2507979   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2507980   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2507981   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2507982   +   end;
MPRINT(EM_DIAGRAM):   end;
2507983   +end;
MPRINT(EM_DIAGRAM):   end;
2507984   +
2507985   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2507986   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2507987   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2507988   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2507989   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2507990   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2507991   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2507992   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2507993   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2507994   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2507995   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2507996   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2507997   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2507998   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2507999   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2508000   +end;
MPRINT(EM_DIAGRAM):   end;
2508001   +else do;
MPRINT(EM_DIAGRAM):   else do;
2508002   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2508003   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2508004   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2508005   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2508006   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2508007   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2508008   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2508009   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2508010   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2508011   +         end;
MPRINT(EM_DIAGRAM):   end;
2508012   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2508013   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2508014   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2508015   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2508016   +            end;
MPRINT(EM_DIAGRAM):   end;
2508017   +         end;
MPRINT(EM_DIAGRAM):   end;
2508018   +      end;
MPRINT(EM_DIAGRAM):   end;
2508019   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2508020   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2508021   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2508022   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2508023   +         end;
MPRINT(EM_DIAGRAM):   end;
2508024   +      end;
MPRINT(EM_DIAGRAM):   end;
2508025   +   end;
MPRINT(EM_DIAGRAM):   end;
2508026   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2508027   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2508028   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2508029   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2508030   +      end;
MPRINT(EM_DIAGRAM):   end;
2508031   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2508032   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2508033   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2508034   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2508035   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2508036   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2508037   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2508038   +         end;
MPRINT(EM_DIAGRAM):   end;
2508039   +      end;
MPRINT(EM_DIAGRAM):   end;
2508040   +   end;
MPRINT(EM_DIAGRAM):   end;
2508041   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2508042   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2508043   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2508044   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2508045   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2508046   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2508047   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2508048   +   end;
MPRINT(EM_DIAGRAM):   end;
2508049   +end;
MPRINT(EM_DIAGRAM):   end;
2508050   +
2508051   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2508052   +*** Checking missing input Interval
2508053   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2508054   +
2508055   +IF NMISS(
2508056   +   AcceptedCmpTotal ,
2508057   +   Age ,
2508058   +   Frq ,
2508059   +   Income ,
2508060   +   Kidhome ,
2508061   +   Mnt ,
2508062   +   MntFishProducts ,
2508063   +   MntFruits ,
2508064   +   MntGoldProds ,
2508065   +   MntMeatProducts ,
2508066   +   MntSweetProducts ,
2508067   +   MntWines ,
2508068   +   MonthsAsCustomer ,
2508069   +   NumCatalogPurchases ,
2508070   +   NumDealsPurchases ,
2508071   +   NumDistPurchases ,
2508072   +   NumStorePurchases ,
2508073   +   NumWebPurchases ,
2508074   +   NumWebVisitsMonth ,
2508075   +   RFMstat ,
2508076   +   RMntFrq ,
2508077   +   Recency ,
2508078   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2508079   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2508080   +
2508081   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2508082   +END;
MPRINT(EM_DIAGRAM):   END;
2508083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2508084   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2508085   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2508086   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2508087   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2508088   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2508089   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2508090   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2508091   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2508092   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2508093   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2508094   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2508095   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2508096   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2508097   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2508098   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2508099   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2508100   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2508101   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2508102   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2508103   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2508104   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2508105   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2508106   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2508107   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2508108   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2508109   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2508110   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2508111   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2508112   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2508113   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2508114   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2508115   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2508116   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2508117   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2508118   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2508119   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2508120   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2508121   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2508122   +END;
MPRINT(EM_DIAGRAM):   END;
2508123   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2508124   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2508125   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2508126   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2508127   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2508128   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2508129   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2508130   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2508131   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2508132   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2508133   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2508134   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2508135   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2508136   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2508137   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2508138   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2508139   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2508140   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2508141   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2508142   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2508143   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2508144   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2508145   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2508146   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2508147   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2508148   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2508149   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2508150   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2508151   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2508152   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2508153   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2508154   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2508155   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2508156   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2508157   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2508158   +   ELSE S_NumCatalogPurchases
2508159   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2508160   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2508161   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2508162   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2508163   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2508164   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2508165   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2508166   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2508167   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2508168   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2508169   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2508170   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2508171   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2508172   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2508173   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2508174   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2508175   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2508176   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2508177   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2508178   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2508179   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2508180   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2508181   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2508182   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2508183   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2508184   +END;
MPRINT(EM_DIAGRAM):   END;
2508185   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2508186   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2508187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2508188   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2508189   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2508190   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2508191   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2508192   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2508193   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2508194   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2508195   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2508196   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2508197   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2508198   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2508199   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2508200   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2508201   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2508202   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2508203   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2508204   +          +     3.21215425524619 * S_NumDealsPurchases
2508205   +          +     0.08695198777156 * S_NumDistPurchases
2508206   +          +    -2.58697971128295 * S_NumStorePurchases
2508207   +          +    -0.44431924796059 * S_NumWebPurchases
2508208   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2508209   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2508210   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2508211   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 *
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 *
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts +
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 *
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines +
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases +
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases +
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases +
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 *
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2508212   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2508213   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2508214   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2508215   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2508216   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2508217   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2508218   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2508219   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2508220   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2508221   +          +    -0.83844506398484 * S_NumDealsPurchases
2508222   +          +     0.60831936516804 * S_NumDistPurchases
2508223   +          +     1.79084087761626 * S_NumStorePurchases
2508224   +          +     1.17119196356453 * S_NumWebPurchases
2508225   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2508226   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2508227   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2508228   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 *
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 *
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts +
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 *
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 *
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 *
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 *
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq +
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2508229   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2508230   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2508231   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2508232   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2508233   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2508234   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2508235   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2508236   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2508237   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2508238   +          +    -0.31484031572628 * S_NumDealsPurchases
2508239   +          +    -0.18273941035679 * S_NumDistPurchases
2508240   +          +     0.99501789733882 * S_NumStorePurchases
2508241   +          +     1.32014078829379 * S_NumWebPurchases
2508242   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2508243   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2508244   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2508245   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 *
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 *
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts +
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 *
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 *
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 *
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 *
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq +
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2508246   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2508247   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2508248   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2508249   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2508250   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2508251   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2508252   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2508253   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2508254   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2508255   +          +     1.19658719134196 * S_NumDealsPurchases
2508256   +          +     0.87478204472986 * S_NumDistPurchases
2508257   +          +    -0.20635856288784 * S_NumStorePurchases
2508258   +          +    -0.89927356974242 * S_NumWebPurchases
2508259   +          +     2.92285244132576 * S_NumWebVisitsMonth
2508260   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2508261   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2508262   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 *
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 *
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts +
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 *
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 *
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 *
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 *
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq +
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2508263   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2508264   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2508265   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2508266   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2508267   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2508268   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2508269   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2508270   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2508271   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2508272   +          +       -2.32617124568 * S_NumDealsPurchases
2508273   +          +    -0.56589187730672 * S_NumDistPurchases
2508274   +          +     1.07062299863482 * S_NumStorePurchases
2508275   +          +     0.30077273739578 * S_NumWebPurchases
2508276   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2508277   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2508278   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2508279   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 *
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 *
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts +
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 *
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 *
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 *
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 *
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq +
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2508280   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2508281   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2508282   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2508283   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2508284   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 *
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 +
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 *
HigherEducationBinary0 ;
2508285   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2508286   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2508287   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2508288   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2508289   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 *
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 +
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 *
HigherEducationBinary0 ;
2508290   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2508291   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2508292   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2508293   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2508294   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 *
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 +
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 *
HigherEducationBinary0 ;
2508295   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2508296   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2508297   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2508298   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2508299   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 +
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 *
HigherEducationBinary0 ;
2508300   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2508301   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2508302   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2508303   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2508304   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 *
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 +
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 *
HigherEducationBinary0 ;
2508305   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2508306   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2508307   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2508308   +          +    -0.27797737429678 * Marital_StatusDivorced
2508309   +          +    -0.08137635862327 * Marital_StatusMarried
2508310   +          +     0.06275411820495 * Marital_StatusSingle
2508311   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle +
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 *
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 *
Marital_StatusTogether ;
2508312   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2508313   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2508314   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2508315   +          +     0.05151426841441 * Marital_StatusDivorced
2508316   +          +     1.19165082030442 * Marital_StatusMarried
2508317   +          +    -1.08257080662611 * Marital_StatusSingle
2508318   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle +
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 *
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 *
Marital_StatusTogether ;
2508319   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2508320   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2508321   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2508322   +          +      0.0238206459022 * Marital_StatusDivorced
2508323   +          +     -0.4653244204261 * Marital_StatusMarried
2508324   +          +     0.13051613619882 * Marital_StatusSingle
2508325   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle +
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation +
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced +
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle +
-0.35951366919755 * Marital_StatusTogether ;
2508326   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2508327   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2508328   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2508329   +          +     -0.7449356409222 * Marital_StatusDivorced
2508330   +          +    -1.46604673521535 * Marital_StatusMarried
2508331   +          +     0.74484771688818 * Marital_StatusSingle
2508332   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle +
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 *
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 *
Marital_StatusTogether ;
2508333   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2508334   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2508335   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2508336   +          +    -3.68044980584423 * Marital_StatusDivorced
2508337   +          +     3.14587407902338 * Marital_StatusMarried
2508338   +          +    -2.66118132753024 * Marital_StatusSingle
2508339   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle +
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation +
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced +
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle +
3.50991640149914 * Marital_StatusTogether ;
2508340   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2508341   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2508342   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2508343   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2508344   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2508345   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2508346   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2508347   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2508348   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2508349   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2508350   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2508351   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2508352   +END;
MPRINT(EM_DIAGRAM):   END;
2508353   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2508354   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2508355   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2508356   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2508357   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2508358   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2508359   +END;
MPRINT(EM_DIAGRAM):   END;
2508360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2508361   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2508362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2508363   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2508364   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2508365   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2508366   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2508367   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2508368   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2508369   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2508370   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2508371   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2508372   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2508373   +          +     0.89261880438741 * S_NumDealsPurchases
2508374   +          +    -1.61647413199892 * S_NumDistPurchases
2508375   +          +    -0.56304669045195 * S_NumStorePurchases
2508376   +          +      0.7766837080945 * S_NumWebPurchases
2508377   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2508378   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2508379   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2508380   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 *
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 *
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts +
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 *
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines +
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases +
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases +
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases +
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 *
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2508381   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2508382   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2508383   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2508384   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2508385   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2508386   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2508387   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2508388   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2508389   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2508390   +          +     1.02431289724643 * S_NumDealsPurchases
2508391   +          +    -0.90960173637405 * S_NumDistPurchases
2508392   +          +     1.24283490404772 * S_NumStorePurchases
2508393   +          +     1.23072413154592 * S_NumWebPurchases
2508394   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2508395   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2508396   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2508397   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome +
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 *
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts +
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 *
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 *
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 *
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 *
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq +
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2508398   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2508399   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2508400   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2508401   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2508402   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2508403   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2508404   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2508405   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2508406   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2508407   +          +    -0.26249596122198 * S_NumDealsPurchases
2508408   +          +    -0.63328519804758 * S_NumDistPurchases
2508409   +          +    -0.88467503575886 * S_NumStorePurchases
2508410   +          +    -0.83120537310738 * S_NumWebPurchases
2508411   +          +     1.40072282351719 * S_NumWebVisitsMonth
2508412   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2508413   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2508414   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 *
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 *
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts +
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 *
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines +
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases +
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases +
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases +
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 *
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2508415   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2508416   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2508417   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2508418   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2508419   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2508420   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2508421   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2508422   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2508423   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2508424   +          +     1.30167361451945 * S_NumDealsPurchases
2508425   +          +     1.45457613716235 * S_NumDistPurchases
2508426   +          +    -0.40226463685252 * S_NumStorePurchases
2508427   +          +     0.36369161683572 * S_NumWebPurchases
2508428   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2508429   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2508430   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2508431   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 *
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 *
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts +
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 *
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 *
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 *
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 *
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq +
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2508432   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2508433   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2508434   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2508435   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2508436   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2508437   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2508438   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2508439   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2508440   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2508441   +          +    -0.54572162665338 * S_NumDealsPurchases
2508442   +          +      0.9607390449318 * S_NumDistPurchases
2508443   +          +    -0.03259470545754 * S_NumStorePurchases
2508444   +          +     0.19202241423412 * S_NumWebPurchases
2508445   +          +     0.61085831658456 * S_NumWebVisitsMonth
2508446   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2508447   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2508448   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 *
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 *
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts +
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 *
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines +
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases +
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases +
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases +
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 *
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2508449   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2508450   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2508451   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2508452   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2508453   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 *
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 +
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 *
HigherEducationBinary0 ;
2508454   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2508455   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2508456   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2508457   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2508458   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 *
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 +
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 *
HigherEducationBinary0 ;
2508459   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2508460   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2508461   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2508462   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2508463   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 *
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 +
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 *
HigherEducationBinary0 ;
2508464   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2508465   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2508466   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2508467   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2508468   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 *
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 +
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 *
HigherEducationBinary0 ;
2508469   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2508470   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2508471   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2508472   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2508473   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 *
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 +
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 *
HigherEducationBinary0 ;
2508474   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2508475   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2508476   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2508477   +          +    -2.32430245081383 * Marital_StatusDivorced
2508478   +          +    -0.09815511356796 * Marital_StatusMarried
2508479   +          +     0.13075504294551 * Marital_StatusSingle
2508480   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle +
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 *
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 *
Marital_StatusTogether ;
2508481   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2508482   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2508483   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2508484   +          +    -0.65574603869224 * Marital_StatusDivorced
2508485   +          +     1.54672472575294 * Marital_StatusMarried
2508486   +          +    -1.59817602340208 * Marital_StatusSingle
2508487   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle +
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 *
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 *
Marital_StatusTogether ;
2508488   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2508489   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2508490   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2508491   +          +    -0.50911604604781 * Marital_StatusDivorced
2508492   +          +     0.30403066135719 * Marital_StatusMarried
2508493   +          +      0.1026950879545 * Marital_StatusSingle
2508494   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle +
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 *
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 *
Marital_StatusTogether ;
2508495   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2508496   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2508497   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2508498   +          +     1.07371507133318 * Marital_StatusDivorced
2508499   +          +    -0.07097334129051 * Marital_StatusMarried
2508500   +          +    -0.48339718568621 * Marital_StatusSingle
2508501   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle +
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 *
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 *
Marital_StatusTogether ;
2508502   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2508503   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2508504   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2508505   +          +     1.04342893515504 * Marital_StatusDivorced
2508506   +          +     1.16171312085032 * Marital_StatusMarried
2508507   +          +    -0.30201646939913 * Marital_StatusSingle
2508508   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle +
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 *
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 *
Marital_StatusTogether ;
2508509   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2508510   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2508511   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2508512   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2508513   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2508514   +END;
MPRINT(EM_DIAGRAM):   END;
2508515   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2508516   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2508517   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2508518   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2508519   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2508520   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2508521   +END;
MPRINT(EM_DIAGRAM):   END;
2508522   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2508523   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2508524   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2508525   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2508526   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2508527   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2508528   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2508529   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2508530   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2508531   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2508532   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2508533   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2508534   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2508535   +          +     1.32256781010645 * S_NumDealsPurchases
2508536   +          +    -1.43015438973619 * S_NumDistPurchases
2508537   +          +    -0.63489289584421 * S_NumStorePurchases
2508538   +          +     0.90508699686841 * S_NumWebPurchases
2508539   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2508540   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2508541   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2508542   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 *
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 *
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts +
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 *
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 *
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 *
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 *
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq +
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2508543   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2508544   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2508545   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2508546   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2508547   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2508548   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2508549   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2508550   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2508551   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2508552   +          +     0.85965187264096 * S_NumDealsPurchases
2508553   +          +    -1.15239933286756 * S_NumDistPurchases
2508554   +          +     1.20800889102387 * S_NumStorePurchases
2508555   +          +     1.08790389130242 * S_NumWebPurchases
2508556   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2508557   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2508558   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2508559   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 *
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 *
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts +
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 *
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 *
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 *
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 *
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq +
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2508560   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2508561   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2508562   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2508563   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2508564   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2508565   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2508566   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2508567   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2508568   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2508569   +          +     -0.5767607129654 * S_NumDealsPurchases
2508570   +          +     -0.2643921429796 * S_NumDistPurchases
2508571   +          +    -0.67417489911206 * S_NumStorePurchases
2508572   +          +    -0.51423877684891 * S_NumWebPurchases
2508573   +          +     1.40328299605176 * S_NumWebVisitsMonth
2508574   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2508575   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2508576   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 *
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 *
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts +
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 *
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 *
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 *
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 *
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq +
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2508577   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2508578   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2508579   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2508580   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2508581   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2508582   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2508583   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2508584   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2508585   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2508586   +          +      1.2821617657076 * S_NumDealsPurchases
2508587   +          +     1.26584115202735 * S_NumDistPurchases
2508588   +          +    -0.46597664211833 * S_NumStorePurchases
2508589   +          +     0.45652363472866 * S_NumWebPurchases
2508590   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2508591   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2508592   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2508593   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 *
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 *
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts +
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 *
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 *
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 *
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 *
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq +
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2508594   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2508595   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2508596   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2508597   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2508598   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2508599   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2508600   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2508601   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2508602   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2508603   +          +    -0.85162564171681 * S_NumDealsPurchases
2508604   +          +     0.64631099667221 * S_NumDistPurchases
2508605   +          +    -0.03081963858636 * S_NumStorePurchases
2508606   +          +    -0.24124717624664 * S_NumWebPurchases
2508607   +          +     0.56425980772372 * S_NumWebVisitsMonth
2508608   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2508609   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2508610   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 *
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 *
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts +
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 *
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines +
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases +
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases +
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases +
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 *
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2508611   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2508612   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2508613   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2508614   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2508615   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 *
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 +
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 *
HigherEducationBinary0 ;
2508616   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2508617   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2508618   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2508619   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2508620   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 *
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 +
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 *
HigherEducationBinary0 ;
2508621   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2508622   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2508623   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2508624   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2508625   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 *
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 +
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 *
HigherEducationBinary0 ;
2508626   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2508627   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2508628   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2508629   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2508630   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 +
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 *
HigherEducationBinary0 ;
2508631   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2508632   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2508633   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2508634   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2508635   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 *
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 +
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 *
HigherEducationBinary0 ;
2508636   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2508637   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2508638   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2508639   +          +    -2.49973437075558 * Marital_StatusDivorced
2508640   +          +    -0.18076948182574 * Marital_StatusMarried
2508641   +          +     0.13498525495231 * Marital_StatusSingle
2508642   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle +
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 *
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 *
Marital_StatusTogether ;
2508643   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2508644   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2508645   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2508646   +          +       -0.59463732835 * Marital_StatusDivorced
2508647   +          +     1.37741332427598 * Marital_StatusMarried
2508648   +          +     -1.5833455713231 * Marital_StatusSingle
2508649   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle +
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation +
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced +
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle +
1.79205360628448 * Marital_StatusTogether ;
2508650   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2508651   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2508652   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2508653   +          +    -0.44569556289443 * Marital_StatusDivorced
2508654   +          +     0.29918053103557 * Marital_StatusMarried
2508655   +          +    -0.10337314064224 * Marital_StatusSingle
2508656   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle +
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 *
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 *
Marital_StatusTogether ;
2508657   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2508658   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2508659   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2508660   +          +     1.13881957277462 * Marital_StatusDivorced
2508661   +          +    -0.35849807146313 * Marital_StatusMarried
2508662   +          +    -0.22168731316885 * Marital_StatusSingle
2508663   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle +
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 *
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 *
Marital_StatusTogether ;
2508664   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2508665   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2508666   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2508667   +          +     1.10774969923269 * Marital_StatusDivorced
2508668   +          +     1.08409594073043 * Marital_StatusMarried
2508669   +          +    -0.33145048007894 * Marital_StatusSingle
2508670   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle +
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 *
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 *
Marital_StatusTogether ;
2508671   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2508672   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2508673   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2508674   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2508675   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2508676   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2508677   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2508678   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2508679   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2508680   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
2508681   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2508682   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2508683   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 *
H1x3_2 ;
2508684   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2508685   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2508686   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 *
H1x3_3 ;
2508687   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2508688   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2508689   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 *
H1x3_4 ;
2508690   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2508691   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2508692   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 *
H1x3_5 ;
2508693   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2508694   +END;
MPRINT(EM_DIAGRAM):   END;
2508695   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2508696   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2508697   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2508698   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2508699   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2508700   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2508701   +END;
MPRINT(EM_DIAGRAM):   END;
2508702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2508703   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2508704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2508705   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2508706   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2508707   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2508708   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 +
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2508709   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2508710   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2508711   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 *
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2508712   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2508713   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2508714   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 *
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2508715   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2508716   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2508717   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2508718   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2508719   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2508720   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2508721   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2508722   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2508723   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2508724   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2508725   +END;
MPRINT(EM_DIAGRAM):   END;
2508726   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2508727   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2508728   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2508729   +END;
MPRINT(EM_DIAGRAM):   END;
2508730   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2508731   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2508732   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2508733   +END;
MPRINT(EM_DIAGRAM):   END;
2508734   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2508735   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2508736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2508737   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2508738   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2508739   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2508740   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2508741   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2508742   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2508743   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2508744   +END;
MPRINT(EM_DIAGRAM):   END;
2508745   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2508746   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2508747   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2508748   +drop
2508749   +H1x1_1
2508750   +H1x1_2
2508751   +H1x1_3
2508752   +H1x1_4
2508753   +H1x1_5
2508754   +H1x2_1
2508755   +H1x2_2
2508756   +H1x2_3
2508757   +H1x2_4
2508758   +H1x2_5
2508759   +H1x3_1
2508760   +H1x3_2
2508761   +H1x3_3
2508762   +H1x3_4
2508763   +H1x3_5
2508764   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2508765   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2508766    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2508767    quit;
2508768    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2508769    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2508770    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2508771    retain ID 2 Node "AutoNeural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural10";
2508772    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2508773    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4614 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4614 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508774    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2508775    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2508776    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4614 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4614 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508777    proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME
CREATOR);
2508778    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2508779    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508780    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2508781    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2508782    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2508783    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508784    proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
2508785    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2508786    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2508787    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2508788    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508789    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2508790    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2508791    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2508792    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508793    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2508794    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2508794  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2263 rows and 5 columns.
 
2508795    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2508796    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2508797    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2263 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 2263 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508798    filename _pref
2508798  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2508799    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2508800    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2508801   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2508802   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2508803   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2508804   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2508805   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2508806   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2508807    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2508808    quit;
2508809    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2508810    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2508811    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2508812    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2508813    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2508814    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508815    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2508816    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2508817    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2508818    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2508819    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2508820    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508821    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2508822    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2508823    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2508824    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508825    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2508826    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
 
 
2508827    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2508828    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2508829    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508830    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2508831    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2508832    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2508833    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2508834    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2508835    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2508835  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2508836    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508837    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2508838    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 2267 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508839    filename _pref
2508839  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2508840    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2508841    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2508842   +
2508843   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2508844   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2508844  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2508845   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2508846   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2508847   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2508848   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2508849   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2508850    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2508851    quit;
2508852    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2508853    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2508854    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2508855    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2508856    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2508857    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2508858    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2508859    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2508860    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508861    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2508862    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2508863    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508864    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2508865    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2508866    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2508867    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2508868    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2508869    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508870    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2508871    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2508872    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508873    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2508874    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2508875    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2508876    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2508877    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2508878    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2508878  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2508879    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508880    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2508881    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 2306 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508882    filename _pref
2508882  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2508883    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2508884    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2508885   +
2508886   +
2508887   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2508888   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2508889   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2508890   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2508891   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2508892   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2508893   +
2508894   +
2508895   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2508896   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2508897   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2508898   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2508899   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2508900   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2508901   +
2508902   +
2508903   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2508904   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2508905   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2508906   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2508907   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2508908   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2508909   +
2508910   +
2508911   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2508912   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2508913   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2508914   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2508915   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2508916   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2508917   +
2508918   +
2508919   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2508920   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2508921   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2508922   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2508923   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2508924   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2508925   +
2508926   +
2508927   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2508928   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2508929   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2508930   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2508931   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2508932   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2508933   +
2508934   +
2508935   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2508936   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2508937   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2508938   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2508939   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2508940   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2508941   +
2508942   +
2508943   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2508944   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2508945   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2508946   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2508947   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2508948   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2508949   +if
2508950   +_FILTERNORM1 not in ( '.')
2508951   + and
2508952   +_FILTERNORM2 not in ( '.')
2508953   + and
2508954   +_FILTERNORM3 not in ( '.')
2508955   + and
2508956   +_FILTERNORM4 not in ( '.')
2508957   + and
2508958   +_FILTERNORM5 not in ( '.')
2508959   + and
2508960   +_FILTERNORM6 not in ( '.')
2508961   + and
2508962   +_FILTERNORM7 not in ( ' ')
2508963   + and
2508964   +_FILTERNORM8 not in ( ' ')
2508965   +and
2508966   +( Dt_Customer ne .)
2508967   +and ( Income ne . and (Income<=107000))
2508968   +and ( Kidhome ne .)
2508969   +and ( MntFishProducts ne .)
2508970   +and ( MntFruits ne .)
2508971   +and ( MntGoldProds ne .)
2508972   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2508973   +and ( MntSweetProducts ne .)
2508974   +and ( MntWines ne .)
2508975   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2508976   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2508977   +and ( NumStorePurchases ne .)
2508978   +and ( NumWebPurchases ne .)
2508979   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2508980   +and ( Recency ne .)
2508981   +and ( Teenhome ne .)
2508982   +and ( Year_Birth ne .)
2508983   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2508984   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2508985   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2508986   +end;
MPRINT(EM_DIAGRAM):   end;
2508987   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2508988   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2508989    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2508990    quit;
2508991    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2508992    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2508993    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2508994    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2508995    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2508996    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2508997    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2508998    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2508999    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2509000    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2509001    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2509002    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2509003    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2509004    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2509005    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2509006    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2509007    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2509008    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2509009    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2509010    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2509011    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2509012    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2509013    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2509014    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2509015    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2509016    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2509017    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2509017  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2509018    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2509019    proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl47_FCMP data=_tempx;
2509020    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL47_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL47_FCMP has 2372 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2509021    %macro varDept(fcmpdata=,id=);
2509022    %global nobs&id scoreFlag&id;
2509023    %let scoreFlag&id = 0;
2509024    %if &id=1 or ^&fcmpStart %then %do;
2509025    proc sort data=&fcmpdata out=_temp&id nodupkey;
2509026    by NAME;
2509027    where id=&id and LHS in( %let j=1;
2509028    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2509029    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2509030    "&var" %let j = %eval(&j+1);
2509031    %end;
2509032    );
2509033    run;
2509034    %let dsid = %sysfunc(open(_temp&id));
2509035    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2509036    %let dsid = %sysfunc(close(&dsid));
2509037    %if &&nobs&id %then %do;
2509038    %let scoreFlag&id = 1;
2509039    %let fcmpStart = 1;
2509040    %end;
2509041    %else %let fcmpStart = 0;
2509042    %end;
2509043    %else %do;
2509044    proc sort data=&fcmpdata out=_tempid;
2509045    where id=&id;
2509046    by LHS;
2509047    run;
2509048    %let dsid = %sysfunc(open(_tempid));
2509049    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2509050    %let dsid = %sysfunc(close(&dsid));
2509051    %if ^&&nobs&id %then %do;
2509052    proc datasets lib=work nolist;
2509053    delete _tempid;
2509054    run;
2509055    quit;
2509056    %end;
2509057    %else %do;
2509058    data _tempAll;
2509059    set %let j=%eval(&id-1);
2509060    %do x=1 %to &j;
2509061    %if &&nobs&x %then %do;
2509062    _temp&x %end;
2509063    %end;
2509064    ;
2509065    run;
2509066    proc sql;
2509067    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2509067  ! work._tempid p2 where p.name=p2.lhs;
2509068    quit;
2509069    data _temp&id;
2509070    set _temp&id;
2509071    where LHS ne '' and NAME ne '' and Node ne '';
2509072    run;
2509073    proc datasets lib=work nolist;
2509074    delete _tempAll;
2509075    run;
2509076    %let dsid = %sysfunc(open(_temp&id));
2509077    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2509078    %let dsid = %sysfunc(close(&dsid));
2509079    %if ^&&nobs&id %then %do;
2509080    proc datasets lib=work nolist;
2509081    delete _temp&id;
2509082    run;
2509083    quit;
2509084    %end;
2509085    %else %do;
2509086    %let scoreFlag&id = 1;
2509087    data _temp&id;
2509088    set _temp&id;
2509089    where LHS ne NAME and node ne '';
2509090    run;
2509091    %let dsid = %sysfunc(open(_temp&id));
2509092    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2509093    %let dsid = %sysfunc(close(&dsid));
2509094    %if ^&&nobs&id %then %do;
2509095    proc datasets lib=work nolist;
2509096    delete _temp&id;
2509097    run;
2509098    quit;
2509099    %end;
2509100    %else %do;
2509101    proc sort data=_temp&id nodupkey;
2509102    by LHS NAME;
2509103    run;
2509104    %end;
2509105    %end;
2509106    %end;
2509107    %end;
2509108    %mend varDept;
2509109    %macro optCode(outdata=fcmpdata);
2509110    %global fcmpStart;
2509111    %let fcmpStart = 0;
2509112    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2509113    %let NumNodes=9;
2509114    %do k=1 %to &NumNodes;
2509115    %vardept(fcmpdata=&outdata, id=&k);
2509116    %end;
2509117    %mend optCode;
2509118    %optcode(outData=EMWS8.Ensmbl47_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl47_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2509119    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2509120    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2509121    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2509122    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2509123    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2509124    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2509125    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2509126    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2509127    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2509128    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2509128  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2509129    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2509130    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2509131    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2509132    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2509133    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2509134    * Ensmbl47: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Computing metadata for TRAIN data;
2509135    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL47_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl47_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl47_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl47_TRAIN out=WORK.M3FY2PIF noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3FY2PIF;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3FY2PIF(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3FY2PIF;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3FY2PIF;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0WSJ5WK NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0WSJ5WK;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0WSJ5WK;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3UQHVOB(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0WSJ5WK;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0WSJ5WK;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0WSJ5WK;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0WSJ5WK;
MPRINT(EMADVISECOLUMNS):   set WORK.M0WSJ5WK;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl47";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl47";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl47: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl47";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2509455    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2509456    set EMWS8.Ensmbl47_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMINFO;
2509457    where DATA='Ensmbl47' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl47' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
2509458    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL47_EMINFO.
      WHERE (DATA='Ensmbl47') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2509459    data EMWS8.Ensmbl47_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl47_EMINFO;
2509460    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2509461    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2509462    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL47_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2509466    run;
2509467    data EMWS8.Ensmbl47_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMINFO;
2509468    set EMWS8.Ensmbl47_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMINFO WORK.MODELTEMP_INFO;
2509469    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL47_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL47_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2509470    proc sort data = EMWS8.Ensmbl47_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl47_EMINFO NOTHREADS;
2509471    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2509472    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL47_EMINFO.
NOTE: The data set EMWS8.ENSMBL47_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2509473    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO
NOTHREADS;
2509474    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2509475    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2509476    proc sort data = EMWS8.Ensmbl47_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl47_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2509477    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2509478    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL47_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2509479    data EMWS8.Ensmbl47_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMINFO;
2509480    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2509481    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2509482    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL47_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2509483    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2509484    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2509485    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2509486    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.ENSMBL47_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL47_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.40 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                20. April 2016
Time:                17.40 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O18CN3V0
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl47\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O18CN3V0 new;
MPRINT(EM_DIAGRAM):   run;
2509510    data EMWS8.Ensmbl47_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl47_EMOUTFIT;
2509511    set EMWS8.Ensmbl47_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMOUTFIT;
2509512    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2509513    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
2509513  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2509514    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2509515    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL47_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL47_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2509516    proc sort data=EMWS8.Ensmbl47_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl47_EMREPORTFIT nothreads;
2509517    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2509518    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL47_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL47_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2509519    %let _EMwarndup = 0;
2509520    %let _EMtargetdup =;
2509521    %let _EMASEtargetdup =;
2509522    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2509523    set EMWS8.Ensmbl47_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMOUTFIT;
2509524    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2509525    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2509526    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2509527    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2509528    end;
MPRINT(EM_DIAGRAM):   end;
2509529    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL47_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2509530    proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=WORK.SUBSETINMETA;
2509531    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2509532    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.AUTONEURAL9_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2509533    proc sort data=EMWS8.Ensmbl47_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl47_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
2509534    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2509535    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL47_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2509536    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2509537    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2509538    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2509539    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2509540    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2509541    set EMWS8.Ensmbl47_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_CMeta_TRAIN;
2509542    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2509542  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2509543    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL47_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2509544    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2509545    set EMWS8.Ensmbl47_TRAIN(keep=
2509546    F_DepVar
2509547    I_DepVar
2509548    P_DepVar0
2509549    P_DepVar1
2509550    R_DepVar0
2509551    R_DepVar1
2509552    U_DepVar
2509553    _WARN_
2509554    DepVar
2509555    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2509556    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL47_TRAIN.VIEW used (Total process time):
      real time           0.22 seconds
      cpu time            0.23 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL9_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL47_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl47_05MZ67L nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl47_05MZ67L;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl47_05MZ67L(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl47_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl47_05MZ67L;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl47_05MZ67L;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl47_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 4.1566921E-6 OVLMAX 0.9998385929 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2513822    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2513823    set EMWS8.Ensmbl47_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_CMeta_TRAIN;
2513824    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2513824  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2513825    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL47_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2513826    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2513827    set EMWS8.Ensmbl47_VALIDATE(keep=
2513828    F_DepVar
2513829    I_DepVar
2513830    P_DepVar0
2513831    P_DepVar1
2513832    R_DepVar0
2513833    R_DepVar1
2513834    U_DepVar
2513835    _WARN_
2513836    DepVar
2513837    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2513838    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL47_VALIDATE.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL9_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL47_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl47_3TC5M_1 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl47_3TC5M_1;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl47_3TC5M_1(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl47_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMCLASSIFICATION WORK.Ensmbl47_3TC5M_1;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl47_3TC5M_1;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl47_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 4.1585569E-6 OVLMAX 0.9998385989 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2518113    %let _cn = %sysfunc(getoption(CENTER));
2518114    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2518115    proc print data=EMWS8.Ensmbl47_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl47_EMREPORTFIT noobs label;
2518116    var STAT LABEL TRAIN
2518117    VALIDATE
2518118    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
2518119    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2518120    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2518121    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2518122    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL47_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 2063.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2518123    title10;
MPRINT(EM_DIAGRAM):   title10;
2518124    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2518125    proc sort data=EMWS8.Ensmbl47_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl47_EMCLASSIFICATION nothreads;
2518126    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2518127    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL47_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL47_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2518128    %let _cn = %sysfunc(getoption(CENTER));
2518129    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2518130    proc print data=EMWS8.Ensmbl47_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl47_EMCLASSIFICATION noobs label;
2518131    var from into pct_row pct_col count percent
2518132    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2518133    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2518134    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2518135    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2518136    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2518137    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2518138    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2518139    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2518140    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2518141    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2518142    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2518143    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL47_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2064.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2518144    title9;
MPRINT(EM_DIAGRAM):   title9;
2518145    title10;
MPRINT(EM_DIAGRAM):   title10;
2518146    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2518147    %let _cn = %sysfunc(getoption(CENTER));
2518148    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2518149    data EMWS8.Ensmbl47_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl47_EMEVENTREPORT;
2518150    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
2518150  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
2518151    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2518151  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
2518151  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
2518151  ! FALSEEVENT
2518152    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
2518152  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
2518152  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
2518153       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
2518154    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
2518155    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
2518156    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
2518157    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
2518158    set EMWS8.Ensmbl47_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl47_EMEVENTREPORT;
2518159    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL47_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL47_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2518160    proc print data=EMWS8.Ensmbl47_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl47_EMEVENTREPORT noobs label;
2518161    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2518162    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
2518163    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
2518164    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL47_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 2065.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2518165    title10;
MPRINT(EM_DIAGRAM):   title10;
2518166    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2518167    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2518168    modify Ensmbl47_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl47_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2518169    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2518170    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2518170  ! ;
MPRINT(EM_DIAGRAM):   run;
2518171    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL47_EMRANK.DATA.
2518172    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
2518173    %let _cn = %sysfunc(getoption(CENTER));
2518174    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2518175    proc print data=EMWS8.Ensmbl47_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl47_EMRANK label noobs;
2518176    var
2518177    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2518178    by
2518179    notsorted DATAROLE
2518180    notsorted TARGET
2518181    notsorted TARGETLABEL
2518182    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2518183    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2518184    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2518185    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL47_EMRANK.
NOTE: The PROCEDURE PRINT printed page 2066.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2518186    title10;
MPRINT(EM_DIAGRAM):   title10;
2518187    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2518188    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2518189    modify Ensmbl47_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl47_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2518190    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
2518190  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2518191    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2518191  ! ;
MPRINT(EM_DIAGRAM):   run;
2518192    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL47_EMSCOREDIST.DATA.
2518193    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl47_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
