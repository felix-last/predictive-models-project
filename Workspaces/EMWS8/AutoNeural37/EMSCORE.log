MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.18 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                11.18 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O05I5EXH 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O05I5EXH new;
MPRINT(EM_DIAGRAM):   run;
3271490    filename emflow
3271490  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural37: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3271491    *------------------------------------------------------------*;
3271492    * AutoNeural37: Scoring DATA data;
3271493    *------------------------------------------------------------*;
3271494    data EMWS8.AutoNeural37_TRAIN
3271495    / view=EMWS8.AutoNeural37_TRAIN
3271496    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural37_TRAIN / view=EMWS8.AutoNeural37_TRAIN ;
3271497    set EMWS8.Meta3_TRAIN
3271498    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
3271499    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMFLOWSCORE.sas.
3271500   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3271501   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3271502   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3271503   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3271504   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3271505   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3271506   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3271507   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3271508   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3271509   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3271510   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3271511   +LENGTH _WARN_ $4
3271512   +      F_DepVar  $ 12
3271513   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3271514   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
3271515   +
3271516   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
3271517   +
3271518   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
3271519   +
3271520   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
3271521   +
3271522   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
3271523   +
3271524   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
3271525   +
3271526   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
3271527   +
3271528   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
3271529   +
3271530   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
3271531   +
3271532   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
3271533   +
3271534   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3271535   +
3271536   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
3271537   +
3271538   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
3271539   +
3271540   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
3271541   +
3271542   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
3271543   +
3271544   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
3271545   +
3271546   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
3271547   +
3271548   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
3271549   +
3271550   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
3271551   +
3271552   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
3271553   +
3271554   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
3271555   +
3271556   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
3271557   +
3271558   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
3271559   +
3271560   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
3271561   +
3271562   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
3271563   +
3271564   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
3271565   +
3271566   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
3271567   +
3271568   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3271569   +
3271570   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3271571   +
3271572   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3271573   +
3271574   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3271575   +
3271576   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
3271577   +
3271578   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
3271579   +
3271580   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
3271581   +
3271582   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
3271583   +
3271584   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
3271585   +
3271586   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
3271587   +
3271588   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3271589   +
3271590   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3271591   +
3271592   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3271593   +
3271594   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3271595   +
3271596   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3271597   +
3271598   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3271599   +
3271600   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3271601   +
3271602   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3271603   +
3271604   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
3271605   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
3271606   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
3271607   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3271608   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3271609   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271610   +end;
MPRINT(EM_DIAGRAM):   end;
3271611   +else do;
MPRINT(EM_DIAGRAM):   else do;
3271612   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3271613   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
3271614   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3271615   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3271616   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
3271617   +   end;
MPRINT(EM_DIAGRAM):   end;
3271618   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3271619   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
3271620   +   end;
MPRINT(EM_DIAGRAM):   end;
3271621   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3271622   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3271623   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3271624   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271625   +   end;
MPRINT(EM_DIAGRAM):   end;
3271626   +end;
MPRINT(EM_DIAGRAM):   end;
3271627   +
3271628   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
3271629   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
3271630   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
3271631   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3271632   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3271633   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271634   +end;
MPRINT(EM_DIAGRAM):   end;
3271635   +else do;
MPRINT(EM_DIAGRAM):   else do;
3271636   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3271637   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
3271638   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3271639   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3271640   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
3271641   +   end;
MPRINT(EM_DIAGRAM):   end;
3271642   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3271643   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
3271644   +   end;
MPRINT(EM_DIAGRAM):   end;
3271645   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3271646   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3271647   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3271648   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271649   +   end;
MPRINT(EM_DIAGRAM):   end;
3271650   +end;
MPRINT(EM_DIAGRAM):   end;
3271651   +
3271652   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
3271653   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
3271654   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
3271655   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3271656   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3271657   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271658   +end;
MPRINT(EM_DIAGRAM):   end;
3271659   +else do;
MPRINT(EM_DIAGRAM):   else do;
3271660   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3271661   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
3271662   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3271663   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3271664   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
3271665   +   end;
MPRINT(EM_DIAGRAM):   end;
3271666   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3271667   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
3271668   +   end;
MPRINT(EM_DIAGRAM):   end;
3271669   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3271670   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3271671   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3271672   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271673   +   end;
MPRINT(EM_DIAGRAM):   end;
3271674   +end;
MPRINT(EM_DIAGRAM):   end;
3271675   +
3271676   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
3271677   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
3271678   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
3271679   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3271680   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3271681   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271682   +end;
MPRINT(EM_DIAGRAM):   end;
3271683   +else do;
MPRINT(EM_DIAGRAM):   else do;
3271684   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3271685   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
3271686   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3271687   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3271688   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
3271689   +   end;
MPRINT(EM_DIAGRAM):   end;
3271690   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3271691   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
3271692   +   end;
MPRINT(EM_DIAGRAM):   end;
3271693   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3271694   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3271695   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3271696   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271697   +   end;
MPRINT(EM_DIAGRAM):   end;
3271698   +end;
MPRINT(EM_DIAGRAM):   end;
3271699   +
3271700   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
3271701   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
3271702   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
3271703   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3271704   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3271705   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271706   +end;
MPRINT(EM_DIAGRAM):   end;
3271707   +else do;
MPRINT(EM_DIAGRAM):   else do;
3271708   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3271709   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
3271710   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3271711   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3271712   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
3271713   +   end;
MPRINT(EM_DIAGRAM):   end;
3271714   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3271715   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
3271716   +   end;
MPRINT(EM_DIAGRAM):   end;
3271717   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3271718   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3271719   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3271720   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271721   +   end;
MPRINT(EM_DIAGRAM):   end;
3271722   +end;
MPRINT(EM_DIAGRAM):   end;
3271723   +
3271724   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
3271725   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
3271726   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
3271727   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3271728   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3271729   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271730   +end;
MPRINT(EM_DIAGRAM):   end;
3271731   +else do;
MPRINT(EM_DIAGRAM):   else do;
3271732   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3271733   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
3271734   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3271735   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3271736   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
3271737   +   end;
MPRINT(EM_DIAGRAM):   end;
3271738   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3271739   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
3271740   +   end;
MPRINT(EM_DIAGRAM):   end;
3271741   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3271742   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3271743   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3271744   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271745   +   end;
MPRINT(EM_DIAGRAM):   end;
3271746   +end;
MPRINT(EM_DIAGRAM):   end;
3271747   +
3271748   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
3271749   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
3271750   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
3271751   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3271752   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3271753   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271754   +end;
MPRINT(EM_DIAGRAM):   end;
3271755   +else do;
MPRINT(EM_DIAGRAM):   else do;
3271756   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3271757   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
3271758   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3271759   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
3271760   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
3271761   +   end;
MPRINT(EM_DIAGRAM):   end;
3271762   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
3271763   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
3271764   +   end;
MPRINT(EM_DIAGRAM):   end;
3271765   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3271766   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3271767   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3271768   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271769   +   end;
MPRINT(EM_DIAGRAM):   end;
3271770   +end;
MPRINT(EM_DIAGRAM):   end;
3271771   +
3271772   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
3271773   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
3271774   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3271775   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
3271776   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
3271777   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
3271778   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
3271779   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
3271780   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3271781   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3271782   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3271783   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3271784   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3271785   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271786   +end;
MPRINT(EM_DIAGRAM):   end;
3271787   +else do;
MPRINT(EM_DIAGRAM):   else do;
3271788   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
3271789   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
3271790   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3271791   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
3271792   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
3271793   +   end;
MPRINT(EM_DIAGRAM):   end;
3271794   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
3271795   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
3271796   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
3271797   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
3271798   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
3271799   +   end;
MPRINT(EM_DIAGRAM):   end;
3271800   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
3271801   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
3271802   +   end;
MPRINT(EM_DIAGRAM):   end;
3271803   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
3271804   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
3271805   +   end;
MPRINT(EM_DIAGRAM):   end;
3271806   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
3271807   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
3271808   +   end;
MPRINT(EM_DIAGRAM):   end;
3271809   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3271810   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3271811   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3271812   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3271813   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3271814   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3271815   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271816   +   end;
MPRINT(EM_DIAGRAM):   end;
3271817   +end;
MPRINT(EM_DIAGRAM):   end;
3271818   +
3271819   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3271820   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3271821   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3271822   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3271823   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3271824   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3271825   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3271826   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3271827   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3271828   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3271829   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3271830   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3271831   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3271832   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3271833   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271834   +end;
MPRINT(EM_DIAGRAM):   end;
3271835   +else do;
MPRINT(EM_DIAGRAM):   else do;
3271836   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3271837   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3271838   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3271839   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3271840   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3271841   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3271842   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3271843   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3271844   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3271845   +         end;
MPRINT(EM_DIAGRAM):   end;
3271846   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3271847   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3271848   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3271849   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3271850   +            end;
MPRINT(EM_DIAGRAM):   end;
3271851   +         end;
MPRINT(EM_DIAGRAM):   end;
3271852   +      end;
MPRINT(EM_DIAGRAM):   end;
3271853   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3271854   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3271855   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3271856   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3271857   +         end;
MPRINT(EM_DIAGRAM):   end;
3271858   +      end;
MPRINT(EM_DIAGRAM):   end;
3271859   +   end;
MPRINT(EM_DIAGRAM):   end;
3271860   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3271861   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3271862   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3271863   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3271864   +      end;
MPRINT(EM_DIAGRAM):   end;
3271865   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3271866   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3271867   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3271868   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3271869   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3271870   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3271871   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3271872   +         end;
MPRINT(EM_DIAGRAM):   end;
3271873   +      end;
MPRINT(EM_DIAGRAM):   end;
3271874   +   end;
MPRINT(EM_DIAGRAM):   end;
3271875   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3271876   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3271877   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3271878   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3271879   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3271880   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3271881   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271882   +   end;
MPRINT(EM_DIAGRAM):   end;
3271883   +end;
MPRINT(EM_DIAGRAM):   end;
3271884   +
3271885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3271886   +*** Checking missing input Interval
3271887   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3271888   +
3271889   +IF NMISS(
3271890   +   AcceptedCmpTotal ,
3271891   +   Age ,
3271892   +   Frq ,
3271893   +   Income ,
3271894   +   Kidhome ,
3271895   +   MntFishProducts ,
3271896   +   MntFruits ,
3271897   +   MntGoldProds ,
3271898   +   MntSweetProducts ,
3271899   +   MonthsAsCustomer ,
3271900   +   NumDealsPurchases ,
3271901   +   NumWebVisitsMonth ,
3271902   +   RFMstat ,
3271903   +   RMntFrq ,
3271904   +   Recency ,
3271905   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
3271906   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3271907   +
3271908   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3271909   +END;
MPRINT(EM_DIAGRAM):   END;
3271910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3271911   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
3271912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3271913   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3271914   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3271915   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3271916   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3271917   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3271918   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3271919   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3271920   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3271921   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3271922   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3271923   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3271924   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
3271925   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3271926   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3271927   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3271928   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3271929   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3271930   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3271931   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3271932   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3271933   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3271934   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3271935   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3271936   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3271937   +END;
MPRINT(EM_DIAGRAM):   END;
3271938   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3271939   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
3271940   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3271941   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3271942   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
3271943   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3271944   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
3271945   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3271946   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
3271947   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3271948   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
3271949   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3271950   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
3271951   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3271952   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3271953   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
3271954   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
3271955   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3271956   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
3271957   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3271958   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
3271959   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
3271960   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3271961   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3271962   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
3271963   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3271964   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3271965   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3271966   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3271967   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3271968   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
3271969   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3271970   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3271971   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
3271972   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3271973   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
3271974   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3271975   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
3271976   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3271977   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
3271978   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3271979   +END;
MPRINT(EM_DIAGRAM):   END;
3271980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3271981   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
3271982   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3271983   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3271984   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
3271985   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3271986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3271987   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
3271988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3271989   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3271990   +   H1x1_1  =    -0.16752750958623 * S_AcceptedCmpTotal
3271991   +          +     0.06403041073662 * S_Age  +     0.37887435203175 * S_Frq
3271992   +          +    -0.06488471849106 * S_Income  +     0.02927960705587 *
3271993   +        S_Kidhome  +     -0.0153182718754 * S_MntFishProducts
3271994   +          +      0.0592803373375 * S_MntFruits  +     -0.1059983645705 *
3271995   +        S_MntGoldProds  +     0.08839399409229 * S_MntSweetProducts
3271996   +          +    -0.01191239814261 * S_MonthsAsCustomer
3271997   +          +      -0.307259983666 * S_NumDealsPurchases
3271998   +          +    -0.23972300101674 * S_NumWebVisitsMonth
3271999   +          +    -0.30556185778423 * S_RFMstat  +    -0.08105827641093 *
3272000   +        S_RMntFrq  +     0.32671320165482 * S_Recency
3272001   +          +      0.0130097267127 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.16752750958623 * S_AcceptedCmpTotal + 0.06403041073662 * 
S_Age + 0.37887435203175 * S_Frq + -0.06488471849106 * S_Income + 0.02927960705587 * S_Kidhome 
+ -0.0153182718754 * S_MntFishProducts + 0.0592803373375 * S_MntFruits + -0.1059983645705 * 
S_MntGoldProds + 0.08839399409229 * S_MntSweetProducts + -0.01191239814261 * 
S_MonthsAsCustomer + -0.307259983666 * S_NumDealsPurchases + -0.23972300101674 * 
S_NumWebVisitsMonth + -0.30556185778423 * S_RFMstat + -0.08105827641093 * S_RMntFrq + 
0.32671320165482 * S_Recency + 0.0130097267127 * S_Teenhome ;
3272002   +   H1x1_1  = H1x1_1  +     0.04957160124382 * AcceptedCmp10
3272003   +          +    -0.05376340328215 * AcceptedCmp20  +     0.11970832567932 *
3272004   +        AcceptedCmp30  +    -0.20257152181059 * AcceptedCmp40
3272005   +          +     0.19055537475137 * AcceptedCmp50  +    -0.16409517539938 *
3272006   +        Complain0  +    -0.05757658272561 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04957160124382 * AcceptedCmp10 + -0.05376340328215 * 
AcceptedCmp20 + 0.11970832567932 * AcceptedCmp30 + -0.20257152181059 * AcceptedCmp40 + 
0.19055537475137 * AcceptedCmp50 + -0.16409517539938 * Complain0 + -0.05757658272561 * 
HigherEducationBinary0 ;
3272007   +   H1x1_1  = H1x1_1  +     0.14272714853962 * Education2n_Cycle
3272008   +          +     0.17151280502053 * EducationBasic  +    -0.11549721715363 *
3272009   +        EducationGraduation  +    -0.14651231631393 * EducationMaster
3272010   +          +     -0.0692762335753 * Marital_StatusDivorced
3272011   +          +     0.02472293911071 * Marital_StatusMarried
3272012   +          +     0.04038393550437 * Marital_StatusSingle
3272013   +          +     0.04243299259503 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14272714853962 * Education2n_Cycle + 
0.17151280502053 * EducationBasic + -0.11549721715363 * EducationGraduation + 
-0.14651231631393 * EducationMaster + -0.0692762335753 * Marital_StatusDivorced + 
0.02472293911071 * Marital_StatusMarried + 0.04038393550437 * Marital_StatusSingle + 
0.04243299259503 * Marital_StatusTogether ;
3272014   +   H1x1_1  =     0.23154562419649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.23154562419649 + H1x1_1 ;
3272015   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
3272016   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
3272017   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
3272018   +END;
MPRINT(EM_DIAGRAM):   END;
3272019   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3272020   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
3272021   +END;
MPRINT(EM_DIAGRAM):   END;
3272022   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272023   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
3272024   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272025   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3272026   +   H1x2_1  =    -0.31529057180483 * S_AcceptedCmpTotal
3272027   +          +      0.2513504223928 * S_Age  +     1.31369907469092 * S_Frq
3272028   +          +     1.18208440103935 * S_Income  +    -0.63035218994975 *
3272029   +        S_Kidhome  +     0.06794324522555 * S_MntFishProducts
3272030   +          +    -0.02910005341604 * S_MntFruits  +     -0.2809281327009 *
3272031   +        S_MntGoldProds  +     0.03300083755879 * S_MntSweetProducts
3272032   +          +     0.14524334187971 * S_MonthsAsCustomer
3272033   +          +    -0.58464031025411 * S_NumDealsPurchases
3272034   +          +    -0.10768856151333 * S_NumWebVisitsMonth
3272035   +          +    -0.54602308682658 * S_RFMstat  +    -0.07771897681693 *
3272036   +        S_RMntFrq  +    -0.04430281297191 * S_Recency
3272037   +          +    -0.75550113104618 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.31529057180483 * S_AcceptedCmpTotal + 0.2513504223928 * 
S_Age + 1.31369907469092 * S_Frq + 1.18208440103935 * S_Income + -0.63035218994975 * S_Kidhome 
+ 0.06794324522555 * S_MntFishProducts + -0.02910005341604 * S_MntFruits + -0.2809281327009 * 
S_MntGoldProds + 0.03300083755879 * S_MntSweetProducts + 0.14524334187971 * S_MonthsAsCustomer 
+ -0.58464031025411 * S_NumDealsPurchases + -0.10768856151333 * S_NumWebVisitsMonth + 
-0.54602308682658 * S_RFMstat + -0.07771897681693 * S_RMntFrq + -0.04430281297191 * S_Recency 
+ -0.75550113104618 * S_Teenhome ;
3272038   +   H1x2_1  = H1x2_1  +    -0.32989699322067 * AcceptedCmp10
3272039   +          +    -0.49194930861593 * AcceptedCmp20  +    -0.29685081372508 *
3272040   +        AcceptedCmp30  +    -1.09268493953815 * AcceptedCmp40
3272041   +          +     0.19253596686854 * AcceptedCmp50  +    -0.52740837757185 *
3272042   +        Complain0  +     0.92701971187717 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.32989699322067 * AcceptedCmp10 + -0.49194930861593 
* AcceptedCmp20 + -0.29685081372508 * AcceptedCmp30 + -1.09268493953815 * AcceptedCmp40 + 
0.19253596686854 * AcceptedCmp50 + -0.52740837757185 * Complain0 + 0.92701971187717 * 
HigherEducationBinary0 ;
3272043   +   H1x2_1  = H1x2_1  +    -0.67905848838903 * Education2n_Cycle
3272044   +          +     0.18443463984889 * EducationBasic  +     0.41283576419495 *
3272045   +        EducationGraduation  +    -0.37768027773032 * EducationMaster
3272046   +          +     0.07007941100006 * Marital_StatusDivorced
3272047   +          +     -0.7850554528889 * Marital_StatusMarried
3272048   +          +     1.17661634109847 * Marital_StatusSingle
3272049   +          +    -0.55785837414708 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.67905848838903 * Education2n_Cycle + 
0.18443463984889 * EducationBasic + 0.41283576419495 * EducationGraduation + -0.37768027773032 
* EducationMaster + 0.07007941100006 * Marital_StatusDivorced + -0.7850554528889 * 
Marital_StatusMarried + 1.17661634109847 * Marital_StatusSingle + -0.55785837414708 * 
Marital_StatusTogether ;
3272050   +   H1x2_1  =    -0.47254621873132 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.47254621873132 + H1x2_1 ;
3272051   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
3272052   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
3272053   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
3272054   +END;
MPRINT(EM_DIAGRAM):   END;
3272055   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3272056   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
3272057   +END;
MPRINT(EM_DIAGRAM):   END;
3272058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272059   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
3272060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272061   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3272062   +   H1x3_1  =    -1.82667161026613 * S_AcceptedCmpTotal
3272063   +          +    -1.37253292193256 * S_Age  +    -2.75518607832551 * S_Frq
3272064   +          +    -0.79839250431153 * S_Income  +     1.11821147878382 *
3272065   +        S_Kidhome  +    -0.44513342757321 * S_MntFishProducts
3272066   +          +     0.87700219878037 * S_MntFruits  +    -0.11016064598169 *
3272067   +        S_MntGoldProds  +    -0.01609032798943 * S_MntSweetProducts
3272068   +          +    -2.17154324602167 * S_MonthsAsCustomer
3272069   +          +    -1.39930460918007 * S_NumDealsPurchases
3272070   +          +    -0.16044576482901 * S_NumWebVisitsMonth
3272071   +          +    -0.41327898874555 * S_RFMstat  +     0.52147960287475 *
3272072   +        S_RMntFrq  +    -0.73252715992964 * S_Recency
3272073   +          +    -0.30335608719088 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.82667161026613 * S_AcceptedCmpTotal + -1.37253292193256 * 
S_Age + -2.75518607832551 * S_Frq + -0.79839250431153 * S_Income + 1.11821147878382 * 
S_Kidhome + -0.44513342757321 * S_MntFishProducts + 0.87700219878037 * S_MntFruits + 
-0.11016064598169 * S_MntGoldProds + -0.01609032798943 * S_MntSweetProducts + 
-2.17154324602167 * S_MonthsAsCustomer + -1.39930460918007 * S_NumDealsPurchases + 
-0.16044576482901 * S_NumWebVisitsMonth + -0.41327898874555 * S_RFMstat + 0.52147960287475 * 
S_RMntFrq + -0.73252715992964 * S_Recency + -0.30335608719088 * S_Teenhome ;
3272074   +   H1x3_1  = H1x3_1  +     -1.0325678563582 * AcceptedCmp10
3272075   +          +     0.25951825842624 * AcceptedCmp20  +    -0.75269528776274 *
3272076   +        AcceptedCmp30  +    -1.09208637335913 * AcceptedCmp40
3272077   +          +     0.94597602278581 * AcceptedCmp50  +     0.73782287956403 *
3272078   +        Complain0  +     0.48147273740028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.0325678563582 * AcceptedCmp10 + 0.25951825842624 * 
AcceptedCmp20 + -0.75269528776274 * AcceptedCmp30 + -1.09208637335913 * AcceptedCmp40 + 
0.94597602278581 * AcceptedCmp50 + 0.73782287956403 * Complain0 + 0.48147273740028 * 
HigherEducationBinary0 ;
3272079   +   H1x3_1  = H1x3_1  +     0.75114718211842 * Education2n_Cycle
3272080   +          +     0.08709759722742 * EducationBasic  +     0.25555397082161 *
3272081   +        EducationGraduation  +    -0.35403398893388 * EducationMaster
3272082   +          +     0.83271778325587 * Marital_StatusDivorced
3272083   +          +     0.79137899511518 * Marital_StatusMarried
3272084   +          +    -0.51320080030576 * Marital_StatusSingle
3272085   +          +    -0.48315893978838 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.75114718211842 * Education2n_Cycle + 
0.08709759722742 * EducationBasic + 0.25555397082161 * EducationGraduation + -0.35403398893388 
* EducationMaster + 0.83271778325587 * Marital_StatusDivorced + 0.79137899511518 * 
Marital_StatusMarried + -0.51320080030576 * Marital_StatusSingle + -0.48315893978838 * 
Marital_StatusTogether ;
3272086   +   H1x3_1  =     1.23763256110337 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.23763256110337 + H1x3_1 ;
3272087   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
3272088   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
3272089   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
3272090   +END;
MPRINT(EM_DIAGRAM):   END;
3272091   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3272092   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
3272093   +END;
MPRINT(EM_DIAGRAM):   END;
3272094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272095   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
3272096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272097   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3272098   +   H2x1_1  =     4.77126766160389 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 4.77126766160389 * H1x1_1 ;
3272099   +   H2x1_1  = H2x1_1  +       -2.06136482688 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.06136482688 * H1x2_1 ;
3272100   +   H2x1_1  = H2x1_1  +    -0.66088716356598 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.66088716356598 * H1x3_1 ;
3272101   +   H2x1_1  =    -1.42497113284005 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.42497113284005 + H2x1_1 ;
3272102   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
3272103   +END;
MPRINT(EM_DIAGRAM):   END;
3272104   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3272105   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
3272106   +END;
MPRINT(EM_DIAGRAM):   END;
3272107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272108   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
3272109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272110   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3272111   +   H2x2_1  =     1.50159856860224 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.50159856860224 * H1x1_1 ;
3272112   +   H2x2_1  = H2x2_1  +    -1.21325055599412 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.21325055599412 * H1x2_1 ;
3272113   +   H2x2_1  = H2x2_1  +      0.4926229652129 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.4926229652129 * H1x3_1 ;
3272114   +   H2x2_1  =    -0.30658924042786 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.30658924042786 + H2x2_1 ;
3272115   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
3272116   +END;
MPRINT(EM_DIAGRAM):   END;
3272117   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3272118   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
3272119   +END;
MPRINT(EM_DIAGRAM):   END;
3272120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272121   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
3272122   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272123   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3272124   +   H3x1_1  =     4.83751882303338 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.83751882303338 * H2x1_1 ;
3272125   +   H3x1_1  = H3x1_1  +     2.12677516906018 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.12677516906018 * H2x2_1 ;
3272126   +   H3x1_1  =     0.02705273717187 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.02705273717187 + H3x1_1 ;
3272127   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
3272128   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
3272129   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
3272130   +END;
MPRINT(EM_DIAGRAM):   END;
3272131   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3272132   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
3272133   +END;
MPRINT(EM_DIAGRAM):   END;
3272134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272135   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3272136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272137   +
3272138   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3272139   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3272140   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3272141   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3272142   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3272143   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3272144   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3272145   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3272146   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3272147   +end;
MPRINT(EM_DIAGRAM):   end;
3272148   +else do;
MPRINT(EM_DIAGRAM):   else do;
3272149   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3272150   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3272151   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3272152   +   end;
MPRINT(EM_DIAGRAM):   end;
3272153   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3272154   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3272155   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3272156   +   end;
MPRINT(EM_DIAGRAM):   end;
3272157   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3272158   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3272159   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3272160   +   end;
MPRINT(EM_DIAGRAM):   end;
3272161   +end;
MPRINT(EM_DIAGRAM):   end;
3272162   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3272163   +   P_DepVar1  =     -6.6798185012723 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.6798185012723 * H3x1_1 ;
3272164   +   P_DepVar1  =     2.10208029317576 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.10208029317576 + P_DepVar1 ;
3272165   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3272166   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3272167   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3272168   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3272169   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3272170   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3272171   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3272172   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3272173   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3272174   +END;
MPRINT(EM_DIAGRAM):   END;
3272175   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3272176   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3272177   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3272178   +END;
MPRINT(EM_DIAGRAM):   END;
3272179   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3272180   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
3272181   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
3272182   +END;
MPRINT(EM_DIAGRAM):   END;
3272183   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3272184   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3272185   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3272186   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3272187   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3272188   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3272189   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3272190   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272191   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3272192   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272193   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3272194   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3272195   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3272196   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3272197   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3272198   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3272199   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3272200   +END;
MPRINT(EM_DIAGRAM):   END;
3272201   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3272202   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3272203   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3272204   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3272205    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL37_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
3272206    quit;
3272207    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3272208    filename emflow
3272208  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural37: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3272209    *------------------------------------------------------------*;
3272210    * AutoNeural37: Scoring VALIDATE data;
3272211    *------------------------------------------------------------*;
3272212    data EMWS8.AutoNeural37_VALIDATE
3272213    / view=EMWS8.AutoNeural37_VALIDATE
3272214    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural37_VALIDATE / view=EMWS8.AutoNeural37_VALIDATE ;
3272215    set EMWS8.Meta3_VALIDATE
3272216    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
3272217    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMFLOWSCORE.sas.
3272218   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3272219   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3272220   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3272221   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3272222   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3272223   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3272224   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3272225   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3272226   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3272227   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3272228   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3272229   +LENGTH _WARN_ $4
3272230   +      F_DepVar  $ 12
3272231   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3272232   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
3272233   +
3272234   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
3272235   +
3272236   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
3272237   +
3272238   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
3272239   +
3272240   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
3272241   +
3272242   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
3272243   +
3272244   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
3272245   +
3272246   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
3272247   +
3272248   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
3272249   +
3272250   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
3272251   +
3272252   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3272253   +
3272254   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
3272255   +
3272256   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
3272257   +
3272258   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
3272259   +
3272260   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
3272261   +
3272262   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
3272263   +
3272264   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
3272265   +
3272266   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
3272267   +
3272268   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
3272269   +
3272270   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
3272271   +
3272272   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
3272273   +
3272274   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
3272275   +
3272276   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
3272277   +
3272278   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
3272279   +
3272280   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
3272281   +
3272282   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
3272283   +
3272284   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
3272285   +
3272286   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3272287   +
3272288   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3272289   +
3272290   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3272291   +
3272292   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3272293   +
3272294   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
3272295   +
3272296   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
3272297   +
3272298   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
3272299   +
3272300   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
3272301   +
3272302   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
3272303   +
3272304   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
3272305   +
3272306   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3272307   +
3272308   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3272309   +
3272310   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3272311   +
3272312   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3272313   +
3272314   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3272315   +
3272316   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3272317   +
3272318   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3272319   +
3272320   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3272321   +
3272322   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
3272323   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
3272324   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
3272325   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3272326   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3272327   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272328   +end;
MPRINT(EM_DIAGRAM):   end;
3272329   +else do;
MPRINT(EM_DIAGRAM):   else do;
3272330   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3272331   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
3272332   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3272333   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3272334   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
3272335   +   end;
MPRINT(EM_DIAGRAM):   end;
3272336   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3272337   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
3272338   +   end;
MPRINT(EM_DIAGRAM):   end;
3272339   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3272340   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3272341   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3272342   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272343   +   end;
MPRINT(EM_DIAGRAM):   end;
3272344   +end;
MPRINT(EM_DIAGRAM):   end;
3272345   +
3272346   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
3272347   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
3272348   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
3272349   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3272350   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3272351   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272352   +end;
MPRINT(EM_DIAGRAM):   end;
3272353   +else do;
MPRINT(EM_DIAGRAM):   else do;
3272354   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3272355   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
3272356   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3272357   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3272358   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
3272359   +   end;
MPRINT(EM_DIAGRAM):   end;
3272360   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3272361   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
3272362   +   end;
MPRINT(EM_DIAGRAM):   end;
3272363   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3272364   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3272365   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3272366   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272367   +   end;
MPRINT(EM_DIAGRAM):   end;
3272368   +end;
MPRINT(EM_DIAGRAM):   end;
3272369   +
3272370   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
3272371   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
3272372   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
3272373   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3272374   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3272375   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272376   +end;
MPRINT(EM_DIAGRAM):   end;
3272377   +else do;
MPRINT(EM_DIAGRAM):   else do;
3272378   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3272379   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
3272380   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3272381   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3272382   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
3272383   +   end;
MPRINT(EM_DIAGRAM):   end;
3272384   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3272385   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
3272386   +   end;
MPRINT(EM_DIAGRAM):   end;
3272387   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3272388   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3272389   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3272390   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272391   +   end;
MPRINT(EM_DIAGRAM):   end;
3272392   +end;
MPRINT(EM_DIAGRAM):   end;
3272393   +
3272394   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
3272395   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
3272396   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
3272397   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3272398   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3272399   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272400   +end;
MPRINT(EM_DIAGRAM):   end;
3272401   +else do;
MPRINT(EM_DIAGRAM):   else do;
3272402   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3272403   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
3272404   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3272405   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3272406   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
3272407   +   end;
MPRINT(EM_DIAGRAM):   end;
3272408   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3272409   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
3272410   +   end;
MPRINT(EM_DIAGRAM):   end;
3272411   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3272412   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3272413   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3272414   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272415   +   end;
MPRINT(EM_DIAGRAM):   end;
3272416   +end;
MPRINT(EM_DIAGRAM):   end;
3272417   +
3272418   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
3272419   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
3272420   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
3272421   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3272422   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3272423   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272424   +end;
MPRINT(EM_DIAGRAM):   end;
3272425   +else do;
MPRINT(EM_DIAGRAM):   else do;
3272426   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3272427   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
3272428   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3272429   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3272430   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
3272431   +   end;
MPRINT(EM_DIAGRAM):   end;
3272432   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3272433   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
3272434   +   end;
MPRINT(EM_DIAGRAM):   end;
3272435   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3272436   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3272437   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3272438   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272439   +   end;
MPRINT(EM_DIAGRAM):   end;
3272440   +end;
MPRINT(EM_DIAGRAM):   end;
3272441   +
3272442   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
3272443   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
3272444   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
3272445   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3272446   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3272447   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272448   +end;
MPRINT(EM_DIAGRAM):   end;
3272449   +else do;
MPRINT(EM_DIAGRAM):   else do;
3272450   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3272451   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
3272452   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3272453   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3272454   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
3272455   +   end;
MPRINT(EM_DIAGRAM):   end;
3272456   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3272457   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
3272458   +   end;
MPRINT(EM_DIAGRAM):   end;
3272459   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3272460   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3272461   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3272462   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272463   +   end;
MPRINT(EM_DIAGRAM):   end;
3272464   +end;
MPRINT(EM_DIAGRAM):   end;
3272465   +
3272466   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
3272467   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
3272468   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
3272469   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3272470   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3272471   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272472   +end;
MPRINT(EM_DIAGRAM):   end;
3272473   +else do;
MPRINT(EM_DIAGRAM):   else do;
3272474   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3272475   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
3272476   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3272477   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
3272478   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
3272479   +   end;
MPRINT(EM_DIAGRAM):   end;
3272480   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
3272481   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
3272482   +   end;
MPRINT(EM_DIAGRAM):   end;
3272483   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3272484   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3272485   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3272486   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272487   +   end;
MPRINT(EM_DIAGRAM):   end;
3272488   +end;
MPRINT(EM_DIAGRAM):   end;
3272489   +
3272490   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
3272491   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
3272492   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3272493   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
3272494   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
3272495   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
3272496   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
3272497   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
3272498   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3272499   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3272500   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3272501   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3272502   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3272503   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272504   +end;
MPRINT(EM_DIAGRAM):   end;
3272505   +else do;
MPRINT(EM_DIAGRAM):   else do;
3272506   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
3272507   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
3272508   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3272509   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
3272510   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
3272511   +   end;
MPRINT(EM_DIAGRAM):   end;
3272512   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
3272513   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
3272514   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
3272515   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
3272516   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
3272517   +   end;
MPRINT(EM_DIAGRAM):   end;
3272518   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
3272519   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
3272520   +   end;
MPRINT(EM_DIAGRAM):   end;
3272521   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
3272522   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
3272523   +   end;
MPRINT(EM_DIAGRAM):   end;
3272524   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
3272525   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
3272526   +   end;
MPRINT(EM_DIAGRAM):   end;
3272527   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3272528   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3272529   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3272530   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3272531   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3272532   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3272533   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272534   +   end;
MPRINT(EM_DIAGRAM):   end;
3272535   +end;
MPRINT(EM_DIAGRAM):   end;
3272536   +
3272537   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3272538   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3272539   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3272540   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3272541   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3272542   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3272543   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3272544   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3272545   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3272546   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3272547   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3272548   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3272549   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3272550   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3272551   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272552   +end;
MPRINT(EM_DIAGRAM):   end;
3272553   +else do;
MPRINT(EM_DIAGRAM):   else do;
3272554   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3272555   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3272556   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3272557   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3272558   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3272559   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3272560   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3272561   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3272562   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3272563   +         end;
MPRINT(EM_DIAGRAM):   end;
3272564   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3272565   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3272566   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3272567   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3272568   +            end;
MPRINT(EM_DIAGRAM):   end;
3272569   +         end;
MPRINT(EM_DIAGRAM):   end;
3272570   +      end;
MPRINT(EM_DIAGRAM):   end;
3272571   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3272572   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3272573   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3272574   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3272575   +         end;
MPRINT(EM_DIAGRAM):   end;
3272576   +      end;
MPRINT(EM_DIAGRAM):   end;
3272577   +   end;
MPRINT(EM_DIAGRAM):   end;
3272578   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3272579   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3272580   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3272581   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3272582   +      end;
MPRINT(EM_DIAGRAM):   end;
3272583   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3272584   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3272585   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3272586   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3272587   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3272588   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3272589   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3272590   +         end;
MPRINT(EM_DIAGRAM):   end;
3272591   +      end;
MPRINT(EM_DIAGRAM):   end;
3272592   +   end;
MPRINT(EM_DIAGRAM):   end;
3272593   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3272594   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3272595   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3272596   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3272597   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3272598   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3272599   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272600   +   end;
MPRINT(EM_DIAGRAM):   end;
3272601   +end;
MPRINT(EM_DIAGRAM):   end;
3272602   +
3272603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272604   +*** Checking missing input Interval
3272605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3272606   +
3272607   +IF NMISS(
3272608   +   AcceptedCmpTotal ,
3272609   +   Age ,
3272610   +   Frq ,
3272611   +   Income ,
3272612   +   Kidhome ,
3272613   +   MntFishProducts ,
3272614   +   MntFruits ,
3272615   +   MntGoldProds ,
3272616   +   MntSweetProducts ,
3272617   +   MonthsAsCustomer ,
3272618   +   NumDealsPurchases ,
3272619   +   NumWebVisitsMonth ,
3272620   +   RFMstat ,
3272621   +   RMntFrq ,
3272622   +   Recency ,
3272623   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
3272624   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3272625   +
3272626   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3272627   +END;
MPRINT(EM_DIAGRAM):   END;
3272628   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272629   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
3272630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272631   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3272632   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3272633   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3272634   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3272635   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3272636   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3272637   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3272638   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3272639   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3272640   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3272641   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3272642   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
3272643   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3272644   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3272645   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3272646   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3272647   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3272648   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3272649   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3272650   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3272651   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3272652   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3272653   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3272654   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3272655   +END;
MPRINT(EM_DIAGRAM):   END;
3272656   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3272657   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
3272658   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3272659   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3272660   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
3272661   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3272662   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
3272663   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3272664   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
3272665   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3272666   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
3272667   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3272668   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
3272669   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3272670   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3272671   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
3272672   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
3272673   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3272674   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
3272675   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3272676   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
3272677   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
3272678   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3272679   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3272680   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
3272681   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3272682   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3272683   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3272684   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3272685   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3272686   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
3272687   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3272688   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3272689   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
3272690   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3272691   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
3272692   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3272693   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
3272694   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3272695   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
3272696   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3272697   +END;
MPRINT(EM_DIAGRAM):   END;
3272698   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272699   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
3272700   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272702   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
3272703   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272705   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
3272706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272707   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3272708   +   H1x1_1  =    -0.16752750958623 * S_AcceptedCmpTotal
3272709   +          +     0.06403041073662 * S_Age  +     0.37887435203175 * S_Frq
3272710   +          +    -0.06488471849106 * S_Income  +     0.02927960705587 *
3272711   +        S_Kidhome  +     -0.0153182718754 * S_MntFishProducts
3272712   +          +      0.0592803373375 * S_MntFruits  +     -0.1059983645705 *
3272713   +        S_MntGoldProds  +     0.08839399409229 * S_MntSweetProducts
3272714   +          +    -0.01191239814261 * S_MonthsAsCustomer
3272715   +          +      -0.307259983666 * S_NumDealsPurchases
3272716   +          +    -0.23972300101674 * S_NumWebVisitsMonth
3272717   +          +    -0.30556185778423 * S_RFMstat  +    -0.08105827641093 *
3272718   +        S_RMntFrq  +     0.32671320165482 * S_Recency
3272719   +          +      0.0130097267127 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.16752750958623 * S_AcceptedCmpTotal + 0.06403041073662 * 
S_Age + 0.37887435203175 * S_Frq + -0.06488471849106 * S_Income + 0.02927960705587 * S_Kidhome 
+ -0.0153182718754 * S_MntFishProducts + 0.0592803373375 * S_MntFruits + -0.1059983645705 * 
S_MntGoldProds + 0.08839399409229 * S_MntSweetProducts + -0.01191239814261 * 
S_MonthsAsCustomer + -0.307259983666 * S_NumDealsPurchases + -0.23972300101674 * 
S_NumWebVisitsMonth + -0.30556185778423 * S_RFMstat + -0.08105827641093 * S_RMntFrq + 
0.32671320165482 * S_Recency + 0.0130097267127 * S_Teenhome ;
3272720   +   H1x1_1  = H1x1_1  +     0.04957160124382 * AcceptedCmp10
3272721   +          +    -0.05376340328215 * AcceptedCmp20  +     0.11970832567932 *
3272722   +        AcceptedCmp30  +    -0.20257152181059 * AcceptedCmp40
3272723   +          +     0.19055537475137 * AcceptedCmp50  +    -0.16409517539938 *
3272724   +        Complain0  +    -0.05757658272561 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04957160124382 * AcceptedCmp10 + -0.05376340328215 * 
AcceptedCmp20 + 0.11970832567932 * AcceptedCmp30 + -0.20257152181059 * AcceptedCmp40 + 
0.19055537475137 * AcceptedCmp50 + -0.16409517539938 * Complain0 + -0.05757658272561 * 
HigherEducationBinary0 ;
3272725   +   H1x1_1  = H1x1_1  +     0.14272714853962 * Education2n_Cycle
3272726   +          +     0.17151280502053 * EducationBasic  +    -0.11549721715363 *
3272727   +        EducationGraduation  +    -0.14651231631393 * EducationMaster
3272728   +          +     -0.0692762335753 * Marital_StatusDivorced
3272729   +          +     0.02472293911071 * Marital_StatusMarried
3272730   +          +     0.04038393550437 * Marital_StatusSingle
3272731   +          +     0.04243299259503 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14272714853962 * Education2n_Cycle + 
0.17151280502053 * EducationBasic + -0.11549721715363 * EducationGraduation + 
-0.14651231631393 * EducationMaster + -0.0692762335753 * Marital_StatusDivorced + 
0.02472293911071 * Marital_StatusMarried + 0.04038393550437 * Marital_StatusSingle + 
0.04243299259503 * Marital_StatusTogether ;
3272732   +   H1x1_1  =     0.23154562419649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.23154562419649 + H1x1_1 ;
3272733   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
3272734   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
3272735   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
3272736   +END;
MPRINT(EM_DIAGRAM):   END;
3272737   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3272738   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
3272739   +END;
MPRINT(EM_DIAGRAM):   END;
3272740   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272741   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
3272742   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272743   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3272744   +   H1x2_1  =    -0.31529057180483 * S_AcceptedCmpTotal
3272745   +          +      0.2513504223928 * S_Age  +     1.31369907469092 * S_Frq
3272746   +          +     1.18208440103935 * S_Income  +    -0.63035218994975 *
3272747   +        S_Kidhome  +     0.06794324522555 * S_MntFishProducts
3272748   +          +    -0.02910005341604 * S_MntFruits  +     -0.2809281327009 *
3272749   +        S_MntGoldProds  +     0.03300083755879 * S_MntSweetProducts
3272750   +          +     0.14524334187971 * S_MonthsAsCustomer
3272751   +          +    -0.58464031025411 * S_NumDealsPurchases
3272752   +          +    -0.10768856151333 * S_NumWebVisitsMonth
3272753   +          +    -0.54602308682658 * S_RFMstat  +    -0.07771897681693 *
3272754   +        S_RMntFrq  +    -0.04430281297191 * S_Recency
3272755   +          +    -0.75550113104618 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.31529057180483 * S_AcceptedCmpTotal + 0.2513504223928 * 
S_Age + 1.31369907469092 * S_Frq + 1.18208440103935 * S_Income + -0.63035218994975 * S_Kidhome 
+ 0.06794324522555 * S_MntFishProducts + -0.02910005341604 * S_MntFruits + -0.2809281327009 * 
S_MntGoldProds + 0.03300083755879 * S_MntSweetProducts + 0.14524334187971 * S_MonthsAsCustomer 
+ -0.58464031025411 * S_NumDealsPurchases + -0.10768856151333 * S_NumWebVisitsMonth + 
-0.54602308682658 * S_RFMstat + -0.07771897681693 * S_RMntFrq + -0.04430281297191 * S_Recency 
+ -0.75550113104618 * S_Teenhome ;
3272756   +   H1x2_1  = H1x2_1  +    -0.32989699322067 * AcceptedCmp10
3272757   +          +    -0.49194930861593 * AcceptedCmp20  +    -0.29685081372508 *
3272758   +        AcceptedCmp30  +    -1.09268493953815 * AcceptedCmp40
3272759   +          +     0.19253596686854 * AcceptedCmp50  +    -0.52740837757185 *
3272760   +        Complain0  +     0.92701971187717 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.32989699322067 * AcceptedCmp10 + -0.49194930861593 
* AcceptedCmp20 + -0.29685081372508 * AcceptedCmp30 + -1.09268493953815 * AcceptedCmp40 + 
0.19253596686854 * AcceptedCmp50 + -0.52740837757185 * Complain0 + 0.92701971187717 * 
HigherEducationBinary0 ;
3272761   +   H1x2_1  = H1x2_1  +    -0.67905848838903 * Education2n_Cycle
3272762   +          +     0.18443463984889 * EducationBasic  +     0.41283576419495 *
3272763   +        EducationGraduation  +    -0.37768027773032 * EducationMaster
3272764   +          +     0.07007941100006 * Marital_StatusDivorced
3272765   +          +     -0.7850554528889 * Marital_StatusMarried
3272766   +          +     1.17661634109847 * Marital_StatusSingle
3272767   +          +    -0.55785837414708 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.67905848838903 * Education2n_Cycle + 
0.18443463984889 * EducationBasic + 0.41283576419495 * EducationGraduation + -0.37768027773032 
* EducationMaster + 0.07007941100006 * Marital_StatusDivorced + -0.7850554528889 * 
Marital_StatusMarried + 1.17661634109847 * Marital_StatusSingle + -0.55785837414708 * 
Marital_StatusTogether ;
3272768   +   H1x2_1  =    -0.47254621873132 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.47254621873132 + H1x2_1 ;
3272769   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
3272770   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
3272771   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
3272772   +END;
MPRINT(EM_DIAGRAM):   END;
3272773   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3272774   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
3272775   +END;
MPRINT(EM_DIAGRAM):   END;
3272776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272777   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
3272778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272779   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3272780   +   H1x3_1  =    -1.82667161026613 * S_AcceptedCmpTotal
3272781   +          +    -1.37253292193256 * S_Age  +    -2.75518607832551 * S_Frq
3272782   +          +    -0.79839250431153 * S_Income  +     1.11821147878382 *
3272783   +        S_Kidhome  +    -0.44513342757321 * S_MntFishProducts
3272784   +          +     0.87700219878037 * S_MntFruits  +    -0.11016064598169 *
3272785   +        S_MntGoldProds  +    -0.01609032798943 * S_MntSweetProducts
3272786   +          +    -2.17154324602167 * S_MonthsAsCustomer
3272787   +          +    -1.39930460918007 * S_NumDealsPurchases
3272788   +          +    -0.16044576482901 * S_NumWebVisitsMonth
3272789   +          +    -0.41327898874555 * S_RFMstat  +     0.52147960287475 *
3272790   +        S_RMntFrq  +    -0.73252715992964 * S_Recency
3272791   +          +    -0.30335608719088 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.82667161026613 * S_AcceptedCmpTotal + -1.37253292193256 * 
S_Age + -2.75518607832551 * S_Frq + -0.79839250431153 * S_Income + 1.11821147878382 * 
S_Kidhome + -0.44513342757321 * S_MntFishProducts + 0.87700219878037 * S_MntFruits + 
-0.11016064598169 * S_MntGoldProds + -0.01609032798943 * S_MntSweetProducts + 
-2.17154324602167 * S_MonthsAsCustomer + -1.39930460918007 * S_NumDealsPurchases + 
-0.16044576482901 * S_NumWebVisitsMonth + -0.41327898874555 * S_RFMstat + 0.52147960287475 * 
S_RMntFrq + -0.73252715992964 * S_Recency + -0.30335608719088 * S_Teenhome ;
3272792   +   H1x3_1  = H1x3_1  +     -1.0325678563582 * AcceptedCmp10
3272793   +          +     0.25951825842624 * AcceptedCmp20  +    -0.75269528776274 *
3272794   +        AcceptedCmp30  +    -1.09208637335913 * AcceptedCmp40
3272795   +          +     0.94597602278581 * AcceptedCmp50  +     0.73782287956403 *
3272796   +        Complain0  +     0.48147273740028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.0325678563582 * AcceptedCmp10 + 0.25951825842624 * 
AcceptedCmp20 + -0.75269528776274 * AcceptedCmp30 + -1.09208637335913 * AcceptedCmp40 + 
0.94597602278581 * AcceptedCmp50 + 0.73782287956403 * Complain0 + 0.48147273740028 * 
HigherEducationBinary0 ;
3272797   +   H1x3_1  = H1x3_1  +     0.75114718211842 * Education2n_Cycle
3272798   +          +     0.08709759722742 * EducationBasic  +     0.25555397082161 *
3272799   +        EducationGraduation  +    -0.35403398893388 * EducationMaster
3272800   +          +     0.83271778325587 * Marital_StatusDivorced
3272801   +          +     0.79137899511518 * Marital_StatusMarried
3272802   +          +    -0.51320080030576 * Marital_StatusSingle
3272803   +          +    -0.48315893978838 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.75114718211842 * Education2n_Cycle + 
0.08709759722742 * EducationBasic + 0.25555397082161 * EducationGraduation + -0.35403398893388 
* EducationMaster + 0.83271778325587 * Marital_StatusDivorced + 0.79137899511518 * 
Marital_StatusMarried + -0.51320080030576 * Marital_StatusSingle + -0.48315893978838 * 
Marital_StatusTogether ;
3272804   +   H1x3_1  =     1.23763256110337 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.23763256110337 + H1x3_1 ;
3272805   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
3272806   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
3272807   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
3272808   +END;
MPRINT(EM_DIAGRAM):   END;
3272809   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3272810   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
3272811   +END;
MPRINT(EM_DIAGRAM):   END;
3272812   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272813   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
3272814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272815   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3272816   +   H2x1_1  =     4.77126766160389 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 4.77126766160389 * H1x1_1 ;
3272817   +   H2x1_1  = H2x1_1  +       -2.06136482688 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.06136482688 * H1x2_1 ;
3272818   +   H2x1_1  = H2x1_1  +    -0.66088716356598 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.66088716356598 * H1x3_1 ;
3272819   +   H2x1_1  =    -1.42497113284005 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.42497113284005 + H2x1_1 ;
3272820   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
3272821   +END;
MPRINT(EM_DIAGRAM):   END;
3272822   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3272823   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
3272824   +END;
MPRINT(EM_DIAGRAM):   END;
3272825   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272826   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
3272827   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272828   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3272829   +   H2x2_1  =     1.50159856860224 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.50159856860224 * H1x1_1 ;
3272830   +   H2x2_1  = H2x2_1  +    -1.21325055599412 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.21325055599412 * H1x2_1 ;
3272831   +   H2x2_1  = H2x2_1  +      0.4926229652129 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.4926229652129 * H1x3_1 ;
3272832   +   H2x2_1  =    -0.30658924042786 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.30658924042786 + H2x2_1 ;
3272833   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
3272834   +END;
MPRINT(EM_DIAGRAM):   END;
3272835   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3272836   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
3272837   +END;
MPRINT(EM_DIAGRAM):   END;
3272838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272839   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
3272840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272841   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3272842   +   H3x1_1  =     4.83751882303338 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.83751882303338 * H2x1_1 ;
3272843   +   H3x1_1  = H3x1_1  +     2.12677516906018 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.12677516906018 * H2x2_1 ;
3272844   +   H3x1_1  =     0.02705273717187 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.02705273717187 + H3x1_1 ;
3272845   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
3272846   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
3272847   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
3272848   +END;
MPRINT(EM_DIAGRAM):   END;
3272849   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3272850   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
3272851   +END;
MPRINT(EM_DIAGRAM):   END;
3272852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272853   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3272854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272855   +
3272856   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3272857   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3272858   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3272859   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3272860   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3272861   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3272862   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3272863   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3272864   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3272865   +end;
MPRINT(EM_DIAGRAM):   end;
3272866   +else do;
MPRINT(EM_DIAGRAM):   else do;
3272867   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3272868   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3272869   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3272870   +   end;
MPRINT(EM_DIAGRAM):   end;
3272871   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3272872   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3272873   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3272874   +   end;
MPRINT(EM_DIAGRAM):   end;
3272875   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3272876   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3272877   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3272878   +   end;
MPRINT(EM_DIAGRAM):   end;
3272879   +end;
MPRINT(EM_DIAGRAM):   end;
3272880   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3272881   +   P_DepVar1  =     -6.6798185012723 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.6798185012723 * H3x1_1 ;
3272882   +   P_DepVar1  =     2.10208029317576 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.10208029317576 + P_DepVar1 ;
3272883   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3272884   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3272885   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3272886   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3272887   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3272888   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3272889   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3272890   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3272891   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3272892   +END;
MPRINT(EM_DIAGRAM):   END;
3272893   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3272894   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3272895   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3272896   +END;
MPRINT(EM_DIAGRAM):   END;
3272897   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3272898   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
3272899   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
3272900   +END;
MPRINT(EM_DIAGRAM):   END;
3272901   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3272902   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3272903   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3272904   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3272905   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3272906   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3272907   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3272908   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272909   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3272910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3272911   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3272912   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3272913   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3272914   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3272915   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3272916   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3272917   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3272918   +END;
MPRINT(EM_DIAGRAM):   END;
3272919   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3272920   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3272921   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3272922   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3272923    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL37_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
3272924    quit;
3272925    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3272926    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3272927    * AutoNeural37: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural37: Computing metadata for TRAIN data;
3272928    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL37_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural37_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural37_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural37_TRAIN out=WORK.M1TOOU0S 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TOOU0S;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TOOU0S(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TOOU0S;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TOOU0S;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1H60T7Q NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1H60T7Q;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1H60T7Q;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3MCXOFQ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1H60T7Q;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1H60T7Q;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1H60T7Q;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1H60T7Q;
MPRINT(EMADVISECOLUMNS):   set WORK.M1H60T7Q;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural37_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural37";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural37";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural37";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural37";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural37";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural37";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural37";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural37";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural37";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural37";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural37: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3273240    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3273241    set EMWS8.AutoNeural37_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural37_EMINFO;
3273242    where DATA='AutoNeural37' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural37' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
3273243    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL37_EMINFO.
      WHERE (DATA='AutoNeural37') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3273244    data EMWS8.AutoNeural37_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural37_EMINFO;
3273245    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3273246    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3273247    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL37_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
3273251    run;
3273252    data EMWS8.AutoNeural37_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural37_EMINFO;
3273253    set EMWS8.AutoNeural37_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural37_EMINFO WORK.MODELTEMP_INFO;
3273254    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL37_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL37_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3273255    proc sort data = EMWS8.AutoNeural37_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural37_EMINFO NOTHREADS;
3273256    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3273257    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL37_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL37_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3273258    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3273259    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3273260    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3273261    proc sort data = EMWS8.AutoNeural37_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural37_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3273262    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3273263    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL37_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3273264    data EMWS8.AutoNeural37_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural37_EMINFO;
3273265    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3273266    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3273267    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL37_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3273268    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3273269    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3273270    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3273271    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

NOTE: View EMWS8.AUTONEURAL37_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.AUTONEURAL37_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
