*------------------------------------------------------------*
User:                Lukas Fahr
Date:                19. April 2016
Time:                11.18 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.18 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                19. April 2016
Time:                11.18 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3M5AJCP
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3M5AJCP new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.18 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.18 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[176803] MAX=1 EXCEEDMAXVALUE='' )[176807] )[176801]
VALIDCHOICES=(CHOICE1='Y' )[176805] )[177089] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[176811]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[176815] )[176813] )[176809] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[176819]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[176825] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[176823] )[176821] )[176817] )[176799]
1231428    proc freq data=EMWS8.Ensmbl7_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl7_VariableSet noprint;
1231429    table ROLE*LEVEL/out=WORK.Ensmbl7META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl7META;
1231430    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.ENSMBL7_VARIABLESET.
NOTE: The data set WORK.ENSMBL7META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1231431    proc print data=WORK.Ensmbl7META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl7META label noobs;
1231432    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1231433    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1231433  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1231433  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1231434    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1231435    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1231436    run;
 
NOTE: There were 6 observations read from the data set WORK.ENSMBL7META.
NOTE: The PROCEDURE PRINT printed page 968.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1231437    title10;
MPRINT(EM_DIAGRAM):   title10;
1231438    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Reg3_TRAIN EMWS8.Reg3_TRAIN
EMWS8.Reg3_TRAIN EMWS8.Reg3_TRAIN EMWS8 Reg3_TRAIN
EMWS8.Reg3_TRAIN EMWS8.Reg3_TRAIN
EMWS8.Reg3_TRAIN EMWS8.Reg3_TRAIN EMWS8 Reg3_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Reg3_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Reg3_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1231467    data WORK.Ensmbl7_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl7_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1231468    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1231469    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1231469  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1231469  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1231470       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1231470  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1231470  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1231471    set EMWS8.REG3_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.REG3_DEPVAR_DM( where=(_TYPE_="TARGET"));
1231472    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1231473    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1231474    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1231475    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1231476    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1231477    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1231478    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1231479    end;
MPRINT(EM_DIAGRAM):   end;
1231480    output;
MPRINT(EM_DIAGRAM):   output;
1231481    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.REG3_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL7_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1231482    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1231483    proc print data=WORK.Ensmbl7_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl7_EVENT noobs label;
1231484    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1231485    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1231486    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1231487    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL7_EVENT.
NOTE: The PROCEDURE PRINT printed page 969.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1231488    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1231489    proc print data = EMWS8.Reg3_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Reg3_DepVar_DM noobs label;
1231490    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1231491    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1231492    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1231492  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1231492  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1231493    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1231494    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1231495    run;
 
NOTE: There were 7 observations read from the data set EMWS8.REG3_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 970.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1231496    title10;
MPRINT(EM_DIAGRAM):   title10;
1231497    %let groupid =;
1231498    %let endGroupid =;
1231499    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1231500    set EMWS8.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg3_EMINFO;
1231501    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1231501  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1231502    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1231503    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1231504    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1231505    %let groupid =;
1231506    %let endGroupid =;
1231507    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1231508    set EMWS8.Neural18_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural18_EMINFO;
1231509    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1231509  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1231510    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1231511    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1231512    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL18_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1231513    %let groupid =;
1231514    %let endGroupid =;
1231515    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1231516    set EMWS8.Neural22_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_EMINFO;
1231517    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1231517  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1231518    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1231519    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1231520    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL22_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1231521    %let groupid =;
1231522    %let endGroupid =;
1231523    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1231524    set EMWS8.Neural21_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural21_EMINFO;
1231525    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1231525  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1231526    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1231527    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1231528    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL21_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1231529    %let groupid =;
1231530    %let endGroupid =;
1231531    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1231532    set EMWS8.Reg7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_EMINFO;
1231533    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1231533  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1231534    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1231535    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1231536    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG7_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1231537    data WORK.Ensmbl7;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl7;
1231538    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
1231539    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
1231539  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
1231540    nodeid="REG3";
MPRINT(EM_DIAGRAM):   nodeid="REG3";
1231541    model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
1231542    output;
MPRINT(EM_DIAGRAM):   output;
1231543    nodeid="NEURAL18";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL18";
1231544    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1231545    output;
MPRINT(EM_DIAGRAM):   output;
1231546    nodeid="NEURAL22";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL22";
1231547    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1231548    output;
MPRINT(EM_DIAGRAM):   output;
1231549    nodeid="NEURAL21";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL21";
1231550    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1231551    output;
MPRINT(EM_DIAGRAM):   output;
1231552    nodeid="REG7";
MPRINT(EM_DIAGRAM):   nodeid="REG7";
1231553    model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
1231554    output;
MPRINT(EM_DIAGRAM):   output;
1231555    ;
MPRINT(EM_DIAGRAM):   ;
1231556    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL7 has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1231557    title;
MPRINT(EM_DIAGRAM):   title;
1231558    proc print data=WORK.Ensmbl7 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl7 label noobs;
1231559    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
1231560    title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
1231561    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL7.
NOTE: The PROCEDURE PRINT printed page 971.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1231562    title9;
MPRINT(EM_DIAGRAM):   title9;
1231563    title10;
MPRINT(EM_DIAGRAM):   title10;
1231564    data WORK.M3FJ_0VV;
MPRINT(EM_DIAGRAM):    data WORK.M3FJ_0VV;
1231565    set WORK.M3FJ_0VV;
MPRINT(EM_DIAGRAM):   set WORK.M3FJ_0VV;
1231566    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
1231567    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M3FJ_0VV.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M3FJ_0VV has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1231568    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1231569    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1231570    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1231571    %macro DMDBClass;
1231572        DepVar(DESC)
1231573    %mend DMDBClass;
1231574    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1231575    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1231576    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1231577    %macro DMDBVar;
1231578
1231579    %mend DMDBVar;
1231580    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231581    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1231582    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231583    proc dmdb batch data=EMWS8.Reg3_TRAIN
1231584    dmdbcat=WORK.EM_DMDB
1231585    maxlevel = 513
1231586    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Reg3_TRAIN dmdbcat=WORK.EM_DMDB maxlevel =
513 ;
MPRINT(EM_DIAGRAM):   class
1231587    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
1231588    target
1231589    DepVar
1231590    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1231591    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.REG3_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.REG3_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1231592    quit;
1231593    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.18 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                11.18 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O29SKDI6
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O29SKDI6 new;
MPRINT(EM_DIAGRAM):   run;
1231695    filename emflow
1231695  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring REG3_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231696    *------------------------------------------------------------*;
1231697    * Ensmbl7: Scoring REG3_TRAIN data;
1231698    *------------------------------------------------------------*;
1231699    data EMWS8.Ensmbl7_TRAIN
1231700    / view=EMWS8.Ensmbl7_TRAIN
1231701    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_TRAIN / view=EMWS8.Ensmbl7_TRAIN ;
1231702    set EMWS8.Reg3_TRAIN
1231703    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg3_TRAIN ;
1231704    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMFLOWSCORE.sas.
1231705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231706   +* Ensmbl7: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Combine model for DepVar;
1231707   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231708   +* Ensmbl7: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring Code of model 1 of 5;
1231709   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231710   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231711   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1231712   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1231713   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1231714   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231715   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231716   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1231717   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1231718   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1231719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231720   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231721   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1231722   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1231723   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1231724   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231725   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231726   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1231727   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1231728   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1231729   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231730   +
1231731   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1231732   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1231732  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1231733   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1231734   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1231735   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1231736   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1231737   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1231738   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231739   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1231740   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1231741   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1231742   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231743   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231744   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1231745   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231746   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1231747   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1231748   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1231749   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231750   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1231751   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1231752   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1231753   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231754   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231755   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1231756   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1231757   +* NODE: BINNING;
MPRINT(EM_DIAGRAM):   * NODE: BINNING;
1231758   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231759   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1231760   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1231761   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1231762   +
1231763   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231764   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1231765   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231766   +LABEL GRP_AcceptedCmp5 =
1231767   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1231768   +
1231769   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1231770   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1231771   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1231772   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1231773   +end;
MPRINT(EM_DIAGRAM):   end;
1231774   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1231775   +if (_UFORMAT eq '0'
1231776   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1231777   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1231778   +end;
MPRINT(EM_DIAGRAM):   end;
1231779   +else
1231780   +if (_UFORMAT eq '1'
1231781   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1231782   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1231783   +end;
MPRINT(EM_DIAGRAM):   end;
1231784   +else do;
MPRINT(EM_DIAGRAM):   else do;
1231785   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1231786   +end;
MPRINT(EM_DIAGRAM):   end;
1231787   +end;
MPRINT(EM_DIAGRAM):   end;
1231788   +
1231789   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231790   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1231791   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231792   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1231793   +
1231794   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1231795   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1231796   +end;
MPRINT(EM_DIAGRAM):   end;
1231797   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1231798   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1231799   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1231800   +end;
MPRINT(EM_DIAGRAM):   end;
1231801   +else
1231802   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1231803   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1231804   +end;
MPRINT(EM_DIAGRAM):   end;
1231805   +else
1231806   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1231807   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1231808   +end;
MPRINT(EM_DIAGRAM):   end;
1231809   +else
1231810   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1231811   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1231812   +end;
MPRINT(EM_DIAGRAM):   end;
1231813   +end;
MPRINT(EM_DIAGRAM):   end;
1231814   +
1231815   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231816   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1231817   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231818   +LABEL GRP_Income =
1231819   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1231820   +
1231821   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1231822   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1231823   +end;
MPRINT(EM_DIAGRAM):   end;
1231824   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1231825   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1231826   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1231827   +end;
MPRINT(EM_DIAGRAM):   end;
1231828   +else
1231829   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1231830   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1231831   +end;
MPRINT(EM_DIAGRAM):   end;
1231832   +else
1231833   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1231834   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1231835   +end;
MPRINT(EM_DIAGRAM):   end;
1231836   +else
1231837   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1231838   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1231839   +end;
MPRINT(EM_DIAGRAM):   end;
1231840   +end;
MPRINT(EM_DIAGRAM):   end;
1231841   +
1231842   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231843   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1231844   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231845   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1231846   +
1231847   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1231848   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1231849   +end;
MPRINT(EM_DIAGRAM):   end;
1231850   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1231851   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1231852   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1231853   +end;
MPRINT(EM_DIAGRAM):   end;
1231854   +else
1231855   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1231856   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1231857   +end;
MPRINT(EM_DIAGRAM):   end;
1231858   +else
1231859   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1231860   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1231861   +end;
MPRINT(EM_DIAGRAM):   end;
1231862   +else
1231863   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1231864   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1231865   +end;
MPRINT(EM_DIAGRAM):   end;
1231866   +end;
MPRINT(EM_DIAGRAM):   end;
1231867   +
1231868   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231869   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1231870   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231871   +LABEL GRP_MntFishProducts =
1231872   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1231873   +
1231874   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1231875   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1231876   +end;
MPRINT(EM_DIAGRAM):   end;
1231877   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1231878   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1231879   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1231880   +end;
MPRINT(EM_DIAGRAM):   end;
1231881   +else
1231882   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1231883   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1231884   +end;
MPRINT(EM_DIAGRAM):   end;
1231885   +else
1231886   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1231887   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1231888   +end;
MPRINT(EM_DIAGRAM):   end;
1231889   +else
1231890   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1231891   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1231892   +end;
MPRINT(EM_DIAGRAM):   end;
1231893   +end;
MPRINT(EM_DIAGRAM):   end;
1231894   +
1231895   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231896   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1231897   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231898   +LABEL GRP_MntGoldProds =
1231899   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1231900   +
1231901   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1231902   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1231903   +end;
MPRINT(EM_DIAGRAM):   end;
1231904   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1231905   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1231906   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1231907   +end;
MPRINT(EM_DIAGRAM):   end;
1231908   +else
1231909   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1231910   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1231911   +end;
MPRINT(EM_DIAGRAM):   end;
1231912   +else
1231913   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1231914   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1231915   +end;
MPRINT(EM_DIAGRAM):   end;
1231916   +else
1231917   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1231918   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1231919   +end;
MPRINT(EM_DIAGRAM):   end;
1231920   +end;
MPRINT(EM_DIAGRAM):   end;
1231921   +
1231922   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231923   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1231924   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231925   +LABEL GRP_MntMeatProducts =
1231926   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1231927   +
1231928   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1231929   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1231930   +end;
MPRINT(EM_DIAGRAM):   end;
1231931   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1231932   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1231933   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1231934   +end;
MPRINT(EM_DIAGRAM):   end;
1231935   +else
1231936   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1231937   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1231938   +end;
MPRINT(EM_DIAGRAM):   end;
1231939   +else
1231940   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1231941   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1231942   +end;
MPRINT(EM_DIAGRAM):   end;
1231943   +else
1231944   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1231945   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1231946   +end;
MPRINT(EM_DIAGRAM):   end;
1231947   +end;
MPRINT(EM_DIAGRAM):   end;
1231948   +
1231949   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231950   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1231951   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231952   +LABEL GRP_MntWines =
1231953   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1231954   +
1231955   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1231956   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1231957   +end;
MPRINT(EM_DIAGRAM):   end;
1231958   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1231959   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1231960   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1231961   +end;
MPRINT(EM_DIAGRAM):   end;
1231962   +else
1231963   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1231964   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1231965   +end;
MPRINT(EM_DIAGRAM):   end;
1231966   +else
1231967   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1231968   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1231969   +end;
MPRINT(EM_DIAGRAM):   end;
1231970   +else
1231971   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1231972   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1231973   +end;
MPRINT(EM_DIAGRAM):   end;
1231974   +end;
MPRINT(EM_DIAGRAM):   end;
1231975   +
1231976   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231977   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1231978   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1231979   +LABEL GRP_NumCatalogPurchases =
1231980   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1231981   +
1231982   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1231983   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1231984   +end;
MPRINT(EM_DIAGRAM):   end;
1231985   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1231986   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1231987   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1231988   +end;
MPRINT(EM_DIAGRAM):   end;
1231989   +else
1231990   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1231991   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1231992   +end;
MPRINT(EM_DIAGRAM):   end;
1231993   +else
1231994   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1231995   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1231996   +end;
MPRINT(EM_DIAGRAM):   end;
1231997   +else
1231998   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1231999   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1232000   +end;
MPRINT(EM_DIAGRAM):   end;
1232001   +end;
MPRINT(EM_DIAGRAM):   end;
1232002   +
1232003   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232004   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1232005   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232006   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1232007   +
1232008   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1232009   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1232010   +end;
MPRINT(EM_DIAGRAM):   end;
1232011   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1232012   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1232013   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1232014   +end;
MPRINT(EM_DIAGRAM):   end;
1232015   +else
1232016   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1232017   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1232018   +end;
MPRINT(EM_DIAGRAM):   end;
1232019   +else
1232020   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1232021   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1232022   +end;
MPRINT(EM_DIAGRAM):   end;
1232023   +else
1232024   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1232025   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1232026   +end;
MPRINT(EM_DIAGRAM):   end;
1232027   +end;
MPRINT(EM_DIAGRAM):   end;
1232028   +
1232029   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232030   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1232031   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232032   +LABEL GRP_NumWebPurchases =
1232033   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1232034   +
1232035   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1232036   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1232037   +end;
MPRINT(EM_DIAGRAM):   end;
1232038   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1232039   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1232040   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1232041   +end;
MPRINT(EM_DIAGRAM):   end;
1232042   +else
1232043   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1232044   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1232045   +end;
MPRINT(EM_DIAGRAM):   end;
1232046   +else
1232047   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1232048   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1232049   +end;
MPRINT(EM_DIAGRAM):   end;
1232050   +else
1232051   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1232052   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1232053   +end;
MPRINT(EM_DIAGRAM):   end;
1232054   +end;
MPRINT(EM_DIAGRAM):   end;
1232055   +
1232056   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232057   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1232058   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232059   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1232060   +
1232061   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1232062   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1232063   +end;
MPRINT(EM_DIAGRAM):   end;
1232064   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1232065   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1232066   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1232067   +end;
MPRINT(EM_DIAGRAM):   end;
1232068   +else
1232069   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1232070   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1232071   +end;
MPRINT(EM_DIAGRAM):   end;
1232072   +else
1232073   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1232074   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1232075   +end;
MPRINT(EM_DIAGRAM):   end;
1232076   +else
1232077   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1232078   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1232079   +end;
MPRINT(EM_DIAGRAM):   end;
1232080   +end;
MPRINT(EM_DIAGRAM):   end;
1232081   +
1232082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232083   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1232084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232085   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1232086   +
1232087   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1232088   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1232089   +end;
MPRINT(EM_DIAGRAM):   end;
1232090   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1232091   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1232092   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1232093   +end;
MPRINT(EM_DIAGRAM):   end;
1232094   +else
1232095   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1232096   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1232097   +end;
MPRINT(EM_DIAGRAM):   end;
1232098   +else
1232099   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1232100   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1232101   +end;
MPRINT(EM_DIAGRAM):   end;
1232102   +else
1232103   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1232104   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1232105   +end;
MPRINT(EM_DIAGRAM):   end;
1232106   +end;
MPRINT(EM_DIAGRAM):   end;
1232107   +
1232108   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232109   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1232110   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232111   +LABEL GRP_Recency =
1232112   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1232113   +
1232114   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1232115   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1232116   +end;
MPRINT(EM_DIAGRAM):   end;
1232117   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1232118   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1232119   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1232120   +end;
MPRINT(EM_DIAGRAM):   end;
1232121   +else
1232122   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1232123   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1232124   +end;
MPRINT(EM_DIAGRAM):   end;
1232125   +else
1232126   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1232127   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1232128   +end;
MPRINT(EM_DIAGRAM):   end;
1232129   +else
1232130   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1232131   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1232132   +end;
MPRINT(EM_DIAGRAM):   end;
1232133   +end;
MPRINT(EM_DIAGRAM):   end;
1232134   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232135   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1232136   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1232137   +* NODE: Reg3;
MPRINT(EM_DIAGRAM):   * NODE: Reg3;
1232138   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232139   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1232140   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1232141   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1232142   +
1232143   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1232144   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1232145   +
1232146   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1232147   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1232148   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1232149   +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
1232150   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1232151   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1232152   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1232153   +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
1232154   +
1232155   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1232156   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1232157   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1232158   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1232159   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1232160   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1232161   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1232162   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1232163   +end;
MPRINT(EM_DIAGRAM):   end;
1232164   +else do;
MPRINT(EM_DIAGRAM):   else do;
1232165   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1232166   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1232167   +   end;
MPRINT(EM_DIAGRAM):   end;
1232168   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1232169   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1232170   +   end;
MPRINT(EM_DIAGRAM):   end;
1232171   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1232172   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1232173   +   end;
MPRINT(EM_DIAGRAM):   end;
1232174   +end;
MPRINT(EM_DIAGRAM):   end;
1232175   +
1232176   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1232177   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1232178   +
1232179   +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
1232180   +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
1232181   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1232182   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232183   +end;
MPRINT(EM_DIAGRAM):   end;
1232184   +
1232185   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1232186   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1232187   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1232188   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1232189   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1232190   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232191   +end;
MPRINT(EM_DIAGRAM):   end;
1232192   +else do;
MPRINT(EM_DIAGRAM):   else do;
1232193   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1232194   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1232195   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1232196   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1232197   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1232198   +   end;
MPRINT(EM_DIAGRAM):   end;
1232199   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1232200   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1232201   +   end;
MPRINT(EM_DIAGRAM):   end;
1232202   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1232203   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1232204   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1232205   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232206   +   end;
MPRINT(EM_DIAGRAM):   end;
1232207   +end;
MPRINT(EM_DIAGRAM):   end;
1232208   +
1232209   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1232210   +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
1232211   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1232212   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1232213   +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1232214   +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1232215   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1232216   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232217   +end;
MPRINT(EM_DIAGRAM):   end;
1232218   +else do;
MPRINT(EM_DIAGRAM):   else do;
1232219   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1232220   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1232221   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1232222   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1232223   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1232224   +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
1232225   +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
1232226   +   end;
MPRINT(EM_DIAGRAM):   end;
1232227   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1232228   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1232229   +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
The SAS System
 
1232230   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1232231   +   end;
MPRINT(EM_DIAGRAM):   end;
1232232   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1232233   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1232234   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1232235   +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
1232236   +   end;
MPRINT(EM_DIAGRAM):   end;
1232237   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1232238   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1232239   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1232240   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1232241   +   end;
MPRINT(EM_DIAGRAM):   end;
1232242   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1232243   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1232244   +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1232245   +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1232246   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1232247   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232248   +   end;
MPRINT(EM_DIAGRAM):   end;
1232249   +end;
MPRINT(EM_DIAGRAM):   end;
1232250   +
1232251   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1232252   +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
1232253   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1232254   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1232255   +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1232256   +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1232257   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1232258   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232259   +end;
MPRINT(EM_DIAGRAM):   end;
1232260   +else do;
MPRINT(EM_DIAGRAM):   else do;
1232261   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1232262   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1232263   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1232264   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1232265   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1232266   +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
1232267   +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
1232268   +   end;
MPRINT(EM_DIAGRAM):   end;
1232269   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1232270   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1232271   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1232272   +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
1232273   +   end;
MPRINT(EM_DIAGRAM):   end;
1232274   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1232275   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1232276   +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
1232277   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1232278   +   end;
MPRINT(EM_DIAGRAM):   end;
1232279   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1232280   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1232281   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1232282   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1232283   +   end;
MPRINT(EM_DIAGRAM):   end;
1232284   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1232285   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1232286   +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1232287   +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1232288   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1232289   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232290   +   end;
MPRINT(EM_DIAGRAM):   end;
1232291   +end;
MPRINT(EM_DIAGRAM):   end;
1232292   +
1232293   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1232294   +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
1232295   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1232296   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1232297   +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1232298   +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1232299   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1232300   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232301   +end;
MPRINT(EM_DIAGRAM):   end;
1232302   +else do;
MPRINT(EM_DIAGRAM):   else do;
1232303   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1232304   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1232305   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1232306   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1232307   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1232308   +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
1232309   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1232310   +   end;
MPRINT(EM_DIAGRAM):   end;
1232311   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1232312   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1232313   +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
1232314   +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
1232315   +   end;
MPRINT(EM_DIAGRAM):   end;
1232316   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1232317   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1232318   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1232319   +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
1232320   +   end;
MPRINT(EM_DIAGRAM):   end;
1232321   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1232322   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1232323   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1232324   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1232325   +   end;
MPRINT(EM_DIAGRAM):   end;
1232326   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1232327   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1232328   +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1232329   +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1232330   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1232331   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232332   +   end;
MPRINT(EM_DIAGRAM):   end;
1232333   +end;
MPRINT(EM_DIAGRAM):   end;
1232334   +
1232335   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1232336   +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
1232337   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1232338   +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1232339   +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1232340   +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1232341   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1232342   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232343   +end;
MPRINT(EM_DIAGRAM):   end;
1232344   +else do;
MPRINT(EM_DIAGRAM):   else do;
1232345   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1232346   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1232347   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1232348   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1232349   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1232350   +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
1232351   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1232352   +   end;
MPRINT(EM_DIAGRAM):   end;
1232353   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1232354   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1232355   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1232356   +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
1232357   +   end;
MPRINT(EM_DIAGRAM):   end;
1232358   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1232359   +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
1232360   +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
1232361   +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
1232362   +   end;
MPRINT(EM_DIAGRAM):   end;
1232363   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1232364   +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
1232365   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1232366   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1232367   +   end;
MPRINT(EM_DIAGRAM):   end;
1232368   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1232369   +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1232370   +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1232371   +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1232372   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1232373   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232374   +   end;
MPRINT(EM_DIAGRAM):   end;
1232375   +end;
MPRINT(EM_DIAGRAM):   end;
1232376   +
1232377   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1232378   +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
1232379   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1232380   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1232381   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1232382   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1232383   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1232384   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232385   +end;
MPRINT(EM_DIAGRAM):   end;
1232386   +else do;
MPRINT(EM_DIAGRAM):   else do;
1232387   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1232388   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1232389   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1232390   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1232391   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1232392   +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1232393   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1232394   +   end;
MPRINT(EM_DIAGRAM):   end;
1232395   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1232396   +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1232397   +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1232398   +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1232399   +   end;
MPRINT(EM_DIAGRAM):   end;
1232400   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1232401   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1232402   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1232403   +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1232404   +   end;
MPRINT(EM_DIAGRAM):   end;
1232405   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1232406   +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1232407   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1232408   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1232409   +   end;
MPRINT(EM_DIAGRAM):   end;
1232410   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1232411   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1232412   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1232413   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1232414   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1232415   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232416   +   end;
MPRINT(EM_DIAGRAM):   end;
1232417   +end;
MPRINT(EM_DIAGRAM):   end;
1232418   +
1232419   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1232420   +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
1232421   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1232422   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1232423   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1232424   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1232425   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232426   +end;
MPRINT(EM_DIAGRAM):   end;
1232427   +else do;
MPRINT(EM_DIAGRAM):   else do;
1232428   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1232429   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1232430   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1232431   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1232432   +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1232433   +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1232434   +   end;
MPRINT(EM_DIAGRAM):   end;
1232435   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1232436   +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1232437   +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1232438   +   end;
MPRINT(EM_DIAGRAM):   end;
1232439   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1232440   +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1232441   +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1232442   +   end;
MPRINT(EM_DIAGRAM):   end;
1232443   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1232444   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1232445   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1232446   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1232447   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232448   +   end;
MPRINT(EM_DIAGRAM):   end;
1232449   +end;
MPRINT(EM_DIAGRAM):   end;
1232450   +
1232451   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1232452   +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
1232453   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1232454   +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1232455   +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1232456   +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1232457   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1232458   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232459   +end;
MPRINT(EM_DIAGRAM):   end;
1232460   +else do;
MPRINT(EM_DIAGRAM):   else do;
1232461   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1232462   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1232463   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1232464   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1232465   +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
1232466   +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
1232467   +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
1232468   +   end;
MPRINT(EM_DIAGRAM):   end;
1232469   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1232470   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1232471   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1232472   +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
1232473   +   end;
MPRINT(EM_DIAGRAM):   end;
1232474   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1232475   +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
1232476   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1232477   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1232478   +   end;
MPRINT(EM_DIAGRAM):   end;
1232479   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1232480   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1232481   +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
1232482   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1232483   +   end;
MPRINT(EM_DIAGRAM):   end;
1232484   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1232485   +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1232486   +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1232487   +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1232488   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1232489   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232490   +   end;
MPRINT(EM_DIAGRAM):   end;
1232491   +end;
MPRINT(EM_DIAGRAM):   end;
1232492   +
1232493   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1232494   +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
1232495   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1232496   +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1232497   +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1232498   +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1232499   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1232500   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232501   +end;
MPRINT(EM_DIAGRAM):   end;
1232502   +else do;
MPRINT(EM_DIAGRAM):   else do;
1232503   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1232504   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1232505   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1232506   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1232507   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1232508   +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
1232509   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1232510   +   end;
MPRINT(EM_DIAGRAM):   end;
1232511   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1232512   +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
1232513   +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
1232514   +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
1232515   +   end;
MPRINT(EM_DIAGRAM):   end;
1232516   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1232517   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1232518   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1232519   +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
1232520   +   end;
MPRINT(EM_DIAGRAM):   end;
1232521   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1232522   +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
1232523   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1232524   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1232525   +   end;
MPRINT(EM_DIAGRAM):   end;
1232526   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1232527   +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1232528   +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1232529   +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1232530   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1232531   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232532   +   end;
MPRINT(EM_DIAGRAM):   end;
1232533   +end;
MPRINT(EM_DIAGRAM):   end;
1232534   +
1232535   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1232536   +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
1232537   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1232538   +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1232539   +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1232540   +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1232541   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1232542   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232543   +end;
MPRINT(EM_DIAGRAM):   end;
1232544   +else do;
MPRINT(EM_DIAGRAM):   else do;
1232545   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1232546   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1232547   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1232548   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1232549   +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
1232550   +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
1232551   +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
1232552   +   end;
MPRINT(EM_DIAGRAM):   end;
1232553   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1232554   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1232555   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1232556   +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
1232557   +   end;
MPRINT(EM_DIAGRAM):   end;
1232558   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1232559   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1232560   +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
1232561   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1232562   +   end;
MPRINT(EM_DIAGRAM):   end;
1232563   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1232564   +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
1232565   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1232566   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1232567   +   end;
MPRINT(EM_DIAGRAM):   end;
1232568   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1232569   +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1232570   +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1232571   +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1232572   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1232573   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232574   +   end;
MPRINT(EM_DIAGRAM):   end;
1232575   +end;
MPRINT(EM_DIAGRAM):   end;
1232576   +
1232577   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1232578   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1232579   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1232580   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1232581   +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
1232582   +end;
MPRINT(EM_DIAGRAM):   end;
1232583   +
1232584   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1232585   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1232586   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1232587   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1232588   +
1232589   +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
1232590   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1232591   +_LP0 = _LP0 + (    -1.0202735142883) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0202735142883) * _TEMP * _1_0;
1232592   +
1232593   +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
1232594   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1232595   +_LP0 = _LP0 + (    1.96135216788678) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.96135216788678) * _TEMP * _2_0;
1232596   +_LP0 = _LP0 + (    0.16052598190077) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16052598190077) * _TEMP * _2_1;
1232597   +_LP0 = _LP0 + (   -0.70902116030282) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70902116030282) * _TEMP * _2_2;
1232598   +
1232599   +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
1232600   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1232601   +_LP0 = _LP0 + (    0.93791732843579) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.93791732843579) * _TEMP * _3_0;
1232602   +_LP0 = _LP0 + (    0.86323578315443) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.86323578315443) * _TEMP * _3_1;
1232603   +_LP0 = _LP0 + (   -0.93701763797667) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.93701763797667) * _TEMP * _3_2;
1232604   +
1232605   +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
1232606   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1232607   +_LP0 = _LP0 + (     0.6826557743697) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.6826557743697) * _TEMP * _5_0;
1232608   +_LP0 = _LP0 + (    0.02285788144903) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02285788144903) * _TEMP * _5_1;
1232609   +_LP0 = _LP0 + (   -0.06609528477722) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06609528477722) * _TEMP * _5_2;
1232610   +
1232611   +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
1232612   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1232613   +_LP0 = _LP0 + (   -1.44582935530291) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.44582935530291) * _TEMP * _7_0;
1232614   +_LP0 = _LP0 + (   -0.21318741203534) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21318741203534) * _TEMP * _7_1;
1232615   +_LP0 = _LP0 + (    0.53364168349885) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53364168349885) * _TEMP * _7_2;
1232616   +
1232617   +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
1232618   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1232619   +_LP0 = _LP0 + (    0.98273321190928) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.98273321190928) * _TEMP * _8_0;
1232620   +_LP0 = _LP0 + (      0.432298434838) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.432298434838) * _TEMP * _8_1;
1232621   +_LP0 = _LP0 + (   -0.57365050311778) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57365050311778) * _TEMP * _8_2;
1232622   +
1232623   +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
1232624   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1232625   +_LP0 = _LP0 + (   -1.15145054763997) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.15145054763997) * _TEMP * _9_0;
1232626   +_LP0 = _LP0 + (    0.03505087718511) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03505087718511) * _TEMP * _9_1;
1232627   +
1232628   +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
1232629   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1232630   +_LP0 = _LP0 + (   -2.65890505222228) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65890505222228) * _TEMP * _10_0;
1232631   +_LP0 = _LP0 + (     0.0545239904585) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0545239904585) * _TEMP * _10_1;
1232632   +_LP0 = _LP0 + (    0.51990032635141) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51990032635141) * _TEMP * _10_2;
1232633   +
1232634   +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
1232635   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1232636   +_LP0 = _LP0 + (   -0.25494301084801) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25494301084801) * _TEMP * _13_0;
1232637   +_LP0 = _LP0 + (    0.02802747054775) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02802747054775) * _TEMP * _13_1;
1232638   +_LP0 = _LP0 + (   -0.40273598284868) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40273598284868) * _TEMP * _13_2;
1232639   +
1232640   +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
1232641   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1232642   +_LP0 = _LP0 + (    1.94607798996867) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.94607798996867) * _TEMP * _14_0;
1232643   +_LP0 = _LP0 + (    0.53257949184685) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53257949184685) * _TEMP * _14_1;
1232644   +_LP0 = _LP0 + (   -0.62881974341908) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.62881974341908) * _TEMP * _14_2;
1232645   +
1232646   +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
1232647   +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
1232648   +_LP0 = _LP0 + (    0.01824806947783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01824806947783 * _TEMP);
1232649   +
1232650   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1232651   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1232652   +_TEMP =    -37.6992883159803 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -37.6992883159803 + _LP0;
1232653   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1232654   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1232655   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1232656   +end;
MPRINT(EM_DIAGRAM):   end;
1232657   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1232658   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1232659   +
1232660   +REG3DR1:
1232661   +
1232662   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Residuals;
1232663   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1232664   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1232665   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1232666   +end;
MPRINT(EM_DIAGRAM):   end;
1232667   +else do;
MPRINT(EM_DIAGRAM):   else do;
1232668   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1232669   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1232670   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1232671   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1232672   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1232673   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1232674   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1232675   +   end;
MPRINT(EM_DIAGRAM):   end;
1232676   +end;
MPRINT(EM_DIAGRAM):   end;
1232677   +
1232678   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1232679   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1232680   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1232681   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1232682   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1232683   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1232684   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1232685   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1232686   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1232687   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1232688   +end;
MPRINT(EM_DIAGRAM):   end;
1232689   +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
1232690   +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
1232691   +
1232692   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1232693   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1232694   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1232695   +* Renaming variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg3;
1232696   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232697   +* Renaming Posterior variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg3;
1232698   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232699   +drop Reg3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar1;
1232700   +Reg3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar1 = P_DepVar1;
1232701   +drop Reg3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar0;
1232702   +Reg3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar0 = P_DepVar0;
1232703   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232704   +* Renaming _WARN_ variable for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg3;
1232705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232706   +length Reg3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg3_WARN_ $4;
1232707   +drop Reg3_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg3_WARN_;
1232708   +Reg3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg3_WARN_ = _WARN_;
1232709   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232710   +* Ensmbl7: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring Code of model 2 of 5;
1232711   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232713   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1232714   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1232715   +* NODE: Neural18;
MPRINT(EM_DIAGRAM):   * NODE: Neural18;
1232716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1232717   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1232718   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1232719   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1232720   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1232721   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1232722   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1232723   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1232724   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1232725   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1232726   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1232727   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1232728   +LENGTH _WARN_ $4
1232729   +      F_DepVar  $ 12
1232730   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1232731   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1232732   +
1232733   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1232734   +
1232735   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1232736   +
1232737   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1232738   +
1232739   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1232740   +
1232741   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1232742   +
1232743   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1232744   +
1232745   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1232746   +
1232747   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1232748   +
1232749   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1232750   +
1232751   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1232752   +
1232753   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1232754   +
1232755   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1232756   +
1232757   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1232758   +
1232759   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1232760   +
1232761   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1232762   +
1232763   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1232764   +
1232765   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1232766   +
1232767   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1232768   +
1232769   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1232770   +
1232771   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1232772   +
1232773   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1232774   +
1232775   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1232776   +
1232777   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1232778   +
1232779   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1232780   +
1232781   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1232782   +
1232783   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1232784   +
1232785   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1232786   +
1232787   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1232788   +
1232789   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1232790   +
1232791   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1232792   +
1232793   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1232794   +
1232795   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1232796   +
1232797   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1232798   +
1232799   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1232800   +
1232801   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1232802   +
1232803   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1232804   +
1232805   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1232806   +
1232807   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1232808   +
1232809   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1232810   +
1232811   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1232812   +
1232813   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1232814   +
1232815   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1232816   +
1232817   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1232818   +
1232819   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1232820   +
1232821   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1232822   +
1232823   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1232824   +
1232825   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1232826   +
1232827   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1232828   +
1232829   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1232830   +
1232831   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1232832   +
1232833   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1232834   +
1232835   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1232836   +
1232837   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1232838   +
1232839   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1232840   +
1232841   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1232842   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1232843   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1232844   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1232845   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1232846   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232847   +end;
MPRINT(EM_DIAGRAM):   end;
1232848   +else do;
MPRINT(EM_DIAGRAM):   else do;
1232849   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1232850   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1232851   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1232852   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1232853   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1232854   +   end;
MPRINT(EM_DIAGRAM):   end;
1232855   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1232856   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1232857   +   end;
MPRINT(EM_DIAGRAM):   end;
1232858   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1232859   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1232860   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1232861   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232862   +   end;
MPRINT(EM_DIAGRAM):   end;
1232863   +end;
MPRINT(EM_DIAGRAM):   end;
1232864   +
1232865   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1232866   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1232867   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1232868   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1232869   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1232870   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1232871   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1232872   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232873   +end;
MPRINT(EM_DIAGRAM):   end;
1232874   +else do;
MPRINT(EM_DIAGRAM):   else do;
1232875   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1232876   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1232877   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1232878   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1232879   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1232880   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1232881   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1232882   +   end;
MPRINT(EM_DIAGRAM):   end;
1232883   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1232884   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1232885   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1232886   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1232887   +   end;
MPRINT(EM_DIAGRAM):   end;
1232888   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1232889   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1232890   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1232891   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1232892   +   end;
MPRINT(EM_DIAGRAM):   end;
1232893   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1232894   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1232895   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1232896   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1232897   +   end;
MPRINT(EM_DIAGRAM):   end;
1232898   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1232899   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1232900   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1232901   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1232902   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1232903   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232904   +   end;
MPRINT(EM_DIAGRAM):   end;
1232905   +end;
MPRINT(EM_DIAGRAM):   end;
1232906   +
1232907   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1232908   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1232909   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1232910   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1232911   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1232912   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1232913   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1232914   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232915   +end;
MPRINT(EM_DIAGRAM):   end;
1232916   +else do;
MPRINT(EM_DIAGRAM):   else do;
1232917   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1232918   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1232919   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1232920   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1232921   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1232922   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1232923   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1232924   +   end;
MPRINT(EM_DIAGRAM):   end;
1232925   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1232926   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1232927   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1232928   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1232929   +   end;
MPRINT(EM_DIAGRAM):   end;
1232930   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1232931   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1232932   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1232933   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1232934   +   end;
MPRINT(EM_DIAGRAM):   end;
1232935   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1232936   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1232937   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1232938   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1232939   +   end;
MPRINT(EM_DIAGRAM):   end;
1232940   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1232941   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1232942   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1232943   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1232944   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1232945   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232946   +   end;
MPRINT(EM_DIAGRAM):   end;
1232947   +end;
MPRINT(EM_DIAGRAM):   end;
1232948   +
1232949   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1232950   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1232951   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1232952   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1232953   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1232954   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1232955   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1232956   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232957   +end;
MPRINT(EM_DIAGRAM):   end;
1232958   +else do;
MPRINT(EM_DIAGRAM):   else do;
1232959   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1232960   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1232961   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1232962   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1232963   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1232964   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1232965   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1232966   +   end;
MPRINT(EM_DIAGRAM):   end;
1232967   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1232968   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1232969   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1232970   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1232971   +   end;
MPRINT(EM_DIAGRAM):   end;
1232972   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1232973   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1232974   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1232975   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1232976   +   end;
MPRINT(EM_DIAGRAM):   end;
1232977   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1232978   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1232979   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1232980   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1232981   +   end;
MPRINT(EM_DIAGRAM):   end;
1232982   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1232983   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1232984   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1232985   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1232986   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1232987   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232988   +   end;
MPRINT(EM_DIAGRAM):   end;
1232989   +end;
MPRINT(EM_DIAGRAM):   end;
1232990   +
1232991   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1232992   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1232993   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1232994   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1232995   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1232996   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1232997   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1232998   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1232999   +end;
MPRINT(EM_DIAGRAM):   end;
1233000   +else do;
MPRINT(EM_DIAGRAM):   else do;
1233001   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1233002   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1233003   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1233004   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1233005   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1233006   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1233007   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1233008   +   end;
MPRINT(EM_DIAGRAM):   end;
1233009   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1233010   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1233011   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1233012   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1233013   +   end;
MPRINT(EM_DIAGRAM):   end;
1233014   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1233015   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1233016   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1233017   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1233018   +   end;
MPRINT(EM_DIAGRAM):   end;
1233019   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1233020   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1233021   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1233022   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1233023   +   end;
MPRINT(EM_DIAGRAM):   end;
1233024   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1233025   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1233026   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1233027   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1233028   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1233029   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233030   +   end;
MPRINT(EM_DIAGRAM):   end;
1233031   +end;
MPRINT(EM_DIAGRAM):   end;
1233032   +
1233033   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1233034   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1233035   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1233036   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1233037   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1233038   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1233039   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1233040   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233041   +end;
MPRINT(EM_DIAGRAM):   end;
1233042   +else do;
MPRINT(EM_DIAGRAM):   else do;
1233043   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1233044   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1233045   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1233046   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1233047   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1233048   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1233049   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1233050   +   end;
MPRINT(EM_DIAGRAM):   end;
1233051   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1233052   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1233053   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1233054   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1233055   +   end;
MPRINT(EM_DIAGRAM):   end;
1233056   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1233057   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1233058   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1233059   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1233060   +   end;
MPRINT(EM_DIAGRAM):   end;
1233061   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1233062   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1233063   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1233064   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1233065   +   end;
MPRINT(EM_DIAGRAM):   end;
1233066   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1233067   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1233068   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1233069   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1233070   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1233071   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233072   +   end;
MPRINT(EM_DIAGRAM):   end;
1233073   +end;
MPRINT(EM_DIAGRAM):   end;
1233074   +
1233075   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1233076   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1233077   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1233078   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1233079   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1233080   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1233081   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1233082   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233083   +end;
MPRINT(EM_DIAGRAM):   end;
1233084   +else do;
MPRINT(EM_DIAGRAM):   else do;
1233085   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1233086   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1233087   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1233088   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1233089   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1233090   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1233091   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1233092   +   end;
MPRINT(EM_DIAGRAM):   end;
1233093   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1233094   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1233095   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1233096   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1233097   +   end;
MPRINT(EM_DIAGRAM):   end;
1233098   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1233099   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1233100   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1233101   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1233102   +   end;
MPRINT(EM_DIAGRAM):   end;
1233103   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1233104   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1233105   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1233106   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1233107   +   end;
MPRINT(EM_DIAGRAM):   end;
1233108   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1233109   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1233110   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1233111   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1233112   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1233113   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233114   +   end;
MPRINT(EM_DIAGRAM):   end;
1233115   +end;
MPRINT(EM_DIAGRAM):   end;
1233116   +
1233117   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1233118   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1233119   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1233120   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1233121   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1233122   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1233123   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1233124   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233125   +end;
MPRINT(EM_DIAGRAM):   end;
1233126   +else do;
MPRINT(EM_DIAGRAM):   else do;
1233127   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1233128   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1233129   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1233130   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1233131   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1233132   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1233133   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1233134   +   end;
MPRINT(EM_DIAGRAM):   end;
1233135   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1233136   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1233137   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1233138   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1233139   +   end;
MPRINT(EM_DIAGRAM):   end;
1233140   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1233141   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1233142   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1233143   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1233144   +   end;
MPRINT(EM_DIAGRAM):   end;
1233145   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1233146   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1233147   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1233148   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1233149   +   end;
MPRINT(EM_DIAGRAM):   end;
1233150   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1233151   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1233152   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1233153   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1233154   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1233155   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233156   +   end;
MPRINT(EM_DIAGRAM):   end;
1233157   +end;
MPRINT(EM_DIAGRAM):   end;
1233158   +
1233159   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1233160   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1233161   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1233162   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1233163   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1233164   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1233165   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233166   +end;
MPRINT(EM_DIAGRAM):   end;
1233167   +else do;
MPRINT(EM_DIAGRAM):   else do;
1233168   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1233169   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1233170   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1233171   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1233172   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1233173   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1233174   +   end;
MPRINT(EM_DIAGRAM):   end;
1233175   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1233176   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1233177   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1233178   +   end;
MPRINT(EM_DIAGRAM):   end;
1233179   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1233180   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1233181   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1233182   +   end;
MPRINT(EM_DIAGRAM):   end;
1233183   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1233184   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1233185   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1233186   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1233187   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233188   +   end;
MPRINT(EM_DIAGRAM):   end;
1233189   +end;
MPRINT(EM_DIAGRAM):   end;
1233190   +
1233191   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1233192   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1233193   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1233194   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1233195   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1233196   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1233197   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1233198   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233199   +end;
MPRINT(EM_DIAGRAM):   end;
1233200   +else do;
MPRINT(EM_DIAGRAM):   else do;
1233201   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1233202   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1233203   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1233204   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1233205   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1233206   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1233207   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1233208   +   end;
MPRINT(EM_DIAGRAM):   end;
1233209   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1233210   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1233211   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1233212   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1233213   +   end;
MPRINT(EM_DIAGRAM):   end;
1233214   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1233215   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1233216   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1233217   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1233218   +   end;
MPRINT(EM_DIAGRAM):   end;
1233219   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1233220   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1233221   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1233222   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1233223   +   end;
MPRINT(EM_DIAGRAM):   end;
1233224   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1233225   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1233226   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1233227   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1233228   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1233229   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233230   +   end;
MPRINT(EM_DIAGRAM):   end;
1233231   +end;
MPRINT(EM_DIAGRAM):   end;
1233232   +
1233233   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1233234   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1233235   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1233236   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1233237   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1233238   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1233239   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1233240   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233241   +end;
MPRINT(EM_DIAGRAM):   end;
1233242   +else do;
MPRINT(EM_DIAGRAM):   else do;
1233243   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1233244   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1233245   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1233246   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1233247   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1233248   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1233249   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1233250   +   end;
MPRINT(EM_DIAGRAM):   end;
1233251   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1233252   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1233253   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1233254   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1233255   +   end;
MPRINT(EM_DIAGRAM):   end;
1233256   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1233257   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1233258   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1233259   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1233260   +   end;
MPRINT(EM_DIAGRAM):   end;
1233261   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1233262   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1233263   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1233264   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1233265   +   end;
MPRINT(EM_DIAGRAM):   end;
1233266   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1233267   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1233268   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1233269   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1233270   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1233271   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233272   +   end;
MPRINT(EM_DIAGRAM):   end;
1233273   +end;
MPRINT(EM_DIAGRAM):   end;
1233274   +
1233275   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1233276   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1233277   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1233278   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1233279   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1233280   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1233281   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1233282   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233283   +end;
MPRINT(EM_DIAGRAM):   end;
1233284   +else do;
MPRINT(EM_DIAGRAM):   else do;
1233285   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1233286   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1233287   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1233288   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1233289   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1233290   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1233291   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1233292   +   end;
MPRINT(EM_DIAGRAM):   end;
1233293   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1233294   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1233295   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1233296   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1233297   +   end;
MPRINT(EM_DIAGRAM):   end;
1233298   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1233299   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1233300   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1233301   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1233302   +   end;
MPRINT(EM_DIAGRAM):   end;
1233303   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1233304   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1233305   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1233306   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1233307   +   end;
MPRINT(EM_DIAGRAM):   end;
1233308   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1233309   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1233310   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1233311   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1233312   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1233313   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233314   +   end;
MPRINT(EM_DIAGRAM):   end;
1233315   +end;
MPRINT(EM_DIAGRAM):   end;
1233316   +
1233317   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1233318   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1233319   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1233320   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1233321   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1233322   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1233323   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1233324   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233325   +end;
MPRINT(EM_DIAGRAM):   end;
1233326   +else do;
MPRINT(EM_DIAGRAM):   else do;
1233327   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1233328   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1233329   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1233330   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1233331   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1233332   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1233333   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1233334   +   end;
MPRINT(EM_DIAGRAM):   end;
1233335   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1233336   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1233337   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1233338   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1233339   +   end;
MPRINT(EM_DIAGRAM):   end;
1233340   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1233341   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1233342   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1233343   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1233344   +   end;
MPRINT(EM_DIAGRAM):   end;
1233345   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1233346   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1233347   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1233348   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1233349   +   end;
MPRINT(EM_DIAGRAM):   end;
1233350   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1233351   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1233352   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1233353   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1233354   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1233355   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233356   +   end;
MPRINT(EM_DIAGRAM):   end;
1233357   +end;
MPRINT(EM_DIAGRAM):   end;
1233358   +
1233359   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1233360   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1233361   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1233362   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1233363   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1233364   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1233365   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1233366   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233367   +end;
MPRINT(EM_DIAGRAM):   end;
1233368   +else do;
MPRINT(EM_DIAGRAM):   else do;
1233369   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1233370   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1233371   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1233372   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1233373   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1233374   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1233375   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1233376   +   end;
MPRINT(EM_DIAGRAM):   end;
1233377   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1233378   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1233379   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1233380   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1233381   +   end;
MPRINT(EM_DIAGRAM):   end;
1233382   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1233383   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1233384   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1233385   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1233386   +   end;
MPRINT(EM_DIAGRAM):   end;
1233387   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1233388   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1233389   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1233390   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1233391   +   end;
MPRINT(EM_DIAGRAM):   end;
1233392   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1233393   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1233394   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1233395   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1233396   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1233397   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233398   +   end;
MPRINT(EM_DIAGRAM):   end;
1233399   +end;
MPRINT(EM_DIAGRAM):   end;
1233400   +
1233401   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1233402   +*** Checking missing input Interval
1233403   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1233404   +
1233405   +IF NMISS(
1233406   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1233407   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1233408   +
1233409   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233410   +END;
MPRINT(EM_DIAGRAM):   END;
1233411   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1233412   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1233413   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1233414   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1233415   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1233416   +END;
MPRINT(EM_DIAGRAM):   END;
1233417   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1233418   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1233419   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1233420   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1233421   +END;
MPRINT(EM_DIAGRAM):   END;
1233422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1233423   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1233424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1233425   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1233426   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1233427   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1233428   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1233429   +   H11  =     0.03855897145156 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.03855897145156 * S_Year_Birth ;
1233430   +   H12  =      0.4940754340088 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.4940754340088 * S_Year_Birth ;
1233431   +   H13  =     0.17524137660647 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.17524137660647 * S_Year_Birth ;
1233432   +   H14  =     0.27270757044038 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.27270757044038 * S_Year_Birth ;
1233433   +   H15  =    -0.02127353119313 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.02127353119313 * S_Year_Birth ;
1233434   +   H16  =    -0.10595973365564 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.10595973365564 * S_Year_Birth ;
1233435   +   H17  =    -0.11271332681901 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.11271332681901 * S_Year_Birth ;
1233436   +   H11  = H11  +     0.21558790598329 * GRP_AcceptedCmp52
1233437   +          +    -0.07145572032882 * GRP_Frq2  +     0.09268595548153 * GRP_Frq3
1233438   +          +    -0.20765463263399 * GRP_Frq4  +    -0.00887637988838 *
1233439   +        GRP_Income2  +    -0.34198008097003 * GRP_Income3
1233440   +          +     0.00518173450113 * GRP_Income4  +     0.17153998784849 *
1233441   +        GRP_Mnt2  +    -0.03282863464194 * GRP_Mnt3  +     0.15479242768387 *
1233442   +        GRP_Mnt4  +    -0.14566682947772 * GRP_MntFishProducts2
1233443   +          +    -0.04697385312971 * GRP_MntFishProducts3
1233444   +          +     0.05477300056491 * GRP_MntFishProducts4
1233445   +          +    -0.21182877070793 * GRP_MntGoldProds2
1233446   +          +    -0.06202001203906 * GRP_MntGoldProds3
1233447   +          +    -0.23297283739715 * GRP_MntGoldProds4
1233448   +          +    -0.27072080481215 * GRP_MntMeatProducts2
1233449   +          +     -0.0879595975531 * GRP_MntMeatProducts3
1233450   +          +     0.01711044358319 * GRP_MntMeatProducts4
1233451   +          +     0.01568057691806 * GRP_MntWines2  +    -0.14454572309741 *
1233452   +        GRP_MntWines3  +      0.1665968837033 * GRP_MntWines4
1233453   +          +    -0.24980039994544 * GRP_NumCatalogPurchases3
1233454   +          +    -0.00199030871063 * GRP_NumCatalogPurchases4
1233455   +          +     0.11565917560156 * GRP_NumDistPurchases2
1233456   +          +      0.1678532898895 * GRP_NumDistPurchases3
1233457   +          +     -0.0338568889009 * GRP_NumDistPurchases4
1233458   +          +     0.09970745707934 * GRP_NumWebPurchases2
1233459   +          +     0.02961221360107 * GRP_NumWebPurchases3
1233460   +          +     0.02261054892411 * GRP_NumWebPurchases4
1233461   +          +     0.22891892518291 * GRP_RFMstat2  +     0.30720492174411 *
1233462   +        GRP_RFMstat3  +     0.02558392907316 * GRP_RFMstat4
1233463   +          +    -0.22752513596954 * GRP_RMntFrq2  +    -0.11010023712096 *
1233464   +        GRP_RMntFrq3  +    -0.29294961809478 * GRP_RMntFrq4
1233465   +          +     0.17323450297234 * GRP_Recency2  +    -0.02999008104866 *
1233466   +        GRP_Recency3  +    -0.07522056103469 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21558790598329 * GRP_AcceptedCmp52 + -0.07145572032882 *
GRP_Frq2 + 0.09268595548153 * GRP_Frq3 + -0.20765463263399 * GRP_Frq4 + -0.00887637988838 *
GRP_Income2 + -0.34198008097003 * GRP_Income3 + 0.00518173450113 * GRP_Income4 +
0.17153998784849 * GRP_Mnt2 + -0.03282863464194 * GRP_Mnt3 + 0.15479242768387 * GRP_Mnt4 +
-0.14566682947772 * GRP_MntFishProducts2 + -0.04697385312971 * GRP_MntFishProducts3 +
0.05477300056491 * GRP_MntFishProducts4 + -0.21182877070793 * GRP_MntGoldProds2 +
-0.06202001203906 * GRP_MntGoldProds3 + -0.23297283739715 * GRP_MntGoldProds4 +
-0.27072080481215 * GRP_MntMeatProducts2 + -0.0879595975531 * GRP_MntMeatProducts3 +
0.01711044358319 * GRP_MntMeatProducts4 + 0.01568057691806 * GRP_MntWines2 + -0.14454572309741
* GRP_MntWines3 + 0.1665968837033 * GRP_MntWines4 + -0.24980039994544 *
GRP_NumCatalogPurchases3 + -0.00199030871063 * GRP_NumCatalogPurchases4 + 0.11565917560156 *
GRP_NumDistPurchases2 + 0.1678532898895 * GRP_NumDistPurchases3 + -0.0338568889009 *
GRP_NumDistPurchases4 + 0.09970745707934 * GRP_NumWebPurchases2 + 0.02961221360107 *
GRP_NumWebPurchases3 + 0.02261054892411 * GRP_NumWebPurchases4 + 0.22891892518291 *
GRP_RFMstat2 + 0.30720492174411 * GRP_RFMstat3 + 0.02558392907316 * GRP_RFMstat4 +
-0.22752513596954 * GRP_RMntFrq2 + -0.11010023712096 * GRP_RMntFrq3 + -0.29294961809478 *
GRP_RMntFrq4 + 0.17323450297234 * GRP_Recency2 + -0.02999008104866 * GRP_Recency3 +
-0.07522056103469 * GRP_Recency4 ;
1233467   +   H12  = H12  +    -0.17475665685155 * GRP_AcceptedCmp52
1233468   +          +     0.39850686717751 * GRP_Frq2  +     0.21273190324396 * GRP_Frq3
1233469   +          +    -0.04292229763335 * GRP_Frq4  +     0.48189221687125 *
1233470   +        GRP_Income2  +       0.757675062227 * GRP_Income3
1233471   +          +    -0.31438345261512 * GRP_Income4  +     0.08884755999997 *
1233472   +        GRP_Mnt2  +     0.02891204793625 * GRP_Mnt3  +    -0.11500381143203 *
1233473   +        GRP_Mnt4  +     0.47755891441547 * GRP_MntFishProducts2
1233474   +          +     0.26645530981311 * GRP_MntFishProducts3
1233475   +          +    -0.17631072283513 * GRP_MntFishProducts4
1233476   +          +    -0.35439521021691 * GRP_MntGoldProds2
1233477   +          +     0.11419663880206 * GRP_MntGoldProds3
1233478   +          +     0.07288749113866 * GRP_MntGoldProds4
1233479   +          +    -0.52191822126159 * GRP_MntMeatProducts2
1233480   +          +    -0.08421627788812 * GRP_MntMeatProducts3
1233481   +          +    -0.15930642038763 * GRP_MntMeatProducts4
1233482   +          +     0.17420985773045 * GRP_MntWines2  +     0.21257483876123 *
1233483   +        GRP_MntWines3  +    -0.13198840161443 * GRP_MntWines4
1233484   +          +    -0.24725403471973 * GRP_NumCatalogPurchases3
1233485   +          +     0.28574938745998 * GRP_NumCatalogPurchases4
1233486   +          +     -0.4878996299474 * GRP_NumDistPurchases2
1233487   +          +     0.10139595392447 * GRP_NumDistPurchases3
1233488   +          +     0.05251891244468 * GRP_NumDistPurchases4
1233489   +          +    -0.18486003226007 * GRP_NumWebPurchases2
1233490   +          +      0.0263831646971 * GRP_NumWebPurchases3
1233491   +          +     0.26495059708503 * GRP_NumWebPurchases4
1233492   +          +    -0.16580006605432 * GRP_RFMstat2  +    -0.12537703875848 *
1233493   +        GRP_RFMstat3  +      -0.100652416931 * GRP_RFMstat4
1233494   +          +    -0.00913931308958 * GRP_RMntFrq2  +    -0.15758837200974 *
1233495   +        GRP_RMntFrq3  +     -0.1198225533702 * GRP_RMntFrq4
1233496   +          +       1.075902392162 * GRP_Recency2  +     0.44926983542925 *
1233497   +        GRP_Recency3  +     -0.4970729472837 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17475665685155 * GRP_AcceptedCmp52 + 0.39850686717751 *
GRP_Frq2 + 0.21273190324396 * GRP_Frq3 + -0.04292229763335 * GRP_Frq4 + 0.48189221687125 *
GRP_Income2 + 0.757675062227 * GRP_Income3 + -0.31438345261512 * GRP_Income4 +
0.08884755999997 * GRP_Mnt2 + 0.02891204793625 * GRP_Mnt3 + -0.11500381143203 * GRP_Mnt4 +
0.47755891441547 * GRP_MntFishProducts2 + 0.26645530981311 * GRP_MntFishProducts3 +
-0.17631072283513 * GRP_MntFishProducts4 + -0.35439521021691 * GRP_MntGoldProds2 +
0.11419663880206 * GRP_MntGoldProds3 + 0.07288749113866 * GRP_MntGoldProds4 +
-0.52191822126159 * GRP_MntMeatProducts2 + -0.08421627788812 * GRP_MntMeatProducts3 +
-0.15930642038763 * GRP_MntMeatProducts4 + 0.17420985773045 * GRP_MntWines2 + 0.21257483876123
* GRP_MntWines3 + -0.13198840161443 * GRP_MntWines4 + -0.24725403471973 *
GRP_NumCatalogPurchases3 + 0.28574938745998 * GRP_NumCatalogPurchases4 + -0.4878996299474 *
GRP_NumDistPurchases2 + 0.10139595392447 * GRP_NumDistPurchases3 + 0.05251891244468 *
GRP_NumDistPurchases4 + -0.18486003226007 * GRP_NumWebPurchases2 + 0.0263831646971 *
GRP_NumWebPurchases3 + 0.26495059708503 * GRP_NumWebPurchases4 + -0.16580006605432 *
GRP_RFMstat2 + -0.12537703875848 * GRP_RFMstat3 + -0.100652416931 * GRP_RFMstat4 +
-0.00913931308958 * GRP_RMntFrq2 + -0.15758837200974 * GRP_RMntFrq3 + -0.1198225533702 *
GRP_RMntFrq4 + 1.075902392162 * GRP_Recency2 + 0.44926983542925 * GRP_Recency3 +
-0.4970729472837 * GRP_Recency4 ;
1233498   +   H13  = H13  +     0.00215688122529 * GRP_AcceptedCmp52
1233499   +          +    -0.01427589791379 * GRP_Frq2  +    -0.13098496868755 * GRP_Frq3
1233500   +          +    -0.30502313457201 * GRP_Frq4  +    -0.37973462663051 *
1233501   +        GRP_Income2  +     0.00732780844057 * GRP_Income3
1233502   +          +     0.53278328894406 * GRP_Income4  +     0.29819966041309 *
1233503   +        GRP_Mnt2  +     0.25349727466129 * GRP_Mnt3  +     0.10579488290769 *
1233504   +        GRP_Mnt4  +    -0.09288921771048 * GRP_MntFishProducts2
1233505   +          +     0.02714802509094 * GRP_MntFishProducts3
1233506   +          +     0.27119078554613 * GRP_MntFishProducts4
1233507   +          +     0.19322428614339 * GRP_MntGoldProds2
1233508   +          +     0.34778546410632 * GRP_MntGoldProds3
1233509   +          +    -0.06570146779096 * GRP_MntGoldProds4
1233510   +          +     0.44935275650977 * GRP_MntMeatProducts2
1233511   +          +     0.00805794344265 * GRP_MntMeatProducts3
1233512   +          +     0.02445782833023 * GRP_MntMeatProducts4
1233513   +          +    -0.12082391878766 * GRP_MntWines2  +    -0.28739181733976 *
1233514   +        GRP_MntWines3  +    -0.12417307544408 * GRP_MntWines4
1233515   +          +     0.33901531634752 * GRP_NumCatalogPurchases3
1233516   +          +     -0.0519425405532 * GRP_NumCatalogPurchases4
1233517   +          +     0.03481806823908 * GRP_NumDistPurchases2
1233518   +          +      0.0546202479864 * GRP_NumDistPurchases3
1233519   +          +    -0.05240296080421 * GRP_NumDistPurchases4
1233520   +          +     0.28307550964921 * GRP_NumWebPurchases2
1233521   +          +     0.31503543231591 * GRP_NumWebPurchases3
1233522   +          +     0.24817135719308 * GRP_NumWebPurchases4
1233523   +          +    -0.05017370187238 * GRP_RFMstat2  +     0.08161239885611 *
1233524   +        GRP_RFMstat3  +    -0.14085507706312 * GRP_RFMstat4
1233525   +          +     0.11738278568714 * GRP_RMntFrq2  +     0.28471680928269 *
1233526   +        GRP_RMntFrq3  +     0.46590886050772 * GRP_RMntFrq4
1233527   +          +     -0.2318556486679 * GRP_Recency2  +    -0.37508297533514 *
1233528   +        GRP_Recency3  +     0.05823801065489 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00215688122529 * GRP_AcceptedCmp52 + -0.01427589791379 *
GRP_Frq2 + -0.13098496868755 * GRP_Frq3 + -0.30502313457201 * GRP_Frq4 + -0.37973462663051 *
GRP_Income2 + 0.00732780844057 * GRP_Income3 + 0.53278328894406 * GRP_Income4 +
0.29819966041309 * GRP_Mnt2 + 0.25349727466129 * GRP_Mnt3 + 0.10579488290769 * GRP_Mnt4 +
-0.09288921771048 * GRP_MntFishProducts2 + 0.02714802509094 * GRP_MntFishProducts3 +
0.27119078554613 * GRP_MntFishProducts4 + 0.19322428614339 * GRP_MntGoldProds2 +
0.34778546410632 * GRP_MntGoldProds3 + -0.06570146779096 * GRP_MntGoldProds4 +
0.44935275650977 * GRP_MntMeatProducts2 + 0.00805794344265 * GRP_MntMeatProducts3 +
0.02445782833023 * GRP_MntMeatProducts4 + -0.12082391878766 * GRP_MntWines2 +
-0.28739181733976 * GRP_MntWines3 + -0.12417307544408 * GRP_MntWines4 + 0.33901531634752 *
GRP_NumCatalogPurchases3 + -0.0519425405532 * GRP_NumCatalogPurchases4 + 0.03481806823908 *
GRP_NumDistPurchases2 + 0.0546202479864 * GRP_NumDistPurchases3 + -0.05240296080421 *
GRP_NumDistPurchases4 + 0.28307550964921 * GRP_NumWebPurchases2 + 0.31503543231591 *
GRP_NumWebPurchases3 + 0.24817135719308 * GRP_NumWebPurchases4 + -0.05017370187238 *
GRP_RFMstat2 + 0.08161239885611 * GRP_RFMstat3 + -0.14085507706312 * GRP_RFMstat4 +
0.11738278568714 * GRP_RMntFrq2 + 0.28471680928269 * GRP_RMntFrq3 + 0.46590886050772 *
GRP_RMntFrq4 + -0.2318556486679 * GRP_Recency2 + -0.37508297533514 * GRP_Recency3 +
0.05823801065489 * GRP_Recency4 ;
1233529   +   H14  = H14  +      0.4684617848987 * GRP_AcceptedCmp52
1233530   +          +    -0.10078363733095 * GRP_Frq2  +     0.12187262992305 * GRP_Frq3
1233531   +          +     0.06615581853287 * GRP_Frq4  +    -0.37438533196327 *
1233532   +        GRP_Income2  +    -0.54951239852844 * GRP_Income3
1233533   +          +     0.42517426076684 * GRP_Income4  +     0.01160451666213 *
1233534   +        GRP_Mnt2  +    -0.19046851266656 * GRP_Mnt3  +    -0.22599863084471 *
1233535   +        GRP_Mnt4  +     0.02252915755857 * GRP_MntFishProducts2
1233536   +          +    -0.08997232581072 * GRP_MntFishProducts3
1233537   +          +    -0.05669599356928 * GRP_MntFishProducts4
1233538   +          +      0.2199150131909 * GRP_MntGoldProds2
1233539   +          +     0.05584571259838 * GRP_MntGoldProds3
1233540   +          +    -0.13160142309505 * GRP_MntGoldProds4
1233541   +          +      0.2539849640816 * GRP_MntMeatProducts2
1233542   +          +     0.29448191059312 * GRP_MntMeatProducts3
1233543   +          +    -0.33946200154351 * GRP_MntMeatProducts4
1233544   +          +    -0.47231816370111 * GRP_MntWines2  +    -0.35916844796743 *
1233545   +        GRP_MntWines3  +     0.15578356288597 * GRP_MntWines4
1233546   +          +     0.35913140014848 * GRP_NumCatalogPurchases3
1233547   +          +    -0.07798422379681 * GRP_NumCatalogPurchases4
1233548   +          +     0.38206153529506 * GRP_NumDistPurchases2
1233549   +          +     0.08642998303162 * GRP_NumDistPurchases3
1233550   +          +    -0.00375635377885 * GRP_NumDistPurchases4
1233551   +          +    -0.04352529411419 * GRP_NumWebPurchases2
1233552   +          +    -0.17285172586868 * GRP_NumWebPurchases3
1233553   +          +     0.23030028338396 * GRP_NumWebPurchases4
1233554   +          +     0.16194254582104 * GRP_RFMstat2  +    -0.03413270353062 *
1233555   +        GRP_RFMstat3  +    -0.32516629559317 * GRP_RFMstat4
1233556   +          +    -0.16070809362515 * GRP_RMntFrq2  +    -0.17716471899416 *
1233557   +        GRP_RMntFrq3  +     0.09335047904411 * GRP_RMntFrq4
1233558   +          +    -0.92875393407697 * GRP_Recency2  +     0.16068827585896 *
1233559   +        GRP_Recency3  +     0.41807637211453 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.4684617848987 * GRP_AcceptedCmp52 + -0.10078363733095 *
GRP_Frq2 + 0.12187262992305 * GRP_Frq3 + 0.06615581853287 * GRP_Frq4 + -0.37438533196327 *
GRP_Income2 + -0.54951239852844 * GRP_Income3 + 0.42517426076684 * GRP_Income4 +
0.01160451666213 * GRP_Mnt2 + -0.19046851266656 * GRP_Mnt3 + -0.22599863084471 * GRP_Mnt4 +
0.02252915755857 * GRP_MntFishProducts2 + -0.08997232581072 * GRP_MntFishProducts3 +
-0.05669599356928 * GRP_MntFishProducts4 + 0.2199150131909 * GRP_MntGoldProds2 +
0.05584571259838 * GRP_MntGoldProds3 + -0.13160142309505 * GRP_MntGoldProds4 + 0.2539849640816
* GRP_MntMeatProducts2 + 0.29448191059312 * GRP_MntMeatProducts3 + -0.33946200154351 *
GRP_MntMeatProducts4 + -0.47231816370111 * GRP_MntWines2 + -0.35916844796743 * GRP_MntWines3 +
0.15578356288597 * GRP_MntWines4 + 0.35913140014848 * GRP_NumCatalogPurchases3 +
-0.07798422379681 * GRP_NumCatalogPurchases4 + 0.38206153529506 * GRP_NumDistPurchases2 +
0.08642998303162 * GRP_NumDistPurchases3 + -0.00375635377885 * GRP_NumDistPurchases4 +
-0.04352529411419 * GRP_NumWebPurchases2 + -0.17285172586868 * GRP_NumWebPurchases3 +
0.23030028338396 * GRP_NumWebPurchases4 + 0.16194254582104 * GRP_RFMstat2 + -0.03413270353062
* GRP_RFMstat3 + -0.32516629559317 * GRP_RFMstat4 + -0.16070809362515 * GRP_RMntFrq2 +
-0.17716471899416 * GRP_RMntFrq3 + 0.09335047904411 * GRP_RMntFrq4 + -0.92875393407697 *
GRP_Recency2 + 0.16068827585896 * GRP_Recency3 + 0.41807637211453 * GRP_Recency4 ;
1233560   +   H15  = H15  +    -0.78481953865912 * GRP_AcceptedCmp52
1233561   +          +     0.05211963408638 * GRP_Frq2  +     0.24938737986681 * GRP_Frq3
1233562   +          +    -0.07347952562846 * GRP_Frq4  +    -0.15741135518664 *
1233563   +        GRP_Income2  +     0.01909378686442 * GRP_Income3
1233564   +          +    -0.15898085757789 * GRP_Income4  +     0.09202012507046 *
1233565   +        GRP_Mnt2  +    -0.39641738573024 * GRP_Mnt3  +     0.02885484069701 *
1233566   +        GRP_Mnt4  +     0.29554161293423 * GRP_MntFishProducts2
1233567   +          +    -0.04439366722112 * GRP_MntFishProducts3
1233568   +          +    -0.22939355735301 * GRP_MntFishProducts4
1233569   +          +    -0.00367144103801 * GRP_MntGoldProds2
1233570   +          +      -0.033315128385 * GRP_MntGoldProds3
1233571   +          +     0.10655545066126 * GRP_MntGoldProds4
1233572   +          +     0.04927093675686 * GRP_MntMeatProducts2
1233573   +          +    -0.20156680946257 * GRP_MntMeatProducts3
1233574   +          +     0.29394273234417 * GRP_MntMeatProducts4
1233575   +          +     0.27324472738231 * GRP_MntWines2  +       0.398830803883 *
1233576   +        GRP_MntWines3  +    -0.16588038849208 * GRP_MntWines4
1233577   +          +     -0.3438340194477 * GRP_NumCatalogPurchases3
1233578   +          +    -0.37438590488645 * GRP_NumCatalogPurchases4
1233579   +          +    -0.42285816542086 * GRP_NumDistPurchases2
1233580   +          +     -0.1008716650505 * GRP_NumDistPurchases3
1233581   +          +    -0.42793112700917 * GRP_NumDistPurchases4
1233582   +          +    -0.06792665579186 * GRP_NumWebPurchases2
1233583   +          +     0.37113277513001 * GRP_NumWebPurchases3
1233584   +          +     0.05720653023952 * GRP_NumWebPurchases4
1233585   +          +    -0.30997814005221 * GRP_RFMstat2  +     0.06219993861842 *
1233586   +        GRP_RFMstat3  +    -0.22600753085668 * GRP_RFMstat4
1233587   +          +    -0.31041957734532 * GRP_RMntFrq2  +     0.25053172234721 *
1233588   +        GRP_RMntFrq3  +     0.15983683107051 * GRP_RMntFrq4
1233589   +          +     0.52797823019932 * GRP_Recency2  +     0.11382874879823 *
1233590   +        GRP_Recency3  +    -0.22166533511817 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.78481953865912 * GRP_AcceptedCmp52 + 0.05211963408638 *
GRP_Frq2 + 0.24938737986681 * GRP_Frq3 + -0.07347952562846 * GRP_Frq4 + -0.15741135518664 *
GRP_Income2 + 0.01909378686442 * GRP_Income3 + -0.15898085757789 * GRP_Income4 +
0.09202012507046 * GRP_Mnt2 + -0.39641738573024 * GRP_Mnt3 + 0.02885484069701 * GRP_Mnt4 +
0.29554161293423 * GRP_MntFishProducts2 + -0.04439366722112 * GRP_MntFishProducts3 +
-0.22939355735301 * GRP_MntFishProducts4 + -0.00367144103801 * GRP_MntGoldProds2 +
-0.033315128385 * GRP_MntGoldProds3 + 0.10655545066126 * GRP_MntGoldProds4 + 0.04927093675686
* GRP_MntMeatProducts2 + -0.20156680946257 * GRP_MntMeatProducts3 + 0.29394273234417 *
GRP_MntMeatProducts4 + 0.27324472738231 * GRP_MntWines2 + 0.398830803883 * GRP_MntWines3 +
-0.16588038849208 * GRP_MntWines4 + -0.3438340194477 * GRP_NumCatalogPurchases3 +
-0.37438590488645 * GRP_NumCatalogPurchases4 + -0.42285816542086 * GRP_NumDistPurchases2 +
-0.1008716650505 * GRP_NumDistPurchases3 + -0.42793112700917 * GRP_NumDistPurchases4 +
-0.06792665579186 * GRP_NumWebPurchases2 + 0.37113277513001 * GRP_NumWebPurchases3 +
0.05720653023952 * GRP_NumWebPurchases4 + -0.30997814005221 * GRP_RFMstat2 + 0.06219993861842
* GRP_RFMstat3 + -0.22600753085668 * GRP_RFMstat4 + -0.31041957734532 * GRP_RMntFrq2 +
0.25053172234721 * GRP_RMntFrq3 + 0.15983683107051 * GRP_RMntFrq4 + 0.52797823019932 *
GRP_Recency2 + 0.11382874879823 * GRP_Recency3 + -0.22166533511817 * GRP_Recency4 ;
1233591   +   H16  = H16  +      0.7107136456569 * GRP_AcceptedCmp52
1233592   +          +     -0.4751898387651 * GRP_Frq2  +    -0.11277060686411 * GRP_Frq3
1233593   +          +     0.15821547082299 * GRP_Frq4  +    -0.45945049231995 *
1233594   +        GRP_Income2  +    -0.18413512635176 * GRP_Income3
1233595   +          +     0.39594738835509 * GRP_Income4  +    -0.15472205523822 *
1233596   +        GRP_Mnt2  +     0.02844181224363 * GRP_Mnt3  +     0.45435843401555 *
1233597   +        GRP_Mnt4  +    -0.29220588593813 * GRP_MntFishProducts2
1233598   +          +     0.04340555393469 * GRP_MntFishProducts3
1233599   +          +    -0.20048219926361 * GRP_MntFishProducts4
1233600   +          +     0.16101452165456 * GRP_MntGoldProds2
1233601   +          +    -0.04467647211336 * GRP_MntGoldProds3
1233602   +          +     0.32142013598241 * GRP_MntGoldProds4
1233603   +          +     0.29741565154233 * GRP_MntMeatProducts2
1233604   +          +    -0.00264678222241 * GRP_MntMeatProducts3
1233605   +          +    -0.11596499325048 * GRP_MntMeatProducts4
1233606   +          +    -0.29849043995136 * GRP_MntWines2  +     0.14756452272338 *
1233607   +        GRP_MntWines3  +     0.48995265672675 * GRP_MntWines4
1233608   +          +     0.80854583627117 * GRP_NumCatalogPurchases3
1233609   +          +     0.14001888431357 * GRP_NumCatalogPurchases4
1233610   +          +     0.36107050137299 * GRP_NumDistPurchases2
1233611   +          +    -0.10375572120121 * GRP_NumDistPurchases3
1233612   +          +     0.10557004956787 * GRP_NumDistPurchases4
1233613   +          +     0.04608069099876 * GRP_NumWebPurchases2
1233614   +          +     0.15561947954396 * GRP_NumWebPurchases3
1233615   +          +    -0.01081470092004 * GRP_NumWebPurchases4
1233616   +          +     0.21994454623245 * GRP_RFMstat2  +    -0.08858421895818 *
1233617   +        GRP_RFMstat3  +    -0.13608887793525 * GRP_RFMstat4
1233618   +          +     0.07482010458977 * GRP_RMntFrq2  +    -0.11874760292742 *
1233619   +        GRP_RMntFrq3  +     0.56887215594366 * GRP_RMntFrq4
1233620   +          +    -0.13548983954455 * GRP_Recency2  +    -0.25036935235639 *
1233621   +        GRP_Recency3  +     -0.0282277663071 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.7107136456569 * GRP_AcceptedCmp52 + -0.4751898387651 *
GRP_Frq2 + -0.11277060686411 * GRP_Frq3 + 0.15821547082299 * GRP_Frq4 + -0.45945049231995 *
GRP_Income2 + -0.18413512635176 * GRP_Income3 + 0.39594738835509 * GRP_Income4 +
-0.15472205523822 * GRP_Mnt2 + 0.02844181224363 * GRP_Mnt3 + 0.45435843401555 * GRP_Mnt4 +
-0.29220588593813 * GRP_MntFishProducts2 + 0.04340555393469 * GRP_MntFishProducts3 +
-0.20048219926361 * GRP_MntFishProducts4 + 0.16101452165456 * GRP_MntGoldProds2 +
-0.04467647211336 * GRP_MntGoldProds3 + 0.32142013598241 * GRP_MntGoldProds4 +
0.29741565154233 * GRP_MntMeatProducts2 + -0.00264678222241 * GRP_MntMeatProducts3 +
-0.11596499325048 * GRP_MntMeatProducts4 + -0.29849043995136 * GRP_MntWines2 +
0.14756452272338 * GRP_MntWines3 + 0.48995265672675 * GRP_MntWines4 + 0.80854583627117 *
GRP_NumCatalogPurchases3 + 0.14001888431357 * GRP_NumCatalogPurchases4 + 0.36107050137299 *
GRP_NumDistPurchases2 + -0.10375572120121 * GRP_NumDistPurchases3 + 0.10557004956787 *
GRP_NumDistPurchases4 + 0.04608069099876 * GRP_NumWebPurchases2 + 0.15561947954396 *
GRP_NumWebPurchases3 + -0.01081470092004 * GRP_NumWebPurchases4 + 0.21994454623245 *
GRP_RFMstat2 + -0.08858421895818 * GRP_RFMstat3 + -0.13608887793525 * GRP_RFMstat4 +
0.07482010458977 * GRP_RMntFrq2 + -0.11874760292742 * GRP_RMntFrq3 + 0.56887215594366 *
GRP_RMntFrq4 + -0.13548983954455 * GRP_Recency2 + -0.25036935235639 * GRP_Recency3 +
-0.0282277663071 * GRP_Recency4 ;
1233622   +   H17  = H17  +    -0.06745892596619 * GRP_AcceptedCmp52
1233623   +          +    -0.09506194345469 * GRP_Frq2  +    -0.29707644715885 * GRP_Frq3
1233624   +          +    -0.06874693052001 * GRP_Frq4  +    -0.08949373241741 *
1233625   +        GRP_Income2  +     0.02965579603049 * GRP_Income3
1233626   +          +    -0.02192829727213 * GRP_Income4  +     0.30180973300088 *
1233627   +        GRP_Mnt2  +    -0.10648502526616 * GRP_Mnt3  +     0.07588844839465 *
1233628   +        GRP_Mnt4  +    -0.30524623655199 * GRP_MntFishProducts2
1233629   +          +    -0.20032703571491 * GRP_MntFishProducts3
1233630   +          +    -0.08348811352746 * GRP_MntFishProducts4
1233631   +          +    -0.00744131870881 * GRP_MntGoldProds2
1233632   +          +    -0.27347309859096 * GRP_MntGoldProds3
1233633   +          +    -0.04458870469416 * GRP_MntGoldProds4
1233634   +          +     0.17538261434498 * GRP_MntMeatProducts2
1233635   +          +    -0.08059547298843 * GRP_MntMeatProducts3
1233636   +          +     0.03113249898233 * GRP_MntMeatProducts4
1233637   +          +    -0.23690909413276 * GRP_MntWines2  +    -0.01511980231776 *
1233638   +        GRP_MntWines3  +     -0.2825327824317 * GRP_MntWines4
1233639   +          +     0.13919784888607 * GRP_NumCatalogPurchases3
1233640   +          +    -0.10871281978714 * GRP_NumCatalogPurchases4
1233641   +          +     0.20540014620209 * GRP_NumDistPurchases2
1233642   +          +     0.17744784873298 * GRP_NumDistPurchases3
1233643   +          +      -0.003486430833 * GRP_NumDistPurchases4
1233644   +          +    -0.04863967797645 * GRP_NumWebPurchases2
1233645   +          +     0.07245829152192 * GRP_NumWebPurchases3
1233646   +          +    -0.27395606297099 * GRP_NumWebPurchases4
1233647   +          +    -0.14496279180087 * GRP_RFMstat2  +     0.28224463929838 *
1233648   +        GRP_RFMstat3  +     0.26720059295202 * GRP_RFMstat4
1233649   +          +    -0.07120881723264 * GRP_RMntFrq2  +     0.16350065828319 *
1233650   +        GRP_RMntFrq3  +      0.3117297070285 * GRP_RMntFrq4
1233651   +          +    -0.52884474877094 * GRP_Recency2  +    -0.17937099376746 *
1233652   +        GRP_Recency3  +     -0.0157357289132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.06745892596619 * GRP_AcceptedCmp52 + -0.09506194345469 *
GRP_Frq2 + -0.29707644715885 * GRP_Frq3 + -0.06874693052001 * GRP_Frq4 + -0.08949373241741 *
GRP_Income2 + 0.02965579603049 * GRP_Income3 + -0.02192829727213 * GRP_Income4 +
0.30180973300088 * GRP_Mnt2 + -0.10648502526616 * GRP_Mnt3 + 0.07588844839465 * GRP_Mnt4 +
-0.30524623655199 * GRP_MntFishProducts2 + -0.20032703571491 * GRP_MntFishProducts3 +
-0.08348811352746 * GRP_MntFishProducts4 + -0.00744131870881 * GRP_MntGoldProds2 +
-0.27347309859096 * GRP_MntGoldProds3 + -0.04458870469416 * GRP_MntGoldProds4 +
0.17538261434498 * GRP_MntMeatProducts2 + -0.08059547298843 * GRP_MntMeatProducts3 +
0.03113249898233 * GRP_MntMeatProducts4 + -0.23690909413276 * GRP_MntWines2 +
-0.01511980231776 * GRP_MntWines3 + -0.2825327824317 * GRP_MntWines4 + 0.13919784888607 *
GRP_NumCatalogPurchases3 + -0.10871281978714 * GRP_NumCatalogPurchases4 + 0.20540014620209 *
GRP_NumDistPurchases2 + 0.17744784873298 * GRP_NumDistPurchases3 + -0.003486430833 *
GRP_NumDistPurchases4 + -0.04863967797645 * GRP_NumWebPurchases2 + 0.07245829152192 *
GRP_NumWebPurchases3 + -0.27395606297099 * GRP_NumWebPurchases4 + -0.14496279180087 *
GRP_RFMstat2 + 0.28224463929838 * GRP_RFMstat3 + 0.26720059295202 * GRP_RFMstat4 +
-0.07120881723264 * GRP_RMntFrq2 + 0.16350065828319 * GRP_RMntFrq3 + 0.3117297070285 *
GRP_RMntFrq4 + -0.52884474877094 * GRP_Recency2 + -0.17937099376746 * GRP_Recency3 +
-0.0157357289132 * GRP_Recency4 ;
1233653   +   H11  =    -0.76467628027618 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.76467628027618 + H11 ;
1233654   +   H12  =    -0.03405517571825 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03405517571825 + H12 ;
1233655   +   H13  =    -0.32845676351839 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.32845676351839 + H13 ;
1233656   +   H14  =     0.08379615404181 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.08379615404181 + H14 ;
1233657   +   H15  =    -0.77228291932436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.77228291932436 + H15 ;
1233658   +   H16  =    -0.77356855332279 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.77356855332279 + H16 ;
1233659   +   H17  =     0.45067845230796 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.45067845230796 + H17 ;
1233660   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1233661   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1233662   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1233663   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1233664   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1233665   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1233666   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1233667   +END;
MPRINT(EM_DIAGRAM):   END;
1233668   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1233669   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1233670   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1233671   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1233672   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1233673   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1233674   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1233675   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1233676   +END;
MPRINT(EM_DIAGRAM):   END;
1233677   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1233678   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1233679   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1233680   +
1233681   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1233682   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1233683   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1233684   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1233685   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1233686   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1233687   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1233688   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1233689   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1233690   +end;
MPRINT(EM_DIAGRAM):   end;
1233691   +else do;
MPRINT(EM_DIAGRAM):   else do;
1233692   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1233693   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1233694   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1233695   +   end;
MPRINT(EM_DIAGRAM):   end;
1233696   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1233697   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1233698   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1233699   +   end;
MPRINT(EM_DIAGRAM):   end;
1233700   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1233701   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1233702   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1233703   +   end;
MPRINT(EM_DIAGRAM):   end;
1233704   +end;
MPRINT(EM_DIAGRAM):   end;
1233705   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1233706   +   P_DepVar1  =    -0.15999450347654 * H11  +     1.35667407296837 * H12
1233707   +          +    -0.71419530867579 * H13  +     -1.0947746264744 * H14
1233708   +          +     0.98315214007209 * H15  +    -1.32163386678746 * H16
1233709   +          +    -0.29329090231091 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.15999450347654 * H11 + 1.35667407296837 * H12 +
-0.71419530867579 * H13 + -1.0947746264744 * H14 + 0.98315214007209 * H15 + -1.32163386678746
* H16 + -0.29329090231091 * H17 ;
1233710   +   P_DepVar1  =    -1.66210022161101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66210022161101 + P_DepVar1 ;
1233711   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1233712   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1233713   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1233714   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1233715   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1233716   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1233717   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1233718   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1233719   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1233720   +END;
MPRINT(EM_DIAGRAM):   END;
1233721   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1233722   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1233723   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1233724   +END;
MPRINT(EM_DIAGRAM):   END;
1233725   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1233726   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1233727   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1233728   +END;
MPRINT(EM_DIAGRAM):   END;
1233729   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1233730   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1233731   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1233732   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1233733   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1233734   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1233735   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1233736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1233737   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1233738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1233739   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1233740   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1233741   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1233742   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1233743   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1233744   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1233745   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1233746   +END;
MPRINT(EM_DIAGRAM):   END;
1233747   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1233748   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1233749   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1233750   +drop
1233751   +H11
1233752   +H12
1233753   +H13
1233754   +H14
1233755   +H15
1233756   +H16
1233757   +H17
1233758   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1233759   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1233760   +* Renaming variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural18;
1233761   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1233762   +* Renaming Posterior variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural18;
1233763   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1233764   +drop Neural18_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar1;
1233765   +Neural18_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar1 = P_DepVar1;
1233766   +drop Neural18_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar0;
1233767   +Neural18_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar0 = P_DepVar0;
1233768   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1233769   +* Renaming _WARN_ variable for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural18;
1233770   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1233771   +length Neural18_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural18_WARN_ $4;
1233772   +drop Neural18_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural18_WARN_;
1233773   +Neural18_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural18_WARN_ = _WARN_;
1233774   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1233775   +* Ensmbl7: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring Code of model 3 of 5;
1233776   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1233777   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1233778   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1233779   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1233780   +* NODE: Neural22;
MPRINT(EM_DIAGRAM):   * NODE: Neural22;
1233781   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1233782   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1233783   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1233784   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1233785   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1233786   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1233787   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1233788   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1233789   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1233790   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1233791   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1233792   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1233793   +LENGTH _WARN_ $4
1233794   +      F_DepVar  $ 12
1233795   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1233796   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1233797   +
1233798   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1233799   +
1233800   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1233801   +
1233802   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1233803   +
1233804   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1233805   +
1233806   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1233807   +
1233808   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1233809   +
1233810   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1233811   +
1233812   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1233813   +
1233814   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1233815   +
1233816   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1233817   +
1233818   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1233819   +
1233820   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1233821   +
1233822   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1233823   +
1233824   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1233825   +
1233826   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1233827   +
1233828   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1233829   +
1233830   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1233831   +
1233832   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1233833   +
1233834   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1233835   +
1233836   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1233837   +
1233838   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1233839   +
1233840   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1233841   +
1233842   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1233843   +
1233844   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1233845   +
1233846   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1233847   +
1233848   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1233849   +
1233850   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1233851   +
1233852   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1233853   +
1233854   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1233855   +
1233856   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1233857   +
1233858   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1233859   +
1233860   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1233861   +
1233862   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1233863   +
1233864   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1233865   +
1233866   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1233867   +
1233868   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1233869   +
1233870   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1233871   +
1233872   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1233873   +
1233874   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1233875   +
1233876   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1233877   +
1233878   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1233879   +
1233880   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1233881   +
1233882   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1233883   +
1233884   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1233885   +
1233886   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1233887   +
1233888   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1233889   +
1233890   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1233891   +
1233892   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1233893   +
1233894   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1233895   +
1233896   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1233897   +
1233898   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1233899   +
1233900   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1233901   +
1233902   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1233903   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1233904   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1233905   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1233906   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1233907   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233908   +end;
MPRINT(EM_DIAGRAM):   end;
1233909   +else do;
MPRINT(EM_DIAGRAM):   else do;
1233910   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1233911   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1233912   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1233913   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1233914   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1233915   +   end;
MPRINT(EM_DIAGRAM):   end;
1233916   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1233917   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1233918   +   end;
MPRINT(EM_DIAGRAM):   end;
1233919   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1233920   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1233921   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1233922   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233923   +   end;
MPRINT(EM_DIAGRAM):   end;
1233924   +end;
MPRINT(EM_DIAGRAM):   end;
1233925   +
1233926   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1233927   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1233928   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1233929   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1233930   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1233931   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1233932   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1233933   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233934   +end;
MPRINT(EM_DIAGRAM):   end;
1233935   +else do;
MPRINT(EM_DIAGRAM):   else do;
1233936   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1233937   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1233938   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1233939   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1233940   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1233941   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1233942   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1233943   +   end;
MPRINT(EM_DIAGRAM):   end;
1233944   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1233945   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1233946   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1233947   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1233948   +   end;
MPRINT(EM_DIAGRAM):   end;
1233949   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1233950   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1233951   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1233952   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1233953   +   end;
MPRINT(EM_DIAGRAM):   end;
1233954   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1233955   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1233956   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1233957   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1233958   +   end;
MPRINT(EM_DIAGRAM):   end;
1233959   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1233960   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1233961   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1233962   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1233963   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1233964   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233965   +   end;
MPRINT(EM_DIAGRAM):   end;
1233966   +end;
MPRINT(EM_DIAGRAM):   end;
1233967   +
1233968   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1233969   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1233970   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1233971   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1233972   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1233973   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1233974   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1233975   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1233976   +end;
MPRINT(EM_DIAGRAM):   end;
1233977   +else do;
MPRINT(EM_DIAGRAM):   else do;
1233978   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1233979   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1233980   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1233981   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1233982   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1233983   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1233984   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1233985   +   end;
MPRINT(EM_DIAGRAM):   end;
1233986   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1233987   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1233988   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1233989   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1233990   +   end;
MPRINT(EM_DIAGRAM):   end;
1233991   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1233992   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1233993   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1233994   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1233995   +   end;
MPRINT(EM_DIAGRAM):   end;
1233996   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1233997   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1233998   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1233999   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1234000   +   end;
MPRINT(EM_DIAGRAM):   end;
1234001   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1234002   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1234003   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1234004   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1234005   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1234006   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234007   +   end;
MPRINT(EM_DIAGRAM):   end;
1234008   +end;
MPRINT(EM_DIAGRAM):   end;
1234009   +
1234010   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1234011   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1234012   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1234013   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1234014   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1234015   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1234016   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1234017   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234018   +end;
MPRINT(EM_DIAGRAM):   end;
1234019   +else do;
MPRINT(EM_DIAGRAM):   else do;
1234020   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1234021   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1234022   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1234023   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1234024   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1234025   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1234026   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1234027   +   end;
MPRINT(EM_DIAGRAM):   end;
1234028   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1234029   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1234030   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1234031   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1234032   +   end;
MPRINT(EM_DIAGRAM):   end;
1234033   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1234034   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1234035   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1234036   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1234037   +   end;
MPRINT(EM_DIAGRAM):   end;
1234038   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1234039   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1234040   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1234041   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1234042   +   end;
MPRINT(EM_DIAGRAM):   end;
1234043   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1234044   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1234045   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1234046   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1234047   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1234048   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234049   +   end;
MPRINT(EM_DIAGRAM):   end;
1234050   +end;
MPRINT(EM_DIAGRAM):   end;
1234051   +
1234052   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1234053   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1234054   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1234055   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1234056   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1234057   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1234058   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1234059   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234060   +end;
MPRINT(EM_DIAGRAM):   end;
1234061   +else do;
MPRINT(EM_DIAGRAM):   else do;
1234062   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1234063   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1234064   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1234065   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1234066   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1234067   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1234068   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1234069   +   end;
MPRINT(EM_DIAGRAM):   end;
1234070   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1234071   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1234072   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1234073   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1234074   +   end;
MPRINT(EM_DIAGRAM):   end;
1234075   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1234076   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1234077   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1234078   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1234079   +   end;
MPRINT(EM_DIAGRAM):   end;
1234080   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1234081   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1234082   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1234083   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1234084   +   end;
MPRINT(EM_DIAGRAM):   end;
1234085   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1234086   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1234087   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1234088   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1234089   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1234090   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234091   +   end;
MPRINT(EM_DIAGRAM):   end;
1234092   +end;
MPRINT(EM_DIAGRAM):   end;
1234093   +
1234094   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1234095   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1234096   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1234097   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1234098   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1234099   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1234100   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1234101   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234102   +end;
MPRINT(EM_DIAGRAM):   end;
1234103   +else do;
MPRINT(EM_DIAGRAM):   else do;
1234104   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1234105   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1234106   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1234107   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1234108   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1234109   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1234110   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1234111   +   end;
MPRINT(EM_DIAGRAM):   end;
1234112   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1234113   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1234114   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1234115   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1234116   +   end;
MPRINT(EM_DIAGRAM):   end;
1234117   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1234118   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1234119   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1234120   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1234121   +   end;
MPRINT(EM_DIAGRAM):   end;
1234122   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1234123   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1234124   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1234125   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1234126   +   end;
MPRINT(EM_DIAGRAM):   end;
1234127   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1234128   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1234129   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1234130   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1234131   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1234132   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234133   +   end;
MPRINT(EM_DIAGRAM):   end;
1234134   +end;
MPRINT(EM_DIAGRAM):   end;
1234135   +
1234136   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1234137   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1234138   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1234139   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1234140   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1234141   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1234142   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1234143   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234144   +end;
MPRINT(EM_DIAGRAM):   end;
1234145   +else do;
MPRINT(EM_DIAGRAM):   else do;
1234146   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1234147   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1234148   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1234149   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1234150   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1234151   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1234152   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1234153   +   end;
MPRINT(EM_DIAGRAM):   end;
1234154   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1234155   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1234156   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1234157   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1234158   +   end;
MPRINT(EM_DIAGRAM):   end;
1234159   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1234160   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1234161   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1234162   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1234163   +   end;
MPRINT(EM_DIAGRAM):   end;
1234164   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1234165   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1234166   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1234167   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1234168   +   end;
MPRINT(EM_DIAGRAM):   end;
1234169   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1234170   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1234171   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1234172   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1234173   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1234174   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234175   +   end;
MPRINT(EM_DIAGRAM):   end;
1234176   +end;
MPRINT(EM_DIAGRAM):   end;
1234177   +
1234178   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1234179   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1234180   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1234181   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1234182   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1234183   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1234184   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1234185   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234186   +end;
MPRINT(EM_DIAGRAM):   end;
1234187   +else do;
MPRINT(EM_DIAGRAM):   else do;
1234188   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1234189   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1234190   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1234191   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1234192   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1234193   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1234194   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1234195   +   end;
MPRINT(EM_DIAGRAM):   end;
1234196   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1234197   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1234198   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1234199   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1234200   +   end;
MPRINT(EM_DIAGRAM):   end;
1234201   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1234202   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1234203   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1234204   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1234205   +   end;
MPRINT(EM_DIAGRAM):   end;
1234206   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1234207   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1234208   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1234209   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1234210   +   end;
MPRINT(EM_DIAGRAM):   end;
1234211   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1234212   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1234213   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1234214   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1234215   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1234216   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234217   +   end;
MPRINT(EM_DIAGRAM):   end;
1234218   +end;
MPRINT(EM_DIAGRAM):   end;
1234219   +
1234220   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1234221   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1234222   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1234223   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1234224   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1234225   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1234226   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234227   +end;
MPRINT(EM_DIAGRAM):   end;
1234228   +else do;
MPRINT(EM_DIAGRAM):   else do;
1234229   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1234230   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1234231   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1234232   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1234233   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1234234   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1234235   +   end;
MPRINT(EM_DIAGRAM):   end;
1234236   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1234237   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1234238   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1234239   +   end;
MPRINT(EM_DIAGRAM):   end;
1234240   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1234241   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1234242   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1234243   +   end;
MPRINT(EM_DIAGRAM):   end;
1234244   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1234245   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1234246   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1234247   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1234248   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234249   +   end;
MPRINT(EM_DIAGRAM):   end;
1234250   +end;
MPRINT(EM_DIAGRAM):   end;
1234251   +
1234252   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1234253   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1234254   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1234255   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1234256   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1234257   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1234258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1234259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234260   +end;
MPRINT(EM_DIAGRAM):   end;
1234261   +else do;
MPRINT(EM_DIAGRAM):   else do;
1234262   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1234263   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1234264   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1234265   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1234266   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1234267   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1234268   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1234269   +   end;
MPRINT(EM_DIAGRAM):   end;
1234270   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1234271   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1234272   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1234273   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1234274   +   end;
MPRINT(EM_DIAGRAM):   end;
1234275   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1234276   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1234277   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1234278   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1234279   +   end;
MPRINT(EM_DIAGRAM):   end;
1234280   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1234281   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1234282   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1234283   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1234284   +   end;
MPRINT(EM_DIAGRAM):   end;
1234285   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1234286   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1234287   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1234288   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1234289   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1234290   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234291   +   end;
MPRINT(EM_DIAGRAM):   end;
1234292   +end;
MPRINT(EM_DIAGRAM):   end;
1234293   +
1234294   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1234295   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1234296   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1234297   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1234298   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1234299   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1234300   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1234301   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234302   +end;
MPRINT(EM_DIAGRAM):   end;
1234303   +else do;
MPRINT(EM_DIAGRAM):   else do;
1234304   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1234305   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1234306   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1234307   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1234308   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1234309   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1234310   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1234311   +   end;
MPRINT(EM_DIAGRAM):   end;
1234312   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1234313   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1234314   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1234315   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1234316   +   end;
MPRINT(EM_DIAGRAM):   end;
1234317   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1234318   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1234319   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1234320   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1234321   +   end;
MPRINT(EM_DIAGRAM):   end;
1234322   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1234323   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1234324   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1234325   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1234326   +   end;
MPRINT(EM_DIAGRAM):   end;
1234327   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1234328   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1234329   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1234330   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1234331   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1234332   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234333   +   end;
MPRINT(EM_DIAGRAM):   end;
1234334   +end;
MPRINT(EM_DIAGRAM):   end;
1234335   +
1234336   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1234337   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1234338   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1234339   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1234340   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1234341   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1234342   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1234343   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234344   +end;
MPRINT(EM_DIAGRAM):   end;
1234345   +else do;
MPRINT(EM_DIAGRAM):   else do;
1234346   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1234347   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1234348   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1234349   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1234350   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1234351   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1234352   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1234353   +   end;
MPRINT(EM_DIAGRAM):   end;
1234354   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1234355   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1234356   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1234357   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1234358   +   end;
MPRINT(EM_DIAGRAM):   end;
1234359   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1234360   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1234361   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1234362   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1234363   +   end;
MPRINT(EM_DIAGRAM):   end;
1234364   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1234365   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1234366   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1234367   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1234368   +   end;
MPRINT(EM_DIAGRAM):   end;
1234369   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1234370   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1234371   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1234372   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1234373   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1234374   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234375   +   end;
MPRINT(EM_DIAGRAM):   end;
1234376   +end;
MPRINT(EM_DIAGRAM):   end;
1234377   +
1234378   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1234379   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1234380   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1234381   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1234382   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1234383   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1234384   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1234385   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234386   +end;
MPRINT(EM_DIAGRAM):   end;
1234387   +else do;
MPRINT(EM_DIAGRAM):   else do;
1234388   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1234389   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1234390   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1234391   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1234392   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1234393   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1234394   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1234395   +   end;
MPRINT(EM_DIAGRAM):   end;
1234396   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1234397   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1234398   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1234399   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1234400   +   end;
MPRINT(EM_DIAGRAM):   end;
1234401   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1234402   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1234403   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1234404   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1234405   +   end;
MPRINT(EM_DIAGRAM):   end;
1234406   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1234407   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1234408   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1234409   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1234410   +   end;
MPRINT(EM_DIAGRAM):   end;
1234411   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1234412   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1234413   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1234414   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1234415   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1234416   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234417   +   end;
MPRINT(EM_DIAGRAM):   end;
1234418   +end;
MPRINT(EM_DIAGRAM):   end;
1234419   +
1234420   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1234421   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1234422   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1234423   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1234424   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1234425   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1234426   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1234427   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234428   +end;
MPRINT(EM_DIAGRAM):   end;
1234429   +else do;
MPRINT(EM_DIAGRAM):   else do;
1234430   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1234431   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1234432   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1234433   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1234434   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1234435   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1234436   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1234437   +   end;
MPRINT(EM_DIAGRAM):   end;
1234438   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1234439   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1234440   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1234441   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1234442   +   end;
MPRINT(EM_DIAGRAM):   end;
1234443   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1234444   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1234445   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1234446   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1234447   +   end;
MPRINT(EM_DIAGRAM):   end;
1234448   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1234449   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1234450   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1234451   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1234452   +   end;
MPRINT(EM_DIAGRAM):   end;
1234453   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1234454   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1234455   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1234456   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1234457   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1234458   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234459   +   end;
MPRINT(EM_DIAGRAM):   end;
1234460   +end;
MPRINT(EM_DIAGRAM):   end;
1234461   +
1234462   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1234463   +*** Checking missing input Interval
1234464   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1234465   +
1234466   +IF NMISS(
1234467   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1234468   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1234469   +
1234470   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234471   +END;
MPRINT(EM_DIAGRAM):   END;
1234472   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1234473   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1234474   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1234475   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1234476   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1234477   +END;
MPRINT(EM_DIAGRAM):   END;
1234478   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1234479   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1234480   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1234481   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1234482   +END;
MPRINT(EM_DIAGRAM):   END;
1234483   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1234484   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1234485   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1234486   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1234487   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1234488   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1234489   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1234490   +   H11  =     0.04727192845675 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.04727192845675 * S_Year_Birth ;
1234491   +   H12  =    -0.03499603197831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.03499603197831 * S_Year_Birth ;
1234492   +   H13  =      -0.249387333167 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.249387333167 * S_Year_Birth ;
1234493   +   H14  =    -0.18145230662582 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.18145230662582 * S_Year_Birth ;
1234494   +   H15  =    -0.07744416350216 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.07744416350216 * S_Year_Birth ;
1234495   +   H11  = H11  +    -0.25371698668168 * GRP_AcceptedCmp52
1234496   +          +     0.38185615945621 * GRP_Frq2  +     0.03545555759423 * GRP_Frq3
1234497   +          +    -0.00061660249238 * GRP_Frq4  +     0.41779261820045 *
1234498   +        GRP_Income2  +     0.51800912898069 * GRP_Income3
1234499   +          +    -0.36427548932695 * GRP_Income4  +    -0.06433979614617 *
1234500   +        GRP_Mnt2  +     0.00045120565293 * GRP_Mnt3  +    -0.13992317322759 *
1234501   +        GRP_Mnt4  +     0.34207391538024 * GRP_MntFishProducts2
1234502   +          +     0.03411739869638 * GRP_MntFishProducts3
1234503   +          +      -0.083693402353 * GRP_MntFishProducts4
1234504   +          +     -0.1318128730187 * GRP_MntGoldProds2
1234505   +          +     -0.0614737729382 * GRP_MntGoldProds3
1234506   +          +    -0.00372986687449 * GRP_MntGoldProds4
1234507   +          +     -0.3129171829017 * GRP_MntMeatProducts2
1234508   +          +     0.01519664718127 * GRP_MntMeatProducts3
1234509   +          +     0.29997111548812 * GRP_MntMeatProducts4
1234510   +          +       0.389673942682 * GRP_MntWines2  +     0.21159785789434 *
1234511   +        GRP_MntWines3  +    -0.26921349986988 * GRP_MntWines4
1234512   +          +    -0.47013218092095 * GRP_NumCatalogPurchases3
1234513   +          +     0.23943411636141 * GRP_NumCatalogPurchases4
1234514   +          +    -0.68715024477164 * GRP_NumDistPurchases2
1234515   +          +    -0.09178471992122 * GRP_NumDistPurchases3
1234516   +          +    -0.01170225640351 * GRP_NumDistPurchases4
1234517   +          +    -0.14760833919227 * GRP_NumWebPurchases2
1234518   +          +     0.02966820025811 * GRP_NumWebPurchases3
1234519   +          +    -0.04127892210576 * GRP_NumWebPurchases4
1234520   +          +    -0.45467119970502 * GRP_RFMstat2  +    -0.14644406995031 *
1234521   +        GRP_RFMstat3  +    -0.12660007404037 * GRP_RFMstat4
1234522   +          +     0.04829215694488 * GRP_RMntFrq2  +     0.10137738373353 *
1234523   +        GRP_RMntFrq3  +     -0.2873514159435 * GRP_RMntFrq4
1234524   +          +     0.61737333380878 * GRP_Recency2  +     0.16651370318087 *
1234525   +        GRP_Recency3  +    -0.15382569411658 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25371698668168 * GRP_AcceptedCmp52 + 0.38185615945621 *
GRP_Frq2 + 0.03545555759423 * GRP_Frq3 + -0.00061660249238 * GRP_Frq4 + 0.41779261820045 *
GRP_Income2 + 0.51800912898069 * GRP_Income3 + -0.36427548932695 * GRP_Income4 +
-0.06433979614617 * GRP_Mnt2 + 0.00045120565293 * GRP_Mnt3 + -0.13992317322759 * GRP_Mnt4 +
0.34207391538024 * GRP_MntFishProducts2 + 0.03411739869638 * GRP_MntFishProducts3 +
-0.083693402353 * GRP_MntFishProducts4 + -0.1318128730187 * GRP_MntGoldProds2 +
-0.0614737729382 * GRP_MntGoldProds3 + -0.00372986687449 * GRP_MntGoldProds4 +
-0.3129171829017 * GRP_MntMeatProducts2 + 0.01519664718127 * GRP_MntMeatProducts3 +
0.29997111548812 * GRP_MntMeatProducts4 + 0.389673942682 * GRP_MntWines2 + 0.21159785789434 *
GRP_MntWines3 + -0.26921349986988 * GRP_MntWines4 + -0.47013218092095 *
GRP_NumCatalogPurchases3 + 0.23943411636141 * GRP_NumCatalogPurchases4 + -0.68715024477164 *
GRP_NumDistPurchases2 + -0.09178471992122 * GRP_NumDistPurchases3 + -0.01170225640351 *
GRP_NumDistPurchases4 + -0.14760833919227 * GRP_NumWebPurchases2 + 0.02966820025811 *
GRP_NumWebPurchases3 + -0.04127892210576 * GRP_NumWebPurchases4 + -0.45467119970502 *
GRP_RFMstat2 + -0.14644406995031 * GRP_RFMstat3 + -0.12660007404037 * GRP_RFMstat4 +
0.04829215694488 * GRP_RMntFrq2 + 0.10137738373353 * GRP_RMntFrq3 + -0.2873514159435 *
GRP_RMntFrq4 + 0.61737333380878 * GRP_Recency2 + 0.16651370318087 * GRP_Recency3 +
-0.15382569411658 * GRP_Recency4 ;
1234526   +   H12  = H12  +    -0.00960598895677 * GRP_AcceptedCmp52
1234527   +          +    -0.13877780492855 * GRP_Frq2  +    -0.12078849771739 * GRP_Frq3
1234528   +          +     0.25058833013238 * GRP_Frq4  +     0.13932014454657 *
1234529   +        GRP_Income2  +    -0.11560599273748 * GRP_Income3
1234530   +          +    -0.36622829757109 * GRP_Income4  +     0.12796853065131 *
1234531   +        GRP_Mnt2  +    -0.15829126446209 * GRP_Mnt3  +    -0.35779207872654 *
1234532   +        GRP_Mnt4  +     0.06590491513415 * GRP_MntFishProducts2
1234533   +          +     0.00842475350903 * GRP_MntFishProducts3
1234534   +          +     -0.1623103908885 * GRP_MntFishProducts4
1234535   +          +    -0.23845524931139 * GRP_MntGoldProds2
1234536   +          +    -0.07128567155438 * GRP_MntGoldProds3
1234537   +          +     0.25778887379163 * GRP_MntGoldProds4
1234538   +          +    -0.12224351227219 * GRP_MntMeatProducts2
1234539   +          +     0.06269922653052 * GRP_MntMeatProducts3
1234540   +          +      0.2587215409794 * GRP_MntMeatProducts4
1234541   +          +     0.20096090232239 * GRP_MntWines2  +    -0.16858917844476 *
1234542   +        GRP_MntWines3  +     0.03815809499779 * GRP_MntWines4
1234543   +          +     0.05177526225067 * GRP_NumCatalogPurchases3
1234544   +          +    -0.18831777813313 * GRP_NumCatalogPurchases4
1234545   +          +     0.12374838743082 * GRP_NumDistPurchases2
1234546   +          +    -0.19910688422086 * GRP_NumDistPurchases3
1234547   +          +    -0.03804569737208 * GRP_NumDistPurchases4
1234548   +          +    -0.17179633678901 * GRP_NumWebPurchases2
1234549   +          +    -0.08560184232365 * GRP_NumWebPurchases3
1234550   +          +     0.09237237622553 * GRP_NumWebPurchases4
1234551   +          +     0.01544327143979 * GRP_RFMstat2  +      0.1127818122444 *
1234552   +        GRP_RFMstat3  +    -0.21371736650143 * GRP_RFMstat4
1234553   +          +    -0.14005478166078 * GRP_RMntFrq2  +     0.07954568858907 *
1234554   +        GRP_RMntFrq3  +    -0.02313269086836 * GRP_RMntFrq4
1234555   +          +     0.04358116545272 * GRP_Recency2  +    -0.02969695172962 *
1234556   +        GRP_Recency3  +     0.00206593904485 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00960598895677 * GRP_AcceptedCmp52 + -0.13877780492855 *
GRP_Frq2 + -0.12078849771739 * GRP_Frq3 + 0.25058833013238 * GRP_Frq4 + 0.13932014454657 *
GRP_Income2 + -0.11560599273748 * GRP_Income3 + -0.36622829757109 * GRP_Income4 +
0.12796853065131 * GRP_Mnt2 + -0.15829126446209 * GRP_Mnt3 + -0.35779207872654 * GRP_Mnt4 +
0.06590491513415 * GRP_MntFishProducts2 + 0.00842475350903 * GRP_MntFishProducts3 +
-0.1623103908885 * GRP_MntFishProducts4 + -0.23845524931139 * GRP_MntGoldProds2 +
-0.07128567155438 * GRP_MntGoldProds3 + 0.25778887379163 * GRP_MntGoldProds4 +
-0.12224351227219 * GRP_MntMeatProducts2 + 0.06269922653052 * GRP_MntMeatProducts3 +
0.2587215409794 * GRP_MntMeatProducts4 + 0.20096090232239 * GRP_MntWines2 + -0.16858917844476
* GRP_MntWines3 + 0.03815809499779 * GRP_MntWines4 + 0.05177526225067 *
GRP_NumCatalogPurchases3 + -0.18831777813313 * GRP_NumCatalogPurchases4 + 0.12374838743082 *
GRP_NumDistPurchases2 + -0.19910688422086 * GRP_NumDistPurchases3 + -0.03804569737208 *
GRP_NumDistPurchases4 + -0.17179633678901 * GRP_NumWebPurchases2 + -0.08560184232365 *
GRP_NumWebPurchases3 + 0.09237237622553 * GRP_NumWebPurchases4 + 0.01544327143979 *
GRP_RFMstat2 + 0.1127818122444 * GRP_RFMstat3 + -0.21371736650143 * GRP_RFMstat4 +
-0.14005478166078 * GRP_RMntFrq2 + 0.07954568858907 * GRP_RMntFrq3 + -0.02313269086836 *
GRP_RMntFrq4 + 0.04358116545272 * GRP_Recency2 + -0.02969695172962 * GRP_Recency3 +
0.00206593904485 * GRP_Recency4 ;
1234557   +   H13  = H13  +     0.11273135858209 * GRP_AcceptedCmp52
1234558   +          +    -0.15015665173608 * GRP_Frq2  +    -0.20454924588356 * GRP_Frq3
1234559   +          +    -0.04047998964496 * GRP_Frq4  +    -0.29897237144541 *
1234560   +        GRP_Income2  +      -0.028464296882 * GRP_Income3
1234561   +          +     0.24836294191696 * GRP_Income4  +     0.08738925553158 *
1234562   +        GRP_Mnt2  +     0.00962293230168 * GRP_Mnt3  +    -0.12661643514597 *
1234563   +        GRP_Mnt4  +    -0.03747719154948 * GRP_MntFishProducts2
1234564   +          +    -0.07078012229572 * GRP_MntFishProducts3
1234565   +          +    -0.14569186671189 * GRP_MntFishProducts4
1234566   +          +     0.14963390032413 * GRP_MntGoldProds2
1234567   +          +    -0.11869917970226 * GRP_MntGoldProds3
1234568   +          +     0.25943105626615 * GRP_MntGoldProds4
1234569   +          +     0.36609689271233 * GRP_MntMeatProducts2
1234570   +          +     0.10969864655073 * GRP_MntMeatProducts3
1234571   +          +    -0.03446779336952 * GRP_MntMeatProducts4
1234572   +          +    -0.16882321573662 * GRP_MntWines2  +     0.07914922328232 *
1234573   +        GRP_MntWines3  +     0.13243594484158 * GRP_MntWines4
1234574   +          +     0.39758714937962 * GRP_NumCatalogPurchases3
1234575   +          +     0.31434011051179 * GRP_NumCatalogPurchases4
1234576   +          +     0.08068432649382 * GRP_NumDistPurchases2
1234577   +          +    -0.08875599058351 * GRP_NumDistPurchases3
1234578   +          +     0.26738740475822 * GRP_NumDistPurchases4
1234579   +          +     -0.0916247468051 * GRP_NumWebPurchases2
1234580   +          +    -0.17267741073665 * GRP_NumWebPurchases3
1234581   +          +     0.01349113315351 * GRP_NumWebPurchases4
1234582   +          +    -0.19075973281592 * GRP_RFMstat2  +    -0.20146461162283 *
1234583   +        GRP_RFMstat3  +    -0.13097471458987 * GRP_RFMstat4
1234584   +          +     0.06761773631631 * GRP_RMntFrq2  +     0.27576244694442 *
1234585   +        GRP_RMntFrq3  +      0.1281788430307 * GRP_RMntFrq4
1234586   +          +    -0.15939599795679 * GRP_Recency2  +    -0.00210397286084 *
1234587   +        GRP_Recency3  +     0.28490847560375 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.11273135858209 * GRP_AcceptedCmp52 + -0.15015665173608 *
GRP_Frq2 + -0.20454924588356 * GRP_Frq3 + -0.04047998964496 * GRP_Frq4 + -0.29897237144541 *
GRP_Income2 + -0.028464296882 * GRP_Income3 + 0.24836294191696 * GRP_Income4 +
0.08738925553158 * GRP_Mnt2 + 0.00962293230168 * GRP_Mnt3 + -0.12661643514597 * GRP_Mnt4 +
-0.03747719154948 * GRP_MntFishProducts2 + -0.07078012229572 * GRP_MntFishProducts3 +
-0.14569186671189 * GRP_MntFishProducts4 + 0.14963390032413 * GRP_MntGoldProds2 +
-0.11869917970226 * GRP_MntGoldProds3 + 0.25943105626615 * GRP_MntGoldProds4 +
0.36609689271233 * GRP_MntMeatProducts2 + 0.10969864655073 * GRP_MntMeatProducts3 +
-0.03446779336952 * GRP_MntMeatProducts4 + -0.16882321573662 * GRP_MntWines2 +
0.07914922328232 * GRP_MntWines3 + 0.13243594484158 * GRP_MntWines4 + 0.39758714937962 *
GRP_NumCatalogPurchases3 + 0.31434011051179 * GRP_NumCatalogPurchases4 + 0.08068432649382 *
GRP_NumDistPurchases2 + -0.08875599058351 * GRP_NumDistPurchases3 + 0.26738740475822 *
GRP_NumDistPurchases4 + -0.0916247468051 * GRP_NumWebPurchases2 + -0.17267741073665 *
GRP_NumWebPurchases3 + 0.01349113315351 * GRP_NumWebPurchases4 + -0.19075973281592 *
GRP_RFMstat2 + -0.20146461162283 * GRP_RFMstat3 + -0.13097471458987 * GRP_RFMstat4 +
0.06761773631631 * GRP_RMntFrq2 + 0.27576244694442 * GRP_RMntFrq3 + 0.1281788430307 *
GRP_RMntFrq4 + -0.15939599795679 * GRP_Recency2 + -0.00210397286084 * GRP_Recency3 +
0.28490847560375 * GRP_Recency4 ;
1234588   +   H14  = H14  +     0.27713596853764 * GRP_AcceptedCmp52
1234589   +          +    -0.11480256849934 * GRP_Frq2  +      0.0285240312455 * GRP_Frq3
1234590   +          +     0.09416065239682 * GRP_Frq4  +     -0.1229961422993 *
1234591   +        GRP_Income2  +     0.01867364051002 * GRP_Income3
1234592   +          +     0.05820105400306 * GRP_Income4  +    -0.16873429334819 *
1234593   +        GRP_Mnt2  +    -0.01221085891741 * GRP_Mnt3  +    -0.10225236565235 *
1234594   +        GRP_Mnt4  +    -0.09613387975858 * GRP_MntFishProducts2
1234595   +          +    -0.18334484867808 * GRP_MntFishProducts3
1234596   +          +     0.13484477561766 * GRP_MntFishProducts4
1234597   +          +    -0.05145913380692 * GRP_MntGoldProds2
1234598   +          +     0.04459987080173 * GRP_MntGoldProds3
1234599   +          +     0.01539767655772 * GRP_MntGoldProds4
1234600   +          +     0.26537148543352 * GRP_MntMeatProducts2
1234601   +          +     0.22913678530176 * GRP_MntMeatProducts3
1234602   +          +     0.21262490658374 * GRP_MntMeatProducts4
1234603   +          +    -0.11513521401249 * GRP_MntWines2  +    -0.14420673462527 *
1234604   +        GRP_MntWines3  +     0.11949691312637 * GRP_MntWines4
1234605   +          +    -0.02289734111038 * GRP_NumCatalogPurchases3
1234606   +          +    -0.12014539185275 * GRP_NumCatalogPurchases4
1234607   +          +     0.09224372228857 * GRP_NumDistPurchases2
1234608   +          +    -0.14205094961773 * GRP_NumDistPurchases3
1234609   +          +    -0.27160467877541 * GRP_NumDistPurchases4
1234610   +          +    -0.15428446875019 * GRP_NumWebPurchases2
1234611   +          +    -0.36914157795453 * GRP_NumWebPurchases3
1234612   +          +    -0.41610537355059 * GRP_NumWebPurchases4
1234613   +          +    -0.29442656678388 * GRP_RFMstat2  +     0.03961235509827 *
1234614   +        GRP_RFMstat3  +    -0.18322878380243 * GRP_RFMstat4
1234615   +          +     0.06857495854453 * GRP_RMntFrq2  +     0.08325769999442 *
1234616   +        GRP_RMntFrq3  +     0.24334424933749 * GRP_RMntFrq4
1234617   +          +    -0.50963259840069 * GRP_Recency2  +    -0.24163634485458 *
1234618   +        GRP_Recency3  +     -0.1023689653207 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.27713596853764 * GRP_AcceptedCmp52 + -0.11480256849934 *
GRP_Frq2 + 0.0285240312455 * GRP_Frq3 + 0.09416065239682 * GRP_Frq4 + -0.1229961422993 *
GRP_Income2 + 0.01867364051002 * GRP_Income3 + 0.05820105400306 * GRP_Income4 +
-0.16873429334819 * GRP_Mnt2 + -0.01221085891741 * GRP_Mnt3 + -0.10225236565235 * GRP_Mnt4 +
-0.09613387975858 * GRP_MntFishProducts2 + -0.18334484867808 * GRP_MntFishProducts3 +
0.13484477561766 * GRP_MntFishProducts4 + -0.05145913380692 * GRP_MntGoldProds2 +
0.04459987080173 * GRP_MntGoldProds3 + 0.01539767655772 * GRP_MntGoldProds4 + 0.26537148543352
* GRP_MntMeatProducts2 + 0.22913678530176 * GRP_MntMeatProducts3 + 0.21262490658374 *
GRP_MntMeatProducts4 + -0.11513521401249 * GRP_MntWines2 + -0.14420673462527 * GRP_MntWines3 +
0.11949691312637 * GRP_MntWines4 + -0.02289734111038 * GRP_NumCatalogPurchases3 +
-0.12014539185275 * GRP_NumCatalogPurchases4 + 0.09224372228857 * GRP_NumDistPurchases2 +
-0.14205094961773 * GRP_NumDistPurchases3 + -0.27160467877541 * GRP_NumDistPurchases4 +
-0.15428446875019 * GRP_NumWebPurchases2 + -0.36914157795453 * GRP_NumWebPurchases3 +
-0.41610537355059 * GRP_NumWebPurchases4 + -0.29442656678388 * GRP_RFMstat2 + 0.03961235509827
* GRP_RFMstat3 + -0.18322878380243 * GRP_RFMstat4 + 0.06857495854453 * GRP_RMntFrq2 +
0.08325769999442 * GRP_RMntFrq3 + 0.24334424933749 * GRP_RMntFrq4 + -0.50963259840069 *
GRP_Recency2 + -0.24163634485458 * GRP_Recency3 + -0.1023689653207 * GRP_Recency4 ;
1234619   +   H15  = H15  +    -0.58071728739803 * GRP_AcceptedCmp52
1234620   +          +    -0.33803120859672 * GRP_Frq2  +    -0.08690701614481 * GRP_Frq3
1234621   +          +     0.06107334775294 * GRP_Frq4  +     0.00751374071999 *
1234622   +        GRP_Income2  +     0.20911873861779 * GRP_Income3
1234623   +          +    -0.14977199160976 * GRP_Income4  +     0.15427447371686 *
1234624   +        GRP_Mnt2  +    -0.24298277669059 * GRP_Mnt3  +    -0.02935492111499 *
1234625   +        GRP_Mnt4  +     0.04923982061963 * GRP_MntFishProducts2
1234626   +          +    -0.08952948139975 * GRP_MntFishProducts3
1234627   +          +     0.15338133379465 * GRP_MntFishProducts4
1234628   +          +     0.04821845492824 * GRP_MntGoldProds2
1234629   +          +     0.20117781904284 * GRP_MntGoldProds3
1234630   +          +     0.13013396690778 * GRP_MntGoldProds4
1234631   +          +    -0.03940841472157 * GRP_MntMeatProducts2
1234632   +          +     0.03161017721112 * GRP_MntMeatProducts3
1234633   +          +    -0.21938330779867 * GRP_MntMeatProducts4
1234634   +          +      0.3039864690076 * GRP_MntWines2  +     0.33038690291786 *
1234635   +        GRP_MntWines3  +     0.03314465135063 * GRP_MntWines4
1234636   +          +    -0.07655889365033 * GRP_NumCatalogPurchases3
1234637   +          +    -0.17353955777897 * GRP_NumCatalogPurchases4
1234638   +          +    -0.16058154480995 * GRP_NumDistPurchases2
1234639   +          +    -0.30101518928361 * GRP_NumDistPurchases3
1234640   +          +      0.0473480026433 * GRP_NumDistPurchases4
1234641   +          +     0.03132883547053 * GRP_NumWebPurchases2
1234642   +          +    -0.29425936985479 * GRP_NumWebPurchases3
1234643   +          +    -0.12527625315403 * GRP_NumWebPurchases4
1234644   +          +     0.30683805591766 * GRP_RFMstat2  +    -0.21275334469197 *
1234645   +        GRP_RFMstat3  +     0.32474239840607 * GRP_RFMstat4
1234646   +          +     0.09289841520091 * GRP_RMntFrq2  +     0.22137778862379 *
1234647   +        GRP_RMntFrq3  +     0.12254524703503 * GRP_RMntFrq4
1234648   +          +     0.46836624272095 * GRP_Recency2  +     0.01747843890017 *
1234649   +        GRP_Recency3  +    -0.28363324780869 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.58071728739803 * GRP_AcceptedCmp52 + -0.33803120859672 *
GRP_Frq2 + -0.08690701614481 * GRP_Frq3 + 0.06107334775294 * GRP_Frq4 + 0.00751374071999 *
GRP_Income2 + 0.20911873861779 * GRP_Income3 + -0.14977199160976 * GRP_Income4 +
0.15427447371686 * GRP_Mnt2 + -0.24298277669059 * GRP_Mnt3 + -0.02935492111499 * GRP_Mnt4 +
0.04923982061963 * GRP_MntFishProducts2 + -0.08952948139975 * GRP_MntFishProducts3 +
0.15338133379465 * GRP_MntFishProducts4 + 0.04821845492824 * GRP_MntGoldProds2 +
0.20117781904284 * GRP_MntGoldProds3 + 0.13013396690778 * GRP_MntGoldProds4 +
-0.03940841472157 * GRP_MntMeatProducts2 + 0.03161017721112 * GRP_MntMeatProducts3 +
-0.21938330779867 * GRP_MntMeatProducts4 + 0.3039864690076 * GRP_MntWines2 + 0.33038690291786
* GRP_MntWines3 + 0.03314465135063 * GRP_MntWines4 + -0.07655889365033 *
GRP_NumCatalogPurchases3 + -0.17353955777897 * GRP_NumCatalogPurchases4 + -0.16058154480995 *
GRP_NumDistPurchases2 + -0.30101518928361 * GRP_NumDistPurchases3 + 0.0473480026433 *
GRP_NumDistPurchases4 + 0.03132883547053 * GRP_NumWebPurchases2 + -0.29425936985479 *
GRP_NumWebPurchases3 + -0.12527625315403 * GRP_NumWebPurchases4 + 0.30683805591766 *
GRP_RFMstat2 + -0.21275334469197 * GRP_RFMstat3 + 0.32474239840607 * GRP_RFMstat4 +
0.09289841520091 * GRP_RMntFrq2 + 0.22137778862379 * GRP_RMntFrq3 + 0.12254524703503 *
GRP_RMntFrq4 + 0.46836624272095 * GRP_Recency2 + 0.01747843890017 * GRP_Recency3 +
-0.28363324780869 * GRP_Recency4 ;
1234650   +   H11  =    -0.09329902916762 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.09329902916762 + H11 ;
1234651   +   H12  =     0.21894996952826 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.21894996952826 + H12 ;
1234652   +   H13  =    -0.97210428395662 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.97210428395662 + H13 ;
1234653   +   H14  =    -0.47241372860242 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.47241372860242 + H14 ;
1234654   +   H15  =    -0.89551869986721 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.89551869986721 + H15 ;
1234655   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1234656   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1234657   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1234658   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1234659   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1234660   +END;
MPRINT(EM_DIAGRAM):   END;
1234661   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1234662   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1234663   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1234664   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1234665   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1234666   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1234667   +END;
MPRINT(EM_DIAGRAM):   END;
1234668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1234669   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1234670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1234671   +
1234672   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1234673   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1234674   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1234675   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1234676   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1234677   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1234678   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1234679   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1234680   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1234681   +end;
MPRINT(EM_DIAGRAM):   end;
1234682   +else do;
MPRINT(EM_DIAGRAM):   else do;
1234683   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1234684   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1234685   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1234686   +   end;
MPRINT(EM_DIAGRAM):   end;
1234687   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1234688   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1234689   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1234690   +   end;
MPRINT(EM_DIAGRAM):   end;
1234691   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1234692   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1234693   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1234694   +   end;
MPRINT(EM_DIAGRAM):   end;
1234695   +end;
MPRINT(EM_DIAGRAM):   end;
1234696   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1234697   +   P_DepVar1  =     2.68876927057109 * H11  +     0.34381275178608 * H12
1234698   +          +    -1.13153750790029 * H13  +    -0.93563986714952 * H14
1234699   +          +     1.84382077322412 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.68876927057109 * H11 + 0.34381275178608 * H12 +
-1.13153750790029 * H13 + -0.93563986714952 * H14 + 1.84382077322412 * H15 ;
1234700   +   P_DepVar1  =    -1.53169022796223 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53169022796223 + P_DepVar1 ;
1234701   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1234702   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1234703   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1234704   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1234705   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1234706   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1234707   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1234708   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1234709   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1234710   +END;
MPRINT(EM_DIAGRAM):   END;
1234711   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1234712   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1234713   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1234714   +END;
MPRINT(EM_DIAGRAM):   END;
1234715   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1234716   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1234717   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1234718   +END;
MPRINT(EM_DIAGRAM):   END;
1234719   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1234720   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1234721   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1234722   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1234723   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1234724   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1234725   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1234726   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1234727   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1234728   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1234729   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1234730   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1234731   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1234732   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1234733   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1234734   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1234735   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1234736   +END;
MPRINT(EM_DIAGRAM):   END;
1234737   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1234738   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1234739   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1234740   +drop
1234741   +H11
1234742   +H12
1234743   +H13
1234744   +H14
1234745   +H15
1234746   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1234747   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1234748   +* Renaming variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural22;
1234749   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1234750   +* Renaming Posterior variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural22;
1234751   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1234752   +drop Neural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar1;
1234753   +Neural22_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar1 = P_DepVar1;
1234754   +drop Neural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar0;
1234755   +Neural22_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar0 = P_DepVar0;
1234756   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1234757   +* Renaming _WARN_ variable for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural22;
1234758   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1234759   +length Neural22_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural22_WARN_ $4;
1234760   +drop Neural22_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural22_WARN_;
1234761   +Neural22_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural22_WARN_ = _WARN_;
1234762   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1234763   +* Ensmbl7: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring Code of model 4 of 5;
1234764   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1234765   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1234766   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1234767   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1234768   +* NODE: Neural21;
MPRINT(EM_DIAGRAM):   * NODE: Neural21;
1234769   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1234770   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1234771   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1234772   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1234773   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1234774   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1234775   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1234776   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1234777   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1234778   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1234779   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1234780   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1234781   +LENGTH _WARN_ $4
1234782   +      F_DepVar  $ 12
1234783   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1234784   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1234785   +
1234786   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1234787   +
1234788   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1234789   +
1234790   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1234791   +
1234792   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1234793   +
1234794   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1234795   +
1234796   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1234797   +
1234798   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1234799   +
1234800   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1234801   +
1234802   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1234803   +
1234804   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1234805   +
1234806   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1234807   +
1234808   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1234809   +
1234810   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1234811   +
1234812   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1234813   +
1234814   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1234815   +
1234816   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1234817   +
1234818   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1234819   +
1234820   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1234821   +
1234822   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1234823   +
1234824   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1234825   +
1234826   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1234827   +
1234828   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1234829   +
1234830   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1234831   +
1234832   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1234833   +
1234834   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1234835   +
1234836   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1234837   +
1234838   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1234839   +
1234840   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1234841   +
1234842   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1234843   +
1234844   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1234845   +
1234846   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1234847   +
1234848   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1234849   +
1234850   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1234851   +
1234852   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1234853   +
1234854   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1234855   +
1234856   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1234857   +
1234858   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1234859   +
1234860   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1234861   +
1234862   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1234863   +
1234864   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1234865   +
1234866   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1234867   +
1234868   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1234869   +
1234870   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1234871   +
1234872   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1234873   +
1234874   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1234875   +
1234876   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1234877   +
1234878   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1234879   +
1234880   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1234881   +
1234882   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1234883   +
1234884   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1234885   +
1234886   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1234887   +
1234888   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1234889   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1234890   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1234891   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1234892   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1234893   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234894   +end;
MPRINT(EM_DIAGRAM):   end;
1234895   +else do;
MPRINT(EM_DIAGRAM):   else do;
1234896   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1234897   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1234898   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1234899   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1234900   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1234901   +   end;
MPRINT(EM_DIAGRAM):   end;
1234902   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1234903   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1234904   +   end;
MPRINT(EM_DIAGRAM):   end;
1234905   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1234906   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1234907   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1234908   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234909   +   end;
MPRINT(EM_DIAGRAM):   end;
1234910   +end;
MPRINT(EM_DIAGRAM):   end;
1234911   +
1234912   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1234913   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1234914   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1234915   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1234916   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1234917   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1234918   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1234919   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234920   +end;
MPRINT(EM_DIAGRAM):   end;
1234921   +else do;
MPRINT(EM_DIAGRAM):   else do;
1234922   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1234923   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1234924   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1234925   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1234926   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1234927   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1234928   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1234929   +   end;
MPRINT(EM_DIAGRAM):   end;
1234930   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1234931   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1234932   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1234933   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1234934   +   end;
MPRINT(EM_DIAGRAM):   end;
1234935   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1234936   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1234937   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1234938   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1234939   +   end;
MPRINT(EM_DIAGRAM):   end;
1234940   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1234941   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1234942   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1234943   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1234944   +   end;
MPRINT(EM_DIAGRAM):   end;
1234945   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1234946   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1234947   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1234948   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1234949   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1234950   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234951   +   end;
MPRINT(EM_DIAGRAM):   end;
1234952   +end;
MPRINT(EM_DIAGRAM):   end;
1234953   +
1234954   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1234955   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1234956   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1234957   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1234958   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1234959   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1234960   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1234961   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234962   +end;
MPRINT(EM_DIAGRAM):   end;
1234963   +else do;
MPRINT(EM_DIAGRAM):   else do;
1234964   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1234965   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1234966   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1234967   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1234968   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1234969   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1234970   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1234971   +   end;
MPRINT(EM_DIAGRAM):   end;
1234972   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1234973   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1234974   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1234975   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1234976   +   end;
MPRINT(EM_DIAGRAM):   end;
1234977   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1234978   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1234979   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1234980   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1234981   +   end;
MPRINT(EM_DIAGRAM):   end;
1234982   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1234983   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1234984   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1234985   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1234986   +   end;
MPRINT(EM_DIAGRAM):   end;
1234987   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1234988   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1234989   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1234990   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1234991   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1234992   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1234993   +   end;
MPRINT(EM_DIAGRAM):   end;
1234994   +end;
MPRINT(EM_DIAGRAM):   end;
1234995   +
1234996   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1234997   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1234998   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1234999   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1235000   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1235001   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1235002   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1235003   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235004   +end;
MPRINT(EM_DIAGRAM):   end;
1235005   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235006   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1235007   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1235008   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235009   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1235010   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1235011   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1235012   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1235013   +   end;
MPRINT(EM_DIAGRAM):   end;
1235014   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1235015   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1235016   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1235017   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1235018   +   end;
MPRINT(EM_DIAGRAM):   end;
1235019   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1235020   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1235021   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1235022   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1235023   +   end;
MPRINT(EM_DIAGRAM):   end;
1235024   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1235025   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1235026   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1235027   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1235028   +   end;
MPRINT(EM_DIAGRAM):   end;
1235029   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235030   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1235031   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1235032   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1235033   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1235034   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235035   +   end;
MPRINT(EM_DIAGRAM):   end;
1235036   +end;
MPRINT(EM_DIAGRAM):   end;
1235037   +
1235038   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1235039   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1235040   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1235041   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1235042   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1235043   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1235044   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1235045   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235046   +end;
MPRINT(EM_DIAGRAM):   end;
1235047   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235048   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1235049   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1235050   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235051   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1235052   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1235053   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1235054   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1235055   +   end;
MPRINT(EM_DIAGRAM):   end;
1235056   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1235057   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1235058   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1235059   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1235060   +   end;
MPRINT(EM_DIAGRAM):   end;
1235061   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1235062   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1235063   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1235064   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1235065   +   end;
MPRINT(EM_DIAGRAM):   end;
1235066   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1235067   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1235068   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1235069   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1235070   +   end;
MPRINT(EM_DIAGRAM):   end;
1235071   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235072   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1235073   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1235074   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1235075   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1235076   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235077   +   end;
MPRINT(EM_DIAGRAM):   end;
1235078   +end;
MPRINT(EM_DIAGRAM):   end;
1235079   +
1235080   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1235081   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1235082   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1235083   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1235084   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1235085   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1235086   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1235087   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235088   +end;
MPRINT(EM_DIAGRAM):   end;
1235089   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235090   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1235091   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1235092   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235093   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1235094   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1235095   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1235096   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1235097   +   end;
MPRINT(EM_DIAGRAM):   end;
1235098   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1235099   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1235100   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1235101   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1235102   +   end;
MPRINT(EM_DIAGRAM):   end;
1235103   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1235104   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1235105   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1235106   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1235107   +   end;
MPRINT(EM_DIAGRAM):   end;
1235108   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1235109   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1235110   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1235111   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1235112   +   end;
MPRINT(EM_DIAGRAM):   end;
1235113   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235114   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1235115   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1235116   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1235117   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1235118   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235119   +   end;
MPRINT(EM_DIAGRAM):   end;
1235120   +end;
MPRINT(EM_DIAGRAM):   end;
1235121   +
1235122   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1235123   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1235124   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1235125   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1235126   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1235127   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1235128   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1235129   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235130   +end;
MPRINT(EM_DIAGRAM):   end;
1235131   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235132   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1235133   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1235134   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235135   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1235136   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1235137   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1235138   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1235139   +   end;
MPRINT(EM_DIAGRAM):   end;
1235140   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1235141   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1235142   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1235143   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1235144   +   end;
MPRINT(EM_DIAGRAM):   end;
1235145   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1235146   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1235147   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1235148   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1235149   +   end;
MPRINT(EM_DIAGRAM):   end;
1235150   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1235151   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1235152   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1235153   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1235154   +   end;
MPRINT(EM_DIAGRAM):   end;
1235155   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235156   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1235157   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1235158   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1235159   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1235160   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235161   +   end;
MPRINT(EM_DIAGRAM):   end;
1235162   +end;
MPRINT(EM_DIAGRAM):   end;
1235163   +
1235164   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1235165   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1235166   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1235167   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1235168   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1235169   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1235170   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1235171   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235172   +end;
MPRINT(EM_DIAGRAM):   end;
1235173   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235174   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1235175   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1235176   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235177   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1235178   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1235179   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1235180   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1235181   +   end;
MPRINT(EM_DIAGRAM):   end;
1235182   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1235183   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1235184   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1235185   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1235186   +   end;
MPRINT(EM_DIAGRAM):   end;
1235187   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1235188   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1235189   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1235190   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1235191   +   end;
MPRINT(EM_DIAGRAM):   end;
1235192   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1235193   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1235194   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1235195   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1235196   +   end;
MPRINT(EM_DIAGRAM):   end;
1235197   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235198   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1235199   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1235200   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1235201   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1235202   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235203   +   end;
MPRINT(EM_DIAGRAM):   end;
1235204   +end;
MPRINT(EM_DIAGRAM):   end;
1235205   +
1235206   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1235207   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1235208   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1235209   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1235210   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1235211   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1235212   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235213   +end;
MPRINT(EM_DIAGRAM):   end;
1235214   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235215   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1235216   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1235217   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235218   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1235219   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1235220   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1235221   +   end;
MPRINT(EM_DIAGRAM):   end;
1235222   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1235223   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1235224   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1235225   +   end;
MPRINT(EM_DIAGRAM):   end;
1235226   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1235227   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1235228   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1235229   +   end;
MPRINT(EM_DIAGRAM):   end;
1235230   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235231   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1235232   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1235233   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1235234   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235235   +   end;
MPRINT(EM_DIAGRAM):   end;
1235236   +end;
MPRINT(EM_DIAGRAM):   end;
1235237   +
1235238   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1235239   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1235240   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1235241   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1235242   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1235243   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1235244   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1235245   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235246   +end;
MPRINT(EM_DIAGRAM):   end;
1235247   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235248   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1235249   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1235250   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235251   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1235252   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1235253   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1235254   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1235255   +   end;
MPRINT(EM_DIAGRAM):   end;
1235256   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1235257   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1235258   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1235259   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1235260   +   end;
MPRINT(EM_DIAGRAM):   end;
1235261   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1235262   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1235263   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1235264   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1235265   +   end;
MPRINT(EM_DIAGRAM):   end;
1235266   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1235267   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1235268   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1235269   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1235270   +   end;
MPRINT(EM_DIAGRAM):   end;
1235271   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235272   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1235273   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1235274   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1235275   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1235276   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235277   +   end;
MPRINT(EM_DIAGRAM):   end;
1235278   +end;
MPRINT(EM_DIAGRAM):   end;
1235279   +
1235280   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1235281   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1235282   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1235283   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1235284   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1235285   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1235286   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1235287   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235288   +end;
MPRINT(EM_DIAGRAM):   end;
1235289   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235290   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1235291   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1235292   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235293   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1235294   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1235295   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1235296   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1235297   +   end;
MPRINT(EM_DIAGRAM):   end;
1235298   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1235299   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1235300   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1235301   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1235302   +   end;
MPRINT(EM_DIAGRAM):   end;
1235303   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1235304   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1235305   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1235306   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1235307   +   end;
MPRINT(EM_DIAGRAM):   end;
1235308   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1235309   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1235310   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1235311   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1235312   +   end;
MPRINT(EM_DIAGRAM):   end;
1235313   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235314   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1235315   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1235316   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1235317   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1235318   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235319   +   end;
MPRINT(EM_DIAGRAM):   end;
1235320   +end;
MPRINT(EM_DIAGRAM):   end;
1235321   +
1235322   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1235323   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1235324   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1235325   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1235326   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1235327   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1235328   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1235329   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235330   +end;
MPRINT(EM_DIAGRAM):   end;
1235331   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235332   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1235333   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1235334   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235335   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1235336   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1235337   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1235338   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1235339   +   end;
MPRINT(EM_DIAGRAM):   end;
1235340   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1235341   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1235342   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1235343   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1235344   +   end;
MPRINT(EM_DIAGRAM):   end;
1235345   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1235346   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1235347   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1235348   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1235349   +   end;
MPRINT(EM_DIAGRAM):   end;
1235350   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1235351   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1235352   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1235353   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1235354   +   end;
MPRINT(EM_DIAGRAM):   end;
1235355   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235356   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1235357   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1235358   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1235359   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1235360   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235361   +   end;
MPRINT(EM_DIAGRAM):   end;
1235362   +end;
MPRINT(EM_DIAGRAM):   end;
1235363   +
1235364   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1235365   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1235366   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1235367   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1235368   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1235369   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1235370   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1235371   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235372   +end;
MPRINT(EM_DIAGRAM):   end;
1235373   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235374   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1235375   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1235376   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235377   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1235378   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1235379   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1235380   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1235381   +   end;
MPRINT(EM_DIAGRAM):   end;
1235382   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1235383   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1235384   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1235385   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1235386   +   end;
MPRINT(EM_DIAGRAM):   end;
1235387   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1235388   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1235389   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1235390   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1235391   +   end;
MPRINT(EM_DIAGRAM):   end;
1235392   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1235393   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1235394   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1235395   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1235396   +   end;
MPRINT(EM_DIAGRAM):   end;
1235397   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235398   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1235399   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1235400   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1235401   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1235402   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235403   +   end;
MPRINT(EM_DIAGRAM):   end;
1235404   +end;
MPRINT(EM_DIAGRAM):   end;
1235405   +
1235406   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1235407   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1235408   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1235409   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1235410   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1235411   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1235412   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1235413   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235414   +end;
MPRINT(EM_DIAGRAM):   end;
1235415   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235416   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1235417   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1235418   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235419   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1235420   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1235421   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1235422   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1235423   +   end;
MPRINT(EM_DIAGRAM):   end;
1235424   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1235425   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1235426   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1235427   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1235428   +   end;
MPRINT(EM_DIAGRAM):   end;
1235429   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1235430   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1235431   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1235432   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1235433   +   end;
MPRINT(EM_DIAGRAM):   end;
1235434   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1235435   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1235436   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1235437   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1235438   +   end;
MPRINT(EM_DIAGRAM):   end;
1235439   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235440   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1235441   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1235442   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1235443   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1235444   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235445   +   end;
MPRINT(EM_DIAGRAM):   end;
1235446   +end;
MPRINT(EM_DIAGRAM):   end;
1235447   +
1235448   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1235449   +*** Checking missing input Interval
1235450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1235451   +
1235452   +IF NMISS(
1235453   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1235454   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1235455   +
1235456   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235457   +END;
MPRINT(EM_DIAGRAM):   END;
1235458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1235459   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1235460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1235461   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1235462   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1235463   +END;
MPRINT(EM_DIAGRAM):   END;
1235464   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1235465   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1235466   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1235467   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1235468   +END;
MPRINT(EM_DIAGRAM):   END;
1235469   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1235470   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1235471   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1235472   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1235473   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1235474   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1235475   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1235476   +   H11  =      0.0668146440452 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.0668146440452 * S_Year_Birth ;
1235477   +   H12  =     0.02918236951724 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.02918236951724 * S_Year_Birth ;
1235478   +   H13  =     0.52122974180208 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.52122974180208 * S_Year_Birth ;
1235479   +   H14  =     -0.1823800721103 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.1823800721103 * S_Year_Birth ;
1235480   +   H11  = H11  +    -0.48347630033708 * GRP_AcceptedCmp52
1235481   +          +     0.37100635990339 * GRP_Frq2  +     0.04377799127913 * GRP_Frq3
1235482   +          +     -0.1974477050613 * GRP_Frq4  +     0.10700887225506 *
1235483   +        GRP_Income2  +      0.3291591268929 * GRP_Income3
1235484   +          +     0.00612929517663 * GRP_Income4  +    -0.23329153390557 *
1235485   +        GRP_Mnt2  +    -0.08800204437411 * GRP_Mnt3  +    -0.08445529701198 *
1235486   +        GRP_Mnt4  +     0.28673732624133 * GRP_MntFishProducts2
1235487   +          +    -0.14978605827752 * GRP_MntFishProducts3
1235488   +          +     0.22642470616542 * GRP_MntFishProducts4
1235489   +          +     0.07604404821672 * GRP_MntGoldProds2
1235490   +          +     0.04745212568332 * GRP_MntGoldProds3
1235491   +          +    -0.10028215217028 * GRP_MntGoldProds4
1235492   +          +    -0.07377682497053 * GRP_MntMeatProducts2
1235493   +          +    -0.09960214357487 * GRP_MntMeatProducts3
1235494   +          +    -0.25438120582859 * GRP_MntMeatProducts4
1235495   +          +     0.42639299324809 * GRP_MntWines2  +     0.31089292559786 *
1235496   +        GRP_MntWines3  +    -0.26826041457934 * GRP_MntWines4
1235497   +          +    -0.53742609478771 * GRP_NumCatalogPurchases3
1235498   +          +    -0.03023603128161 * GRP_NumCatalogPurchases4
1235499   +          +    -0.37743946252805 * GRP_NumDistPurchases2
1235500   +          +    -0.01872647257623 * GRP_NumDistPurchases3
1235501   +          +    -0.31993024737958 * GRP_NumDistPurchases4
1235502   +          +    -0.11078713164327 * GRP_NumWebPurchases2
1235503   +          +     0.24754701690398 * GRP_NumWebPurchases3
1235504   +          +     0.01530465573539 * GRP_NumWebPurchases4
1235505   +          +    -0.17630256491744 * GRP_RFMstat2  +    -0.47929093118323 *
1235506   +        GRP_RFMstat3  +     0.26729201021061 * GRP_RFMstat4
1235507   +          +    -0.20197995708067 * GRP_RMntFrq2  +    -0.07138949090838 *
1235508   +        GRP_RMntFrq3  +    -0.08653988697814 * GRP_RMntFrq4
1235509   +          +     1.10790516734526 * GRP_Recency2  +     0.22440369463671 *
1235510   +        GRP_Recency3  +    -0.44624012521308 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.48347630033708 * GRP_AcceptedCmp52 + 0.37100635990339 *
GRP_Frq2 + 0.04377799127913 * GRP_Frq3 + -0.1974477050613 * GRP_Frq4 + 0.10700887225506 *
GRP_Income2 + 0.3291591268929 * GRP_Income3 + 0.00612929517663 * GRP_Income4 +
-0.23329153390557 * GRP_Mnt2 + -0.08800204437411 * GRP_Mnt3 + -0.08445529701198 * GRP_Mnt4 +
0.28673732624133 * GRP_MntFishProducts2 + -0.14978605827752 * GRP_MntFishProducts3 +
0.22642470616542 * GRP_MntFishProducts4 + 0.07604404821672 * GRP_MntGoldProds2 +
0.04745212568332 * GRP_MntGoldProds3 + -0.10028215217028 * GRP_MntGoldProds4 +
-0.07377682497053 * GRP_MntMeatProducts2 + -0.09960214357487 * GRP_MntMeatProducts3 +
-0.25438120582859 * GRP_MntMeatProducts4 + 0.42639299324809 * GRP_MntWines2 + 0.31089292559786
* GRP_MntWines3 + -0.26826041457934 * GRP_MntWines4 + -0.53742609478771 *
GRP_NumCatalogPurchases3 + -0.03023603128161 * GRP_NumCatalogPurchases4 + -0.37743946252805 *
GRP_NumDistPurchases2 + -0.01872647257623 * GRP_NumDistPurchases3 + -0.31993024737958 *
GRP_NumDistPurchases4 + -0.11078713164327 * GRP_NumWebPurchases2 + 0.24754701690398 *
GRP_NumWebPurchases3 + 0.01530465573539 * GRP_NumWebPurchases4 + -0.17630256491744 *
GRP_RFMstat2 + -0.47929093118323 * GRP_RFMstat3 + 0.26729201021061 * GRP_RFMstat4 +
-0.20197995708067 * GRP_RMntFrq2 + -0.07138949090838 * GRP_RMntFrq3 + -0.08653988697814 *
GRP_RMntFrq4 + 1.10790516734526 * GRP_Recency2 + 0.22440369463671 * GRP_Recency3 +
-0.44624012521308 * GRP_Recency4 ;
1235511   +   H12  = H12  +    -0.39171353947494 * GRP_AcceptedCmp52
1235512   +          +     0.47539355981113 * GRP_Frq2  +     0.13865083322043 * GRP_Frq3
1235513   +          +     0.07826446095659 * GRP_Frq4  +     0.08299165408218 *
1235514   +        GRP_Income2  +     0.19385348399904 * GRP_Income3
1235515   +          +     -0.4686130167393 * GRP_Income4  +     0.07036992149948 *
1235516   +        GRP_Mnt2  +     0.03891677493503 * GRP_Mnt3  +     0.07820077346387 *
1235517   +        GRP_Mnt4  +     0.36400126236983 * GRP_MntFishProducts2
1235518   +          +    -0.12626287803422 * GRP_MntFishProducts3
1235519   +          +    -0.42885022606866 * GRP_MntFishProducts4
1235520   +          +    -0.08312331608509 * GRP_MntGoldProds2
1235521   +          +    -0.20061238652989 * GRP_MntGoldProds3
1235522   +          +      0.2540651659901 * GRP_MntGoldProds4
1235523   +          +    -0.05377938516186 * GRP_MntMeatProducts2
1235524   +          +    -0.20960578757846 * GRP_MntMeatProducts3
1235525   +          +     0.40616704937625 * GRP_MntMeatProducts4
1235526   +          +     0.10444770584156 * GRP_MntWines2  +     0.28632714955895 *
1235527   +        GRP_MntWines3  +     -0.0752487603973 * GRP_MntWines4
1235528   +          +    -0.34375303246386 * GRP_NumCatalogPurchases3
1235529   +          +     0.09580710843179 * GRP_NumCatalogPurchases4
1235530   +          +    -0.07273864038222 * GRP_NumDistPurchases2
1235531   +          +     0.10966715611059 * GRP_NumDistPurchases3
1235532   +          +      -0.043035493739 * GRP_NumDistPurchases4
1235533   +          +    -0.11780256604927 * GRP_NumWebPurchases2
1235534   +          +    -0.18165047164828 * GRP_NumWebPurchases3
1235535   +          +     0.26936545488609 * GRP_NumWebPurchases4
1235536   +          +    -0.06874165804548 * GRP_RFMstat2  +     0.09298117986488 *
1235537   +        GRP_RFMstat3  +    -0.24177720125931 * GRP_RFMstat4
1235538   +          +    -0.06280623207978 * GRP_RMntFrq2  +     0.01871815739589 *
1235539   +        GRP_RMntFrq3  +    -0.14308267957716 * GRP_RMntFrq4
1235540   +          +     0.34467425877566 * GRP_Recency2  +     0.05820913643645 *
1235541   +        GRP_Recency3  +     -0.0454148085012 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.39171353947494 * GRP_AcceptedCmp52 + 0.47539355981113 *
GRP_Frq2 + 0.13865083322043 * GRP_Frq3 + 0.07826446095659 * GRP_Frq4 + 0.08299165408218 *
GRP_Income2 + 0.19385348399904 * GRP_Income3 + -0.4686130167393 * GRP_Income4 +
0.07036992149948 * GRP_Mnt2 + 0.03891677493503 * GRP_Mnt3 + 0.07820077346387 * GRP_Mnt4 +
0.36400126236983 * GRP_MntFishProducts2 + -0.12626287803422 * GRP_MntFishProducts3 +
-0.42885022606866 * GRP_MntFishProducts4 + -0.08312331608509 * GRP_MntGoldProds2 +
-0.20061238652989 * GRP_MntGoldProds3 + 0.2540651659901 * GRP_MntGoldProds4 +
-0.05377938516186 * GRP_MntMeatProducts2 + -0.20960578757846 * GRP_MntMeatProducts3 +
0.40616704937625 * GRP_MntMeatProducts4 + 0.10444770584156 * GRP_MntWines2 + 0.28632714955895
* GRP_MntWines3 + -0.0752487603973 * GRP_MntWines4 + -0.34375303246386 *
GRP_NumCatalogPurchases3 + 0.09580710843179 * GRP_NumCatalogPurchases4 + -0.07273864038222 *
GRP_NumDistPurchases2 + 0.10966715611059 * GRP_NumDistPurchases3 + -0.043035493739 *
GRP_NumDistPurchases4 + -0.11780256604927 * GRP_NumWebPurchases2 + -0.18165047164828 *
GRP_NumWebPurchases3 + 0.26936545488609 * GRP_NumWebPurchases4 + -0.06874165804548 *
GRP_RFMstat2 + 0.09298117986488 * GRP_RFMstat3 + -0.24177720125931 * GRP_RFMstat4 +
-0.06280623207978 * GRP_RMntFrq2 + 0.01871815739589 * GRP_RMntFrq3 + -0.14308267957716 *
GRP_RMntFrq4 + 0.34467425877566 * GRP_Recency2 + 0.05820913643645 * GRP_Recency3 +
-0.0454148085012 * GRP_Recency4 ;
1235542   +   H13  = H13  +    -0.08768819217047 * GRP_AcceptedCmp52
1235543   +          +     0.44895652806962 * GRP_Frq2  +      0.3800586670059 * GRP_Frq3
1235544   +          +    -0.07849333722318 * GRP_Frq4  +     0.61398939980043 *
1235545   +        GRP_Income2  +     0.47732933105902 * GRP_Income3
1235546   +          +    -0.46767598050409 * GRP_Income4  +     0.00119742402812 *
1235547   +        GRP_Mnt2  +     0.28434487319801 * GRP_Mnt3  +    -0.16337373090226 *
1235548   +        GRP_Mnt4  +     0.24731982804653 * GRP_MntFishProducts2
1235549   +          +     0.07001619920815 * GRP_MntFishProducts3
1235550   +          +     0.07735498521359 * GRP_MntFishProducts4
1235551   +          +    -0.15884098938162 * GRP_MntGoldProds2
1235552   +          +    -0.27657428867783 * GRP_MntGoldProds3
1235553   +          +     -0.1812542301124 * GRP_MntGoldProds4
1235554   +          +    -0.05299867036647 * GRP_MntMeatProducts2
1235555   +          +     0.00010942539908 * GRP_MntMeatProducts3
1235556   +          +     0.03587382246671 * GRP_MntMeatProducts4
1235557   +          +      0.1756484217323 * GRP_MntWines2  +     0.00289944116976 *
1235558   +        GRP_MntWines3  +    -0.03752905583429 * GRP_MntWines4
1235559   +          +     0.14681010085531 * GRP_NumCatalogPurchases3
1235560   +          +    -0.23177792190553 * GRP_NumCatalogPurchases4
1235561   +          +      -0.481887498986 * GRP_NumDistPurchases2
1235562   +          +    -0.09943718589693 * GRP_NumDistPurchases3
1235563   +          +     0.21760620991618 * GRP_NumDistPurchases4
1235564   +          +    -0.09523799103665 * GRP_NumWebPurchases2
1235565   +          +     0.06245025753157 * GRP_NumWebPurchases3
1235566   +          +     0.11312469123111 * GRP_NumWebPurchases4
1235567   +          +     -0.0156924842698 * GRP_RFMstat2  +     0.04329307564553 *
1235568   +        GRP_RFMstat3  +    -0.06522539538042 * GRP_RFMstat4
1235569   +          +     0.03130432577469 * GRP_RMntFrq2  +     0.15385182155627 *
1235570   +        GRP_RMntFrq3  +    -0.05116322369837 * GRP_RMntFrq4
1235571   +          +     0.52385840277978 * GRP_Recency2  +     0.44348058106283 *
1235572   +        GRP_Recency3  +    -0.30003743891847 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08768819217047 * GRP_AcceptedCmp52 + 0.44895652806962 *
GRP_Frq2 + 0.3800586670059 * GRP_Frq3 + -0.07849333722318 * GRP_Frq4 + 0.61398939980043 *
GRP_Income2 + 0.47732933105902 * GRP_Income3 + -0.46767598050409 * GRP_Income4 +
0.00119742402812 * GRP_Mnt2 + 0.28434487319801 * GRP_Mnt3 + -0.16337373090226 * GRP_Mnt4 +
0.24731982804653 * GRP_MntFishProducts2 + 0.07001619920815 * GRP_MntFishProducts3 +
0.07735498521359 * GRP_MntFishProducts4 + -0.15884098938162 * GRP_MntGoldProds2 +
-0.27657428867783 * GRP_MntGoldProds3 + -0.1812542301124 * GRP_MntGoldProds4 +
-0.05299867036647 * GRP_MntMeatProducts2 + 0.00010942539908 * GRP_MntMeatProducts3 +
0.03587382246671 * GRP_MntMeatProducts4 + 0.1756484217323 * GRP_MntWines2 + 0.00289944116976 *
GRP_MntWines3 + -0.03752905583429 * GRP_MntWines4 + 0.14681010085531 *
GRP_NumCatalogPurchases3 + -0.23177792190553 * GRP_NumCatalogPurchases4 + -0.481887498986 *
GRP_NumDistPurchases2 + -0.09943718589693 * GRP_NumDistPurchases3 + 0.21760620991618 *
GRP_NumDistPurchases4 + -0.09523799103665 * GRP_NumWebPurchases2 + 0.06245025753157 *
GRP_NumWebPurchases3 + 0.11312469123111 * GRP_NumWebPurchases4 + -0.0156924842698 *
GRP_RFMstat2 + 0.04329307564553 * GRP_RFMstat3 + -0.06522539538042 * GRP_RFMstat4 +
0.03130432577469 * GRP_RMntFrq2 + 0.15385182155627 * GRP_RMntFrq3 + -0.05116322369837 *
GRP_RMntFrq4 + 0.52385840277978 * GRP_Recency2 + 0.44348058106283 * GRP_Recency3 +
-0.30003743891847 * GRP_Recency4 ;
1235573   +   H14  = H14  +    -0.30891588421078 * GRP_AcceptedCmp52
1235574   +          +     0.10101143238536 * GRP_Frq2  +    -0.03148220138998 * GRP_Frq3
1235575   +          +     0.09807803608029 * GRP_Frq4  +     0.11294471318052 *
1235576   +        GRP_Income2  +      0.0433560034099 * GRP_Income3
1235577   +          +    -0.35503487261838 * GRP_Income4  +     0.15199410100967 *
1235578   +        GRP_Mnt2  +    -0.15675008677561 * GRP_Mnt3  +    -0.06110606567063 *
1235579   +        GRP_Mnt4  +     0.10272197664106 * GRP_MntFishProducts2
1235580   +          +     0.33369645018356 * GRP_MntFishProducts3
1235581   +          +     0.08427214551103 * GRP_MntFishProducts4
1235582   +          +    -0.36187933889617 * GRP_MntGoldProds2
1235583   +          +      0.1522584097588 * GRP_MntGoldProds3
1235584   +          +    -0.18069803129722 * GRP_MntGoldProds4
1235585   +          +    -0.39829328143793 * GRP_MntMeatProducts2
1235586   +          +     0.00511939388608 * GRP_MntMeatProducts3
1235587   +          +      0.0518722466688 * GRP_MntMeatProducts4
1235588   +          +     0.10413724420858 * GRP_MntWines2  +    -0.30183392073068 *
1235589   +        GRP_MntWines3  +    -0.40546180997599 * GRP_MntWines4
1235590   +          +    -0.73564355192687 * GRP_NumCatalogPurchases3
1235591   +          +     0.04239157662699 * GRP_NumCatalogPurchases4
1235592   +          +    -0.61448773428482 * GRP_NumDistPurchases2
1235593   +          +    -0.10817170519054 * GRP_NumDistPurchases3
1235594   +          +    -0.00883878051452 * GRP_NumDistPurchases4
1235595   +          +      0.0024401108853 * GRP_NumWebPurchases2
1235596   +          +     -0.1066188825276 * GRP_NumWebPurchases3
1235597   +          +     -0.2845728776007 * GRP_NumWebPurchases4
1235598   +          +    -0.46846387193519 * GRP_RFMstat2  +     0.01548835288752 *
1235599   +        GRP_RFMstat3  +     0.29056719482503 * GRP_RFMstat4
1235600   +          +     0.13283388675843 * GRP_RMntFrq2  +    -0.01179035894062 *
1235601   +        GRP_RMntFrq3  +    -0.40979674551139 * GRP_RMntFrq4
1235602   +          +     0.39674687653317 * GRP_Recency2  +     0.48674783005161 *
1235603   +        GRP_Recency3  +     0.19384397786172 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30891588421078 * GRP_AcceptedCmp52 + 0.10101143238536 *
GRP_Frq2 + -0.03148220138998 * GRP_Frq3 + 0.09807803608029 * GRP_Frq4 + 0.11294471318052 *
GRP_Income2 + 0.0433560034099 * GRP_Income3 + -0.35503487261838 * GRP_Income4 +
0.15199410100967 * GRP_Mnt2 + -0.15675008677561 * GRP_Mnt3 + -0.06110606567063 * GRP_Mnt4 +
0.10272197664106 * GRP_MntFishProducts2 + 0.33369645018356 * GRP_MntFishProducts3 +
0.08427214551103 * GRP_MntFishProducts4 + -0.36187933889617 * GRP_MntGoldProds2 +
0.1522584097588 * GRP_MntGoldProds3 + -0.18069803129722 * GRP_MntGoldProds4 +
-0.39829328143793 * GRP_MntMeatProducts2 + 0.00511939388608 * GRP_MntMeatProducts3 +
0.0518722466688 * GRP_MntMeatProducts4 + 0.10413724420858 * GRP_MntWines2 + -0.30183392073068
* GRP_MntWines3 + -0.40546180997599 * GRP_MntWines4 + -0.73564355192687 *
GRP_NumCatalogPurchases3 + 0.04239157662699 * GRP_NumCatalogPurchases4 + -0.61448773428482 *
GRP_NumDistPurchases2 + -0.10817170519054 * GRP_NumDistPurchases3 + -0.00883878051452 *
GRP_NumDistPurchases4 + 0.0024401108853 * GRP_NumWebPurchases2 + -0.1066188825276 *
GRP_NumWebPurchases3 + -0.2845728776007 * GRP_NumWebPurchases4 + -0.46846387193519 *
GRP_RFMstat2 + 0.01548835288752 * GRP_RFMstat3 + 0.29056719482503 * GRP_RFMstat4 +
0.13283388675843 * GRP_RMntFrq2 + -0.01179035894062 * GRP_RMntFrq3 + -0.40979674551139 *
GRP_RMntFrq4 + 0.39674687653317 * GRP_Recency2 + 0.48674783005161 * GRP_Recency3 +
0.19384397786172 * GRP_Recency4 ;
1235604   +   H11  =    -1.18381596942405 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18381596942405 + H11 ;
1235605   +   H12  =     0.86336963287203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.86336963287203 + H12 ;
1235606   +   H13  =     -0.9724199391604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.9724199391604 + H13 ;
1235607   +   H14  =     1.35533016839911 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.35533016839911 + H14 ;
1235608   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1235609   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1235610   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1235611   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1235612   +END;
MPRINT(EM_DIAGRAM):   END;
1235613   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1235614   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1235615   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1235616   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1235617   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1235618   +END;
MPRINT(EM_DIAGRAM):   END;
1235619   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1235620   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1235621   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1235622   +
1235623   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1235624   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1235625   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1235626   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1235627   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1235628   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235629   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1235630   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1235631   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1235632   +end;
MPRINT(EM_DIAGRAM):   end;
1235633   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235634   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1235635   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1235636   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1235637   +   end;
MPRINT(EM_DIAGRAM):   end;
1235638   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1235639   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1235640   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1235641   +   end;
MPRINT(EM_DIAGRAM):   end;
1235642   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235643   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1235644   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1235645   +   end;
MPRINT(EM_DIAGRAM):   end;
1235646   +end;
MPRINT(EM_DIAGRAM):   end;
1235647   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1235648   +   P_DepVar1  =     2.12648206014408 * H11  +      1.4206902210932 * H12
1235649   +          +     1.21164854880393 * H13  +      1.5803543453738 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.12648206014408 * H11 + 1.4206902210932 * H12 +
1.21164854880393 * H13 + 1.5803543453738 * H14 ;
1235650   +   P_DepVar1  =    -1.66515506353131 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66515506353131 + P_DepVar1 ;
1235651   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1235652   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1235653   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1235654   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1235655   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1235656   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1235657   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1235658   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1235659   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1235660   +END;
MPRINT(EM_DIAGRAM):   END;
1235661   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1235662   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1235663   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1235664   +END;
MPRINT(EM_DIAGRAM):   END;
1235665   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1235666   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1235667   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1235668   +END;
MPRINT(EM_DIAGRAM):   END;
1235669   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1235670   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1235671   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1235672   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1235673   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1235674   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1235675   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1235676   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1235677   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1235678   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1235679   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1235680   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1235681   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1235682   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1235683   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1235684   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1235685   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1235686   +END;
MPRINT(EM_DIAGRAM):   END;
1235687   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1235688   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1235689   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1235690   +drop
1235691   +H11
1235692   +H12
1235693   +H13
1235694   +H14
1235695   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1235696   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1235697   +* Renaming variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural21;
1235698   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1235699   +* Renaming Posterior variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural21;
1235700   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1235701   +drop Neural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar1;
1235702   +Neural21_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar1 = P_DepVar1;
1235703   +drop Neural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar0;
1235704   +Neural21_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar0 = P_DepVar0;
1235705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1235706   +* Renaming _WARN_ variable for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural21;
1235707   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1235708   +length Neural21_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural21_WARN_ $4;
1235709   +drop Neural21_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural21_WARN_;
1235710   +Neural21_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural21_WARN_ = _WARN_;
1235711   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1235712   +* Ensmbl7: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring Code of model 5 of 5;
1235713   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1235714   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1235715   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1235716   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1235717   +* NODE: Reg7;
MPRINT(EM_DIAGRAM):   * NODE: Reg7;
1235718   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1235719   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1235720   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1235721   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1235722   +
1235723   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1235724   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1235725   +
1235726   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1235727   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1235728   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1235729   +array REG7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG7DRF [2] $12 _temporary_ ('1' '0' );
1235730   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1235731   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1235732   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1235733   +ARRAY REG7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG7DRU[2] _TEMPORARY_ (1 0);
1235734   +
1235735   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1235736   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1235737   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1235738   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1235739   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1235740   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235741   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1235742   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1235743   +end;
MPRINT(EM_DIAGRAM):   end;
1235744   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235745   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1235746   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1235747   +   end;
MPRINT(EM_DIAGRAM):   end;
1235748   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1235749   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1235750   +   end;
MPRINT(EM_DIAGRAM):   end;
1235751   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235752   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1235753   +   end;
MPRINT(EM_DIAGRAM):   end;
1235754   +end;
MPRINT(EM_DIAGRAM):   end;
1235755   +
1235756   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1235757   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1235758   +
1235759   +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
1235760   +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
1235761   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1235762   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235763   +end;
MPRINT(EM_DIAGRAM):   end;
1235764   +
1235765   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1235766   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1235767   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1235768   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1235769   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1235770   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235771   +end;
MPRINT(EM_DIAGRAM):   end;
1235772   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235773   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1235774   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1235775   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235776   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1235777   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1235778   +   end;
MPRINT(EM_DIAGRAM):   end;
1235779   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1235780   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1235781   +   end;
MPRINT(EM_DIAGRAM):   end;
1235782   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235783   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1235784   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1235785   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235786   +   end;
MPRINT(EM_DIAGRAM):   end;
1235787   +end;
MPRINT(EM_DIAGRAM):   end;
1235788   +
1235789   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1235790   +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
1235791   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1235792   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1235793   +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1235794   +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1235795   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1235796   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235797   +end;
MPRINT(EM_DIAGRAM):   end;
1235798   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235799   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1235800   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1235801   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235802   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1235803   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1235804   +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
1235805   +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
1235806   +   end;
MPRINT(EM_DIAGRAM):   end;
1235807   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1235808   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1235809   +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
1235810   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1235811   +   end;
MPRINT(EM_DIAGRAM):   end;
1235812   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1235813   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1235814   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1235815   +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
1235816   +   end;
MPRINT(EM_DIAGRAM):   end;
1235817   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1235818   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1235819   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1235820   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1235821   +   end;
MPRINT(EM_DIAGRAM):   end;
1235822   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235823   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1235824   +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1235825   +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1235826   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1235827   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235828   +   end;
MPRINT(EM_DIAGRAM):   end;
1235829   +end;
MPRINT(EM_DIAGRAM):   end;
1235830   +
1235831   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1235832   +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
1235833   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1235834   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1235835   +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1235836   +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1235837   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1235838   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235839   +end;
MPRINT(EM_DIAGRAM):   end;
1235840   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235841   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1235842   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1235843   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235844   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1235845   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1235846   +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
1235847   +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
1235848   +   end;
MPRINT(EM_DIAGRAM):   end;
1235849   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1235850   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1235851   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1235852   +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
1235853   +   end;
MPRINT(EM_DIAGRAM):   end;
1235854   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1235855   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1235856   +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
1235857   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1235858   +   end;
MPRINT(EM_DIAGRAM):   end;
1235859   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1235860   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1235861   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1235862   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1235863   +   end;
MPRINT(EM_DIAGRAM):   end;
1235864   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235865   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1235866   +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1235867   +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1235868   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1235869   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235870   +   end;
MPRINT(EM_DIAGRAM):   end;
1235871   +end;
MPRINT(EM_DIAGRAM):   end;
1235872   +
1235873   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1235874   +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
1235875   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1235876   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1235877   +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1235878   +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1235879   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1235880   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235881   +end;
MPRINT(EM_DIAGRAM):   end;
1235882   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235883   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1235884   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1235885   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235886   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1235887   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1235888   +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
1235889   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1235890   +   end;
MPRINT(EM_DIAGRAM):   end;
1235891   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1235892   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1235893   +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
1235894   +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
1235895   +   end;
MPRINT(EM_DIAGRAM):   end;
1235896   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1235897   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1235898   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1235899   +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
1235900   +   end;
MPRINT(EM_DIAGRAM):   end;
1235901   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1235902   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1235903   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1235904   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1235905   +   end;
MPRINT(EM_DIAGRAM):   end;
1235906   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235907   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1235908   +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1235909   +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1235910   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1235911   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235912   +   end;
MPRINT(EM_DIAGRAM):   end;
1235913   +end;
MPRINT(EM_DIAGRAM):   end;
1235914   +
1235915   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1235916   +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
1235917   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1235918   +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1235919   +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1235920   +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1235921   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1235922   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235923   +end;
MPRINT(EM_DIAGRAM):   end;
1235924   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235925   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1235926   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1235927   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235928   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1235929   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1235930   +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
1235931   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1235932   +   end;
MPRINT(EM_DIAGRAM):   end;
1235933   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1235934   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1235935   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1235936   +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
1235937   +   end;
MPRINT(EM_DIAGRAM):   end;
1235938   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1235939   +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
1235940   +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
1235941   +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
1235942   +   end;
MPRINT(EM_DIAGRAM):   end;
1235943   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1235944   +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
1235945   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1235946   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1235947   +   end;
MPRINT(EM_DIAGRAM):   end;
1235948   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235949   +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1235950   +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1235951   +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1235952   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1235953   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235954   +   end;
MPRINT(EM_DIAGRAM):   end;
1235955   +end;
MPRINT(EM_DIAGRAM):   end;
1235956   +
1235957   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1235958   +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
1235959   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1235960   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1235961   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1235962   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1235963   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1235964   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235965   +end;
MPRINT(EM_DIAGRAM):   end;
1235966   +else do;
MPRINT(EM_DIAGRAM):   else do;
1235967   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1235968   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1235969   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1235970   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1235971   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1235972   +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1235973   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1235974   +   end;
MPRINT(EM_DIAGRAM):   end;
1235975   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1235976   +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1235977   +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1235978   +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1235979   +   end;
MPRINT(EM_DIAGRAM):   end;
1235980   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1235981   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1235982   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1235983   +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1235984   +   end;
MPRINT(EM_DIAGRAM):   end;
1235985   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1235986   +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1235987   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1235988   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1235989   +   end;
MPRINT(EM_DIAGRAM):   end;
1235990   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1235991   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1235992   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1235993   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1235994   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1235995   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1235996   +   end;
MPRINT(EM_DIAGRAM):   end;
1235997   +end;
MPRINT(EM_DIAGRAM):   end;
1235998   +
1235999   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1236000   +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
1236001   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1236002   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1236003   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1236004   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1236005   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1236006   +end;
MPRINT(EM_DIAGRAM):   end;
1236007   +else do;
MPRINT(EM_DIAGRAM):   else do;
1236008   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1236009   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1236010   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1236011   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1236012   +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1236013   +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1236014   +   end;
MPRINT(EM_DIAGRAM):   end;
1236015   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1236016   +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1236017   +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1236018   +   end;
MPRINT(EM_DIAGRAM):   end;
1236019   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1236020   +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1236021   +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1236022   +   end;
MPRINT(EM_DIAGRAM):   end;
1236023   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1236024   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1236025   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1236026   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1236027   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1236028   +   end;
MPRINT(EM_DIAGRAM):   end;
1236029   +end;
MPRINT(EM_DIAGRAM):   end;
1236030   +
1236031   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1236032   +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
1236033   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1236034   +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1236035   +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1236036   +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1236037   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1236038   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1236039   +end;
MPRINT(EM_DIAGRAM):   end;
1236040   +else do;
MPRINT(EM_DIAGRAM):   else do;
1236041   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1236042   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1236043   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1236044   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1236045   +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
1236046   +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
1236047   +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
1236048   +   end;
MPRINT(EM_DIAGRAM):   end;
1236049   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1236050   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1236051   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1236052   +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
1236053   +   end;
MPRINT(EM_DIAGRAM):   end;
1236054   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1236055   +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
1236056   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1236057   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1236058   +   end;
MPRINT(EM_DIAGRAM):   end;
1236059   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1236060   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1236061   +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
1236062   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1236063   +   end;
MPRINT(EM_DIAGRAM):   end;
1236064   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1236065   +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1236066   +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1236067   +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1236068   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1236069   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1236070   +   end;
MPRINT(EM_DIAGRAM):   end;
1236071   +end;
MPRINT(EM_DIAGRAM):   end;
1236072   +
1236073   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1236074   +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
1236075   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1236076   +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1236077   +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1236078   +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1236079   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1236080   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1236081   +end;
MPRINT(EM_DIAGRAM):   end;
1236082   +else do;
MPRINT(EM_DIAGRAM):   else do;
1236083   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1236084   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1236085   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1236086   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1236087   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1236088   +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
1236089   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1236090   +   end;
MPRINT(EM_DIAGRAM):   end;
1236091   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1236092   +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
1236093   +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
1236094   +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
1236095   +   end;
MPRINT(EM_DIAGRAM):   end;
1236096   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1236097   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1236098   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1236099   +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
1236100   +   end;
MPRINT(EM_DIAGRAM):   end;
1236101   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1236102   +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
1236103   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1236104   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1236105   +   end;
MPRINT(EM_DIAGRAM):   end;
1236106   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1236107   +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1236108   +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1236109   +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1236110   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1236111   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1236112   +   end;
MPRINT(EM_DIAGRAM):   end;
1236113   +end;
MPRINT(EM_DIAGRAM):   end;
1236114   +
1236115   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1236116   +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
1236117   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1236118   +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1236119   +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1236120   +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1236121   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1236122   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1236123   +end;
MPRINT(EM_DIAGRAM):   end;
1236124   +else do;
MPRINT(EM_DIAGRAM):   else do;
1236125   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1236126   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1236127   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1236128   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1236129   +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
1236130   +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
1236131   +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
1236132   +   end;
MPRINT(EM_DIAGRAM):   end;
1236133   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1236134   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1236135   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1236136   +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
1236137   +   end;
MPRINT(EM_DIAGRAM):   end;
1236138   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1236139   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1236140   +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
1236141   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1236142   +   end;
MPRINT(EM_DIAGRAM):   end;
1236143   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1236144   +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
1236145   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1236146   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1236147   +   end;
MPRINT(EM_DIAGRAM):   end;
1236148   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1236149   +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1236150   +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1236151   +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1236152   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1236153   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1236154   +   end;
MPRINT(EM_DIAGRAM):   end;
1236155   +end;
MPRINT(EM_DIAGRAM):   end;
1236156   +
1236157   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1236158   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1236159   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1236160   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1236161   +   goto REG7DR1;
MPRINT(EM_DIAGRAM):   goto REG7DR1;
1236162   +end;
MPRINT(EM_DIAGRAM):   end;
1236163   +
1236164   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1236165   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1236166   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1236167   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1236168   +
1236169   +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
1236170   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1236171   +_LP0 = _LP0 + (    -0.5862337869734) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5862337869734) * _TEMP * _1_0;
1236172   +
1236173   +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
1236174   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1236175   +_LP0 = _LP0 + (     1.0565693238421) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.0565693238421) * _TEMP * _2_0;
1236176   +_LP0 = _LP0 + (     0.0911336121088) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0911336121088) * _TEMP * _2_1;
1236177   +_LP0 = _LP0 + (   -0.37448220273968) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.37448220273968) * _TEMP * _2_2;
1236178   +
1236179   +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
1236180   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1236181   +_LP0 = _LP0 + (    0.51658584340625) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51658584340625) * _TEMP * _3_0;
1236182   +_LP0 = _LP0 + (    0.48505772489262) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.48505772489262) * _TEMP * _3_1;
1236183   +_LP0 = _LP0 + (   -0.50854630566525) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.50854630566525) * _TEMP * _3_2;
1236184   +
1236185   +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
1236186   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1236187   +_LP0 = _LP0 + (    0.38994498659965) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38994498659965) * _TEMP * _5_0;
1236188   +_LP0 = _LP0 + (    0.03146325606998) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03146325606998) * _TEMP * _5_1;
1236189   +_LP0 = _LP0 + (   -0.05372169204837) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05372169204837) * _TEMP * _5_2;
1236190   +
1236191   +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
1236192   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1236193   +_LP0 = _LP0 + (   -0.79733877870259) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.79733877870259) * _TEMP * _7_0;
1236194   +_LP0 = _LP0 + (   -0.15003183676105) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.15003183676105) * _TEMP * _7_1;
1236195   +_LP0 = _LP0 + (    0.31191597751128) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.31191597751128) * _TEMP * _7_2;
1236196   +
1236197   +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
1236198   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1236199   +_LP0 = _LP0 + (    0.53434964580952) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53434964580952) * _TEMP * _8_0;
1236200   +_LP0 = _LP0 + (    0.22167667253067) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.22167667253067) * _TEMP * _8_1;
1236201   +_LP0 = _LP0 + (     -0.305489910536) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.305489910536) * _TEMP * _8_2;
1236202   +
1236203   +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
1236204   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1236205   +_LP0 = _LP0 + (     -0.629899271763) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.629899271763) * _TEMP * _9_0;
1236206   +_LP0 = _LP0 + (    0.03240844395355) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03240844395355) * _TEMP * _9_1;
1236207   +
1236208   +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
1236209   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1236210   +_LP0 = _LP0 + (   -1.42622019893988) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.42622019893988) * _TEMP * _10_0;
1236211   +_LP0 = _LP0 + (    0.05466498093201) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05466498093201) * _TEMP * _10_1;
1236212   +_LP0 = _LP0 + (    0.25182489000571) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25182489000571) * _TEMP * _10_2;
1236213   +
1236214   +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
1236215   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1236216   +_LP0 = _LP0 + (   -0.14979245852204) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14979245852204) * _TEMP * _13_0;
1236217   +_LP0 = _LP0 + (     0.0056028143187) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0056028143187) * _TEMP * _13_1;
1236218   +_LP0 = _LP0 + (   -0.23315930182624) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23315930182624) * _TEMP * _13_2;
1236219   +
1236220   +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
1236221   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1236222   +_LP0 = _LP0 + (    1.06974976023651) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.06974976023651) * _TEMP * _14_0;
1236223   +_LP0 = _LP0 + (    0.29139327664531) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29139327664531) * _TEMP * _14_1;
1236224   +_LP0 = _LP0 + (   -0.34742570667526) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.34742570667526) * _TEMP * _14_2;
1236225   +
1236226   +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
1236227   +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
1236228   +_LP0 = _LP0 + (    0.01045707390649 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01045707390649 * _TEMP);
1236229   +
1236230   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1236231   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1236232   +_P0 = probnorm((   -21.5603180840073) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -21.5603180840073) + _LP0);
1236233   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1236234   +
1236235   +REG7DR1:
1236236   +
1236237   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG7DR1: *** Residuals;
1236238   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1236239   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1236240   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1236241   +end;
MPRINT(EM_DIAGRAM):   end;
1236242   +else do;
MPRINT(EM_DIAGRAM):   else do;
1236243   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1236244   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1236245   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1236246   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1236247   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1236248   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1236249   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1236250   +   end;
MPRINT(EM_DIAGRAM):   end;
1236251   +end;
MPRINT(EM_DIAGRAM):   end;
1236252   +
1236253   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1236254   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1236255   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1236256   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1236257   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1236258   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1236259   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1236260   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1236261   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1236262   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1236263   +end;
MPRINT(EM_DIAGRAM):   end;
1236264   +I_DepVar = REG7DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG7DRF[_IY];
1236265   +U_DepVar = REG7DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG7DRU[_IY];
1236266   +
1236267   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1236268   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1236269   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1236270   +* Renaming variables for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg7;
1236271   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236272   +* Renaming Posterior variables for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg7;
1236273   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236274   +drop Reg7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg7_P_DepVar1;
1236275   +Reg7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg7_P_DepVar1 = P_DepVar1;
1236276   +drop Reg7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg7_P_DepVar0;
1236277   +Reg7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg7_P_DepVar0 = P_DepVar0;
1236278   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236279   +* Renaming _WARN_ variable for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg7;
1236280   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236281   +length Reg7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg7_WARN_ $4;
1236282   +drop Reg7_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg7_WARN_;
1236283   +Reg7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg7_WARN_ = _WARN_;
1236284   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236285   +* Ensmbl7: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Average Posteriors of 5 models;
1236286   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236287   +P_DepVar1 = (
1236288   +Reg3_P_DepVar1 +
1236289   +Neural18_P_DepVar1 +
1236290   +Neural22_P_DepVar1 +
1236291   +Neural21_P_DepVar1 +
1236292   +Reg7_P_DepVar1
1236293   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg3_P_DepVar1 + Neural18_P_DepVar1 + Neural22_P_DepVar1 +
Neural21_P_DepVar1 + Reg7_P_DepVar1 )/5;
1236294   +P_DepVar0 = (
1236295   +Reg3_P_DepVar0 +
1236296   +Neural18_P_DepVar0 +
1236297   +Neural22_P_DepVar0 +
1236298   +Neural21_P_DepVar0 +
1236299   +Reg7_P_DepVar0
1236300   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg3_P_DepVar0 + Neural18_P_DepVar0 + Neural22_P_DepVar0 +
Neural21_P_DepVar0 + Reg7_P_DepVar0 )/5;
1236301   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236302   +* Ensmbl7: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Computing Classification Vars;
1236303   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236304   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1236305   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1236306   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1236307   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1236308   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1236309   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1236310   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1236311   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1236312   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1236313   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1236314   +end;
MPRINT(EM_DIAGRAM):   end;
1236315   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1236316   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1236317   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1236318   +end;
MPRINT(EM_DIAGRAM):   end;
1236319   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1236320   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236321   +* Ensmbl7: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Producing Unformatted variable;
1236322   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236323   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1236324   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1236325   +else
1236326   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1236327   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236328   +* Ensmbl7: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Computing _WARN_ Variable;
1236329   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236330   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1236331   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1236332   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1236333   +if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1236334   +if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1236335   +if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1236336   +if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1236337   +if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1236337  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1236338   +if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1236338  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1236339   +if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1236339  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1236340   +if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1236340  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1236341   +if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1236341  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1236342   +if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1236342  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1236343   +if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1236343  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1236344   +if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1236344  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1236345   +if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1236345  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1236346   +if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1236346  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1236347   +if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1236347  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1236348   +if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1236348  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1236349   +if index(REG7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1236350   +if index(REG7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1236351   +if index(REG7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1236352   +if index(REG7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1236353   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236354   +* Ensmbl7: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Computing Residual Vars;
1236355   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236356   +if
1236357   +F_DepVar NE '1'
1236358   +AND F_DepVar NE '0'
1236359   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1236360   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1236361   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1236362   +end;
MPRINT(EM_DIAGRAM):   end;
1236363   +else do;
MPRINT(EM_DIAGRAM):   else do;
1236364   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1236365   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1236366   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1236367   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1236368   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1236369   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1236370   +END;
MPRINT(EM_DIAGRAM):   END;
1236371   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1236372    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL7_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG3_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1236373    quit;
1236374    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1236375    filename emflow
1236375  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring REG3_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236376    *------------------------------------------------------------*;
1236377    * Ensmbl7: Scoring REG3_VALIDATE data;
1236378    *------------------------------------------------------------*;
1236379    data EMWS8.Ensmbl7_VALIDATE
1236380    / view=EMWS8.Ensmbl7_VALIDATE
1236381    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_VALIDATE / view=EMWS8.Ensmbl7_VALIDATE ;
1236382    set EMWS8.Reg3_VALIDATE
1236383    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg3_VALIDATE ;
1236384    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMFLOWSCORE.sas.
1236385   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236386   +* Ensmbl7: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Combine model for DepVar;
1236387   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236388   +* Ensmbl7: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring Code of model 1 of 5;
1236389   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236390   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236391   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1236392   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1236393   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1236394   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236395   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236396   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1236397   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1236398   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1236399   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236400   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236401   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1236402   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1236403   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1236404   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236405   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236406   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1236407   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1236408   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1236409   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236410   +
1236411   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1236412   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1236412  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1236413   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1236414   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1236415   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1236416   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1236417   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1236418   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236419   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1236420   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1236421   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1236422   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236423   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236424   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1236425   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236426   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1236427   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1236428   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1236429   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236430   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1236431   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1236432   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1236433   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236434   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236435   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1236436   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1236437   +* NODE: BINNING;
MPRINT(EM_DIAGRAM):   * NODE: BINNING;
1236438   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236439   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1236440   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1236441   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1236442   +
1236443   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236444   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1236445   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236446   +LABEL GRP_AcceptedCmp5 =
1236447   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1236448   +
1236449   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1236450   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1236451   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1236452   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1236453   +end;
MPRINT(EM_DIAGRAM):   end;
1236454   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1236455   +if (_UFORMAT eq '0'
1236456   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1236457   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1236458   +end;
MPRINT(EM_DIAGRAM):   end;
1236459   +else
1236460   +if (_UFORMAT eq '1'
1236461   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1236462   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1236463   +end;
MPRINT(EM_DIAGRAM):   end;
1236464   +else do;
MPRINT(EM_DIAGRAM):   else do;
1236465   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1236466   +end;
MPRINT(EM_DIAGRAM):   end;
1236467   +end;
MPRINT(EM_DIAGRAM):   end;
1236468   +
1236469   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236470   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1236471   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236472   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1236473   +
1236474   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1236475   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1236476   +end;
MPRINT(EM_DIAGRAM):   end;
1236477   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1236478   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1236479   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1236480   +end;
MPRINT(EM_DIAGRAM):   end;
1236481   +else
1236482   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1236483   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1236484   +end;
MPRINT(EM_DIAGRAM):   end;
1236485   +else
1236486   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1236487   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1236488   +end;
MPRINT(EM_DIAGRAM):   end;
1236489   +else
1236490   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1236491   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1236492   +end;
MPRINT(EM_DIAGRAM):   end;
1236493   +end;
MPRINT(EM_DIAGRAM):   end;
1236494   +
1236495   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236496   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1236497   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236498   +LABEL GRP_Income =
1236499   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1236500   +
1236501   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1236502   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1236503   +end;
MPRINT(EM_DIAGRAM):   end;
1236504   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1236505   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1236506   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1236507   +end;
MPRINT(EM_DIAGRAM):   end;
1236508   +else
1236509   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1236510   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1236511   +end;
MPRINT(EM_DIAGRAM):   end;
1236512   +else
1236513   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1236514   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1236515   +end;
MPRINT(EM_DIAGRAM):   end;
1236516   +else
1236517   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1236518   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1236519   +end;
MPRINT(EM_DIAGRAM):   end;
1236520   +end;
MPRINT(EM_DIAGRAM):   end;
1236521   +
1236522   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236523   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1236524   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236525   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1236526   +
1236527   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1236528   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1236529   +end;
MPRINT(EM_DIAGRAM):   end;
1236530   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1236531   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1236532   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1236533   +end;
MPRINT(EM_DIAGRAM):   end;
1236534   +else
1236535   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1236536   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1236537   +end;
MPRINT(EM_DIAGRAM):   end;
1236538   +else
1236539   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1236540   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1236541   +end;
MPRINT(EM_DIAGRAM):   end;
1236542   +else
1236543   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1236544   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1236545   +end;
MPRINT(EM_DIAGRAM):   end;
1236546   +end;
MPRINT(EM_DIAGRAM):   end;
1236547   +
1236548   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236549   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1236550   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236551   +LABEL GRP_MntFishProducts =
1236552   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1236553   +
1236554   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1236555   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1236556   +end;
MPRINT(EM_DIAGRAM):   end;
1236557   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1236558   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1236559   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1236560   +end;
MPRINT(EM_DIAGRAM):   end;
1236561   +else
1236562   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1236563   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1236564   +end;
MPRINT(EM_DIAGRAM):   end;
1236565   +else
1236566   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1236567   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1236568   +end;
MPRINT(EM_DIAGRAM):   end;
1236569   +else
1236570   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1236571   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1236572   +end;
MPRINT(EM_DIAGRAM):   end;
1236573   +end;
MPRINT(EM_DIAGRAM):   end;
1236574   +
1236575   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236576   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1236577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236578   +LABEL GRP_MntGoldProds =
1236579   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1236580   +
1236581   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1236582   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1236583   +end;
MPRINT(EM_DIAGRAM):   end;
1236584   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1236585   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1236586   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1236587   +end;
MPRINT(EM_DIAGRAM):   end;
1236588   +else
1236589   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1236590   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1236591   +end;
MPRINT(EM_DIAGRAM):   end;
1236592   +else
1236593   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1236594   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1236595   +end;
MPRINT(EM_DIAGRAM):   end;
1236596   +else
1236597   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1236598   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1236599   +end;
MPRINT(EM_DIAGRAM):   end;
1236600   +end;
MPRINT(EM_DIAGRAM):   end;
1236601   +
1236602   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236603   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1236604   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236605   +LABEL GRP_MntMeatProducts =
1236606   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1236607   +
1236608   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1236609   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1236610   +end;
MPRINT(EM_DIAGRAM):   end;
1236611   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1236612   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1236613   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1236614   +end;
MPRINT(EM_DIAGRAM):   end;
1236615   +else
1236616   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1236617   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1236618   +end;
MPRINT(EM_DIAGRAM):   end;
1236619   +else
1236620   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1236621   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1236622   +end;
MPRINT(EM_DIAGRAM):   end;
1236623   +else
1236624   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1236625   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1236626   +end;
MPRINT(EM_DIAGRAM):   end;
1236627   +end;
MPRINT(EM_DIAGRAM):   end;
1236628   +
1236629   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236630   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1236631   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236632   +LABEL GRP_MntWines =
1236633   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1236634   +
1236635   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1236636   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1236637   +end;
MPRINT(EM_DIAGRAM):   end;
1236638   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1236639   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1236640   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1236641   +end;
MPRINT(EM_DIAGRAM):   end;
1236642   +else
1236643   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1236644   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1236645   +end;
MPRINT(EM_DIAGRAM):   end;
1236646   +else
1236647   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1236648   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1236649   +end;
MPRINT(EM_DIAGRAM):   end;
1236650   +else
1236651   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1236652   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1236653   +end;
MPRINT(EM_DIAGRAM):   end;
1236654   +end;
MPRINT(EM_DIAGRAM):   end;
1236655   +
1236656   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236657   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1236658   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236659   +LABEL GRP_NumCatalogPurchases =
1236660   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1236661   +
1236662   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1236663   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1236664   +end;
MPRINT(EM_DIAGRAM):   end;
1236665   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1236666   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1236667   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1236668   +end;
MPRINT(EM_DIAGRAM):   end;
1236669   +else
1236670   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1236671   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1236672   +end;
MPRINT(EM_DIAGRAM):   end;
1236673   +else
1236674   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1236675   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1236676   +end;
MPRINT(EM_DIAGRAM):   end;
1236677   +else
1236678   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1236679   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1236680   +end;
MPRINT(EM_DIAGRAM):   end;
1236681   +end;
MPRINT(EM_DIAGRAM):   end;
1236682   +
1236683   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236684   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1236685   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236686   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1236687   +
1236688   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1236689   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1236690   +end;
MPRINT(EM_DIAGRAM):   end;
1236691   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1236692   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1236693   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1236694   +end;
MPRINT(EM_DIAGRAM):   end;
1236695   +else
1236696   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1236697   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1236698   +end;
MPRINT(EM_DIAGRAM):   end;
1236699   +else
1236700   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1236701   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1236702   +end;
MPRINT(EM_DIAGRAM):   end;
1236703   +else
1236704   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1236705   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1236706   +end;
MPRINT(EM_DIAGRAM):   end;
1236707   +end;
MPRINT(EM_DIAGRAM):   end;
1236708   +
1236709   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236710   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1236711   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236712   +LABEL GRP_NumWebPurchases =
1236713   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1236714   +
1236715   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1236716   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1236717   +end;
MPRINT(EM_DIAGRAM):   end;
1236718   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1236719   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1236720   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1236721   +end;
MPRINT(EM_DIAGRAM):   end;
1236722   +else
1236723   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1236724   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1236725   +end;
MPRINT(EM_DIAGRAM):   end;
1236726   +else
1236727   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1236728   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1236729   +end;
MPRINT(EM_DIAGRAM):   end;
1236730   +else
1236731   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1236732   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1236733   +end;
MPRINT(EM_DIAGRAM):   end;
1236734   +end;
MPRINT(EM_DIAGRAM):   end;
1236735   +
1236736   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236737   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1236738   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236739   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1236740   +
1236741   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1236742   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1236743   +end;
MPRINT(EM_DIAGRAM):   end;
1236744   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1236745   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1236746   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1236747   +end;
MPRINT(EM_DIAGRAM):   end;
1236748   +else
1236749   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1236750   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1236751   +end;
MPRINT(EM_DIAGRAM):   end;
1236752   +else
1236753   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1236754   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1236755   +end;
MPRINT(EM_DIAGRAM):   end;
1236756   +else
1236757   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1236758   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1236759   +end;
MPRINT(EM_DIAGRAM):   end;
1236760   +end;
MPRINT(EM_DIAGRAM):   end;
1236761   +
1236762   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236763   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1236764   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236765   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1236766   +
1236767   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1236768   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1236769   +end;
MPRINT(EM_DIAGRAM):   end;
1236770   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1236771   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1236772   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1236773   +end;
MPRINT(EM_DIAGRAM):   end;
1236774   +else
1236775   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1236776   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1236777   +end;
MPRINT(EM_DIAGRAM):   end;
1236778   +else
1236779   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1236780   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1236781   +end;
MPRINT(EM_DIAGRAM):   end;
1236782   +else
1236783   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1236784   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1236785   +end;
MPRINT(EM_DIAGRAM):   end;
1236786   +end;
MPRINT(EM_DIAGRAM):   end;
1236787   +
1236788   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236789   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1236790   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236791   +LABEL GRP_Recency =
1236792   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1236793   +
1236794   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1236795   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1236796   +end;
MPRINT(EM_DIAGRAM):   end;
1236797   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1236798   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1236799   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1236800   +end;
MPRINT(EM_DIAGRAM):   end;
1236801   +else
1236802   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1236803   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1236804   +end;
MPRINT(EM_DIAGRAM):   end;
1236805   +else
1236806   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1236807   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1236808   +end;
MPRINT(EM_DIAGRAM):   end;
1236809   +else
1236810   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1236811   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1236812   +end;
MPRINT(EM_DIAGRAM):   end;
1236813   +end;
MPRINT(EM_DIAGRAM):   end;
1236814   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236815   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1236816   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1236817   +* NODE: Reg3;
MPRINT(EM_DIAGRAM):   * NODE: Reg3;
1236818   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1236819   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1236820   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1236821   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1236822   +
1236823   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1236824   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1236825   +
1236826   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1236827   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1236828   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1236829   +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
1236830   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1236831   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1236832   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1236833   +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
1236834   +
1236835   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1236836   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1236837   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1236838   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1236839   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1236840   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1236841   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1236842   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1236843   +end;
MPRINT(EM_DIAGRAM):   end;
1236844   +else do;
MPRINT(EM_DIAGRAM):   else do;
1236845   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1236846   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1236847   +   end;
MPRINT(EM_DIAGRAM):   end;
1236848   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1236849   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1236850   +   end;
MPRINT(EM_DIAGRAM):   end;
1236851   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1236852   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1236853   +   end;
MPRINT(EM_DIAGRAM):   end;
1236854   +end;
MPRINT(EM_DIAGRAM):   end;
1236855   +
1236856   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1236857   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1236858   +
1236859   +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
1236860   +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
1236861   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1236862   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1236863   +end;
MPRINT(EM_DIAGRAM):   end;
1236864   +
1236865   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1236866   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1236867   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1236868   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1236869   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1236870   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1236871   +end;
MPRINT(EM_DIAGRAM):   end;
1236872   +else do;
MPRINT(EM_DIAGRAM):   else do;
1236873   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1236874   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1236875   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1236876   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1236877   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1236878   +   end;
MPRINT(EM_DIAGRAM):   end;
1236879   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1236880   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1236881   +   end;
MPRINT(EM_DIAGRAM):   end;
1236882   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1236883   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1236884   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1236885   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1236886   +   end;
MPRINT(EM_DIAGRAM):   end;
1236887   +end;
MPRINT(EM_DIAGRAM):   end;
1236888   +
1236889   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1236890   +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
1236891   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1236892   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1236893   +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1236894   +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1236895   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1236896   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1236897   +end;
MPRINT(EM_DIAGRAM):   end;
1236898   +else do;
MPRINT(EM_DIAGRAM):   else do;
1236899   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1236900   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1236901   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1236902   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1236903   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1236904   +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
1236905   +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
1236906   +   end;
MPRINT(EM_DIAGRAM):   end;
1236907   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1236908   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1236909   +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
1236910   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1236911   +   end;
MPRINT(EM_DIAGRAM):   end;
1236912   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1236913   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1236914   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1236915   +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
1236916   +   end;
MPRINT(EM_DIAGRAM):   end;
1236917   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1236918   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1236919   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1236920   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1236921   +   end;
MPRINT(EM_DIAGRAM):   end;
1236922   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1236923   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1236924   +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1236925   +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1236926   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1236927   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1236928   +   end;
MPRINT(EM_DIAGRAM):   end;
1236929   +end;
MPRINT(EM_DIAGRAM):   end;
1236930   +
1236931   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1236932   +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
1236933   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1236934   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1236935   +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1236936   +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1236937   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1236938   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1236939   +end;
MPRINT(EM_DIAGRAM):   end;
1236940   +else do;
MPRINT(EM_DIAGRAM):   else do;
1236941   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1236942   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1236943   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1236944   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1236945   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1236946   +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
1236947   +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
1236948   +   end;
MPRINT(EM_DIAGRAM):   end;
1236949   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1236950   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1236951   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1236952   +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
1236953   +   end;
MPRINT(EM_DIAGRAM):   end;
1236954   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1236955   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1236956   +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
1236957   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1236958   +   end;
MPRINT(EM_DIAGRAM):   end;
1236959   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1236960   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1236961   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1236962   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1236963   +   end;
MPRINT(EM_DIAGRAM):   end;
1236964   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1236965   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1236966   +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1236967   +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1236968   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1236969   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1236970   +   end;
MPRINT(EM_DIAGRAM):   end;
1236971   +end;
MPRINT(EM_DIAGRAM):   end;
1236972   +
1236973   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1236974   +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
1236975   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1236976   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1236977   +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1236978   +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1236979   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1236980   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1236981   +end;
MPRINT(EM_DIAGRAM):   end;
1236982   +else do;
MPRINT(EM_DIAGRAM):   else do;
1236983   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1236984   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1236985   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1236986   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1236987   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1236988   +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
1236989   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1236990   +   end;
MPRINT(EM_DIAGRAM):   end;
1236991   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1236992   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1236993   +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
1236994   +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
1236995   +   end;
MPRINT(EM_DIAGRAM):   end;
1236996   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1236997   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1236998   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1236999   +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
1237000   +   end;
MPRINT(EM_DIAGRAM):   end;
1237001   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1237002   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1237003   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1237004   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1237005   +   end;
MPRINT(EM_DIAGRAM):   end;
1237006   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237007   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1237008   +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1237009   +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1237010   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237011   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237012   +   end;
MPRINT(EM_DIAGRAM):   end;
1237013   +end;
MPRINT(EM_DIAGRAM):   end;
1237014   +
1237015   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1237016   +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
1237017   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1237018   +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1237019   +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1237020   +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1237021   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1237022   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237023   +end;
MPRINT(EM_DIAGRAM):   end;
1237024   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237025   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1237026   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1237027   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1237028   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1237029   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1237030   +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
1237031   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1237032   +   end;
MPRINT(EM_DIAGRAM):   end;
1237033   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1237034   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1237035   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1237036   +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
1237037   +   end;
MPRINT(EM_DIAGRAM):   end;
1237038   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1237039   +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
1237040   +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
1237041   +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
1237042   +   end;
MPRINT(EM_DIAGRAM):   end;
1237043   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1237044   +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
1237045   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1237046   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1237047   +   end;
MPRINT(EM_DIAGRAM):   end;
1237048   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237049   +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1237050   +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1237051   +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1237052   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237053   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237054   +   end;
MPRINT(EM_DIAGRAM):   end;
1237055   +end;
MPRINT(EM_DIAGRAM):   end;
1237056   +
1237057   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1237058   +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
1237059   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1237060   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1237061   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1237062   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1237063   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1237064   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237065   +end;
MPRINT(EM_DIAGRAM):   end;
1237066   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237067   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1237068   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1237069   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1237070   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1237071   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1237072   +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1237073   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1237074   +   end;
MPRINT(EM_DIAGRAM):   end;
1237075   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1237076   +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1237077   +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1237078   +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1237079   +   end;
MPRINT(EM_DIAGRAM):   end;
1237080   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1237081   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1237082   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1237083   +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1237084   +   end;
MPRINT(EM_DIAGRAM):   end;
1237085   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1237086   +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1237087   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1237088   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1237089   +   end;
MPRINT(EM_DIAGRAM):   end;
1237090   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237091   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1237092   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1237093   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1237094   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237095   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237096   +   end;
MPRINT(EM_DIAGRAM):   end;
1237097   +end;
MPRINT(EM_DIAGRAM):   end;
1237098   +
1237099   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1237100   +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
1237101   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1237102   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1237103   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1237104   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1237105   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237106   +end;
MPRINT(EM_DIAGRAM):   end;
1237107   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237108   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1237109   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1237110   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1237111   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1237112   +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1237113   +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1237114   +   end;
MPRINT(EM_DIAGRAM):   end;
1237115   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1237116   +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1237117   +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1237118   +   end;
MPRINT(EM_DIAGRAM):   end;
1237119   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1237120   +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1237121   +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1237122   +   end;
MPRINT(EM_DIAGRAM):   end;
1237123   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237124   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1237125   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1237126   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237127   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237128   +   end;
MPRINT(EM_DIAGRAM):   end;
1237129   +end;
MPRINT(EM_DIAGRAM):   end;
1237130   +
1237131   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1237132   +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
1237133   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1237134   +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1237135   +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1237136   +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1237137   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1237138   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237139   +end;
MPRINT(EM_DIAGRAM):   end;
1237140   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237141   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1237142   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1237143   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1237144   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1237145   +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
1237146   +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
1237147   +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
1237148   +   end;
MPRINT(EM_DIAGRAM):   end;
1237149   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1237150   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1237151   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1237152   +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
1237153   +   end;
MPRINT(EM_DIAGRAM):   end;
1237154   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1237155   +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
1237156   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1237157   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1237158   +   end;
MPRINT(EM_DIAGRAM):   end;
1237159   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1237160   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1237161   +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
1237162   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1237163   +   end;
MPRINT(EM_DIAGRAM):   end;
1237164   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237165   +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1237166   +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1237167   +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1237168   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237169   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237170   +   end;
MPRINT(EM_DIAGRAM):   end;
1237171   +end;
MPRINT(EM_DIAGRAM):   end;
1237172   +
1237173   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1237174   +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
1237175   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1237176   +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1237177   +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1237178   +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1237179   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1237180   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237181   +end;
MPRINT(EM_DIAGRAM):   end;
1237182   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237183   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1237184   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1237185   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1237186   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1237187   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1237188   +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
1237189   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1237190   +   end;
MPRINT(EM_DIAGRAM):   end;
1237191   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1237192   +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
1237193   +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
1237194   +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
1237195   +   end;
MPRINT(EM_DIAGRAM):   end;
1237196   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1237197   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1237198   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1237199   +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
1237200   +   end;
MPRINT(EM_DIAGRAM):   end;
1237201   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1237202   +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
1237203   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1237204   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1237205   +   end;
MPRINT(EM_DIAGRAM):   end;
1237206   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237207   +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1237208   +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1237209   +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1237210   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237211   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237212   +   end;
MPRINT(EM_DIAGRAM):   end;
1237213   +end;
MPRINT(EM_DIAGRAM):   end;
1237214   +
1237215   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1237216   +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
1237217   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1237218   +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1237219   +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1237220   +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1237221   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1237222   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237223   +end;
MPRINT(EM_DIAGRAM):   end;
1237224   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237225   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1237226   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1237227   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1237228   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1237229   +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
1237230   +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
1237231   +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
1237232   +   end;
MPRINT(EM_DIAGRAM):   end;
1237233   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1237234   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1237235   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1237236   +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
1237237   +   end;
MPRINT(EM_DIAGRAM):   end;
1237238   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1237239   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1237240   +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
1237241   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1237242   +   end;
MPRINT(EM_DIAGRAM):   end;
1237243   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1237244   +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
1237245   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1237246   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1237247   +   end;
MPRINT(EM_DIAGRAM):   end;
1237248   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237249   +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1237250   +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1237251   +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1237252   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237253   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237254   +   end;
MPRINT(EM_DIAGRAM):   end;
1237255   +end;
MPRINT(EM_DIAGRAM):   end;
1237256   +
1237257   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1237258   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1237259   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1237260   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1237261   +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
1237262   +end;
MPRINT(EM_DIAGRAM):   end;
1237263   +
1237264   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1237265   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1237266   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1237267   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1237268   +
1237269   +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
1237270   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1237271   +_LP0 = _LP0 + (    -1.0202735142883) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0202735142883) * _TEMP * _1_0;
1237272   +
1237273   +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
1237274   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1237275   +_LP0 = _LP0 + (    1.96135216788678) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.96135216788678) * _TEMP * _2_0;
1237276   +_LP0 = _LP0 + (    0.16052598190077) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16052598190077) * _TEMP * _2_1;
1237277   +_LP0 = _LP0 + (   -0.70902116030282) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70902116030282) * _TEMP * _2_2;
1237278   +
1237279   +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
1237280   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1237281   +_LP0 = _LP0 + (    0.93791732843579) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.93791732843579) * _TEMP * _3_0;
1237282   +_LP0 = _LP0 + (    0.86323578315443) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.86323578315443) * _TEMP * _3_1;
1237283   +_LP0 = _LP0 + (   -0.93701763797667) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.93701763797667) * _TEMP * _3_2;
1237284   +
1237285   +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
1237286   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1237287   +_LP0 = _LP0 + (     0.6826557743697) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.6826557743697) * _TEMP * _5_0;
1237288   +_LP0 = _LP0 + (    0.02285788144903) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02285788144903) * _TEMP * _5_1;
1237289   +_LP0 = _LP0 + (   -0.06609528477722) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06609528477722) * _TEMP * _5_2;
1237290   +
1237291   +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
1237292   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1237293   +_LP0 = _LP0 + (   -1.44582935530291) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.44582935530291) * _TEMP * _7_0;
1237294   +_LP0 = _LP0 + (   -0.21318741203534) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21318741203534) * _TEMP * _7_1;
1237295   +_LP0 = _LP0 + (    0.53364168349885) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53364168349885) * _TEMP * _7_2;
1237296   +
1237297   +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
1237298   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1237299   +_LP0 = _LP0 + (    0.98273321190928) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.98273321190928) * _TEMP * _8_0;
1237300   +_LP0 = _LP0 + (      0.432298434838) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.432298434838) * _TEMP * _8_1;
1237301   +_LP0 = _LP0 + (   -0.57365050311778) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57365050311778) * _TEMP * _8_2;
1237302   +
1237303   +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
1237304   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1237305   +_LP0 = _LP0 + (   -1.15145054763997) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.15145054763997) * _TEMP * _9_0;
1237306   +_LP0 = _LP0 + (    0.03505087718511) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03505087718511) * _TEMP * _9_1;
1237307   +
1237308   +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
1237309   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1237310   +_LP0 = _LP0 + (   -2.65890505222228) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65890505222228) * _TEMP * _10_0;
1237311   +_LP0 = _LP0 + (     0.0545239904585) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0545239904585) * _TEMP * _10_1;
1237312   +_LP0 = _LP0 + (    0.51990032635141) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51990032635141) * _TEMP * _10_2;
1237313   +
1237314   +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
1237315   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1237316   +_LP0 = _LP0 + (   -0.25494301084801) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25494301084801) * _TEMP * _13_0;
1237317   +_LP0 = _LP0 + (    0.02802747054775) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02802747054775) * _TEMP * _13_1;
1237318   +_LP0 = _LP0 + (   -0.40273598284868) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40273598284868) * _TEMP * _13_2;
1237319   +
1237320   +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
1237321   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1237322   +_LP0 = _LP0 + (    1.94607798996867) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.94607798996867) * _TEMP * _14_0;
1237323   +_LP0 = _LP0 + (    0.53257949184685) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53257949184685) * _TEMP * _14_1;
1237324   +_LP0 = _LP0 + (   -0.62881974341908) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.62881974341908) * _TEMP * _14_2;
1237325   +
1237326   +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
1237327   +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
1237328   +_LP0 = _LP0 + (    0.01824806947783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01824806947783 * _TEMP);
1237329   +
1237330   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1237331   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1237332   +_TEMP =    -37.6992883159803 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -37.6992883159803 + _LP0;
1237333   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1237334   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1237335   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1237336   +end;
MPRINT(EM_DIAGRAM):   end;
1237337   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1237338   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1237339   +
1237340   +REG3DR1:
1237341   +
1237342   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Residuals;
1237343   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1237344   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1237345   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1237346   +end;
MPRINT(EM_DIAGRAM):   end;
1237347   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237348   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1237349   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1237350   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1237351   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1237352   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1237353   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1237354   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1237355   +   end;
MPRINT(EM_DIAGRAM):   end;
1237356   +end;
MPRINT(EM_DIAGRAM):   end;
1237357   +
1237358   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1237359   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1237360   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1237361   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1237362   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1237363   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1237364   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1237365   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1237366   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1237367   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1237368   +end;
MPRINT(EM_DIAGRAM):   end;
1237369   +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
1237370   +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
1237371   +
1237372   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1237373   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1237374   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1237375   +* Renaming variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg3;
1237376   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1237377   +* Renaming Posterior variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg3;
1237378   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1237379   +drop Reg3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar1;
1237380   +Reg3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar1 = P_DepVar1;
1237381   +drop Reg3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar0;
1237382   +Reg3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar0 = P_DepVar0;
1237383   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1237384   +* Renaming _WARN_ variable for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg3;
1237385   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1237386   +length Reg3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg3_WARN_ $4;
1237387   +drop Reg3_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg3_WARN_;
1237388   +Reg3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg3_WARN_ = _WARN_;
1237389   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1237390   +* Ensmbl7: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring Code of model 2 of 5;
1237391   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1237392   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1237393   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1237394   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1237395   +* NODE: Neural18;
MPRINT(EM_DIAGRAM):   * NODE: Neural18;
1237396   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1237397   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1237398   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1237399   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1237400   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1237401   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1237402   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1237403   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1237404   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1237405   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1237406   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1237407   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1237408   +LENGTH _WARN_ $4
1237409   +      F_DepVar  $ 12
1237410   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1237411   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1237412   +
1237413   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1237414   +
1237415   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
The SAS System
 
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1237416   +
1237417   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1237418   +
1237419   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1237420   +
1237421   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1237422   +
1237423   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1237424   +
1237425   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1237426   +
1237427   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1237428   +
1237429   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1237430   +
1237431   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1237432   +
1237433   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1237434   +
1237435   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1237436   +
1237437   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1237438   +
1237439   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1237440   +
1237441   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1237442   +
1237443   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1237444   +
1237445   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1237446   +
1237447   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1237448   +
1237449   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1237450   +
1237451   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1237452   +
1237453   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1237454   +
1237455   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1237456   +
1237457   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1237458   +
1237459   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1237460   +
1237461   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1237462   +
1237463   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1237464   +
1237465   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1237466   +
1237467   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1237468   +
1237469   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1237470   +
1237471   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1237472   +
1237473   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1237474   +
1237475   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1237476   +
1237477   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1237478   +
1237479   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1237480   +
1237481   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1237482   +
1237483   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1237484   +
1237485   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1237486   +
1237487   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1237488   +
1237489   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1237490   +
1237491   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1237492   +
1237493   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1237494   +
1237495   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1237496   +
1237497   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1237498   +
1237499   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1237500   +
1237501   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1237502   +
1237503   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1237504   +
1237505   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1237506   +
1237507   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1237508   +
1237509   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1237510   +
1237511   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1237512   +
1237513   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1237514   +
1237515   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1237516   +
1237517   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1237518   +
1237519   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1237520   +
1237521   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1237522   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1237523   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1237524   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1237525   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1237526   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237527   +end;
MPRINT(EM_DIAGRAM):   end;
1237528   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237529   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1237530   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1237531   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1237532   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1237533   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1237534   +   end;
MPRINT(EM_DIAGRAM):   end;
1237535   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1237536   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1237537   +   end;
MPRINT(EM_DIAGRAM):   end;
1237538   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237539   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1237540   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237541   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237542   +   end;
MPRINT(EM_DIAGRAM):   end;
1237543   +end;
MPRINT(EM_DIAGRAM):   end;
1237544   +
1237545   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1237546   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1237547   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1237548   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1237549   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1237550   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1237551   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1237552   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237553   +end;
MPRINT(EM_DIAGRAM):   end;
1237554   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237555   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1237556   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1237557   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1237558   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1237559   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1237560   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1237561   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1237562   +   end;
MPRINT(EM_DIAGRAM):   end;
1237563   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1237564   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1237565   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1237566   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1237567   +   end;
MPRINT(EM_DIAGRAM):   end;
1237568   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1237569   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1237570   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1237571   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1237572   +   end;
MPRINT(EM_DIAGRAM):   end;
1237573   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1237574   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1237575   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1237576   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1237577   +   end;
MPRINT(EM_DIAGRAM):   end;
1237578   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237579   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1237580   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1237581   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1237582   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237583   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237584   +   end;
MPRINT(EM_DIAGRAM):   end;
1237585   +end;
MPRINT(EM_DIAGRAM):   end;
1237586   +
1237587   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1237588   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1237589   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1237590   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1237591   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1237592   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1237593   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1237594   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237595   +end;
MPRINT(EM_DIAGRAM):   end;
1237596   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237597   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1237598   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1237599   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1237600   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1237601   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1237602   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1237603   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1237604   +   end;
MPRINT(EM_DIAGRAM):   end;
1237605   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1237606   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1237607   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1237608   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1237609   +   end;
MPRINT(EM_DIAGRAM):   end;
1237610   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1237611   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1237612   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1237613   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1237614   +   end;
MPRINT(EM_DIAGRAM):   end;
1237615   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1237616   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1237617   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1237618   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1237619   +   end;
MPRINT(EM_DIAGRAM):   end;
1237620   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237621   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1237622   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1237623   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1237624   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237625   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237626   +   end;
MPRINT(EM_DIAGRAM):   end;
1237627   +end;
MPRINT(EM_DIAGRAM):   end;
1237628   +
1237629   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1237630   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1237631   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1237632   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1237633   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1237634   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1237635   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1237636   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237637   +end;
MPRINT(EM_DIAGRAM):   end;
1237638   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237639   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1237640   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1237641   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1237642   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1237643   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1237644   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1237645   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1237646   +   end;
MPRINT(EM_DIAGRAM):   end;
1237647   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1237648   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1237649   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1237650   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1237651   +   end;
MPRINT(EM_DIAGRAM):   end;
1237652   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1237653   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1237654   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1237655   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1237656   +   end;
MPRINT(EM_DIAGRAM):   end;
1237657   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1237658   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1237659   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1237660   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1237661   +   end;
MPRINT(EM_DIAGRAM):   end;
1237662   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237663   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1237664   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1237665   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1237666   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237667   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237668   +   end;
MPRINT(EM_DIAGRAM):   end;
1237669   +end;
MPRINT(EM_DIAGRAM):   end;
1237670   +
1237671   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1237672   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1237673   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1237674   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1237675   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1237676   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1237677   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1237678   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237679   +end;
MPRINT(EM_DIAGRAM):   end;
1237680   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237681   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1237682   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1237683   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1237684   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1237685   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1237686   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1237687   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1237688   +   end;
MPRINT(EM_DIAGRAM):   end;
1237689   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1237690   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1237691   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1237692   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1237693   +   end;
MPRINT(EM_DIAGRAM):   end;
1237694   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1237695   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1237696   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1237697   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1237698   +   end;
MPRINT(EM_DIAGRAM):   end;
1237699   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1237700   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1237701   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1237702   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1237703   +   end;
MPRINT(EM_DIAGRAM):   end;
1237704   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237705   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1237706   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1237707   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1237708   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237709   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237710   +   end;
MPRINT(EM_DIAGRAM):   end;
1237711   +end;
MPRINT(EM_DIAGRAM):   end;
1237712   +
1237713   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1237714   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1237715   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1237716   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1237717   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1237718   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1237719   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1237720   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237721   +end;
MPRINT(EM_DIAGRAM):   end;
1237722   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237723   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1237724   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1237725   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1237726   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1237727   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1237728   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1237729   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1237730   +   end;
MPRINT(EM_DIAGRAM):   end;
1237731   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1237732   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1237733   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1237734   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1237735   +   end;
MPRINT(EM_DIAGRAM):   end;
1237736   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1237737   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1237738   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1237739   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1237740   +   end;
MPRINT(EM_DIAGRAM):   end;
1237741   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1237742   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1237743   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1237744   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1237745   +   end;
MPRINT(EM_DIAGRAM):   end;
1237746   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237747   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1237748   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1237749   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1237750   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237751   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237752   +   end;
MPRINT(EM_DIAGRAM):   end;
1237753   +end;
MPRINT(EM_DIAGRAM):   end;
1237754   +
1237755   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1237756   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1237757   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1237758   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1237759   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1237760   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1237761   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1237762   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237763   +end;
MPRINT(EM_DIAGRAM):   end;
1237764   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237765   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1237766   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1237767   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1237768   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1237769   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1237770   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1237771   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1237772   +   end;
MPRINT(EM_DIAGRAM):   end;
1237773   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1237774   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1237775   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1237776   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1237777   +   end;
MPRINT(EM_DIAGRAM):   end;
1237778   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1237779   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1237780   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1237781   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1237782   +   end;
MPRINT(EM_DIAGRAM):   end;
1237783   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1237784   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1237785   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1237786   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1237787   +   end;
MPRINT(EM_DIAGRAM):   end;
1237788   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237789   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1237790   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1237791   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1237792   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237793   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237794   +   end;
MPRINT(EM_DIAGRAM):   end;
1237795   +end;
MPRINT(EM_DIAGRAM):   end;
1237796   +
1237797   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1237798   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1237799   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1237800   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1237801   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1237802   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1237803   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1237804   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237805   +end;
MPRINT(EM_DIAGRAM):   end;
1237806   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237807   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1237808   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1237809   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1237810   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1237811   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1237812   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1237813   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1237814   +   end;
MPRINT(EM_DIAGRAM):   end;
1237815   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1237816   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1237817   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1237818   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1237819   +   end;
MPRINT(EM_DIAGRAM):   end;
1237820   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1237821   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1237822   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1237823   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1237824   +   end;
MPRINT(EM_DIAGRAM):   end;
1237825   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1237826   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1237827   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1237828   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1237829   +   end;
MPRINT(EM_DIAGRAM):   end;
1237830   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237831   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1237832   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1237833   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1237834   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237835   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237836   +   end;
MPRINT(EM_DIAGRAM):   end;
1237837   +end;
MPRINT(EM_DIAGRAM):   end;
1237838   +
1237839   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1237840   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1237841   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1237842   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1237843   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1237844   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1237845   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237846   +end;
MPRINT(EM_DIAGRAM):   end;
1237847   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237848   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1237849   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1237850   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1237851   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1237852   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1237853   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1237854   +   end;
MPRINT(EM_DIAGRAM):   end;
1237855   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1237856   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1237857   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1237858   +   end;
MPRINT(EM_DIAGRAM):   end;
1237859   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1237860   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1237861   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1237862   +   end;
MPRINT(EM_DIAGRAM):   end;
1237863   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237864   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1237865   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1237866   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237867   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237868   +   end;
MPRINT(EM_DIAGRAM):   end;
1237869   +end;
MPRINT(EM_DIAGRAM):   end;
1237870   +
1237871   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1237872   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1237873   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1237874   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1237875   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1237876   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1237877   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1237878   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237879   +end;
MPRINT(EM_DIAGRAM):   end;
1237880   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237881   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1237882   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1237883   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1237884   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1237885   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1237886   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1237887   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1237888   +   end;
MPRINT(EM_DIAGRAM):   end;
1237889   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1237890   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1237891   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1237892   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1237893   +   end;
MPRINT(EM_DIAGRAM):   end;
1237894   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1237895   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1237896   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1237897   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1237898   +   end;
MPRINT(EM_DIAGRAM):   end;
1237899   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1237900   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1237901   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1237902   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1237903   +   end;
MPRINT(EM_DIAGRAM):   end;
1237904   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237905   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1237906   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1237907   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1237908   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237909   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237910   +   end;
MPRINT(EM_DIAGRAM):   end;
1237911   +end;
MPRINT(EM_DIAGRAM):   end;
1237912   +
1237913   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1237914   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1237915   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1237916   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1237917   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1237918   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1237919   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1237920   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237921   +end;
MPRINT(EM_DIAGRAM):   end;
1237922   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237923   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1237924   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1237925   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1237926   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1237927   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1237928   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1237929   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1237930   +   end;
MPRINT(EM_DIAGRAM):   end;
1237931   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1237932   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1237933   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1237934   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1237935   +   end;
MPRINT(EM_DIAGRAM):   end;
1237936   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1237937   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1237938   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1237939   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1237940   +   end;
MPRINT(EM_DIAGRAM):   end;
1237941   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1237942   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1237943   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1237944   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1237945   +   end;
MPRINT(EM_DIAGRAM):   end;
1237946   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237947   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1237948   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1237949   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1237950   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237951   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237952   +   end;
MPRINT(EM_DIAGRAM):   end;
1237953   +end;
MPRINT(EM_DIAGRAM):   end;
1237954   +
1237955   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1237956   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1237957   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1237958   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1237959   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1237960   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1237961   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1237962   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237963   +end;
MPRINT(EM_DIAGRAM):   end;
1237964   +else do;
MPRINT(EM_DIAGRAM):   else do;
1237965   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1237966   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1237967   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1237968   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1237969   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1237970   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1237971   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1237972   +   end;
MPRINT(EM_DIAGRAM):   end;
1237973   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1237974   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1237975   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1237976   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1237977   +   end;
MPRINT(EM_DIAGRAM):   end;
1237978   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1237979   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1237980   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1237981   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1237982   +   end;
MPRINT(EM_DIAGRAM):   end;
1237983   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1237984   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1237985   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1237986   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1237987   +   end;
MPRINT(EM_DIAGRAM):   end;
1237988   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1237989   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1237990   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1237991   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1237992   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1237993   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1237994   +   end;
MPRINT(EM_DIAGRAM):   end;
1237995   +end;
MPRINT(EM_DIAGRAM):   end;
1237996   +
1237997   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1237998   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1237999   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1238000   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1238001   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1238002   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1238003   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1238004   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238005   +end;
MPRINT(EM_DIAGRAM):   end;
1238006   +else do;
MPRINT(EM_DIAGRAM):   else do;
1238007   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1238008   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1238009   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1238010   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1238011   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1238012   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1238013   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1238014   +   end;
MPRINT(EM_DIAGRAM):   end;
1238015   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1238016   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1238017   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1238018   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1238019   +   end;
MPRINT(EM_DIAGRAM):   end;
1238020   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1238021   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1238022   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1238023   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1238024   +   end;
MPRINT(EM_DIAGRAM):   end;
1238025   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1238026   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1238027   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1238028   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1238029   +   end;
MPRINT(EM_DIAGRAM):   end;
1238030   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1238031   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1238032   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1238033   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1238034   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1238035   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238036   +   end;
MPRINT(EM_DIAGRAM):   end;
1238037   +end;
MPRINT(EM_DIAGRAM):   end;
1238038   +
1238039   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1238040   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1238041   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1238042   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1238043   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1238044   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1238045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1238046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238047   +end;
MPRINT(EM_DIAGRAM):   end;
1238048   +else do;
MPRINT(EM_DIAGRAM):   else do;
1238049   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1238050   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1238051   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1238052   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1238053   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1238054   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1238055   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1238056   +   end;
MPRINT(EM_DIAGRAM):   end;
1238057   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1238058   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1238059   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1238060   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1238061   +   end;
MPRINT(EM_DIAGRAM):   end;
1238062   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1238063   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1238064   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1238065   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1238066   +   end;
MPRINT(EM_DIAGRAM):   end;
1238067   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1238068   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1238069   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1238070   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1238071   +   end;
MPRINT(EM_DIAGRAM):   end;
1238072   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1238073   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1238074   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1238075   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1238076   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1238077   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238078   +   end;
MPRINT(EM_DIAGRAM):   end;
1238079   +end;
MPRINT(EM_DIAGRAM):   end;
1238080   +
1238081   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1238082   +*** Checking missing input Interval
1238083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1238084   +
1238085   +IF NMISS(
1238086   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1238087   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1238088   +
1238089   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238090   +END;
MPRINT(EM_DIAGRAM):   END;
1238091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1238092   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1238093   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1238094   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1238095   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1238096   +END;
MPRINT(EM_DIAGRAM):   END;
1238097   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1238098   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1238099   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1238100   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1238101   +END;
MPRINT(EM_DIAGRAM):   END;
1238102   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1238103   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1238104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1238105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1238106   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1238107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1238108   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1238109   +   H11  =     0.03855897145156 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.03855897145156 * S_Year_Birth ;
1238110   +   H12  =      0.4940754340088 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.4940754340088 * S_Year_Birth ;
1238111   +   H13  =     0.17524137660647 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.17524137660647 * S_Year_Birth ;
1238112   +   H14  =     0.27270757044038 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.27270757044038 * S_Year_Birth ;
1238113   +   H15  =    -0.02127353119313 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.02127353119313 * S_Year_Birth ;
1238114   +   H16  =    -0.10595973365564 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.10595973365564 * S_Year_Birth ;
1238115   +   H17  =    -0.11271332681901 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.11271332681901 * S_Year_Birth ;
1238116   +   H11  = H11  +     0.21558790598329 * GRP_AcceptedCmp52
1238117   +          +    -0.07145572032882 * GRP_Frq2  +     0.09268595548153 * GRP_Frq3
1238118   +          +    -0.20765463263399 * GRP_Frq4  +    -0.00887637988838 *
1238119   +        GRP_Income2  +    -0.34198008097003 * GRP_Income3
1238120   +          +     0.00518173450113 * GRP_Income4  +     0.17153998784849 *
1238121   +        GRP_Mnt2  +    -0.03282863464194 * GRP_Mnt3  +     0.15479242768387 *
1238122   +        GRP_Mnt4  +    -0.14566682947772 * GRP_MntFishProducts2
1238123   +          +    -0.04697385312971 * GRP_MntFishProducts3
1238124   +          +     0.05477300056491 * GRP_MntFishProducts4
1238125   +          +    -0.21182877070793 * GRP_MntGoldProds2
1238126   +          +    -0.06202001203906 * GRP_MntGoldProds3
1238127   +          +    -0.23297283739715 * GRP_MntGoldProds4
1238128   +          +    -0.27072080481215 * GRP_MntMeatProducts2
1238129   +          +     -0.0879595975531 * GRP_MntMeatProducts3
1238130   +          +     0.01711044358319 * GRP_MntMeatProducts4
1238131   +          +     0.01568057691806 * GRP_MntWines2  +    -0.14454572309741 *
1238132   +        GRP_MntWines3  +      0.1665968837033 * GRP_MntWines4
1238133   +          +    -0.24980039994544 * GRP_NumCatalogPurchases3
1238134   +          +    -0.00199030871063 * GRP_NumCatalogPurchases4
1238135   +          +     0.11565917560156 * GRP_NumDistPurchases2
1238136   +          +      0.1678532898895 * GRP_NumDistPurchases3
1238137   +          +     -0.0338568889009 * GRP_NumDistPurchases4
1238138   +          +     0.09970745707934 * GRP_NumWebPurchases2
1238139   +          +     0.02961221360107 * GRP_NumWebPurchases3
1238140   +          +     0.02261054892411 * GRP_NumWebPurchases4
1238141   +          +     0.22891892518291 * GRP_RFMstat2  +     0.30720492174411 *
1238142   +        GRP_RFMstat3  +     0.02558392907316 * GRP_RFMstat4
1238143   +          +    -0.22752513596954 * GRP_RMntFrq2  +    -0.11010023712096 *
1238144   +        GRP_RMntFrq3  +    -0.29294961809478 * GRP_RMntFrq4
1238145   +          +     0.17323450297234 * GRP_Recency2  +    -0.02999008104866 *
1238146   +        GRP_Recency3  +    -0.07522056103469 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21558790598329 * GRP_AcceptedCmp52 + -0.07145572032882 *
GRP_Frq2 + 0.09268595548153 * GRP_Frq3 + -0.20765463263399 * GRP_Frq4 + -0.00887637988838 *
GRP_Income2 + -0.34198008097003 * GRP_Income3 + 0.00518173450113 * GRP_Income4 +
0.17153998784849 * GRP_Mnt2 + -0.03282863464194 * GRP_Mnt3 + 0.15479242768387 * GRP_Mnt4 +
-0.14566682947772 * GRP_MntFishProducts2 + -0.04697385312971 * GRP_MntFishProducts3 +
0.05477300056491 * GRP_MntFishProducts4 + -0.21182877070793 * GRP_MntGoldProds2 +
-0.06202001203906 * GRP_MntGoldProds3 + -0.23297283739715 * GRP_MntGoldProds4 +
-0.27072080481215 * GRP_MntMeatProducts2 + -0.0879595975531 * GRP_MntMeatProducts3 +
0.01711044358319 * GRP_MntMeatProducts4 + 0.01568057691806 * GRP_MntWines2 + -0.14454572309741
* GRP_MntWines3 + 0.1665968837033 * GRP_MntWines4 + -0.24980039994544 *
GRP_NumCatalogPurchases3 + -0.00199030871063 * GRP_NumCatalogPurchases4 + 0.11565917560156 *
GRP_NumDistPurchases2 + 0.1678532898895 * GRP_NumDistPurchases3 + -0.0338568889009 *
GRP_NumDistPurchases4 + 0.09970745707934 * GRP_NumWebPurchases2 + 0.02961221360107 *
GRP_NumWebPurchases3 + 0.02261054892411 * GRP_NumWebPurchases4 + 0.22891892518291 *
GRP_RFMstat2 + 0.30720492174411 * GRP_RFMstat3 + 0.02558392907316 * GRP_RFMstat4 +
-0.22752513596954 * GRP_RMntFrq2 + -0.11010023712096 * GRP_RMntFrq3 + -0.29294961809478 *
GRP_RMntFrq4 + 0.17323450297234 * GRP_Recency2 + -0.02999008104866 * GRP_Recency3 +
-0.07522056103469 * GRP_Recency4 ;
1238147   +   H12  = H12  +    -0.17475665685155 * GRP_AcceptedCmp52
1238148   +          +     0.39850686717751 * GRP_Frq2  +     0.21273190324396 * GRP_Frq3
1238149   +          +    -0.04292229763335 * GRP_Frq4  +     0.48189221687125 *
1238150   +        GRP_Income2  +       0.757675062227 * GRP_Income3
1238151   +          +    -0.31438345261512 * GRP_Income4  +     0.08884755999997 *
1238152   +        GRP_Mnt2  +     0.02891204793625 * GRP_Mnt3  +    -0.11500381143203 *
1238153   +        GRP_Mnt4  +     0.47755891441547 * GRP_MntFishProducts2
1238154   +          +     0.26645530981311 * GRP_MntFishProducts3
1238155   +          +    -0.17631072283513 * GRP_MntFishProducts4
1238156   +          +    -0.35439521021691 * GRP_MntGoldProds2
1238157   +          +     0.11419663880206 * GRP_MntGoldProds3
1238158   +          +     0.07288749113866 * GRP_MntGoldProds4
1238159   +          +    -0.52191822126159 * GRP_MntMeatProducts2
1238160   +          +    -0.08421627788812 * GRP_MntMeatProducts3
1238161   +          +    -0.15930642038763 * GRP_MntMeatProducts4
1238162   +          +     0.17420985773045 * GRP_MntWines2  +     0.21257483876123 *
1238163   +        GRP_MntWines3  +    -0.13198840161443 * GRP_MntWines4
1238164   +          +    -0.24725403471973 * GRP_NumCatalogPurchases3
1238165   +          +     0.28574938745998 * GRP_NumCatalogPurchases4
1238166   +          +     -0.4878996299474 * GRP_NumDistPurchases2
1238167   +          +     0.10139595392447 * GRP_NumDistPurchases3
1238168   +          +     0.05251891244468 * GRP_NumDistPurchases4
1238169   +          +    -0.18486003226007 * GRP_NumWebPurchases2
1238170   +          +      0.0263831646971 * GRP_NumWebPurchases3
1238171   +          +     0.26495059708503 * GRP_NumWebPurchases4
1238172   +          +    -0.16580006605432 * GRP_RFMstat2  +    -0.12537703875848 *
1238173   +        GRP_RFMstat3  +      -0.100652416931 * GRP_RFMstat4
1238174   +          +    -0.00913931308958 * GRP_RMntFrq2  +    -0.15758837200974 *
1238175   +        GRP_RMntFrq3  +     -0.1198225533702 * GRP_RMntFrq4
1238176   +          +       1.075902392162 * GRP_Recency2  +     0.44926983542925 *
1238177   +        GRP_Recency3  +     -0.4970729472837 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17475665685155 * GRP_AcceptedCmp52 + 0.39850686717751 *
GRP_Frq2 + 0.21273190324396 * GRP_Frq3 + -0.04292229763335 * GRP_Frq4 + 0.48189221687125 *
GRP_Income2 + 0.757675062227 * GRP_Income3 + -0.31438345261512 * GRP_Income4 +
0.08884755999997 * GRP_Mnt2 + 0.02891204793625 * GRP_Mnt3 + -0.11500381143203 * GRP_Mnt4 +
0.47755891441547 * GRP_MntFishProducts2 + 0.26645530981311 * GRP_MntFishProducts3 +
-0.17631072283513 * GRP_MntFishProducts4 + -0.35439521021691 * GRP_MntGoldProds2 +
0.11419663880206 * GRP_MntGoldProds3 + 0.07288749113866 * GRP_MntGoldProds4 +
-0.52191822126159 * GRP_MntMeatProducts2 + -0.08421627788812 * GRP_MntMeatProducts3 +
-0.15930642038763 * GRP_MntMeatProducts4 + 0.17420985773045 * GRP_MntWines2 + 0.21257483876123
* GRP_MntWines3 + -0.13198840161443 * GRP_MntWines4 + -0.24725403471973 *
GRP_NumCatalogPurchases3 + 0.28574938745998 * GRP_NumCatalogPurchases4 + -0.4878996299474 *
GRP_NumDistPurchases2 + 0.10139595392447 * GRP_NumDistPurchases3 + 0.05251891244468 *
GRP_NumDistPurchases4 + -0.18486003226007 * GRP_NumWebPurchases2 + 0.0263831646971 *
GRP_NumWebPurchases3 + 0.26495059708503 * GRP_NumWebPurchases4 + -0.16580006605432 *
GRP_RFMstat2 + -0.12537703875848 * GRP_RFMstat3 + -0.100652416931 * GRP_RFMstat4 +
-0.00913931308958 * GRP_RMntFrq2 + -0.15758837200974 * GRP_RMntFrq3 + -0.1198225533702 *
GRP_RMntFrq4 + 1.075902392162 * GRP_Recency2 + 0.44926983542925 * GRP_Recency3 +
-0.4970729472837 * GRP_Recency4 ;
1238178   +   H13  = H13  +     0.00215688122529 * GRP_AcceptedCmp52
1238179   +          +    -0.01427589791379 * GRP_Frq2  +    -0.13098496868755 * GRP_Frq3
1238180   +          +    -0.30502313457201 * GRP_Frq4  +    -0.37973462663051 *
1238181   +        GRP_Income2  +     0.00732780844057 * GRP_Income3
1238182   +          +     0.53278328894406 * GRP_Income4  +     0.29819966041309 *
1238183   +        GRP_Mnt2  +     0.25349727466129 * GRP_Mnt3  +     0.10579488290769 *
1238184   +        GRP_Mnt4  +    -0.09288921771048 * GRP_MntFishProducts2
1238185   +          +     0.02714802509094 * GRP_MntFishProducts3
1238186   +          +     0.27119078554613 * GRP_MntFishProducts4
1238187   +          +     0.19322428614339 * GRP_MntGoldProds2
1238188   +          +     0.34778546410632 * GRP_MntGoldProds3
1238189   +          +    -0.06570146779096 * GRP_MntGoldProds4
1238190   +          +     0.44935275650977 * GRP_MntMeatProducts2
1238191   +          +     0.00805794344265 * GRP_MntMeatProducts3
1238192   +          +     0.02445782833023 * GRP_MntMeatProducts4
1238193   +          +    -0.12082391878766 * GRP_MntWines2  +    -0.28739181733976 *
1238194   +        GRP_MntWines3  +    -0.12417307544408 * GRP_MntWines4
1238195   +          +     0.33901531634752 * GRP_NumCatalogPurchases3
1238196   +          +     -0.0519425405532 * GRP_NumCatalogPurchases4
1238197   +          +     0.03481806823908 * GRP_NumDistPurchases2
1238198   +          +      0.0546202479864 * GRP_NumDistPurchases3
1238199   +          +    -0.05240296080421 * GRP_NumDistPurchases4
1238200   +          +     0.28307550964921 * GRP_NumWebPurchases2
1238201   +          +     0.31503543231591 * GRP_NumWebPurchases3
1238202   +          +     0.24817135719308 * GRP_NumWebPurchases4
1238203   +          +    -0.05017370187238 * GRP_RFMstat2  +     0.08161239885611 *
1238204   +        GRP_RFMstat3  +    -0.14085507706312 * GRP_RFMstat4
1238205   +          +     0.11738278568714 * GRP_RMntFrq2  +     0.28471680928269 *
1238206   +        GRP_RMntFrq3  +     0.46590886050772 * GRP_RMntFrq4
1238207   +          +     -0.2318556486679 * GRP_Recency2  +    -0.37508297533514 *
1238208   +        GRP_Recency3  +     0.05823801065489 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00215688122529 * GRP_AcceptedCmp52 + -0.01427589791379 *
GRP_Frq2 + -0.13098496868755 * GRP_Frq3 + -0.30502313457201 * GRP_Frq4 + -0.37973462663051 *
GRP_Income2 + 0.00732780844057 * GRP_Income3 + 0.53278328894406 * GRP_Income4 +
0.29819966041309 * GRP_Mnt2 + 0.25349727466129 * GRP_Mnt3 + 0.10579488290769 * GRP_Mnt4 +
-0.09288921771048 * GRP_MntFishProducts2 + 0.02714802509094 * GRP_MntFishProducts3 +
0.27119078554613 * GRP_MntFishProducts4 + 0.19322428614339 * GRP_MntGoldProds2 +
0.34778546410632 * GRP_MntGoldProds3 + -0.06570146779096 * GRP_MntGoldProds4 +
0.44935275650977 * GRP_MntMeatProducts2 + 0.00805794344265 * GRP_MntMeatProducts3 +
0.02445782833023 * GRP_MntMeatProducts4 + -0.12082391878766 * GRP_MntWines2 +
-0.28739181733976 * GRP_MntWines3 + -0.12417307544408 * GRP_MntWines4 + 0.33901531634752 *
GRP_NumCatalogPurchases3 + -0.0519425405532 * GRP_NumCatalogPurchases4 + 0.03481806823908 *
GRP_NumDistPurchases2 + 0.0546202479864 * GRP_NumDistPurchases3 + -0.05240296080421 *
GRP_NumDistPurchases4 + 0.28307550964921 * GRP_NumWebPurchases2 + 0.31503543231591 *
GRP_NumWebPurchases3 + 0.24817135719308 * GRP_NumWebPurchases4 + -0.05017370187238 *
GRP_RFMstat2 + 0.08161239885611 * GRP_RFMstat3 + -0.14085507706312 * GRP_RFMstat4 +
0.11738278568714 * GRP_RMntFrq2 + 0.28471680928269 * GRP_RMntFrq3 + 0.46590886050772 *
GRP_RMntFrq4 + -0.2318556486679 * GRP_Recency2 + -0.37508297533514 * GRP_Recency3 +
0.05823801065489 * GRP_Recency4 ;
1238209   +   H14  = H14  +      0.4684617848987 * GRP_AcceptedCmp52
1238210   +          +    -0.10078363733095 * GRP_Frq2  +     0.12187262992305 * GRP_Frq3
1238211   +          +     0.06615581853287 * GRP_Frq4  +    -0.37438533196327 *
1238212   +        GRP_Income2  +    -0.54951239852844 * GRP_Income3
1238213   +          +     0.42517426076684 * GRP_Income4  +     0.01160451666213 *
1238214   +        GRP_Mnt2  +    -0.19046851266656 * GRP_Mnt3  +    -0.22599863084471 *
1238215   +        GRP_Mnt4  +     0.02252915755857 * GRP_MntFishProducts2
1238216   +          +    -0.08997232581072 * GRP_MntFishProducts3
1238217   +          +    -0.05669599356928 * GRP_MntFishProducts4
1238218   +          +      0.2199150131909 * GRP_MntGoldProds2
1238219   +          +     0.05584571259838 * GRP_MntGoldProds3
1238220   +          +    -0.13160142309505 * GRP_MntGoldProds4
1238221   +          +      0.2539849640816 * GRP_MntMeatProducts2
1238222   +          +     0.29448191059312 * GRP_MntMeatProducts3
1238223   +          +    -0.33946200154351 * GRP_MntMeatProducts4
1238224   +          +    -0.47231816370111 * GRP_MntWines2  +    -0.35916844796743 *
1238225   +        GRP_MntWines3  +     0.15578356288597 * GRP_MntWines4
1238226   +          +     0.35913140014848 * GRP_NumCatalogPurchases3
1238227   +          +    -0.07798422379681 * GRP_NumCatalogPurchases4
1238228   +          +     0.38206153529506 * GRP_NumDistPurchases2
1238229   +          +     0.08642998303162 * GRP_NumDistPurchases3
1238230   +          +    -0.00375635377885 * GRP_NumDistPurchases4
1238231   +          +    -0.04352529411419 * GRP_NumWebPurchases2
1238232   +          +    -0.17285172586868 * GRP_NumWebPurchases3
1238233   +          +     0.23030028338396 * GRP_NumWebPurchases4
1238234   +          +     0.16194254582104 * GRP_RFMstat2  +    -0.03413270353062 *
1238235   +        GRP_RFMstat3  +    -0.32516629559317 * GRP_RFMstat4
1238236   +          +    -0.16070809362515 * GRP_RMntFrq2  +    -0.17716471899416 *
1238237   +        GRP_RMntFrq3  +     0.09335047904411 * GRP_RMntFrq4
1238238   +          +    -0.92875393407697 * GRP_Recency2  +     0.16068827585896 *
1238239   +        GRP_Recency3  +     0.41807637211453 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.4684617848987 * GRP_AcceptedCmp52 + -0.10078363733095 *
GRP_Frq2 + 0.12187262992305 * GRP_Frq3 + 0.06615581853287 * GRP_Frq4 + -0.37438533196327 *
GRP_Income2 + -0.54951239852844 * GRP_Income3 + 0.42517426076684 * GRP_Income4 +
0.01160451666213 * GRP_Mnt2 + -0.19046851266656 * GRP_Mnt3 + -0.22599863084471 * GRP_Mnt4 +
0.02252915755857 * GRP_MntFishProducts2 + -0.08997232581072 * GRP_MntFishProducts3 +
-0.05669599356928 * GRP_MntFishProducts4 + 0.2199150131909 * GRP_MntGoldProds2 +
0.05584571259838 * GRP_MntGoldProds3 + -0.13160142309505 * GRP_MntGoldProds4 + 0.2539849640816
* GRP_MntMeatProducts2 + 0.29448191059312 * GRP_MntMeatProducts3 + -0.33946200154351 *
GRP_MntMeatProducts4 + -0.47231816370111 * GRP_MntWines2 + -0.35916844796743 * GRP_MntWines3 +
0.15578356288597 * GRP_MntWines4 + 0.35913140014848 * GRP_NumCatalogPurchases3 +
-0.07798422379681 * GRP_NumCatalogPurchases4 + 0.38206153529506 * GRP_NumDistPurchases2 +
0.08642998303162 * GRP_NumDistPurchases3 + -0.00375635377885 * GRP_NumDistPurchases4 +
-0.04352529411419 * GRP_NumWebPurchases2 + -0.17285172586868 * GRP_NumWebPurchases3 +
0.23030028338396 * GRP_NumWebPurchases4 + 0.16194254582104 * GRP_RFMstat2 + -0.03413270353062
* GRP_RFMstat3 + -0.32516629559317 * GRP_RFMstat4 + -0.16070809362515 * GRP_RMntFrq2 +
-0.17716471899416 * GRP_RMntFrq3 + 0.09335047904411 * GRP_RMntFrq4 + -0.92875393407697 *
GRP_Recency2 + 0.16068827585896 * GRP_Recency3 + 0.41807637211453 * GRP_Recency4 ;
1238240   +   H15  = H15  +    -0.78481953865912 * GRP_AcceptedCmp52
1238241   +          +     0.05211963408638 * GRP_Frq2  +     0.24938737986681 * GRP_Frq3
1238242   +          +    -0.07347952562846 * GRP_Frq4  +    -0.15741135518664 *
1238243   +        GRP_Income2  +     0.01909378686442 * GRP_Income3
1238244   +          +    -0.15898085757789 * GRP_Income4  +     0.09202012507046 *
1238245   +        GRP_Mnt2  +    -0.39641738573024 * GRP_Mnt3  +     0.02885484069701 *
1238246   +        GRP_Mnt4  +     0.29554161293423 * GRP_MntFishProducts2
1238247   +          +    -0.04439366722112 * GRP_MntFishProducts3
1238248   +          +    -0.22939355735301 * GRP_MntFishProducts4
1238249   +          +    -0.00367144103801 * GRP_MntGoldProds2
1238250   +          +      -0.033315128385 * GRP_MntGoldProds3
1238251   +          +     0.10655545066126 * GRP_MntGoldProds4
1238252   +          +     0.04927093675686 * GRP_MntMeatProducts2
1238253   +          +    -0.20156680946257 * GRP_MntMeatProducts3
1238254   +          +     0.29394273234417 * GRP_MntMeatProducts4
1238255   +          +     0.27324472738231 * GRP_MntWines2  +       0.398830803883 *
1238256   +        GRP_MntWines3  +    -0.16588038849208 * GRP_MntWines4
1238257   +          +     -0.3438340194477 * GRP_NumCatalogPurchases3
1238258   +          +    -0.37438590488645 * GRP_NumCatalogPurchases4
1238259   +          +    -0.42285816542086 * GRP_NumDistPurchases2
1238260   +          +     -0.1008716650505 * GRP_NumDistPurchases3
1238261   +          +    -0.42793112700917 * GRP_NumDistPurchases4
1238262   +          +    -0.06792665579186 * GRP_NumWebPurchases2
1238263   +          +     0.37113277513001 * GRP_NumWebPurchases3
1238264   +          +     0.05720653023952 * GRP_NumWebPurchases4
1238265   +          +    -0.30997814005221 * GRP_RFMstat2  +     0.06219993861842 *
1238266   +        GRP_RFMstat3  +    -0.22600753085668 * GRP_RFMstat4
1238267   +          +    -0.31041957734532 * GRP_RMntFrq2  +     0.25053172234721 *
1238268   +        GRP_RMntFrq3  +     0.15983683107051 * GRP_RMntFrq4
1238269   +          +     0.52797823019932 * GRP_Recency2  +     0.11382874879823 *
1238270   +        GRP_Recency3  +    -0.22166533511817 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.78481953865912 * GRP_AcceptedCmp52 + 0.05211963408638 *
GRP_Frq2 + 0.24938737986681 * GRP_Frq3 + -0.07347952562846 * GRP_Frq4 + -0.15741135518664 *
GRP_Income2 + 0.01909378686442 * GRP_Income3 + -0.15898085757789 * GRP_Income4 +
0.09202012507046 * GRP_Mnt2 + -0.39641738573024 * GRP_Mnt3 + 0.02885484069701 * GRP_Mnt4 +
0.29554161293423 * GRP_MntFishProducts2 + -0.04439366722112 * GRP_MntFishProducts3 +
-0.22939355735301 * GRP_MntFishProducts4 + -0.00367144103801 * GRP_MntGoldProds2 +
-0.033315128385 * GRP_MntGoldProds3 + 0.10655545066126 * GRP_MntGoldProds4 + 0.04927093675686
* GRP_MntMeatProducts2 + -0.20156680946257 * GRP_MntMeatProducts3 + 0.29394273234417 *
GRP_MntMeatProducts4 + 0.27324472738231 * GRP_MntWines2 + 0.398830803883 * GRP_MntWines3 +
-0.16588038849208 * GRP_MntWines4 + -0.3438340194477 * GRP_NumCatalogPurchases3 +
-0.37438590488645 * GRP_NumCatalogPurchases4 + -0.42285816542086 * GRP_NumDistPurchases2 +
-0.1008716650505 * GRP_NumDistPurchases3 + -0.42793112700917 * GRP_NumDistPurchases4 +
-0.06792665579186 * GRP_NumWebPurchases2 + 0.37113277513001 * GRP_NumWebPurchases3 +
0.05720653023952 * GRP_NumWebPurchases4 + -0.30997814005221 * GRP_RFMstat2 + 0.06219993861842
* GRP_RFMstat3 + -0.22600753085668 * GRP_RFMstat4 + -0.31041957734532 * GRP_RMntFrq2 +
0.25053172234721 * GRP_RMntFrq3 + 0.15983683107051 * GRP_RMntFrq4 + 0.52797823019932 *
GRP_Recency2 + 0.11382874879823 * GRP_Recency3 + -0.22166533511817 * GRP_Recency4 ;
1238271   +   H16  = H16  +      0.7107136456569 * GRP_AcceptedCmp52
1238272   +          +     -0.4751898387651 * GRP_Frq2  +    -0.11277060686411 * GRP_Frq3
1238273   +          +     0.15821547082299 * GRP_Frq4  +    -0.45945049231995 *
1238274   +        GRP_Income2  +    -0.18413512635176 * GRP_Income3
1238275   +          +     0.39594738835509 * GRP_Income4  +    -0.15472205523822 *
1238276   +        GRP_Mnt2  +     0.02844181224363 * GRP_Mnt3  +     0.45435843401555 *
1238277   +        GRP_Mnt4  +    -0.29220588593813 * GRP_MntFishProducts2
1238278   +          +     0.04340555393469 * GRP_MntFishProducts3
1238279   +          +    -0.20048219926361 * GRP_MntFishProducts4
1238280   +          +     0.16101452165456 * GRP_MntGoldProds2
1238281   +          +    -0.04467647211336 * GRP_MntGoldProds3
1238282   +          +     0.32142013598241 * GRP_MntGoldProds4
1238283   +          +     0.29741565154233 * GRP_MntMeatProducts2
1238284   +          +    -0.00264678222241 * GRP_MntMeatProducts3
1238285   +          +    -0.11596499325048 * GRP_MntMeatProducts4
1238286   +          +    -0.29849043995136 * GRP_MntWines2  +     0.14756452272338 *
1238287   +        GRP_MntWines3  +     0.48995265672675 * GRP_MntWines4
1238288   +          +     0.80854583627117 * GRP_NumCatalogPurchases3
1238289   +          +     0.14001888431357 * GRP_NumCatalogPurchases4
1238290   +          +     0.36107050137299 * GRP_NumDistPurchases2
1238291   +          +    -0.10375572120121 * GRP_NumDistPurchases3
1238292   +          +     0.10557004956787 * GRP_NumDistPurchases4
1238293   +          +     0.04608069099876 * GRP_NumWebPurchases2
1238294   +          +     0.15561947954396 * GRP_NumWebPurchases3
1238295   +          +    -0.01081470092004 * GRP_NumWebPurchases4
1238296   +          +     0.21994454623245 * GRP_RFMstat2  +    -0.08858421895818 *
1238297   +        GRP_RFMstat3  +    -0.13608887793525 * GRP_RFMstat4
1238298   +          +     0.07482010458977 * GRP_RMntFrq2  +    -0.11874760292742 *
1238299   +        GRP_RMntFrq3  +     0.56887215594366 * GRP_RMntFrq4
1238300   +          +    -0.13548983954455 * GRP_Recency2  +    -0.25036935235639 *
1238301   +        GRP_Recency3  +     -0.0282277663071 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.7107136456569 * GRP_AcceptedCmp52 + -0.4751898387651 *
GRP_Frq2 + -0.11277060686411 * GRP_Frq3 + 0.15821547082299 * GRP_Frq4 + -0.45945049231995 *
GRP_Income2 + -0.18413512635176 * GRP_Income3 + 0.39594738835509 * GRP_Income4 +
-0.15472205523822 * GRP_Mnt2 + 0.02844181224363 * GRP_Mnt3 + 0.45435843401555 * GRP_Mnt4 +
-0.29220588593813 * GRP_MntFishProducts2 + 0.04340555393469 * GRP_MntFishProducts3 +
-0.20048219926361 * GRP_MntFishProducts4 + 0.16101452165456 * GRP_MntGoldProds2 +
-0.04467647211336 * GRP_MntGoldProds3 + 0.32142013598241 * GRP_MntGoldProds4 +
0.29741565154233 * GRP_MntMeatProducts2 + -0.00264678222241 * GRP_MntMeatProducts3 +
-0.11596499325048 * GRP_MntMeatProducts4 + -0.29849043995136 * GRP_MntWines2 +
0.14756452272338 * GRP_MntWines3 + 0.48995265672675 * GRP_MntWines4 + 0.80854583627117 *
GRP_NumCatalogPurchases3 + 0.14001888431357 * GRP_NumCatalogPurchases4 + 0.36107050137299 *
GRP_NumDistPurchases2 + -0.10375572120121 * GRP_NumDistPurchases3 + 0.10557004956787 *
GRP_NumDistPurchases4 + 0.04608069099876 * GRP_NumWebPurchases2 + 0.15561947954396 *
GRP_NumWebPurchases3 + -0.01081470092004 * GRP_NumWebPurchases4 + 0.21994454623245 *
GRP_RFMstat2 + -0.08858421895818 * GRP_RFMstat3 + -0.13608887793525 * GRP_RFMstat4 +
0.07482010458977 * GRP_RMntFrq2 + -0.11874760292742 * GRP_RMntFrq3 + 0.56887215594366 *
GRP_RMntFrq4 + -0.13548983954455 * GRP_Recency2 + -0.25036935235639 * GRP_Recency3 +
-0.0282277663071 * GRP_Recency4 ;
1238302   +   H17  = H17  +    -0.06745892596619 * GRP_AcceptedCmp52
1238303   +          +    -0.09506194345469 * GRP_Frq2  +    -0.29707644715885 * GRP_Frq3
1238304   +          +    -0.06874693052001 * GRP_Frq4  +    -0.08949373241741 *
1238305   +        GRP_Income2  +     0.02965579603049 * GRP_Income3
1238306   +          +    -0.02192829727213 * GRP_Income4  +     0.30180973300088 *
1238307   +        GRP_Mnt2  +    -0.10648502526616 * GRP_Mnt3  +     0.07588844839465 *
1238308   +        GRP_Mnt4  +    -0.30524623655199 * GRP_MntFishProducts2
1238309   +          +    -0.20032703571491 * GRP_MntFishProducts3
1238310   +          +    -0.08348811352746 * GRP_MntFishProducts4
1238311   +          +    -0.00744131870881 * GRP_MntGoldProds2
1238312   +          +    -0.27347309859096 * GRP_MntGoldProds3
1238313   +          +    -0.04458870469416 * GRP_MntGoldProds4
1238314   +          +     0.17538261434498 * GRP_MntMeatProducts2
1238315   +          +    -0.08059547298843 * GRP_MntMeatProducts3
1238316   +          +     0.03113249898233 * GRP_MntMeatProducts4
1238317   +          +    -0.23690909413276 * GRP_MntWines2  +    -0.01511980231776 *
1238318   +        GRP_MntWines3  +     -0.2825327824317 * GRP_MntWines4
1238319   +          +     0.13919784888607 * GRP_NumCatalogPurchases3
1238320   +          +    -0.10871281978714 * GRP_NumCatalogPurchases4
1238321   +          +     0.20540014620209 * GRP_NumDistPurchases2
1238322   +          +     0.17744784873298 * GRP_NumDistPurchases3
1238323   +          +      -0.003486430833 * GRP_NumDistPurchases4
1238324   +          +    -0.04863967797645 * GRP_NumWebPurchases2
1238325   +          +     0.07245829152192 * GRP_NumWebPurchases3
1238326   +          +    -0.27395606297099 * GRP_NumWebPurchases4
1238327   +          +    -0.14496279180087 * GRP_RFMstat2  +     0.28224463929838 *
1238328   +        GRP_RFMstat3  +     0.26720059295202 * GRP_RFMstat4
1238329   +          +    -0.07120881723264 * GRP_RMntFrq2  +     0.16350065828319 *
1238330   +        GRP_RMntFrq3  +      0.3117297070285 * GRP_RMntFrq4
1238331   +          +    -0.52884474877094 * GRP_Recency2  +    -0.17937099376746 *
1238332   +        GRP_Recency3  +     -0.0157357289132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.06745892596619 * GRP_AcceptedCmp52 + -0.09506194345469 *
GRP_Frq2 + -0.29707644715885 * GRP_Frq3 + -0.06874693052001 * GRP_Frq4 + -0.08949373241741 *
GRP_Income2 + 0.02965579603049 * GRP_Income3 + -0.02192829727213 * GRP_Income4 +
0.30180973300088 * GRP_Mnt2 + -0.10648502526616 * GRP_Mnt3 + 0.07588844839465 * GRP_Mnt4 +
-0.30524623655199 * GRP_MntFishProducts2 + -0.20032703571491 * GRP_MntFishProducts3 +
-0.08348811352746 * GRP_MntFishProducts4 + -0.00744131870881 * GRP_MntGoldProds2 +
-0.27347309859096 * GRP_MntGoldProds3 + -0.04458870469416 * GRP_MntGoldProds4 +
0.17538261434498 * GRP_MntMeatProducts2 + -0.08059547298843 * GRP_MntMeatProducts3 +
0.03113249898233 * GRP_MntMeatProducts4 + -0.23690909413276 * GRP_MntWines2 +
-0.01511980231776 * GRP_MntWines3 + -0.2825327824317 * GRP_MntWines4 + 0.13919784888607 *
GRP_NumCatalogPurchases3 + -0.10871281978714 * GRP_NumCatalogPurchases4 + 0.20540014620209 *
GRP_NumDistPurchases2 + 0.17744784873298 * GRP_NumDistPurchases3 + -0.003486430833 *
GRP_NumDistPurchases4 + -0.04863967797645 * GRP_NumWebPurchases2 + 0.07245829152192 *
GRP_NumWebPurchases3 + -0.27395606297099 * GRP_NumWebPurchases4 + -0.14496279180087 *
GRP_RFMstat2 + 0.28224463929838 * GRP_RFMstat3 + 0.26720059295202 * GRP_RFMstat4 +
-0.07120881723264 * GRP_RMntFrq2 + 0.16350065828319 * GRP_RMntFrq3 + 0.3117297070285 *
GRP_RMntFrq4 + -0.52884474877094 * GRP_Recency2 + -0.17937099376746 * GRP_Recency3 +
-0.0157357289132 * GRP_Recency4 ;
1238333   +   H11  =    -0.76467628027618 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.76467628027618 + H11 ;
1238334   +   H12  =    -0.03405517571825 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03405517571825 + H12 ;
1238335   +   H13  =    -0.32845676351839 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.32845676351839 + H13 ;
1238336   +   H14  =     0.08379615404181 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.08379615404181 + H14 ;
1238337   +   H15  =    -0.77228291932436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.77228291932436 + H15 ;
1238338   +   H16  =    -0.77356855332279 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.77356855332279 + H16 ;
1238339   +   H17  =     0.45067845230796 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.45067845230796 + H17 ;
1238340   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1238341   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1238342   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1238343   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1238344   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1238345   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1238346   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1238347   +END;
MPRINT(EM_DIAGRAM):   END;
1238348   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1238349   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1238350   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1238351   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1238352   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1238353   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1238354   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1238355   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1238356   +END;
MPRINT(EM_DIAGRAM):   END;
1238357   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1238358   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1238359   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1238360   +
1238361   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1238362   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1238363   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1238364   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1238365   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1238366   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1238367   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1238368   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1238369   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1238370   +end;
MPRINT(EM_DIAGRAM):   end;
1238371   +else do;
MPRINT(EM_DIAGRAM):   else do;
1238372   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1238373   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1238374   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1238375   +   end;
MPRINT(EM_DIAGRAM):   end;
1238376   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1238377   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1238378   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1238379   +   end;
MPRINT(EM_DIAGRAM):   end;
1238380   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1238381   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1238382   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1238383   +   end;
MPRINT(EM_DIAGRAM):   end;
1238384   +end;
MPRINT(EM_DIAGRAM):   end;
1238385   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1238386   +   P_DepVar1  =    -0.15999450347654 * H11  +     1.35667407296837 * H12
1238387   +          +    -0.71419530867579 * H13  +     -1.0947746264744 * H14
1238388   +          +     0.98315214007209 * H15  +    -1.32163386678746 * H16
1238389   +          +    -0.29329090231091 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.15999450347654 * H11 + 1.35667407296837 * H12 +
-0.71419530867579 * H13 + -1.0947746264744 * H14 + 0.98315214007209 * H15 + -1.32163386678746
* H16 + -0.29329090231091 * H17 ;
1238390   +   P_DepVar1  =    -1.66210022161101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66210022161101 + P_DepVar1 ;
1238391   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1238392   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1238393   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1238394   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1238395   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1238396   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1238397   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1238398   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1238399   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1238400   +END;
MPRINT(EM_DIAGRAM):   END;
1238401   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1238402   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1238403   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1238404   +END;
MPRINT(EM_DIAGRAM):   END;
1238405   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1238406   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1238407   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1238408   +END;
MPRINT(EM_DIAGRAM):   END;
1238409   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1238410   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1238411   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1238412   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1238413   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1238414   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1238415   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1238416   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1238417   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1238418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1238419   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1238420   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1238421   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1238422   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1238423   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1238424   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1238425   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1238426   +END;
MPRINT(EM_DIAGRAM):   END;
1238427   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1238428   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1238429   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1238430   +drop
1238431   +H11
1238432   +H12
1238433   +H13
1238434   +H14
1238435   +H15
1238436   +H16
1238437   +H17
1238438   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1238439   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1238440   +* Renaming variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural18;
1238441   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1238442   +* Renaming Posterior variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural18;
1238443   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1238444   +drop Neural18_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar1;
1238445   +Neural18_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar1 = P_DepVar1;
1238446   +drop Neural18_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar0;
1238447   +Neural18_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar0 = P_DepVar0;
1238448   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1238449   +* Renaming _WARN_ variable for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural18;
1238450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1238451   +length Neural18_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural18_WARN_ $4;
1238452   +drop Neural18_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural18_WARN_;
1238453   +Neural18_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural18_WARN_ = _WARN_;
1238454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1238455   +* Ensmbl7: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring Code of model 3 of 5;
1238456   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1238457   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1238458   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1238459   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1238460   +* NODE: Neural22;
MPRINT(EM_DIAGRAM):   * NODE: Neural22;
1238461   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1238462   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1238463   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1238464   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1238465   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1238466   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1238467   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1238468   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1238469   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1238470   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1238471   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1238472   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1238473   +LENGTH _WARN_ $4
1238474   +      F_DepVar  $ 12
1238475   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1238476   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1238477   +
1238478   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1238479   +
1238480   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1238481   +
1238482   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1238483   +
1238484   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1238485   +
1238486   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1238487   +
1238488   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1238489   +
1238490   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1238491   +
1238492   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1238493   +
1238494   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1238495   +
1238496   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1238497   +
1238498   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1238499   +
1238500   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1238501   +
1238502   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1238503   +
1238504   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1238505   +
1238506   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1238507   +
1238508   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1238509   +
1238510   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1238511   +
1238512   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1238513   +
1238514   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1238515   +
1238516   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1238517   +
1238518   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1238519   +
1238520   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1238521   +
1238522   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1238523   +
1238524   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1238525   +
1238526   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1238527   +
1238528   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1238529   +
1238530   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1238531   +
1238532   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1238533   +
1238534   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1238535   +
1238536   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1238537   +
1238538   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1238539   +
1238540   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1238541   +
1238542   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1238543   +
1238544   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1238545   +
1238546   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1238547   +
1238548   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1238549   +
1238550   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1238551   +
1238552   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1238553   +
1238554   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1238555   +
1238556   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1238557   +
1238558   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1238559   +
1238560   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1238561   +
1238562   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1238563   +
1238564   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1238565   +
1238566   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1238567   +
1238568   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1238569   +
1238570   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1238571   +
1238572   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1238573   +
1238574   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1238575   +
1238576   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1238577   +
1238578   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1238579   +
1238580   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1238581   +
1238582   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1238583   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1238584   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1238585   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1238586   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1238587   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238588   +end;
MPRINT(EM_DIAGRAM):   end;
1238589   +else do;
MPRINT(EM_DIAGRAM):   else do;
1238590   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1238591   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1238592   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1238593   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1238594   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1238595   +   end;
MPRINT(EM_DIAGRAM):   end;
1238596   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1238597   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1238598   +   end;
MPRINT(EM_DIAGRAM):   end;
1238599   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1238600   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1238601   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1238602   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238603   +   end;
MPRINT(EM_DIAGRAM):   end;
1238604   +end;
MPRINT(EM_DIAGRAM):   end;
1238605   +
1238606   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1238607   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1238608   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1238609   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1238610   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1238611   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1238612   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1238613   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238614   +end;
MPRINT(EM_DIAGRAM):   end;
1238615   +else do;
MPRINT(EM_DIAGRAM):   else do;
1238616   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1238617   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1238618   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1238619   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1238620   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1238621   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1238622   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1238623   +   end;
MPRINT(EM_DIAGRAM):   end;
1238624   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1238625   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1238626   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1238627   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1238628   +   end;
MPRINT(EM_DIAGRAM):   end;
1238629   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1238630   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1238631   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1238632   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1238633   +   end;
MPRINT(EM_DIAGRAM):   end;
1238634   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1238635   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1238636   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1238637   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1238638   +   end;
MPRINT(EM_DIAGRAM):   end;
1238639   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1238640   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1238641   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1238642   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1238643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1238644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238645   +   end;
MPRINT(EM_DIAGRAM):   end;
1238646   +end;
MPRINT(EM_DIAGRAM):   end;
1238647   +
1238648   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1238649   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1238650   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1238651   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1238652   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1238653   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1238654   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1238655   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238656   +end;
MPRINT(EM_DIAGRAM):   end;
1238657   +else do;
MPRINT(EM_DIAGRAM):   else do;
1238658   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1238659   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1238660   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1238661   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1238662   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1238663   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1238664   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1238665   +   end;
MPRINT(EM_DIAGRAM):   end;
1238666   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1238667   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1238668   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1238669   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1238670   +   end;
MPRINT(EM_DIAGRAM):   end;
1238671   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1238672   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1238673   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1238674   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1238675   +   end;
MPRINT(EM_DIAGRAM):   end;
1238676   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1238677   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1238678   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1238679   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1238680   +   end;
MPRINT(EM_DIAGRAM):   end;
1238681   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1238682   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1238683   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1238684   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1238685   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1238686   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238687   +   end;
MPRINT(EM_DIAGRAM):   end;
1238688   +end;
MPRINT(EM_DIAGRAM):   end;
1238689   +
1238690   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1238691   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1238692   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1238693   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1238694   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1238695   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1238696   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1238697   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238698   +end;
MPRINT(EM_DIAGRAM):   end;
1238699   +else do;
MPRINT(EM_DIAGRAM):   else do;
1238700   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1238701   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1238702   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1238703   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1238704   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1238705   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1238706   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1238707   +   end;
MPRINT(EM_DIAGRAM):   end;
1238708   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1238709   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1238710   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1238711   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1238712   +   end;
MPRINT(EM_DIAGRAM):   end;
1238713   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1238714   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1238715   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1238716   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1238717   +   end;
MPRINT(EM_DIAGRAM):   end;
1238718   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1238719   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1238720   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1238721   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1238722   +   end;
MPRINT(EM_DIAGRAM):   end;
1238723   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1238724   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1238725   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1238726   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1238727   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1238728   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238729   +   end;
MPRINT(EM_DIAGRAM):   end;
1238730   +end;
MPRINT(EM_DIAGRAM):   end;
1238731   +
1238732   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1238733   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1238734   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1238735   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1238736   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1238737   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1238738   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1238739   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238740   +end;
MPRINT(EM_DIAGRAM):   end;
1238741   +else do;
MPRINT(EM_DIAGRAM):   else do;
1238742   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1238743   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1238744   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1238745   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1238746   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1238747   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1238748   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1238749   +   end;
MPRINT(EM_DIAGRAM):   end;
1238750   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1238751   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1238752   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1238753   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1238754   +   end;
MPRINT(EM_DIAGRAM):   end;
1238755   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1238756   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1238757   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1238758   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1238759   +   end;
MPRINT(EM_DIAGRAM):   end;
1238760   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1238761   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1238762   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1238763   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1238764   +   end;
MPRINT(EM_DIAGRAM):   end;
1238765   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1238766   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1238767   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1238768   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1238769   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1238770   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238771   +   end;
MPRINT(EM_DIAGRAM):   end;
1238772   +end;
MPRINT(EM_DIAGRAM):   end;
1238773   +
1238774   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1238775   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1238776   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1238777   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1238778   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1238779   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1238780   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1238781   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238782   +end;
MPRINT(EM_DIAGRAM):   end;
1238783   +else do;
MPRINT(EM_DIAGRAM):   else do;
1238784   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1238785   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1238786   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1238787   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1238788   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1238789   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1238790   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1238791   +   end;
MPRINT(EM_DIAGRAM):   end;
1238792   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1238793   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1238794   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1238795   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1238796   +   end;
MPRINT(EM_DIAGRAM):   end;
1238797   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1238798   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1238799   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1238800   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1238801   +   end;
MPRINT(EM_DIAGRAM):   end;
1238802   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1238803   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1238804   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1238805   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1238806   +   end;
MPRINT(EM_DIAGRAM):   end;
1238807   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1238808   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1238809   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1238810   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1238811   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1238812   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238813   +   end;
MPRINT(EM_DIAGRAM):   end;
1238814   +end;
MPRINT(EM_DIAGRAM):   end;
1238815   +
1238816   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1238817   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1238818   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1238819   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1238820   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1238821   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1238822   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1238823   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238824   +end;
MPRINT(EM_DIAGRAM):   end;
1238825   +else do;
MPRINT(EM_DIAGRAM):   else do;
1238826   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1238827   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1238828   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1238829   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1238830   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1238831   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1238832   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1238833   +   end;
MPRINT(EM_DIAGRAM):   end;
1238834   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1238835   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1238836   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1238837   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1238838   +   end;
MPRINT(EM_DIAGRAM):   end;
1238839   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1238840   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1238841   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1238842   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1238843   +   end;
MPRINT(EM_DIAGRAM):   end;
1238844   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1238845   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1238846   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1238847   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1238848   +   end;
MPRINT(EM_DIAGRAM):   end;
1238849   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1238850   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1238851   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1238852   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1238853   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1238854   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238855   +   end;
MPRINT(EM_DIAGRAM):   end;
1238856   +end;
MPRINT(EM_DIAGRAM):   end;
1238857   +
1238858   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1238859   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1238860   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1238861   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1238862   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1238863   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1238864   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1238865   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238866   +end;
MPRINT(EM_DIAGRAM):   end;
1238867   +else do;
MPRINT(EM_DIAGRAM):   else do;
1238868   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1238869   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1238870   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1238871   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1238872   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1238873   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1238874   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1238875   +   end;
MPRINT(EM_DIAGRAM):   end;
1238876   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1238877   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1238878   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1238879   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1238880   +   end;
MPRINT(EM_DIAGRAM):   end;
1238881   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1238882   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1238883   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1238884   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1238885   +   end;
MPRINT(EM_DIAGRAM):   end;
1238886   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1238887   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1238888   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1238889   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1238890   +   end;
MPRINT(EM_DIAGRAM):   end;
1238891   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1238892   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1238893   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1238894   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1238895   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1238896   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238897   +   end;
MPRINT(EM_DIAGRAM):   end;
1238898   +end;
MPRINT(EM_DIAGRAM):   end;
1238899   +
1238900   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1238901   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1238902   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1238903   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1238904   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1238905   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1238906   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238907   +end;
MPRINT(EM_DIAGRAM):   end;
1238908   +else do;
MPRINT(EM_DIAGRAM):   else do;
1238909   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1238910   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1238911   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1238912   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1238913   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1238914   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1238915   +   end;
MPRINT(EM_DIAGRAM):   end;
1238916   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1238917   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1238918   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1238919   +   end;
MPRINT(EM_DIAGRAM):   end;
1238920   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1238921   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1238922   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1238923   +   end;
MPRINT(EM_DIAGRAM):   end;
1238924   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1238925   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1238926   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1238927   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1238928   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238929   +   end;
MPRINT(EM_DIAGRAM):   end;
1238930   +end;
MPRINT(EM_DIAGRAM):   end;
1238931   +
1238932   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1238933   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1238934   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1238935   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1238936   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1238937   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1238938   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1238939   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238940   +end;
MPRINT(EM_DIAGRAM):   end;
1238941   +else do;
MPRINT(EM_DIAGRAM):   else do;
1238942   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1238943   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1238944   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1238945   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1238946   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1238947   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1238948   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1238949   +   end;
MPRINT(EM_DIAGRAM):   end;
1238950   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1238951   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1238952   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1238953   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1238954   +   end;
MPRINT(EM_DIAGRAM):   end;
1238955   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1238956   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1238957   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1238958   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1238959   +   end;
MPRINT(EM_DIAGRAM):   end;
1238960   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1238961   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1238962   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1238963   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1238964   +   end;
MPRINT(EM_DIAGRAM):   end;
1238965   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1238966   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1238967   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1238968   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1238969   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1238970   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238971   +   end;
MPRINT(EM_DIAGRAM):   end;
1238972   +end;
MPRINT(EM_DIAGRAM):   end;
1238973   +
1238974   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1238975   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1238976   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1238977   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1238978   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1238979   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1238980   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1238981   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1238982   +end;
MPRINT(EM_DIAGRAM):   end;
1238983   +else do;
MPRINT(EM_DIAGRAM):   else do;
1238984   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1238985   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1238986   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1238987   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1238988   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1238989   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1238990   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1238991   +   end;
MPRINT(EM_DIAGRAM):   end;
1238992   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1238993   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1238994   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1238995   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1238996   +   end;
MPRINT(EM_DIAGRAM):   end;
1238997   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1238998   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1238999   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1239000   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1239001   +   end;
MPRINT(EM_DIAGRAM):   end;
1239002   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1239003   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1239004   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1239005   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1239006   +   end;
MPRINT(EM_DIAGRAM):   end;
1239007   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1239008   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1239009   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1239010   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1239011   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1239012   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239013   +   end;
MPRINT(EM_DIAGRAM):   end;
1239014   +end;
MPRINT(EM_DIAGRAM):   end;
1239015   +
1239016   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1239017   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1239018   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1239019   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1239020   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1239021   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1239022   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1239023   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239024   +end;
MPRINT(EM_DIAGRAM):   end;
1239025   +else do;
MPRINT(EM_DIAGRAM):   else do;
1239026   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1239027   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1239028   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1239029   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1239030   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1239031   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1239032   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1239033   +   end;
MPRINT(EM_DIAGRAM):   end;
1239034   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1239035   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1239036   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1239037   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1239038   +   end;
MPRINT(EM_DIAGRAM):   end;
1239039   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1239040   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1239041   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1239042   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1239043   +   end;
MPRINT(EM_DIAGRAM):   end;
1239044   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1239045   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1239046   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1239047   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1239048   +   end;
MPRINT(EM_DIAGRAM):   end;
1239049   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1239050   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1239051   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1239052   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1239053   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1239054   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239055   +   end;
MPRINT(EM_DIAGRAM):   end;
1239056   +end;
MPRINT(EM_DIAGRAM):   end;
1239057   +
1239058   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1239059   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1239060   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1239061   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1239062   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1239063   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1239064   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1239065   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239066   +end;
MPRINT(EM_DIAGRAM):   end;
1239067   +else do;
MPRINT(EM_DIAGRAM):   else do;
1239068   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1239069   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1239070   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1239071   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1239072   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1239073   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1239074   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1239075   +   end;
MPRINT(EM_DIAGRAM):   end;
1239076   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1239077   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1239078   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1239079   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1239080   +   end;
MPRINT(EM_DIAGRAM):   end;
1239081   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1239082   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1239083   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1239084   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1239085   +   end;
MPRINT(EM_DIAGRAM):   end;
1239086   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1239087   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1239088   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1239089   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1239090   +   end;
MPRINT(EM_DIAGRAM):   end;
1239091   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1239092   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1239093   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1239094   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1239095   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1239096   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239097   +   end;
MPRINT(EM_DIAGRAM):   end;
1239098   +end;
MPRINT(EM_DIAGRAM):   end;
1239099   +
1239100   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1239101   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1239102   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1239103   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1239104   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1239105   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1239106   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1239107   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239108   +end;
MPRINT(EM_DIAGRAM):   end;
1239109   +else do;
MPRINT(EM_DIAGRAM):   else do;
1239110   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1239111   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1239112   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1239113   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1239114   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1239115   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1239116   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1239117   +   end;
MPRINT(EM_DIAGRAM):   end;
1239118   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1239119   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1239120   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1239121   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1239122   +   end;
MPRINT(EM_DIAGRAM):   end;
1239123   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1239124   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1239125   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1239126   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1239127   +   end;
MPRINT(EM_DIAGRAM):   end;
1239128   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1239129   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1239130   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1239131   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1239132   +   end;
MPRINT(EM_DIAGRAM):   end;
1239133   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1239134   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1239135   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1239136   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1239137   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1239138   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239139   +   end;
MPRINT(EM_DIAGRAM):   end;
1239140   +end;
MPRINT(EM_DIAGRAM):   end;
1239141   +
1239142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1239143   +*** Checking missing input Interval
1239144   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1239145   +
1239146   +IF NMISS(
1239147   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1239148   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1239149   +
1239150   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239151   +END;
MPRINT(EM_DIAGRAM):   END;
1239152   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1239153   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1239154   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1239155   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1239156   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1239157   +END;
MPRINT(EM_DIAGRAM):   END;
1239158   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1239159   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1239160   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1239161   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1239162   +END;
MPRINT(EM_DIAGRAM):   END;
1239163   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1239164   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1239165   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1239166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1239167   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1239168   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1239169   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1239170   +   H11  =     0.04727192845675 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.04727192845675 * S_Year_Birth ;
1239171   +   H12  =    -0.03499603197831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.03499603197831 * S_Year_Birth ;
1239172   +   H13  =      -0.249387333167 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.249387333167 * S_Year_Birth ;
1239173   +   H14  =    -0.18145230662582 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.18145230662582 * S_Year_Birth ;
1239174   +   H15  =    -0.07744416350216 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.07744416350216 * S_Year_Birth ;
1239175   +   H11  = H11  +    -0.25371698668168 * GRP_AcceptedCmp52
1239176   +          +     0.38185615945621 * GRP_Frq2  +     0.03545555759423 * GRP_Frq3
1239177   +          +    -0.00061660249238 * GRP_Frq4  +     0.41779261820045 *
1239178   +        GRP_Income2  +     0.51800912898069 * GRP_Income3
1239179   +          +    -0.36427548932695 * GRP_Income4  +    -0.06433979614617 *
1239180   +        GRP_Mnt2  +     0.00045120565293 * GRP_Mnt3  +    -0.13992317322759 *
1239181   +        GRP_Mnt4  +     0.34207391538024 * GRP_MntFishProducts2
1239182   +          +     0.03411739869638 * GRP_MntFishProducts3
1239183   +          +      -0.083693402353 * GRP_MntFishProducts4
1239184   +          +     -0.1318128730187 * GRP_MntGoldProds2
1239185   +          +     -0.0614737729382 * GRP_MntGoldProds3
1239186   +          +    -0.00372986687449 * GRP_MntGoldProds4
1239187   +          +     -0.3129171829017 * GRP_MntMeatProducts2
1239188   +          +     0.01519664718127 * GRP_MntMeatProducts3
1239189   +          +     0.29997111548812 * GRP_MntMeatProducts4
1239190   +          +       0.389673942682 * GRP_MntWines2  +     0.21159785789434 *
1239191   +        GRP_MntWines3  +    -0.26921349986988 * GRP_MntWines4
1239192   +          +    -0.47013218092095 * GRP_NumCatalogPurchases3
1239193   +          +     0.23943411636141 * GRP_NumCatalogPurchases4
1239194   +          +    -0.68715024477164 * GRP_NumDistPurchases2
1239195   +          +    -0.09178471992122 * GRP_NumDistPurchases3
1239196   +          +    -0.01170225640351 * GRP_NumDistPurchases4
1239197   +          +    -0.14760833919227 * GRP_NumWebPurchases2
1239198   +          +     0.02966820025811 * GRP_NumWebPurchases3
1239199   +          +    -0.04127892210576 * GRP_NumWebPurchases4
1239200   +          +    -0.45467119970502 * GRP_RFMstat2  +    -0.14644406995031 *
1239201   +        GRP_RFMstat3  +    -0.12660007404037 * GRP_RFMstat4
1239202   +          +     0.04829215694488 * GRP_RMntFrq2  +     0.10137738373353 *
1239203   +        GRP_RMntFrq3  +     -0.2873514159435 * GRP_RMntFrq4
1239204   +          +     0.61737333380878 * GRP_Recency2  +     0.16651370318087 *
1239205   +        GRP_Recency3  +    -0.15382569411658 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25371698668168 * GRP_AcceptedCmp52 + 0.38185615945621 *
GRP_Frq2 + 0.03545555759423 * GRP_Frq3 + -0.00061660249238 * GRP_Frq4 + 0.41779261820045 *
GRP_Income2 + 0.51800912898069 * GRP_Income3 + -0.36427548932695 * GRP_Income4 +
-0.06433979614617 * GRP_Mnt2 + 0.00045120565293 * GRP_Mnt3 + -0.13992317322759 * GRP_Mnt4 +
0.34207391538024 * GRP_MntFishProducts2 + 0.03411739869638 * GRP_MntFishProducts3 +
-0.083693402353 * GRP_MntFishProducts4 + -0.1318128730187 * GRP_MntGoldProds2 +
-0.0614737729382 * GRP_MntGoldProds3 + -0.00372986687449 * GRP_MntGoldProds4 +
-0.3129171829017 * GRP_MntMeatProducts2 + 0.01519664718127 * GRP_MntMeatProducts3 +
0.29997111548812 * GRP_MntMeatProducts4 + 0.389673942682 * GRP_MntWines2 + 0.21159785789434 *
GRP_MntWines3 + -0.26921349986988 * GRP_MntWines4 + -0.47013218092095 *
GRP_NumCatalogPurchases3 + 0.23943411636141 * GRP_NumCatalogPurchases4 + -0.68715024477164 *
GRP_NumDistPurchases2 + -0.09178471992122 * GRP_NumDistPurchases3 + -0.01170225640351 *
GRP_NumDistPurchases4 + -0.14760833919227 * GRP_NumWebPurchases2 + 0.02966820025811 *
GRP_NumWebPurchases3 + -0.04127892210576 * GRP_NumWebPurchases4 + -0.45467119970502 *
GRP_RFMstat2 + -0.14644406995031 * GRP_RFMstat3 + -0.12660007404037 * GRP_RFMstat4 +
0.04829215694488 * GRP_RMntFrq2 + 0.10137738373353 * GRP_RMntFrq3 + -0.2873514159435 *
GRP_RMntFrq4 + 0.61737333380878 * GRP_Recency2 + 0.16651370318087 * GRP_Recency3 +
-0.15382569411658 * GRP_Recency4 ;
1239206   +   H12  = H12  +    -0.00960598895677 * GRP_AcceptedCmp52
1239207   +          +    -0.13877780492855 * GRP_Frq2  +    -0.12078849771739 * GRP_Frq3
1239208   +          +     0.25058833013238 * GRP_Frq4  +     0.13932014454657 *
1239209   +        GRP_Income2  +    -0.11560599273748 * GRP_Income3
1239210   +          +    -0.36622829757109 * GRP_Income4  +     0.12796853065131 *
1239211   +        GRP_Mnt2  +    -0.15829126446209 * GRP_Mnt3  +    -0.35779207872654 *
1239212   +        GRP_Mnt4  +     0.06590491513415 * GRP_MntFishProducts2
1239213   +          +     0.00842475350903 * GRP_MntFishProducts3
1239214   +          +     -0.1623103908885 * GRP_MntFishProducts4
1239215   +          +    -0.23845524931139 * GRP_MntGoldProds2
1239216   +          +    -0.07128567155438 * GRP_MntGoldProds3
1239217   +          +     0.25778887379163 * GRP_MntGoldProds4
1239218   +          +    -0.12224351227219 * GRP_MntMeatProducts2
1239219   +          +     0.06269922653052 * GRP_MntMeatProducts3
1239220   +          +      0.2587215409794 * GRP_MntMeatProducts4
1239221   +          +     0.20096090232239 * GRP_MntWines2  +    -0.16858917844476 *
1239222   +        GRP_MntWines3  +     0.03815809499779 * GRP_MntWines4
1239223   +          +     0.05177526225067 * GRP_NumCatalogPurchases3
1239224   +          +    -0.18831777813313 * GRP_NumCatalogPurchases4
1239225   +          +     0.12374838743082 * GRP_NumDistPurchases2
1239226   +          +    -0.19910688422086 * GRP_NumDistPurchases3
1239227   +          +    -0.03804569737208 * GRP_NumDistPurchases4
1239228   +          +    -0.17179633678901 * GRP_NumWebPurchases2
1239229   +          +    -0.08560184232365 * GRP_NumWebPurchases3
1239230   +          +     0.09237237622553 * GRP_NumWebPurchases4
1239231   +          +     0.01544327143979 * GRP_RFMstat2  +      0.1127818122444 *
1239232   +        GRP_RFMstat3  +    -0.21371736650143 * GRP_RFMstat4
1239233   +          +    -0.14005478166078 * GRP_RMntFrq2  +     0.07954568858907 *
1239234   +        GRP_RMntFrq3  +    -0.02313269086836 * GRP_RMntFrq4
1239235   +          +     0.04358116545272 * GRP_Recency2  +    -0.02969695172962 *
1239236   +        GRP_Recency3  +     0.00206593904485 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00960598895677 * GRP_AcceptedCmp52 + -0.13877780492855 *
GRP_Frq2 + -0.12078849771739 * GRP_Frq3 + 0.25058833013238 * GRP_Frq4 + 0.13932014454657 *
GRP_Income2 + -0.11560599273748 * GRP_Income3 + -0.36622829757109 * GRP_Income4 +
0.12796853065131 * GRP_Mnt2 + -0.15829126446209 * GRP_Mnt3 + -0.35779207872654 * GRP_Mnt4 +
0.06590491513415 * GRP_MntFishProducts2 + 0.00842475350903 * GRP_MntFishProducts3 +
-0.1623103908885 * GRP_MntFishProducts4 + -0.23845524931139 * GRP_MntGoldProds2 +
-0.07128567155438 * GRP_MntGoldProds3 + 0.25778887379163 * GRP_MntGoldProds4 +
-0.12224351227219 * GRP_MntMeatProducts2 + 0.06269922653052 * GRP_MntMeatProducts3 +
0.2587215409794 * GRP_MntMeatProducts4 + 0.20096090232239 * GRP_MntWines2 + -0.16858917844476
* GRP_MntWines3 + 0.03815809499779 * GRP_MntWines4 + 0.05177526225067 *
GRP_NumCatalogPurchases3 + -0.18831777813313 * GRP_NumCatalogPurchases4 + 0.12374838743082 *
GRP_NumDistPurchases2 + -0.19910688422086 * GRP_NumDistPurchases3 + -0.03804569737208 *
GRP_NumDistPurchases4 + -0.17179633678901 * GRP_NumWebPurchases2 + -0.08560184232365 *
GRP_NumWebPurchases3 + 0.09237237622553 * GRP_NumWebPurchases4 + 0.01544327143979 *
GRP_RFMstat2 + 0.1127818122444 * GRP_RFMstat3 + -0.21371736650143 * GRP_RFMstat4 +
-0.14005478166078 * GRP_RMntFrq2 + 0.07954568858907 * GRP_RMntFrq3 + -0.02313269086836 *
GRP_RMntFrq4 + 0.04358116545272 * GRP_Recency2 + -0.02969695172962 * GRP_Recency3 +
0.00206593904485 * GRP_Recency4 ;
1239237   +   H13  = H13  +     0.11273135858209 * GRP_AcceptedCmp52
1239238   +          +    -0.15015665173608 * GRP_Frq2  +    -0.20454924588356 * GRP_Frq3
1239239   +          +    -0.04047998964496 * GRP_Frq4  +    -0.29897237144541 *
1239240   +        GRP_Income2  +      -0.028464296882 * GRP_Income3
1239241   +          +     0.24836294191696 * GRP_Income4  +     0.08738925553158 *
1239242   +        GRP_Mnt2  +     0.00962293230168 * GRP_Mnt3  +    -0.12661643514597 *
1239243   +        GRP_Mnt4  +    -0.03747719154948 * GRP_MntFishProducts2
1239244   +          +    -0.07078012229572 * GRP_MntFishProducts3
1239245   +          +    -0.14569186671189 * GRP_MntFishProducts4
1239246   +          +     0.14963390032413 * GRP_MntGoldProds2
1239247   +          +    -0.11869917970226 * GRP_MntGoldProds3
1239248   +          +     0.25943105626615 * GRP_MntGoldProds4
1239249   +          +     0.36609689271233 * GRP_MntMeatProducts2
1239250   +          +     0.10969864655073 * GRP_MntMeatProducts3
1239251   +          +    -0.03446779336952 * GRP_MntMeatProducts4
1239252   +          +    -0.16882321573662 * GRP_MntWines2  +     0.07914922328232 *
1239253   +        GRP_MntWines3  +     0.13243594484158 * GRP_MntWines4
1239254   +          +     0.39758714937962 * GRP_NumCatalogPurchases3
1239255   +          +     0.31434011051179 * GRP_NumCatalogPurchases4
1239256   +          +     0.08068432649382 * GRP_NumDistPurchases2
1239257   +          +    -0.08875599058351 * GRP_NumDistPurchases3
1239258   +          +     0.26738740475822 * GRP_NumDistPurchases4
1239259   +          +     -0.0916247468051 * GRP_NumWebPurchases2
1239260   +          +    -0.17267741073665 * GRP_NumWebPurchases3
1239261   +          +     0.01349113315351 * GRP_NumWebPurchases4
1239262   +          +    -0.19075973281592 * GRP_RFMstat2  +    -0.20146461162283 *
1239263   +        GRP_RFMstat3  +    -0.13097471458987 * GRP_RFMstat4
1239264   +          +     0.06761773631631 * GRP_RMntFrq2  +     0.27576244694442 *
1239265   +        GRP_RMntFrq3  +      0.1281788430307 * GRP_RMntFrq4
1239266   +          +    -0.15939599795679 * GRP_Recency2  +    -0.00210397286084 *
1239267   +        GRP_Recency3  +     0.28490847560375 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.11273135858209 * GRP_AcceptedCmp52 + -0.15015665173608 *
GRP_Frq2 + -0.20454924588356 * GRP_Frq3 + -0.04047998964496 * GRP_Frq4 + -0.29897237144541 *
GRP_Income2 + -0.028464296882 * GRP_Income3 + 0.24836294191696 * GRP_Income4 +
0.08738925553158 * GRP_Mnt2 + 0.00962293230168 * GRP_Mnt3 + -0.12661643514597 * GRP_Mnt4 +
-0.03747719154948 * GRP_MntFishProducts2 + -0.07078012229572 * GRP_MntFishProducts3 +
-0.14569186671189 * GRP_MntFishProducts4 + 0.14963390032413 * GRP_MntGoldProds2 +
-0.11869917970226 * GRP_MntGoldProds3 + 0.25943105626615 * GRP_MntGoldProds4 +
0.36609689271233 * GRP_MntMeatProducts2 + 0.10969864655073 * GRP_MntMeatProducts3 +
-0.03446779336952 * GRP_MntMeatProducts4 + -0.16882321573662 * GRP_MntWines2 +
0.07914922328232 * GRP_MntWines3 + 0.13243594484158 * GRP_MntWines4 + 0.39758714937962 *
GRP_NumCatalogPurchases3 + 0.31434011051179 * GRP_NumCatalogPurchases4 + 0.08068432649382 *
GRP_NumDistPurchases2 + -0.08875599058351 * GRP_NumDistPurchases3 + 0.26738740475822 *
GRP_NumDistPurchases4 + -0.0916247468051 * GRP_NumWebPurchases2 + -0.17267741073665 *
GRP_NumWebPurchases3 + 0.01349113315351 * GRP_NumWebPurchases4 + -0.19075973281592 *
GRP_RFMstat2 + -0.20146461162283 * GRP_RFMstat3 + -0.13097471458987 * GRP_RFMstat4 +
0.06761773631631 * GRP_RMntFrq2 + 0.27576244694442 * GRP_RMntFrq3 + 0.1281788430307 *
GRP_RMntFrq4 + -0.15939599795679 * GRP_Recency2 + -0.00210397286084 * GRP_Recency3 +
0.28490847560375 * GRP_Recency4 ;
1239268   +   H14  = H14  +     0.27713596853764 * GRP_AcceptedCmp52
1239269   +          +    -0.11480256849934 * GRP_Frq2  +      0.0285240312455 * GRP_Frq3
1239270   +          +     0.09416065239682 * GRP_Frq4  +     -0.1229961422993 *
1239271   +        GRP_Income2  +     0.01867364051002 * GRP_Income3
1239272   +          +     0.05820105400306 * GRP_Income4  +    -0.16873429334819 *
1239273   +        GRP_Mnt2  +    -0.01221085891741 * GRP_Mnt3  +    -0.10225236565235 *
1239274   +        GRP_Mnt4  +    -0.09613387975858 * GRP_MntFishProducts2
1239275   +          +    -0.18334484867808 * GRP_MntFishProducts3
1239276   +          +     0.13484477561766 * GRP_MntFishProducts4
1239277   +          +    -0.05145913380692 * GRP_MntGoldProds2
1239278   +          +     0.04459987080173 * GRP_MntGoldProds3
1239279   +          +     0.01539767655772 * GRP_MntGoldProds4
1239280   +          +     0.26537148543352 * GRP_MntMeatProducts2
1239281   +          +     0.22913678530176 * GRP_MntMeatProducts3
1239282   +          +     0.21262490658374 * GRP_MntMeatProducts4
1239283   +          +    -0.11513521401249 * GRP_MntWines2  +    -0.14420673462527 *
1239284   +        GRP_MntWines3  +     0.11949691312637 * GRP_MntWines4
1239285   +          +    -0.02289734111038 * GRP_NumCatalogPurchases3
1239286   +          +    -0.12014539185275 * GRP_NumCatalogPurchases4
1239287   +          +     0.09224372228857 * GRP_NumDistPurchases2
1239288   +          +    -0.14205094961773 * GRP_NumDistPurchases3
1239289   +          +    -0.27160467877541 * GRP_NumDistPurchases4
1239290   +          +    -0.15428446875019 * GRP_NumWebPurchases2
1239291   +          +    -0.36914157795453 * GRP_NumWebPurchases3
1239292   +          +    -0.41610537355059 * GRP_NumWebPurchases4
1239293   +          +    -0.29442656678388 * GRP_RFMstat2  +     0.03961235509827 *
1239294   +        GRP_RFMstat3  +    -0.18322878380243 * GRP_RFMstat4
1239295   +          +     0.06857495854453 * GRP_RMntFrq2  +     0.08325769999442 *
1239296   +        GRP_RMntFrq3  +     0.24334424933749 * GRP_RMntFrq4
1239297   +          +    -0.50963259840069 * GRP_Recency2  +    -0.24163634485458 *
1239298   +        GRP_Recency3  +     -0.1023689653207 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.27713596853764 * GRP_AcceptedCmp52 + -0.11480256849934 *
GRP_Frq2 + 0.0285240312455 * GRP_Frq3 + 0.09416065239682 * GRP_Frq4 + -0.1229961422993 *
GRP_Income2 + 0.01867364051002 * GRP_Income3 + 0.05820105400306 * GRP_Income4 +
-0.16873429334819 * GRP_Mnt2 + -0.01221085891741 * GRP_Mnt3 + -0.10225236565235 * GRP_Mnt4 +
-0.09613387975858 * GRP_MntFishProducts2 + -0.18334484867808 * GRP_MntFishProducts3 +
0.13484477561766 * GRP_MntFishProducts4 + -0.05145913380692 * GRP_MntGoldProds2 +
0.04459987080173 * GRP_MntGoldProds3 + 0.01539767655772 * GRP_MntGoldProds4 + 0.26537148543352
* GRP_MntMeatProducts2 + 0.22913678530176 * GRP_MntMeatProducts3 + 0.21262490658374 *
GRP_MntMeatProducts4 + -0.11513521401249 * GRP_MntWines2 + -0.14420673462527 * GRP_MntWines3 +
0.11949691312637 * GRP_MntWines4 + -0.02289734111038 * GRP_NumCatalogPurchases3 +
-0.12014539185275 * GRP_NumCatalogPurchases4 + 0.09224372228857 * GRP_NumDistPurchases2 +
-0.14205094961773 * GRP_NumDistPurchases3 + -0.27160467877541 * GRP_NumDistPurchases4 +
-0.15428446875019 * GRP_NumWebPurchases2 + -0.36914157795453 * GRP_NumWebPurchases3 +
-0.41610537355059 * GRP_NumWebPurchases4 + -0.29442656678388 * GRP_RFMstat2 + 0.03961235509827
* GRP_RFMstat3 + -0.18322878380243 * GRP_RFMstat4 + 0.06857495854453 * GRP_RMntFrq2 +
0.08325769999442 * GRP_RMntFrq3 + 0.24334424933749 * GRP_RMntFrq4 + -0.50963259840069 *
GRP_Recency2 + -0.24163634485458 * GRP_Recency3 + -0.1023689653207 * GRP_Recency4 ;
1239299   +   H15  = H15  +    -0.58071728739803 * GRP_AcceptedCmp52
1239300   +          +    -0.33803120859672 * GRP_Frq2  +    -0.08690701614481 * GRP_Frq3
1239301   +          +     0.06107334775294 * GRP_Frq4  +     0.00751374071999 *
1239302   +        GRP_Income2  +     0.20911873861779 * GRP_Income3
1239303   +          +    -0.14977199160976 * GRP_Income4  +     0.15427447371686 *
1239304   +        GRP_Mnt2  +    -0.24298277669059 * GRP_Mnt3  +    -0.02935492111499 *
1239305   +        GRP_Mnt4  +     0.04923982061963 * GRP_MntFishProducts2
1239306   +          +    -0.08952948139975 * GRP_MntFishProducts3
1239307   +          +     0.15338133379465 * GRP_MntFishProducts4
1239308   +          +     0.04821845492824 * GRP_MntGoldProds2
1239309   +          +     0.20117781904284 * GRP_MntGoldProds3
1239310   +          +     0.13013396690778 * GRP_MntGoldProds4
1239311   +          +    -0.03940841472157 * GRP_MntMeatProducts2
1239312   +          +     0.03161017721112 * GRP_MntMeatProducts3
1239313   +          +    -0.21938330779867 * GRP_MntMeatProducts4
1239314   +          +      0.3039864690076 * GRP_MntWines2  +     0.33038690291786 *
1239315   +        GRP_MntWines3  +     0.03314465135063 * GRP_MntWines4
1239316   +          +    -0.07655889365033 * GRP_NumCatalogPurchases3
1239317   +          +    -0.17353955777897 * GRP_NumCatalogPurchases4
1239318   +          +    -0.16058154480995 * GRP_NumDistPurchases2
1239319   +          +    -0.30101518928361 * GRP_NumDistPurchases3
1239320   +          +      0.0473480026433 * GRP_NumDistPurchases4
1239321   +          +     0.03132883547053 * GRP_NumWebPurchases2
1239322   +          +    -0.29425936985479 * GRP_NumWebPurchases3
1239323   +          +    -0.12527625315403 * GRP_NumWebPurchases4
1239324   +          +     0.30683805591766 * GRP_RFMstat2  +    -0.21275334469197 *
1239325   +        GRP_RFMstat3  +     0.32474239840607 * GRP_RFMstat4
1239326   +          +     0.09289841520091 * GRP_RMntFrq2  +     0.22137778862379 *
1239327   +        GRP_RMntFrq3  +     0.12254524703503 * GRP_RMntFrq4
1239328   +          +     0.46836624272095 * GRP_Recency2  +     0.01747843890017 *
1239329   +        GRP_Recency3  +    -0.28363324780869 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.58071728739803 * GRP_AcceptedCmp52 + -0.33803120859672 *
GRP_Frq2 + -0.08690701614481 * GRP_Frq3 + 0.06107334775294 * GRP_Frq4 + 0.00751374071999 *
GRP_Income2 + 0.20911873861779 * GRP_Income3 + -0.14977199160976 * GRP_Income4 +
0.15427447371686 * GRP_Mnt2 + -0.24298277669059 * GRP_Mnt3 + -0.02935492111499 * GRP_Mnt4 +
0.04923982061963 * GRP_MntFishProducts2 + -0.08952948139975 * GRP_MntFishProducts3 +
0.15338133379465 * GRP_MntFishProducts4 + 0.04821845492824 * GRP_MntGoldProds2 +
0.20117781904284 * GRP_MntGoldProds3 + 0.13013396690778 * GRP_MntGoldProds4 +
-0.03940841472157 * GRP_MntMeatProducts2 + 0.03161017721112 * GRP_MntMeatProducts3 +
-0.21938330779867 * GRP_MntMeatProducts4 + 0.3039864690076 * GRP_MntWines2 + 0.33038690291786
* GRP_MntWines3 + 0.03314465135063 * GRP_MntWines4 + -0.07655889365033 *
GRP_NumCatalogPurchases3 + -0.17353955777897 * GRP_NumCatalogPurchases4 + -0.16058154480995 *
GRP_NumDistPurchases2 + -0.30101518928361 * GRP_NumDistPurchases3 + 0.0473480026433 *
GRP_NumDistPurchases4 + 0.03132883547053 * GRP_NumWebPurchases2 + -0.29425936985479 *
GRP_NumWebPurchases3 + -0.12527625315403 * GRP_NumWebPurchases4 + 0.30683805591766 *
GRP_RFMstat2 + -0.21275334469197 * GRP_RFMstat3 + 0.32474239840607 * GRP_RFMstat4 +
0.09289841520091 * GRP_RMntFrq2 + 0.22137778862379 * GRP_RMntFrq3 + 0.12254524703503 *
GRP_RMntFrq4 + 0.46836624272095 * GRP_Recency2 + 0.01747843890017 * GRP_Recency3 +
-0.28363324780869 * GRP_Recency4 ;
1239330   +   H11  =    -0.09329902916762 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.09329902916762 + H11 ;
1239331   +   H12  =     0.21894996952826 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.21894996952826 + H12 ;
1239332   +   H13  =    -0.97210428395662 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.97210428395662 + H13 ;
1239333   +   H14  =    -0.47241372860242 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.47241372860242 + H14 ;
1239334   +   H15  =    -0.89551869986721 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.89551869986721 + H15 ;
1239335   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1239336   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1239337   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1239338   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1239339   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1239340   +END;
MPRINT(EM_DIAGRAM):   END;
1239341   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1239342   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1239343   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1239344   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1239345   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1239346   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1239347   +END;
MPRINT(EM_DIAGRAM):   END;
1239348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1239349   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1239350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1239351   +
1239352   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1239353   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1239354   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1239355   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1239356   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1239357   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1239358   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1239359   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1239360   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1239361   +end;
MPRINT(EM_DIAGRAM):   end;
1239362   +else do;
MPRINT(EM_DIAGRAM):   else do;
1239363   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1239364   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1239365   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1239366   +   end;
MPRINT(EM_DIAGRAM):   end;
1239367   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1239368   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1239369   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1239370   +   end;
MPRINT(EM_DIAGRAM):   end;
1239371   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1239372   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1239373   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1239374   +   end;
MPRINT(EM_DIAGRAM):   end;
1239375   +end;
MPRINT(EM_DIAGRAM):   end;
1239376   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1239377   +   P_DepVar1  =     2.68876927057109 * H11  +     0.34381275178608 * H12
1239378   +          +    -1.13153750790029 * H13  +    -0.93563986714952 * H14
1239379   +          +     1.84382077322412 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.68876927057109 * H11 + 0.34381275178608 * H12 +
-1.13153750790029 * H13 + -0.93563986714952 * H14 + 1.84382077322412 * H15 ;
1239380   +   P_DepVar1  =    -1.53169022796223 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53169022796223 + P_DepVar1 ;
1239381   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1239382   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1239383   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1239384   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1239385   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1239386   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1239387   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1239388   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1239389   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1239390   +END;
MPRINT(EM_DIAGRAM):   END;
1239391   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1239392   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1239393   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1239394   +END;
MPRINT(EM_DIAGRAM):   END;
1239395   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1239396   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1239397   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1239398   +END;
MPRINT(EM_DIAGRAM):   END;
1239399   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1239400   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1239401   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1239402   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1239403   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1239404   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1239405   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1239406   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1239407   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1239408   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1239409   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1239410   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1239411   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1239412   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1239413   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1239414   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1239415   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1239416   +END;
MPRINT(EM_DIAGRAM):   END;
1239417   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1239418   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1239419   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1239420   +drop
1239421   +H11
1239422   +H12
1239423   +H13
1239424   +H14
1239425   +H15
1239426   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1239427   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1239428   +* Renaming variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural22;
1239429   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1239430   +* Renaming Posterior variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural22;
1239431   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1239432   +drop Neural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar1;
1239433   +Neural22_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar1 = P_DepVar1;
1239434   +drop Neural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar0;
1239435   +Neural22_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar0 = P_DepVar0;
1239436   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1239437   +* Renaming _WARN_ variable for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural22;
1239438   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1239439   +length Neural22_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural22_WARN_ $4;
1239440   +drop Neural22_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural22_WARN_;
1239441   +Neural22_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural22_WARN_ = _WARN_;
1239442   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1239443   +* Ensmbl7: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring Code of model 4 of 5;
1239444   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1239445   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1239446   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1239447   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1239448   +* NODE: Neural21;
MPRINT(EM_DIAGRAM):   * NODE: Neural21;
1239449   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1239450   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1239451   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1239452   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1239453   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1239454   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1239455   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1239456   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1239457   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1239458   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1239459   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1239460   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1239461   +LENGTH _WARN_ $4
1239462   +      F_DepVar  $ 12
1239463   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1239464   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1239465   +
1239466   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1239467   +
1239468   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1239469   +
1239470   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1239471   +
1239472   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1239473   +
1239474   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1239475   +
1239476   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1239477   +
1239478   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1239479   +
1239480   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1239481   +
1239482   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1239483   +
1239484   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1239485   +
1239486   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1239487   +
1239488   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1239489   +
1239490   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1239491   +
1239492   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1239493   +
1239494   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1239495   +
1239496   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1239497   +
1239498   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1239499   +
1239500   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1239501   +
1239502   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1239503   +
1239504   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1239505   +
1239506   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1239507   +
1239508   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1239509   +
1239510   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1239511   +
1239512   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1239513   +
1239514   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1239515   +
1239516   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1239517   +
1239518   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1239519   +
1239520   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1239521   +
1239522   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1239523   +
1239524   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1239525   +
1239526   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1239527   +
1239528   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1239529   +
1239530   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1239531   +
1239532   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1239533   +
1239534   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1239535   +
1239536   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1239537   +
1239538   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1239539   +
1239540   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1239541   +
1239542   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1239543   +
1239544   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1239545   +
1239546   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1239547   +
1239548   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1239549   +
1239550   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1239551   +
1239552   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1239553   +
1239554   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1239555   +
1239556   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1239557   +
1239558   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1239559   +
1239560   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1239561   +
1239562   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1239563   +
1239564   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1239565   +
1239566   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1239567   +
1239568   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1239569   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1239570   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1239571   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1239572   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1239573   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239574   +end;
MPRINT(EM_DIAGRAM):   end;
1239575   +else do;
MPRINT(EM_DIAGRAM):   else do;
1239576   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1239577   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1239578   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1239579   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1239580   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1239581   +   end;
MPRINT(EM_DIAGRAM):   end;
1239582   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1239583   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1239584   +   end;
MPRINT(EM_DIAGRAM):   end;
1239585   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1239586   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1239587   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1239588   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239589   +   end;
MPRINT(EM_DIAGRAM):   end;
1239590   +end;
MPRINT(EM_DIAGRAM):   end;
1239591   +
1239592   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1239593   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1239594   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1239595   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1239596   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1239597   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1239598   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1239599   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239600   +end;
MPRINT(EM_DIAGRAM):   end;
1239601   +else do;
MPRINT(EM_DIAGRAM):   else do;
1239602   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1239603   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1239604   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1239605   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1239606   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1239607   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1239608   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1239609   +   end;
MPRINT(EM_DIAGRAM):   end;
1239610   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1239611   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1239612   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1239613   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1239614   +   end;
MPRINT(EM_DIAGRAM):   end;
1239615   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1239616   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1239617   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1239618   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1239619   +   end;
MPRINT(EM_DIAGRAM):   end;
1239620   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1239621   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1239622   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1239623   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1239624   +   end;
MPRINT(EM_DIAGRAM):   end;
1239625   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1239626   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1239627   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1239628   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1239629   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1239630   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239631   +   end;
MPRINT(EM_DIAGRAM):   end;
1239632   +end;
MPRINT(EM_DIAGRAM):   end;
1239633   +
1239634   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1239635   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1239636   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1239637   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1239638   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1239639   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1239640   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1239641   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239642   +end;
MPRINT(EM_DIAGRAM):   end;
1239643   +else do;
MPRINT(EM_DIAGRAM):   else do;
1239644   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1239645   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1239646   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1239647   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1239648   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1239649   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1239650   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1239651   +   end;
MPRINT(EM_DIAGRAM):   end;
1239652   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1239653   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1239654   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1239655   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1239656   +   end;
MPRINT(EM_DIAGRAM):   end;
1239657   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1239658   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1239659   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1239660   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1239661   +   end;
MPRINT(EM_DIAGRAM):   end;
1239662   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1239663   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1239664   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1239665   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1239666   +   end;
MPRINT(EM_DIAGRAM):   end;
1239667   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1239668   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1239669   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1239670   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1239671   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1239672   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239673   +   end;
MPRINT(EM_DIAGRAM):   end;
1239674   +end;
MPRINT(EM_DIAGRAM):   end;
1239675   +
1239676   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1239677   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1239678   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1239679   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1239680   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1239681   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1239682   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1239683   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239684   +end;
MPRINT(EM_DIAGRAM):   end;
1239685   +else do;
MPRINT(EM_DIAGRAM):   else do;
1239686   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1239687   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1239688   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1239689   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1239690   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1239691   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1239692   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1239693   +   end;
MPRINT(EM_DIAGRAM):   end;
1239694   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1239695   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1239696   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1239697   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1239698   +   end;
MPRINT(EM_DIAGRAM):   end;
1239699   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1239700   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1239701   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1239702   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1239703   +   end;
MPRINT(EM_DIAGRAM):   end;
1239704   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1239705   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1239706   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1239707   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1239708   +   end;
MPRINT(EM_DIAGRAM):   end;
1239709   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1239710   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1239711   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1239712   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1239713   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1239714   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239715   +   end;
MPRINT(EM_DIAGRAM):   end;
1239716   +end;
MPRINT(EM_DIAGRAM):   end;
1239717   +
1239718   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1239719   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1239720   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1239721   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1239722   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1239723   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1239724   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1239725   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239726   +end;
MPRINT(EM_DIAGRAM):   end;
1239727   +else do;
MPRINT(EM_DIAGRAM):   else do;
1239728   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1239729   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1239730   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1239731   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1239732   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1239733   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1239734   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1239735   +   end;
MPRINT(EM_DIAGRAM):   end;
1239736   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1239737   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1239738   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1239739   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1239740   +   end;
MPRINT(EM_DIAGRAM):   end;
1239741   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1239742   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1239743   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1239744   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1239745   +   end;
MPRINT(EM_DIAGRAM):   end;
1239746   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1239747   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1239748   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1239749   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1239750   +   end;
MPRINT(EM_DIAGRAM):   end;
1239751   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1239752   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1239753   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1239754   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1239755   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1239756   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239757   +   end;
MPRINT(EM_DIAGRAM):   end;
1239758   +end;
MPRINT(EM_DIAGRAM):   end;
1239759   +
1239760   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1239761   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1239762   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1239763   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1239764   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1239765   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1239766   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1239767   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239768   +end;
MPRINT(EM_DIAGRAM):   end;
1239769   +else do;
MPRINT(EM_DIAGRAM):   else do;
1239770   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1239771   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1239772   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1239773   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1239774   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1239775   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1239776   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1239777   +   end;
MPRINT(EM_DIAGRAM):   end;
1239778   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1239779   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1239780   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1239781   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1239782   +   end;
MPRINT(EM_DIAGRAM):   end;
1239783   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1239784   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1239785   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1239786   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1239787   +   end;
MPRINT(EM_DIAGRAM):   end;
1239788   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1239789   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1239790   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1239791   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1239792   +   end;
MPRINT(EM_DIAGRAM):   end;
1239793   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1239794   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1239795   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1239796   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1239797   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1239798   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239799   +   end;
MPRINT(EM_DIAGRAM):   end;
1239800   +end;
MPRINT(EM_DIAGRAM):   end;
1239801   +
1239802   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1239803   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1239804   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1239805   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1239806   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1239807   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1239808   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1239809   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239810   +end;
MPRINT(EM_DIAGRAM):   end;
1239811   +else do;
MPRINT(EM_DIAGRAM):   else do;
1239812   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1239813   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1239814   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1239815   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1239816   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1239817   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1239818   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1239819   +   end;
MPRINT(EM_DIAGRAM):   end;
1239820   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1239821   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1239822   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1239823   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1239824   +   end;
MPRINT(EM_DIAGRAM):   end;
1239825   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1239826   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1239827   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1239828   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1239829   +   end;
MPRINT(EM_DIAGRAM):   end;
1239830   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1239831   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1239832   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1239833   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1239834   +   end;
MPRINT(EM_DIAGRAM):   end;
1239835   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1239836   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1239837   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1239838   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1239839   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1239840   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239841   +   end;
MPRINT(EM_DIAGRAM):   end;
1239842   +end;
MPRINT(EM_DIAGRAM):   end;
1239843   +
1239844   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1239845   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1239846   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1239847   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1239848   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1239849   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1239850   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1239851   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239852   +end;
MPRINT(EM_DIAGRAM):   end;
1239853   +else do;
MPRINT(EM_DIAGRAM):   else do;
1239854   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1239855   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1239856   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1239857   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1239858   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1239859   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1239860   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1239861   +   end;
MPRINT(EM_DIAGRAM):   end;
1239862   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1239863   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1239864   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1239865   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1239866   +   end;
MPRINT(EM_DIAGRAM):   end;
1239867   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1239868   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1239869   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1239870   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1239871   +   end;
MPRINT(EM_DIAGRAM):   end;
1239872   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1239873   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1239874   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1239875   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1239876   +   end;
MPRINT(EM_DIAGRAM):   end;
1239877   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1239878   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1239879   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1239880   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1239881   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1239882   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239883   +   end;
MPRINT(EM_DIAGRAM):   end;
1239884   +end;
MPRINT(EM_DIAGRAM):   end;
1239885   +
1239886   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1239887   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1239888   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1239889   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1239890   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1239891   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1239892   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239893   +end;
MPRINT(EM_DIAGRAM):   end;
1239894   +else do;
MPRINT(EM_DIAGRAM):   else do;
1239895   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1239896   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1239897   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1239898   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1239899   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1239900   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1239901   +   end;
MPRINT(EM_DIAGRAM):   end;
1239902   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1239903   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1239904   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1239905   +   end;
MPRINT(EM_DIAGRAM):   end;
1239906   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1239907   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1239908   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1239909   +   end;
MPRINT(EM_DIAGRAM):   end;
1239910   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1239911   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1239912   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1239913   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1239914   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239915   +   end;
MPRINT(EM_DIAGRAM):   end;
1239916   +end;
MPRINT(EM_DIAGRAM):   end;
1239917   +
1239918   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1239919   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1239920   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1239921   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1239922   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1239923   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1239924   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1239925   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239926   +end;
MPRINT(EM_DIAGRAM):   end;
1239927   +else do;
MPRINT(EM_DIAGRAM):   else do;
1239928   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1239929   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1239930   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1239931   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1239932   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1239933   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1239934   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1239935   +   end;
MPRINT(EM_DIAGRAM):   end;
1239936   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1239937   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1239938   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1239939   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1239940   +   end;
MPRINT(EM_DIAGRAM):   end;
1239941   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1239942   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1239943   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1239944   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1239945   +   end;
MPRINT(EM_DIAGRAM):   end;
1239946   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1239947   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1239948   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1239949   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1239950   +   end;
MPRINT(EM_DIAGRAM):   end;
1239951   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1239952   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1239953   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1239954   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1239955   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1239956   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239957   +   end;
MPRINT(EM_DIAGRAM):   end;
1239958   +end;
MPRINT(EM_DIAGRAM):   end;
1239959   +
1239960   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1239961   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1239962   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1239963   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1239964   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1239965   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1239966   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1239967   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239968   +end;
MPRINT(EM_DIAGRAM):   end;
1239969   +else do;
MPRINT(EM_DIAGRAM):   else do;
1239970   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1239971   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1239972   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1239973   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1239974   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1239975   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1239976   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1239977   +   end;
MPRINT(EM_DIAGRAM):   end;
1239978   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1239979   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1239980   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1239981   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1239982   +   end;
MPRINT(EM_DIAGRAM):   end;
1239983   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1239984   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1239985   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1239986   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1239987   +   end;
MPRINT(EM_DIAGRAM):   end;
1239988   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1239989   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1239990   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1239991   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1239992   +   end;
MPRINT(EM_DIAGRAM):   end;
1239993   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1239994   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1239995   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1239996   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1239997   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1239998   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1239999   +   end;
MPRINT(EM_DIAGRAM):   end;
1240000   +end;
MPRINT(EM_DIAGRAM):   end;
1240001   +
1240002   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1240003   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1240004   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1240005   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1240006   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1240007   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1240008   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1240009   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240010   +end;
MPRINT(EM_DIAGRAM):   end;
1240011   +else do;
MPRINT(EM_DIAGRAM):   else do;
1240012   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1240013   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1240014   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1240015   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1240016   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1240017   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1240018   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1240019   +   end;
MPRINT(EM_DIAGRAM):   end;
1240020   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1240021   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1240022   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1240023   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1240024   +   end;
MPRINT(EM_DIAGRAM):   end;
1240025   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1240026   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1240027   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1240028   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1240029   +   end;
MPRINT(EM_DIAGRAM):   end;
1240030   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1240031   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1240032   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1240033   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1240034   +   end;
MPRINT(EM_DIAGRAM):   end;
1240035   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1240036   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1240037   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1240038   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1240039   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1240040   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240041   +   end;
MPRINT(EM_DIAGRAM):   end;
1240042   +end;
MPRINT(EM_DIAGRAM):   end;
1240043   +
1240044   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1240045   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1240046   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1240047   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1240048   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1240049   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1240050   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1240051   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240052   +end;
MPRINT(EM_DIAGRAM):   end;
1240053   +else do;
MPRINT(EM_DIAGRAM):   else do;
1240054   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1240055   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1240056   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1240057   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1240058   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1240059   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1240060   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1240061   +   end;
MPRINT(EM_DIAGRAM):   end;
1240062   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1240063   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1240064   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1240065   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1240066   +   end;
MPRINT(EM_DIAGRAM):   end;
1240067   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1240068   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1240069   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1240070   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1240071   +   end;
MPRINT(EM_DIAGRAM):   end;
1240072   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1240073   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1240074   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1240075   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1240076   +   end;
MPRINT(EM_DIAGRAM):   end;
1240077   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1240078   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1240079   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1240080   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1240081   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1240082   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240083   +   end;
MPRINT(EM_DIAGRAM):   end;
1240084   +end;
MPRINT(EM_DIAGRAM):   end;
1240085   +
1240086   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1240087   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1240088   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1240089   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1240090   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1240091   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1240092   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1240093   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240094   +end;
MPRINT(EM_DIAGRAM):   end;
1240095   +else do;
MPRINT(EM_DIAGRAM):   else do;
1240096   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1240097   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1240098   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1240099   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1240100   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1240101   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1240102   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1240103   +   end;
MPRINT(EM_DIAGRAM):   end;
1240104   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1240105   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1240106   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1240107   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1240108   +   end;
MPRINT(EM_DIAGRAM):   end;
1240109   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1240110   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1240111   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1240112   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1240113   +   end;
MPRINT(EM_DIAGRAM):   end;
1240114   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1240115   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1240116   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1240117   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1240118   +   end;
MPRINT(EM_DIAGRAM):   end;
1240119   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1240120   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1240121   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1240122   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1240123   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1240124   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240125   +   end;
MPRINT(EM_DIAGRAM):   end;
1240126   +end;
MPRINT(EM_DIAGRAM):   end;
1240127   +
1240128   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1240129   +*** Checking missing input Interval
1240130   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1240131   +
1240132   +IF NMISS(
1240133   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1240134   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1240135   +
1240136   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240137   +END;
MPRINT(EM_DIAGRAM):   END;
1240138   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1240139   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1240140   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1240141   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1240142   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1240143   +END;
MPRINT(EM_DIAGRAM):   END;
1240144   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1240145   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1240146   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1240147   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1240148   +END;
MPRINT(EM_DIAGRAM):   END;
1240149   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1240150   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1240151   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1240152   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1240153   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1240154   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1240155   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1240156   +   H11  =      0.0668146440452 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.0668146440452 * S_Year_Birth ;
1240157   +   H12  =     0.02918236951724 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.02918236951724 * S_Year_Birth ;
1240158   +   H13  =     0.52122974180208 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.52122974180208 * S_Year_Birth ;
1240159   +   H14  =     -0.1823800721103 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.1823800721103 * S_Year_Birth ;
1240160   +   H11  = H11  +    -0.48347630033708 * GRP_AcceptedCmp52
1240161   +          +     0.37100635990339 * GRP_Frq2  +     0.04377799127913 * GRP_Frq3
1240162   +          +     -0.1974477050613 * GRP_Frq4  +     0.10700887225506 *
1240163   +        GRP_Income2  +      0.3291591268929 * GRP_Income3
1240164   +          +     0.00612929517663 * GRP_Income4  +    -0.23329153390557 *
1240165   +        GRP_Mnt2  +    -0.08800204437411 * GRP_Mnt3  +    -0.08445529701198 *
1240166   +        GRP_Mnt4  +     0.28673732624133 * GRP_MntFishProducts2
1240167   +          +    -0.14978605827752 * GRP_MntFishProducts3
1240168   +          +     0.22642470616542 * GRP_MntFishProducts4
1240169   +          +     0.07604404821672 * GRP_MntGoldProds2
1240170   +          +     0.04745212568332 * GRP_MntGoldProds3
1240171   +          +    -0.10028215217028 * GRP_MntGoldProds4
1240172   +          +    -0.07377682497053 * GRP_MntMeatProducts2
1240173   +          +    -0.09960214357487 * GRP_MntMeatProducts3
1240174   +          +    -0.25438120582859 * GRP_MntMeatProducts4
1240175   +          +     0.42639299324809 * GRP_MntWines2  +     0.31089292559786 *
1240176   +        GRP_MntWines3  +    -0.26826041457934 * GRP_MntWines4
1240177   +          +    -0.53742609478771 * GRP_NumCatalogPurchases3
1240178   +          +    -0.03023603128161 * GRP_NumCatalogPurchases4
1240179   +          +    -0.37743946252805 * GRP_NumDistPurchases2
1240180   +          +    -0.01872647257623 * GRP_NumDistPurchases3
1240181   +          +    -0.31993024737958 * GRP_NumDistPurchases4
1240182   +          +    -0.11078713164327 * GRP_NumWebPurchases2
1240183   +          +     0.24754701690398 * GRP_NumWebPurchases3
1240184   +          +     0.01530465573539 * GRP_NumWebPurchases4
1240185   +          +    -0.17630256491744 * GRP_RFMstat2  +    -0.47929093118323 *
1240186   +        GRP_RFMstat3  +     0.26729201021061 * GRP_RFMstat4
1240187   +          +    -0.20197995708067 * GRP_RMntFrq2  +    -0.07138949090838 *
1240188   +        GRP_RMntFrq3  +    -0.08653988697814 * GRP_RMntFrq4
1240189   +          +     1.10790516734526 * GRP_Recency2  +     0.22440369463671 *
1240190   +        GRP_Recency3  +    -0.44624012521308 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.48347630033708 * GRP_AcceptedCmp52 + 0.37100635990339 *
GRP_Frq2 + 0.04377799127913 * GRP_Frq3 + -0.1974477050613 * GRP_Frq4 + 0.10700887225506 *
GRP_Income2 + 0.3291591268929 * GRP_Income3 + 0.00612929517663 * GRP_Income4 +
-0.23329153390557 * GRP_Mnt2 + -0.08800204437411 * GRP_Mnt3 + -0.08445529701198 * GRP_Mnt4 +
0.28673732624133 * GRP_MntFishProducts2 + -0.14978605827752 * GRP_MntFishProducts3 +
0.22642470616542 * GRP_MntFishProducts4 + 0.07604404821672 * GRP_MntGoldProds2 +
0.04745212568332 * GRP_MntGoldProds3 + -0.10028215217028 * GRP_MntGoldProds4 +
-0.07377682497053 * GRP_MntMeatProducts2 + -0.09960214357487 * GRP_MntMeatProducts3 +
-0.25438120582859 * GRP_MntMeatProducts4 + 0.42639299324809 * GRP_MntWines2 + 0.31089292559786
* GRP_MntWines3 + -0.26826041457934 * GRP_MntWines4 + -0.53742609478771 *
GRP_NumCatalogPurchases3 + -0.03023603128161 * GRP_NumCatalogPurchases4 + -0.37743946252805 *
GRP_NumDistPurchases2 + -0.01872647257623 * GRP_NumDistPurchases3 + -0.31993024737958 *
GRP_NumDistPurchases4 + -0.11078713164327 * GRP_NumWebPurchases2 + 0.24754701690398 *
GRP_NumWebPurchases3 + 0.01530465573539 * GRP_NumWebPurchases4 + -0.17630256491744 *
GRP_RFMstat2 + -0.47929093118323 * GRP_RFMstat3 + 0.26729201021061 * GRP_RFMstat4 +
-0.20197995708067 * GRP_RMntFrq2 + -0.07138949090838 * GRP_RMntFrq3 + -0.08653988697814 *
GRP_RMntFrq4 + 1.10790516734526 * GRP_Recency2 + 0.22440369463671 * GRP_Recency3 +
-0.44624012521308 * GRP_Recency4 ;
1240191   +   H12  = H12  +    -0.39171353947494 * GRP_AcceptedCmp52
1240192   +          +     0.47539355981113 * GRP_Frq2  +     0.13865083322043 * GRP_Frq3
1240193   +          +     0.07826446095659 * GRP_Frq4  +     0.08299165408218 *
1240194   +        GRP_Income2  +     0.19385348399904 * GRP_Income3
1240195   +          +     -0.4686130167393 * GRP_Income4  +     0.07036992149948 *
1240196   +        GRP_Mnt2  +     0.03891677493503 * GRP_Mnt3  +     0.07820077346387 *
1240197   +        GRP_Mnt4  +     0.36400126236983 * GRP_MntFishProducts2
1240198   +          +    -0.12626287803422 * GRP_MntFishProducts3
1240199   +          +    -0.42885022606866 * GRP_MntFishProducts4
1240200   +          +    -0.08312331608509 * GRP_MntGoldProds2
1240201   +          +    -0.20061238652989 * GRP_MntGoldProds3
1240202   +          +      0.2540651659901 * GRP_MntGoldProds4
1240203   +          +    -0.05377938516186 * GRP_MntMeatProducts2
1240204   +          +    -0.20960578757846 * GRP_MntMeatProducts3
1240205   +          +     0.40616704937625 * GRP_MntMeatProducts4
1240206   +          +     0.10444770584156 * GRP_MntWines2  +     0.28632714955895 *
1240207   +        GRP_MntWines3  +     -0.0752487603973 * GRP_MntWines4
1240208   +          +    -0.34375303246386 * GRP_NumCatalogPurchases3
1240209   +          +     0.09580710843179 * GRP_NumCatalogPurchases4
1240210   +          +    -0.07273864038222 * GRP_NumDistPurchases2
1240211   +          +     0.10966715611059 * GRP_NumDistPurchases3
1240212   +          +      -0.043035493739 * GRP_NumDistPurchases4
1240213   +          +    -0.11780256604927 * GRP_NumWebPurchases2
1240214   +          +    -0.18165047164828 * GRP_NumWebPurchases3
1240215   +          +     0.26936545488609 * GRP_NumWebPurchases4
1240216   +          +    -0.06874165804548 * GRP_RFMstat2  +     0.09298117986488 *
1240217   +        GRP_RFMstat3  +    -0.24177720125931 * GRP_RFMstat4
1240218   +          +    -0.06280623207978 * GRP_RMntFrq2  +     0.01871815739589 *
1240219   +        GRP_RMntFrq3  +    -0.14308267957716 * GRP_RMntFrq4
1240220   +          +     0.34467425877566 * GRP_Recency2  +     0.05820913643645 *
1240221   +        GRP_Recency3  +     -0.0454148085012 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.39171353947494 * GRP_AcceptedCmp52 + 0.47539355981113 *
GRP_Frq2 + 0.13865083322043 * GRP_Frq3 + 0.07826446095659 * GRP_Frq4 + 0.08299165408218 *
GRP_Income2 + 0.19385348399904 * GRP_Income3 + -0.4686130167393 * GRP_Income4 +
0.07036992149948 * GRP_Mnt2 + 0.03891677493503 * GRP_Mnt3 + 0.07820077346387 * GRP_Mnt4 +
0.36400126236983 * GRP_MntFishProducts2 + -0.12626287803422 * GRP_MntFishProducts3 +
-0.42885022606866 * GRP_MntFishProducts4 + -0.08312331608509 * GRP_MntGoldProds2 +
-0.20061238652989 * GRP_MntGoldProds3 + 0.2540651659901 * GRP_MntGoldProds4 +
-0.05377938516186 * GRP_MntMeatProducts2 + -0.20960578757846 * GRP_MntMeatProducts3 +
0.40616704937625 * GRP_MntMeatProducts4 + 0.10444770584156 * GRP_MntWines2 + 0.28632714955895
* GRP_MntWines3 + -0.0752487603973 * GRP_MntWines4 + -0.34375303246386 *
GRP_NumCatalogPurchases3 + 0.09580710843179 * GRP_NumCatalogPurchases4 + -0.07273864038222 *
GRP_NumDistPurchases2 + 0.10966715611059 * GRP_NumDistPurchases3 + -0.043035493739 *
GRP_NumDistPurchases4 + -0.11780256604927 * GRP_NumWebPurchases2 + -0.18165047164828 *
GRP_NumWebPurchases3 + 0.26936545488609 * GRP_NumWebPurchases4 + -0.06874165804548 *
GRP_RFMstat2 + 0.09298117986488 * GRP_RFMstat3 + -0.24177720125931 * GRP_RFMstat4 +
-0.06280623207978 * GRP_RMntFrq2 + 0.01871815739589 * GRP_RMntFrq3 + -0.14308267957716 *
GRP_RMntFrq4 + 0.34467425877566 * GRP_Recency2 + 0.05820913643645 * GRP_Recency3 +
-0.0454148085012 * GRP_Recency4 ;
1240222   +   H13  = H13  +    -0.08768819217047 * GRP_AcceptedCmp52
1240223   +          +     0.44895652806962 * GRP_Frq2  +      0.3800586670059 * GRP_Frq3
1240224   +          +    -0.07849333722318 * GRP_Frq4  +     0.61398939980043 *
1240225   +        GRP_Income2  +     0.47732933105902 * GRP_Income3
1240226   +          +    -0.46767598050409 * GRP_Income4  +     0.00119742402812 *
1240227   +        GRP_Mnt2  +     0.28434487319801 * GRP_Mnt3  +    -0.16337373090226 *
1240228   +        GRP_Mnt4  +     0.24731982804653 * GRP_MntFishProducts2
1240229   +          +     0.07001619920815 * GRP_MntFishProducts3
1240230   +          +     0.07735498521359 * GRP_MntFishProducts4
1240231   +          +    -0.15884098938162 * GRP_MntGoldProds2
1240232   +          +    -0.27657428867783 * GRP_MntGoldProds3
1240233   +          +     -0.1812542301124 * GRP_MntGoldProds4
1240234   +          +    -0.05299867036647 * GRP_MntMeatProducts2
1240235   +          +     0.00010942539908 * GRP_MntMeatProducts3
1240236   +          +     0.03587382246671 * GRP_MntMeatProducts4
1240237   +          +      0.1756484217323 * GRP_MntWines2  +     0.00289944116976 *
1240238   +        GRP_MntWines3  +    -0.03752905583429 * GRP_MntWines4
1240239   +          +     0.14681010085531 * GRP_NumCatalogPurchases3
1240240   +          +    -0.23177792190553 * GRP_NumCatalogPurchases4
1240241   +          +      -0.481887498986 * GRP_NumDistPurchases2
1240242   +          +    -0.09943718589693 * GRP_NumDistPurchases3
1240243   +          +     0.21760620991618 * GRP_NumDistPurchases4
1240244   +          +    -0.09523799103665 * GRP_NumWebPurchases2
1240245   +          +     0.06245025753157 * GRP_NumWebPurchases3
1240246   +          +     0.11312469123111 * GRP_NumWebPurchases4
1240247   +          +     -0.0156924842698 * GRP_RFMstat2  +     0.04329307564553 *
1240248   +        GRP_RFMstat3  +    -0.06522539538042 * GRP_RFMstat4
1240249   +          +     0.03130432577469 * GRP_RMntFrq2  +     0.15385182155627 *
1240250   +        GRP_RMntFrq3  +    -0.05116322369837 * GRP_RMntFrq4
1240251   +          +     0.52385840277978 * GRP_Recency2  +     0.44348058106283 *
1240252   +        GRP_Recency3  +    -0.30003743891847 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08768819217047 * GRP_AcceptedCmp52 + 0.44895652806962 *
GRP_Frq2 + 0.3800586670059 * GRP_Frq3 + -0.07849333722318 * GRP_Frq4 + 0.61398939980043 *
GRP_Income2 + 0.47732933105902 * GRP_Income3 + -0.46767598050409 * GRP_Income4 +
0.00119742402812 * GRP_Mnt2 + 0.28434487319801 * GRP_Mnt3 + -0.16337373090226 * GRP_Mnt4 +
0.24731982804653 * GRP_MntFishProducts2 + 0.07001619920815 * GRP_MntFishProducts3 +
0.07735498521359 * GRP_MntFishProducts4 + -0.15884098938162 * GRP_MntGoldProds2 +
-0.27657428867783 * GRP_MntGoldProds3 + -0.1812542301124 * GRP_MntGoldProds4 +
-0.05299867036647 * GRP_MntMeatProducts2 + 0.00010942539908 * GRP_MntMeatProducts3 +
0.03587382246671 * GRP_MntMeatProducts4 + 0.1756484217323 * GRP_MntWines2 + 0.00289944116976 *
GRP_MntWines3 + -0.03752905583429 * GRP_MntWines4 + 0.14681010085531 *
GRP_NumCatalogPurchases3 + -0.23177792190553 * GRP_NumCatalogPurchases4 + -0.481887498986 *
GRP_NumDistPurchases2 + -0.09943718589693 * GRP_NumDistPurchases3 + 0.21760620991618 *
GRP_NumDistPurchases4 + -0.09523799103665 * GRP_NumWebPurchases2 + 0.06245025753157 *
GRP_NumWebPurchases3 + 0.11312469123111 * GRP_NumWebPurchases4 + -0.0156924842698 *
GRP_RFMstat2 + 0.04329307564553 * GRP_RFMstat3 + -0.06522539538042 * GRP_RFMstat4 +
0.03130432577469 * GRP_RMntFrq2 + 0.15385182155627 * GRP_RMntFrq3 + -0.05116322369837 *
GRP_RMntFrq4 + 0.52385840277978 * GRP_Recency2 + 0.44348058106283 * GRP_Recency3 +
-0.30003743891847 * GRP_Recency4 ;
1240253   +   H14  = H14  +    -0.30891588421078 * GRP_AcceptedCmp52
1240254   +          +     0.10101143238536 * GRP_Frq2  +    -0.03148220138998 * GRP_Frq3
1240255   +          +     0.09807803608029 * GRP_Frq4  +     0.11294471318052 *
1240256   +        GRP_Income2  +      0.0433560034099 * GRP_Income3
1240257   +          +    -0.35503487261838 * GRP_Income4  +     0.15199410100967 *
1240258   +        GRP_Mnt2  +    -0.15675008677561 * GRP_Mnt3  +    -0.06110606567063 *
1240259   +        GRP_Mnt4  +     0.10272197664106 * GRP_MntFishProducts2
1240260   +          +     0.33369645018356 * GRP_MntFishProducts3
1240261   +          +     0.08427214551103 * GRP_MntFishProducts4
1240262   +          +    -0.36187933889617 * GRP_MntGoldProds2
1240263   +          +      0.1522584097588 * GRP_MntGoldProds3
1240264   +          +    -0.18069803129722 * GRP_MntGoldProds4
1240265   +          +    -0.39829328143793 * GRP_MntMeatProducts2
1240266   +          +     0.00511939388608 * GRP_MntMeatProducts3
1240267   +          +      0.0518722466688 * GRP_MntMeatProducts4
1240268   +          +     0.10413724420858 * GRP_MntWines2  +    -0.30183392073068 *
1240269   +        GRP_MntWines3  +    -0.40546180997599 * GRP_MntWines4
1240270   +          +    -0.73564355192687 * GRP_NumCatalogPurchases3
1240271   +          +     0.04239157662699 * GRP_NumCatalogPurchases4
1240272   +          +    -0.61448773428482 * GRP_NumDistPurchases2
1240273   +          +    -0.10817170519054 * GRP_NumDistPurchases3
1240274   +          +    -0.00883878051452 * GRP_NumDistPurchases4
1240275   +          +      0.0024401108853 * GRP_NumWebPurchases2
1240276   +          +     -0.1066188825276 * GRP_NumWebPurchases3
1240277   +          +     -0.2845728776007 * GRP_NumWebPurchases4
1240278   +          +    -0.46846387193519 * GRP_RFMstat2  +     0.01548835288752 *
1240279   +        GRP_RFMstat3  +     0.29056719482503 * GRP_RFMstat4
1240280   +          +     0.13283388675843 * GRP_RMntFrq2  +    -0.01179035894062 *
1240281   +        GRP_RMntFrq3  +    -0.40979674551139 * GRP_RMntFrq4
1240282   +          +     0.39674687653317 * GRP_Recency2  +     0.48674783005161 *
1240283   +        GRP_Recency3  +     0.19384397786172 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30891588421078 * GRP_AcceptedCmp52 + 0.10101143238536 *
GRP_Frq2 + -0.03148220138998 * GRP_Frq3 + 0.09807803608029 * GRP_Frq4 + 0.11294471318052 *
GRP_Income2 + 0.0433560034099 * GRP_Income3 + -0.35503487261838 * GRP_Income4 +
0.15199410100967 * GRP_Mnt2 + -0.15675008677561 * GRP_Mnt3 + -0.06110606567063 * GRP_Mnt4 +
0.10272197664106 * GRP_MntFishProducts2 + 0.33369645018356 * GRP_MntFishProducts3 +
0.08427214551103 * GRP_MntFishProducts4 + -0.36187933889617 * GRP_MntGoldProds2 +
0.1522584097588 * GRP_MntGoldProds3 + -0.18069803129722 * GRP_MntGoldProds4 +
-0.39829328143793 * GRP_MntMeatProducts2 + 0.00511939388608 * GRP_MntMeatProducts3 +
0.0518722466688 * GRP_MntMeatProducts4 + 0.10413724420858 * GRP_MntWines2 + -0.30183392073068
* GRP_MntWines3 + -0.40546180997599 * GRP_MntWines4 + -0.73564355192687 *
GRP_NumCatalogPurchases3 + 0.04239157662699 * GRP_NumCatalogPurchases4 + -0.61448773428482 *
GRP_NumDistPurchases2 + -0.10817170519054 * GRP_NumDistPurchases3 + -0.00883878051452 *
GRP_NumDistPurchases4 + 0.0024401108853 * GRP_NumWebPurchases2 + -0.1066188825276 *
GRP_NumWebPurchases3 + -0.2845728776007 * GRP_NumWebPurchases4 + -0.46846387193519 *
GRP_RFMstat2 + 0.01548835288752 * GRP_RFMstat3 + 0.29056719482503 * GRP_RFMstat4 +
0.13283388675843 * GRP_RMntFrq2 + -0.01179035894062 * GRP_RMntFrq3 + -0.40979674551139 *
GRP_RMntFrq4 + 0.39674687653317 * GRP_Recency2 + 0.48674783005161 * GRP_Recency3 +
0.19384397786172 * GRP_Recency4 ;
1240284   +   H11  =    -1.18381596942405 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18381596942405 + H11 ;
1240285   +   H12  =     0.86336963287203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.86336963287203 + H12 ;
1240286   +   H13  =     -0.9724199391604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.9724199391604 + H13 ;
1240287   +   H14  =     1.35533016839911 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.35533016839911 + H14 ;
1240288   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1240289   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1240290   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1240291   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1240292   +END;
MPRINT(EM_DIAGRAM):   END;
1240293   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1240294   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1240295   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1240296   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1240297   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1240298   +END;
MPRINT(EM_DIAGRAM):   END;
1240299   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1240300   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1240301   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1240302   +
1240303   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1240304   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1240305   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1240306   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1240307   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1240308   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1240309   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1240310   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1240311   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1240312   +end;
MPRINT(EM_DIAGRAM):   end;
1240313   +else do;
MPRINT(EM_DIAGRAM):   else do;
1240314   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1240315   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1240316   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1240317   +   end;
MPRINT(EM_DIAGRAM):   end;
1240318   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1240319   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1240320   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1240321   +   end;
MPRINT(EM_DIAGRAM):   end;
1240322   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1240323   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1240324   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1240325   +   end;
MPRINT(EM_DIAGRAM):   end;
1240326   +end;
MPRINT(EM_DIAGRAM):   end;
1240327   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1240328   +   P_DepVar1  =     2.12648206014408 * H11  +      1.4206902210932 * H12
1240329   +          +     1.21164854880393 * H13  +      1.5803543453738 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.12648206014408 * H11 + 1.4206902210932 * H12 +
1.21164854880393 * H13 + 1.5803543453738 * H14 ;
1240330   +   P_DepVar1  =    -1.66515506353131 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66515506353131 + P_DepVar1 ;
1240331   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1240332   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1240333   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1240334   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1240335   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1240336   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1240337   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1240338   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1240339   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1240340   +END;
MPRINT(EM_DIAGRAM):   END;
1240341   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1240342   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1240343   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1240344   +END;
MPRINT(EM_DIAGRAM):   END;
1240345   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1240346   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1240347   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1240348   +END;
MPRINT(EM_DIAGRAM):   END;
1240349   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1240350   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1240351   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1240352   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1240353   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1240354   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1240355   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1240356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1240357   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1240358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1240359   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1240360   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1240361   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1240362   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1240363   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1240364   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1240365   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1240366   +END;
MPRINT(EM_DIAGRAM):   END;
1240367   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1240368   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1240369   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1240370   +drop
1240371   +H11
1240372   +H12
1240373   +H13
1240374   +H14
1240375   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1240376   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1240377   +* Renaming variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural21;
1240378   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1240379   +* Renaming Posterior variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural21;
1240380   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1240381   +drop Neural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar1;
1240382   +Neural21_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar1 = P_DepVar1;
1240383   +drop Neural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar0;
1240384   +Neural21_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar0 = P_DepVar0;
1240385   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1240386   +* Renaming _WARN_ variable for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural21;
1240387   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1240388   +length Neural21_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural21_WARN_ $4;
1240389   +drop Neural21_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural21_WARN_;
1240390   +Neural21_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural21_WARN_ = _WARN_;
1240391   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1240392   +* Ensmbl7: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring Code of model 5 of 5;
1240393   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1240394   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1240395   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1240396   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1240397   +* NODE: Reg7;
MPRINT(EM_DIAGRAM):   * NODE: Reg7;
1240398   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1240399   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1240400   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1240401   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1240402   +
1240403   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1240404   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1240405   +
1240406   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1240407   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1240408   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1240409   +array REG7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG7DRF [2] $12 _temporary_ ('1' '0' );
1240410   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1240411   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1240412   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1240413   +ARRAY REG7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG7DRU[2] _TEMPORARY_ (1 0);
1240414   +
1240415   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1240416   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1240417   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1240418   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1240419   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1240420   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1240421   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1240422   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1240423   +end;
MPRINT(EM_DIAGRAM):   end;
1240424   +else do;
MPRINT(EM_DIAGRAM):   else do;
1240425   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1240426   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1240427   +   end;
MPRINT(EM_DIAGRAM):   end;
1240428   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1240429   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1240430   +   end;
MPRINT(EM_DIAGRAM):   end;
1240431   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1240432   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1240433   +   end;
MPRINT(EM_DIAGRAM):   end;
1240434   +end;
MPRINT(EM_DIAGRAM):   end;
1240435   +
1240436   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1240437   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1240438   +
1240439   +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
1240440   +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
1240441   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1240442   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240443   +end;
MPRINT(EM_DIAGRAM):   end;
1240444   +
1240445   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1240446   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1240447   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1240448   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1240449   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1240450   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240451   +end;
MPRINT(EM_DIAGRAM):   end;
1240452   +else do;
MPRINT(EM_DIAGRAM):   else do;
1240453   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1240454   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1240455   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1240456   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1240457   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1240458   +   end;
MPRINT(EM_DIAGRAM):   end;
1240459   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1240460   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1240461   +   end;
MPRINT(EM_DIAGRAM):   end;
1240462   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1240463   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1240464   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1240465   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240466   +   end;
MPRINT(EM_DIAGRAM):   end;
1240467   +end;
MPRINT(EM_DIAGRAM):   end;
1240468   +
1240469   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1240470   +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
1240471   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1240472   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1240473   +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1240474   +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1240475   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1240476   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240477   +end;
MPRINT(EM_DIAGRAM):   end;
1240478   +else do;
MPRINT(EM_DIAGRAM):   else do;
1240479   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1240480   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1240481   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1240482   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1240483   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1240484   +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
1240485   +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
1240486   +   end;
MPRINT(EM_DIAGRAM):   end;
1240487   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1240488   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1240489   +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
1240490   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1240491   +   end;
MPRINT(EM_DIAGRAM):   end;
1240492   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1240493   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1240494   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1240495   +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
1240496   +   end;
MPRINT(EM_DIAGRAM):   end;
1240497   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1240498   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1240499   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1240500   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1240501   +   end;
MPRINT(EM_DIAGRAM):   end;
1240502   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1240503   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1240504   +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1240505   +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1240506   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1240507   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240508   +   end;
MPRINT(EM_DIAGRAM):   end;
1240509   +end;
MPRINT(EM_DIAGRAM):   end;
1240510   +
1240511   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1240512   +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
1240513   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1240514   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1240515   +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1240516   +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1240517   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1240518   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240519   +end;
MPRINT(EM_DIAGRAM):   end;
1240520   +else do;
MPRINT(EM_DIAGRAM):   else do;
1240521   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1240522   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1240523   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1240524   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1240525   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1240526   +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
1240527   +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
1240528   +   end;
MPRINT(EM_DIAGRAM):   end;
1240529   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1240530   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1240531   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1240532   +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
1240533   +   end;
MPRINT(EM_DIAGRAM):   end;
1240534   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1240535   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1240536   +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
1240537   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1240538   +   end;
MPRINT(EM_DIAGRAM):   end;
1240539   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1240540   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1240541   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1240542   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1240543   +   end;
MPRINT(EM_DIAGRAM):   end;
1240544   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1240545   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1240546   +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1240547   +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1240548   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1240549   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240550   +   end;
MPRINT(EM_DIAGRAM):   end;
1240551   +end;
MPRINT(EM_DIAGRAM):   end;
1240552   +
1240553   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1240554   +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
1240555   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1240556   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1240557   +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1240558   +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1240559   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1240560   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240561   +end;
MPRINT(EM_DIAGRAM):   end;
1240562   +else do;
MPRINT(EM_DIAGRAM):   else do;
1240563   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1240564   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1240565   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1240566   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1240567   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1240568   +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
1240569   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1240570   +   end;
MPRINT(EM_DIAGRAM):   end;
1240571   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1240572   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1240573   +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
1240574   +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
1240575   +   end;
MPRINT(EM_DIAGRAM):   end;
1240576   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1240577   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1240578   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1240579   +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
1240580   +   end;
MPRINT(EM_DIAGRAM):   end;
1240581   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1240582   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1240583   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1240584   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1240585   +   end;
MPRINT(EM_DIAGRAM):   end;
1240586   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1240587   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1240588   +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1240589   +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1240590   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1240591   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240592   +   end;
MPRINT(EM_DIAGRAM):   end;
1240593   +end;
MPRINT(EM_DIAGRAM):   end;
1240594   +
1240595   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1240596   +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
1240597   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1240598   +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1240599   +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1240600   +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1240601   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1240602   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240603   +end;
MPRINT(EM_DIAGRAM):   end;
1240604   +else do;
MPRINT(EM_DIAGRAM):   else do;
1240605   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1240606   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1240607   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1240608   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1240609   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1240610   +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
1240611   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1240612   +   end;
MPRINT(EM_DIAGRAM):   end;
1240613   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1240614   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1240615   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1240616   +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
1240617   +   end;
MPRINT(EM_DIAGRAM):   end;
1240618   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1240619   +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
1240620   +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
1240621   +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
1240622   +   end;
MPRINT(EM_DIAGRAM):   end;
1240623   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1240624   +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
1240625   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1240626   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1240627   +   end;
MPRINT(EM_DIAGRAM):   end;
1240628   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1240629   +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1240630   +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1240631   +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1240632   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1240633   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240634   +   end;
MPRINT(EM_DIAGRAM):   end;
1240635   +end;
MPRINT(EM_DIAGRAM):   end;
1240636   +
1240637   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1240638   +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
1240639   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1240640   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1240641   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1240642   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1240643   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1240644   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240645   +end;
MPRINT(EM_DIAGRAM):   end;
1240646   +else do;
MPRINT(EM_DIAGRAM):   else do;
1240647   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1240648   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1240649   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1240650   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1240651   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1240652   +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1240653   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1240654   +   end;
MPRINT(EM_DIAGRAM):   end;
1240655   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1240656   +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1240657   +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1240658   +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1240659   +   end;
MPRINT(EM_DIAGRAM):   end;
1240660   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1240661   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1240662   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1240663   +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1240664   +   end;
MPRINT(EM_DIAGRAM):   end;
1240665   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1240666   +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1240667   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1240668   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1240669   +   end;
MPRINT(EM_DIAGRAM):   end;
1240670   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1240671   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1240672   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1240673   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1240674   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1240675   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240676   +   end;
MPRINT(EM_DIAGRAM):   end;
1240677   +end;
MPRINT(EM_DIAGRAM):   end;
1240678   +
1240679   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1240680   +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
1240681   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1240682   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1240683   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1240684   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1240685   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240686   +end;
MPRINT(EM_DIAGRAM):   end;
1240687   +else do;
MPRINT(EM_DIAGRAM):   else do;
1240688   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1240689   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1240690   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1240691   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1240692   +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1240693   +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1240694   +   end;
MPRINT(EM_DIAGRAM):   end;
1240695   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1240696   +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1240697   +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1240698   +   end;
MPRINT(EM_DIAGRAM):   end;
1240699   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1240700   +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1240701   +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1240702   +   end;
MPRINT(EM_DIAGRAM):   end;
1240703   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1240704   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1240705   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1240706   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1240707   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240708   +   end;
MPRINT(EM_DIAGRAM):   end;
1240709   +end;
MPRINT(EM_DIAGRAM):   end;
1240710   +
1240711   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1240712   +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
1240713   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1240714   +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1240715   +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1240716   +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1240717   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1240718   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240719   +end;
MPRINT(EM_DIAGRAM):   end;
1240720   +else do;
MPRINT(EM_DIAGRAM):   else do;
1240721   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1240722   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1240723   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1240724   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1240725   +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
1240726   +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
1240727   +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
1240728   +   end;
MPRINT(EM_DIAGRAM):   end;
1240729   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1240730   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1240731   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1240732   +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
1240733   +   end;
MPRINT(EM_DIAGRAM):   end;
1240734   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1240735   +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
1240736   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1240737   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1240738   +   end;
MPRINT(EM_DIAGRAM):   end;
1240739   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1240740   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1240741   +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
1240742   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1240743   +   end;
MPRINT(EM_DIAGRAM):   end;
1240744   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1240745   +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1240746   +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1240747   +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1240748   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1240749   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240750   +   end;
MPRINT(EM_DIAGRAM):   end;
1240751   +end;
MPRINT(EM_DIAGRAM):   end;
1240752   +
1240753   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1240754   +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
1240755   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1240756   +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1240757   +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1240758   +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1240759   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1240760   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240761   +end;
MPRINT(EM_DIAGRAM):   end;
1240762   +else do;
MPRINT(EM_DIAGRAM):   else do;
1240763   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1240764   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1240765   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1240766   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1240767   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1240768   +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
1240769   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1240770   +   end;
MPRINT(EM_DIAGRAM):   end;
1240771   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1240772   +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
1240773   +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
1240774   +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
1240775   +   end;
MPRINT(EM_DIAGRAM):   end;
1240776   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1240777   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1240778   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1240779   +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
1240780   +   end;
MPRINT(EM_DIAGRAM):   end;
1240781   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1240782   +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
1240783   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1240784   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1240785   +   end;
MPRINT(EM_DIAGRAM):   end;
1240786   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1240787   +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1240788   +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1240789   +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1240790   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1240791   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240792   +   end;
MPRINT(EM_DIAGRAM):   end;
1240793   +end;
MPRINT(EM_DIAGRAM):   end;
1240794   +
1240795   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1240796   +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
1240797   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1240798   +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1240799   +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1240800   +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1240801   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1240802   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240803   +end;
MPRINT(EM_DIAGRAM):   end;
1240804   +else do;
MPRINT(EM_DIAGRAM):   else do;
1240805   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1240806   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1240807   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1240808   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1240809   +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
1240810   +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
1240811   +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
1240812   +   end;
MPRINT(EM_DIAGRAM):   end;
1240813   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1240814   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1240815   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1240816   +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
1240817   +   end;
MPRINT(EM_DIAGRAM):   end;
1240818   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1240819   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1240820   +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
1240821   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1240822   +   end;
MPRINT(EM_DIAGRAM):   end;
1240823   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1240824   +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
1240825   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1240826   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1240827   +   end;
MPRINT(EM_DIAGRAM):   end;
1240828   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1240829   +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1240830   +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1240831   +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1240832   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1240833   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1240834   +   end;
MPRINT(EM_DIAGRAM):   end;
1240835   +end;
MPRINT(EM_DIAGRAM):   end;
1240836   +
1240837   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1240838   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1240839   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1240840   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1240841   +   goto REG7DR1;
MPRINT(EM_DIAGRAM):   goto REG7DR1;
1240842   +end;
MPRINT(EM_DIAGRAM):   end;
1240843   +
1240844   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1240845   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1240846   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1240847   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1240848   +
1240849   +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
1240850   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1240851   +_LP0 = _LP0 + (    -0.5862337869734) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5862337869734) * _TEMP * _1_0;
1240852   +
1240853   +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
1240854   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1240855   +_LP0 = _LP0 + (     1.0565693238421) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.0565693238421) * _TEMP * _2_0;
1240856   +_LP0 = _LP0 + (     0.0911336121088) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0911336121088) * _TEMP * _2_1;
1240857   +_LP0 = _LP0 + (   -0.37448220273968) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.37448220273968) * _TEMP * _2_2;
1240858   +
1240859   +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
1240860   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1240861   +_LP0 = _LP0 + (    0.51658584340625) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51658584340625) * _TEMP * _3_0;
1240862   +_LP0 = _LP0 + (    0.48505772489262) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.48505772489262) * _TEMP * _3_1;
1240863   +_LP0 = _LP0 + (   -0.50854630566525) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.50854630566525) * _TEMP * _3_2;
1240864   +
1240865   +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
1240866   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1240867   +_LP0 = _LP0 + (    0.38994498659965) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38994498659965) * _TEMP * _5_0;
1240868   +_LP0 = _LP0 + (    0.03146325606998) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03146325606998) * _TEMP * _5_1;
1240869   +_LP0 = _LP0 + (   -0.05372169204837) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05372169204837) * _TEMP * _5_2;
1240870   +
1240871   +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
1240872   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1240873   +_LP0 = _LP0 + (   -0.79733877870259) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.79733877870259) * _TEMP * _7_0;
1240874   +_LP0 = _LP0 + (   -0.15003183676105) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.15003183676105) * _TEMP * _7_1;
1240875   +_LP0 = _LP0 + (    0.31191597751128) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.31191597751128) * _TEMP * _7_2;
1240876   +
1240877   +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
1240878   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1240879   +_LP0 = _LP0 + (    0.53434964580952) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53434964580952) * _TEMP * _8_0;
1240880   +_LP0 = _LP0 + (    0.22167667253067) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.22167667253067) * _TEMP * _8_1;
1240881   +_LP0 = _LP0 + (     -0.305489910536) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.305489910536) * _TEMP * _8_2;
1240882   +
1240883   +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
1240884   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1240885   +_LP0 = _LP0 + (     -0.629899271763) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.629899271763) * _TEMP * _9_0;
1240886   +_LP0 = _LP0 + (    0.03240844395355) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03240844395355) * _TEMP * _9_1;
1240887   +
1240888   +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
1240889   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1240890   +_LP0 = _LP0 + (   -1.42622019893988) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.42622019893988) * _TEMP * _10_0;
1240891   +_LP0 = _LP0 + (    0.05466498093201) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05466498093201) * _TEMP * _10_1;
1240892   +_LP0 = _LP0 + (    0.25182489000571) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25182489000571) * _TEMP * _10_2;
1240893   +
1240894   +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
1240895   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1240896   +_LP0 = _LP0 + (   -0.14979245852204) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14979245852204) * _TEMP * _13_0;
1240897   +_LP0 = _LP0 + (     0.0056028143187) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0056028143187) * _TEMP * _13_1;
1240898   +_LP0 = _LP0 + (   -0.23315930182624) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23315930182624) * _TEMP * _13_2;
1240899   +
1240900   +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
1240901   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1240902   +_LP0 = _LP0 + (    1.06974976023651) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.06974976023651) * _TEMP * _14_0;
1240903   +_LP0 = _LP0 + (    0.29139327664531) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29139327664531) * _TEMP * _14_1;
1240904   +_LP0 = _LP0 + (   -0.34742570667526) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.34742570667526) * _TEMP * _14_2;
1240905   +
1240906   +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
1240907   +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
1240908   +_LP0 = _LP0 + (    0.01045707390649 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01045707390649 * _TEMP);
1240909   +
1240910   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1240911   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1240912   +_P0 = probnorm((   -21.5603180840073) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -21.5603180840073) + _LP0);
1240913   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1240914   +
1240915   +REG7DR1:
1240916   +
1240917   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG7DR1: *** Residuals;
1240918   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1240919   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1240920   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1240921   +end;
MPRINT(EM_DIAGRAM):   end;
1240922   +else do;
MPRINT(EM_DIAGRAM):   else do;
1240923   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1240924   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1240925   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1240926   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1240927   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1240928   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1240929   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1240930   +   end;
MPRINT(EM_DIAGRAM):   end;
1240931   +end;
MPRINT(EM_DIAGRAM):   end;
1240932   +
1240933   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1240934   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1240935   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1240936   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1240937   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1240938   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1240939   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1240940   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1240941   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1240942   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1240943   +end;
MPRINT(EM_DIAGRAM):   end;
1240944   +I_DepVar = REG7DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG7DRF[_IY];
1240945   +U_DepVar = REG7DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG7DRU[_IY];
1240946   +
1240947   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1240948   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1240949   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1240950   +* Renaming variables for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg7;
1240951   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1240952   +* Renaming Posterior variables for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg7;
1240953   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1240954   +drop Reg7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg7_P_DepVar1;
1240955   +Reg7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg7_P_DepVar1 = P_DepVar1;
1240956   +drop Reg7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg7_P_DepVar0;
1240957   +Reg7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg7_P_DepVar0 = P_DepVar0;
1240958   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1240959   +* Renaming _WARN_ variable for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg7;
1240960   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1240961   +length Reg7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg7_WARN_ $4;
1240962   +drop Reg7_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg7_WARN_;
1240963   +Reg7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg7_WARN_ = _WARN_;
1240964   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1240965   +* Ensmbl7: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Average Posteriors of 5 models;
1240966   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1240967   +P_DepVar1 = (
1240968   +Reg3_P_DepVar1 +
1240969   +Neural18_P_DepVar1 +
1240970   +Neural22_P_DepVar1 +
1240971   +Neural21_P_DepVar1 +
1240972   +Reg7_P_DepVar1
1240973   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg3_P_DepVar1 + Neural18_P_DepVar1 + Neural22_P_DepVar1 +
Neural21_P_DepVar1 + Reg7_P_DepVar1 )/5;
1240974   +P_DepVar0 = (
1240975   +Reg3_P_DepVar0 +
1240976   +Neural18_P_DepVar0 +
1240977   +Neural22_P_DepVar0 +
1240978   +Neural21_P_DepVar0 +
1240979   +Reg7_P_DepVar0
1240980   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg3_P_DepVar0 + Neural18_P_DepVar0 + Neural22_P_DepVar0 +
Neural21_P_DepVar0 + Reg7_P_DepVar0 )/5;
1240981   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1240982   +* Ensmbl7: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Computing Classification Vars;
1240983   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1240984   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1240985   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1240986   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1240987   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1240988   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1240989   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1240990   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1240991   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1240992   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1240993   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1240994   +end;
MPRINT(EM_DIAGRAM):   end;
1240995   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1240996   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1240997   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1240998   +end;
MPRINT(EM_DIAGRAM):   end;
1240999   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1241000   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241001   +* Ensmbl7: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Producing Unformatted variable;
1241002   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241003   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1241004   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1241005   +else
1241006   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1241007   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241008   +* Ensmbl7: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Computing _WARN_ Variable;
1241009   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241010   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1241011   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1241012   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1241013   +if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1241014   +if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1241015   +if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1241016   +if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1241017   +if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1241017  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1241018   +if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1241018  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1241019   +if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1241019  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1241020   +if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1241020  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1241021   +if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1241021  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1241022   +if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1241022  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1241023   +if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1241023  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1241024   +if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1241024  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1241025   +if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1241025  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1241026   +if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1241026  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1241027   +if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1241027  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1241028   +if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1241028  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1241029   +if index(REG7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1241030   +if index(REG7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1241031   +if index(REG7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1241032   +if index(REG7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1241033   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241034   +* Ensmbl7: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Computing Residual Vars;
1241035   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241036   +if
1241037   +F_DepVar NE '1'
1241038   +AND F_DepVar NE '0'
1241039   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1241040   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1241041   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1241042   +end;
MPRINT(EM_DIAGRAM):   end;
1241043   +else do;
MPRINT(EM_DIAGRAM):   else do;
1241044   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1241045   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1241046   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1241047   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1241048   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1241049   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1241050   +END;
MPRINT(EM_DIAGRAM):   END;
1241051   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1241052    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL7_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG3_VALIDATE.VIEW used (Total process time):
      real time           0.26 seconds
      cpu time            0.14 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.28 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1241053    quit;
1241054    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl7_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl7_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl7_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1241114    filename _pref
1241114  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMPUBLISHSCORE.sas";
1241115    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1241116    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMPUBLISHSCORE.sas.
1241117   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1241118   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1241119   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1241120   +
1241121   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1241122   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1241123   +
1241124   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1241125   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1241126   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1241127   +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
1241128   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1241129   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1241130   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1241131   +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
1241132   +
1241133   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1241134   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1241135   +
1241136   +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
1241137   +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
1241138   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1241139   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241140   +end;
MPRINT(EM_DIAGRAM):   end;
1241141   +
1241142   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1241143   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1241144   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1241145   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1241146   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1241147   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241148   +end;
MPRINT(EM_DIAGRAM):   end;
1241149   +else do;
MPRINT(EM_DIAGRAM):   else do;
1241150   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1241151   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1241152   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1241153   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1241154   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1241155   +   end;
MPRINT(EM_DIAGRAM):   end;
1241156   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1241157   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1241158   +   end;
MPRINT(EM_DIAGRAM):   end;
1241159   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1241160   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1241161   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1241162   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241163   +   end;
MPRINT(EM_DIAGRAM):   end;
1241164   +end;
MPRINT(EM_DIAGRAM):   end;
1241165   +
1241166   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1241167   +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
1241168   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1241169   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1241170   +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1241171   +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1241172   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1241173   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241174   +end;
MPRINT(EM_DIAGRAM):   end;
1241175   +else do;
MPRINT(EM_DIAGRAM):   else do;
1241176   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1241177   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1241178   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1241179   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1241180   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1241181   +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
1241182   +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
1241183   +   end;
MPRINT(EM_DIAGRAM):   end;
1241184   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1241185   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1241186   +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
1241187   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1241188   +   end;
MPRINT(EM_DIAGRAM):   end;
1241189   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1241190   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1241191   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1241192   +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
1241193   +   end;
MPRINT(EM_DIAGRAM):   end;
1241194   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1241195   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1241196   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1241197   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1241198   +   end;
MPRINT(EM_DIAGRAM):   end;
1241199   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1241200   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1241201   +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1241202   +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1241203   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1241204   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241205   +   end;
MPRINT(EM_DIAGRAM):   end;
1241206   +end;
MPRINT(EM_DIAGRAM):   end;
1241207   +
1241208   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1241209   +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
1241210   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1241211   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1241212   +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1241213   +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1241214   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1241215   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241216   +end;
MPRINT(EM_DIAGRAM):   end;
1241217   +else do;
MPRINT(EM_DIAGRAM):   else do;
1241218   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1241219   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1241220   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1241221   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1241222   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1241223   +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
1241224   +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
1241225   +   end;
MPRINT(EM_DIAGRAM):   end;
1241226   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1241227   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1241228   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1241229   +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
1241230   +   end;
MPRINT(EM_DIAGRAM):   end;
1241231   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1241232   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1241233   +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
1241234   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1241235   +   end;
MPRINT(EM_DIAGRAM):   end;
1241236   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1241237   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1241238   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1241239   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1241240   +   end;
MPRINT(EM_DIAGRAM):   end;
1241241   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1241242   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1241243   +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1241244   +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1241245   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1241246   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241247   +   end;
MPRINT(EM_DIAGRAM):   end;
1241248   +end;
MPRINT(EM_DIAGRAM):   end;
1241249   +
1241250   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1241251   +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
1241252   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1241253   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1241254   +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1241255   +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1241256   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1241257   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241258   +end;
MPRINT(EM_DIAGRAM):   end;
1241259   +else do;
MPRINT(EM_DIAGRAM):   else do;
1241260   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1241261   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1241262   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1241263   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1241264   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1241265   +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
1241266   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1241267   +   end;
MPRINT(EM_DIAGRAM):   end;
1241268   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1241269   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1241270   +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
1241271   +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
1241272   +   end;
MPRINT(EM_DIAGRAM):   end;
1241273   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1241274   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1241275   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1241276   +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
1241277   +   end;
MPRINT(EM_DIAGRAM):   end;
1241278   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1241279   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1241280   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1241281   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1241282   +   end;
MPRINT(EM_DIAGRAM):   end;
1241283   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1241284   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1241285   +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1241286   +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1241287   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1241288   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241289   +   end;
MPRINT(EM_DIAGRAM):   end;
1241290   +end;
MPRINT(EM_DIAGRAM):   end;
1241291   +
1241292   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1241293   +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
1241294   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1241295   +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1241296   +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1241297   +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1241298   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1241299   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241300   +end;
MPRINT(EM_DIAGRAM):   end;
1241301   +else do;
MPRINT(EM_DIAGRAM):   else do;
1241302   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1241303   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1241304   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1241305   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1241306   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1241307   +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
1241308   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1241309   +   end;
MPRINT(EM_DIAGRAM):   end;
1241310   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1241311   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1241312   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1241313   +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
1241314   +   end;
MPRINT(EM_DIAGRAM):   end;
1241315   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1241316   +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
1241317   +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
1241318   +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
1241319   +   end;
MPRINT(EM_DIAGRAM):   end;
1241320   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1241321   +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
1241322   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1241323   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1241324   +   end;
MPRINT(EM_DIAGRAM):   end;
1241325   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1241326   +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1241327   +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1241328   +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1241329   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1241330   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241331   +   end;
MPRINT(EM_DIAGRAM):   end;
1241332   +end;
MPRINT(EM_DIAGRAM):   end;
1241333   +
1241334   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1241335   +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
1241336   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1241337   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1241338   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1241339   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1241340   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1241341   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241342   +end;
MPRINT(EM_DIAGRAM):   end;
1241343   +else do;
MPRINT(EM_DIAGRAM):   else do;
1241344   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1241345   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1241346   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1241347   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1241348   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1241349   +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1241350   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1241351   +   end;
MPRINT(EM_DIAGRAM):   end;
1241352   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1241353   +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1241354   +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1241355   +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1241356   +   end;
MPRINT(EM_DIAGRAM):   end;
1241357   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1241358   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1241359   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1241360   +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1241361   +   end;
MPRINT(EM_DIAGRAM):   end;
1241362   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1241363   +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1241364   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1241365   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1241366   +   end;
MPRINT(EM_DIAGRAM):   end;
1241367   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1241368   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1241369   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1241370   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1241371   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1241372   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241373   +   end;
MPRINT(EM_DIAGRAM):   end;
1241374   +end;
MPRINT(EM_DIAGRAM):   end;
1241375   +
1241376   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1241377   +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
1241378   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1241379   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1241380   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1241381   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1241382   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241383   +end;
MPRINT(EM_DIAGRAM):   end;
1241384   +else do;
MPRINT(EM_DIAGRAM):   else do;
1241385   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1241386   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1241387   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1241388   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1241389   +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1241390   +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1241391   +   end;
MPRINT(EM_DIAGRAM):   end;
1241392   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1241393   +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1241394   +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1241395   +   end;
MPRINT(EM_DIAGRAM):   end;
1241396   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1241397   +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1241398   +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1241399   +   end;
MPRINT(EM_DIAGRAM):   end;
1241400   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1241401   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1241402   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1241403   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1241404   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241405   +   end;
MPRINT(EM_DIAGRAM):   end;
1241406   +end;
MPRINT(EM_DIAGRAM):   end;
1241407   +
1241408   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1241409   +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
1241410   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1241411   +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1241412   +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1241413   +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1241414   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1241415   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241416   +end;
MPRINT(EM_DIAGRAM):   end;
1241417   +else do;
MPRINT(EM_DIAGRAM):   else do;
1241418   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1241419   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1241420   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1241421   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1241422   +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
1241423   +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
1241424   +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
1241425   +   end;
MPRINT(EM_DIAGRAM):   end;
1241426   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1241427   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1241428   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1241429   +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
1241430   +   end;
MPRINT(EM_DIAGRAM):   end;
1241431   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1241432   +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
1241433   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1241434   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1241435   +   end;
MPRINT(EM_DIAGRAM):   end;
1241436   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1241437   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1241438   +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
1241439   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1241440   +   end;
MPRINT(EM_DIAGRAM):   end;
1241441   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1241442   +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1241443   +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1241444   +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1241445   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1241446   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241447   +   end;
MPRINT(EM_DIAGRAM):   end;
1241448   +end;
MPRINT(EM_DIAGRAM):   end;
1241449   +
1241450   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1241451   +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
1241452   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1241453   +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1241454   +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1241455   +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1241456   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1241457   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241458   +end;
MPRINT(EM_DIAGRAM):   end;
1241459   +else do;
MPRINT(EM_DIAGRAM):   else do;
1241460   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1241461   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1241462   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1241463   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1241464   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1241465   +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
1241466   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1241467   +   end;
MPRINT(EM_DIAGRAM):   end;
1241468   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1241469   +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
1241470   +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
1241471   +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
1241472   +   end;
MPRINT(EM_DIAGRAM):   end;
1241473   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1241474   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1241475   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1241476   +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
1241477   +   end;
MPRINT(EM_DIAGRAM):   end;
1241478   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1241479   +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
1241480   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1241481   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1241482   +   end;
MPRINT(EM_DIAGRAM):   end;
1241483   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1241484   +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1241485   +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1241486   +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1241487   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1241488   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241489   +   end;
MPRINT(EM_DIAGRAM):   end;
1241490   +end;
MPRINT(EM_DIAGRAM):   end;
1241491   +
1241492   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1241493   +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
1241494   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1241495   +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1241496   +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1241497   +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1241498   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1241499   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241500   +end;
MPRINT(EM_DIAGRAM):   end;
1241501   +else do;
MPRINT(EM_DIAGRAM):   else do;
1241502   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1241503   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1241504   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1241505   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1241506   +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
1241507   +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
1241508   +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
1241509   +   end;
MPRINT(EM_DIAGRAM):   end;
1241510   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1241511   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1241512   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1241513   +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
1241514   +   end;
MPRINT(EM_DIAGRAM):   end;
1241515   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1241516   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1241517   +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
1241518   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1241519   +   end;
MPRINT(EM_DIAGRAM):   end;
1241520   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1241521   +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
1241522   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1241523   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1241524   +   end;
MPRINT(EM_DIAGRAM):   end;
1241525   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1241526   +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1241527   +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1241528   +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1241529   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1241530   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1241531   +   end;
MPRINT(EM_DIAGRAM):   end;
1241532   +end;
MPRINT(EM_DIAGRAM):   end;
1241533   +
1241534   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1241535   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1241536   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1241537   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1241538   +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
1241539   +end;
MPRINT(EM_DIAGRAM):   end;
1241540   +
1241541   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1241542   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1241543   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1241544   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1241545   +
1241546   +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
1241547   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1241548   +_LP0 = _LP0 + (    -1.0202735142883) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0202735142883) * _TEMP * _1_0;
1241549   +
1241550   +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
1241551   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1241552   +_LP0 = _LP0 + (    1.96135216788678) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.96135216788678) * _TEMP * _2_0;
1241553   +_LP0 = _LP0 + (    0.16052598190077) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16052598190077) * _TEMP * _2_1;
1241554   +_LP0 = _LP0 + (   -0.70902116030282) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70902116030282) * _TEMP * _2_2;
1241555   +
1241556   +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
1241557   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1241558   +_LP0 = _LP0 + (    0.93791732843579) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.93791732843579) * _TEMP * _3_0;
1241559   +_LP0 = _LP0 + (    0.86323578315443) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.86323578315443) * _TEMP * _3_1;
1241560   +_LP0 = _LP0 + (   -0.93701763797667) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.93701763797667) * _TEMP * _3_2;
1241561   +
1241562   +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
1241563   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1241564   +_LP0 = _LP0 + (     0.6826557743697) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.6826557743697) * _TEMP * _5_0;
1241565   +_LP0 = _LP0 + (    0.02285788144903) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02285788144903) * _TEMP * _5_1;
1241566   +_LP0 = _LP0 + (   -0.06609528477722) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06609528477722) * _TEMP * _5_2;
1241567   +
1241568   +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
1241569   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1241570   +_LP0 = _LP0 + (   -1.44582935530291) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.44582935530291) * _TEMP * _7_0;
1241571   +_LP0 = _LP0 + (   -0.21318741203534) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21318741203534) * _TEMP * _7_1;
1241572   +_LP0 = _LP0 + (    0.53364168349885) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53364168349885) * _TEMP * _7_2;
1241573   +
1241574   +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
1241575   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1241576   +_LP0 = _LP0 + (    0.98273321190928) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.98273321190928) * _TEMP * _8_0;
1241577   +_LP0 = _LP0 + (      0.432298434838) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.432298434838) * _TEMP * _8_1;
1241578   +_LP0 = _LP0 + (   -0.57365050311778) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57365050311778) * _TEMP * _8_2;
1241579   +
1241580   +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
1241581   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1241582   +_LP0 = _LP0 + (   -1.15145054763997) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.15145054763997) * _TEMP * _9_0;
1241583   +_LP0 = _LP0 + (    0.03505087718511) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03505087718511) * _TEMP * _9_1;
1241584   +
1241585   +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
1241586   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1241587   +_LP0 = _LP0 + (   -2.65890505222228) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65890505222228) * _TEMP * _10_0;
1241588   +_LP0 = _LP0 + (     0.0545239904585) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0545239904585) * _TEMP * _10_1;
1241589   +_LP0 = _LP0 + (    0.51990032635141) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51990032635141) * _TEMP * _10_2;
1241590   +
1241591   +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
1241592   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1241593   +_LP0 = _LP0 + (   -0.25494301084801) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25494301084801) * _TEMP * _13_0;
1241594   +_LP0 = _LP0 + (    0.02802747054775) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02802747054775) * _TEMP * _13_1;
1241595   +_LP0 = _LP0 + (   -0.40273598284868) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40273598284868) * _TEMP * _13_2;
1241596   +
1241597   +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
1241598   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1241599   +_LP0 = _LP0 + (    1.94607798996867) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.94607798996867) * _TEMP * _14_0;
1241600   +_LP0 = _LP0 + (    0.53257949184685) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53257949184685) * _TEMP * _14_1;
1241601   +_LP0 = _LP0 + (   -0.62881974341908) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.62881974341908) * _TEMP * _14_2;
1241602   +
1241603   +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
1241604   +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
1241605   +_LP0 = _LP0 + (    0.01824806947783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01824806947783 * _TEMP);
1241606   +
1241607   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1241608   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1241609   +_TEMP =    -37.6992883159803 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -37.6992883159803 + _LP0;
1241610   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1241611   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1241612   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1241613   +end;
MPRINT(EM_DIAGRAM):   end;
1241614   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1241615   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1241616   +
1241617   +REG3DR1:
1241618   +
1241619   +
1241620   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Posterior Probabilities and Predicted Level;
1241621   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1241622   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1241623   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1241624   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1241625   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1241626   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1241627   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1241628   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1241629   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1241630   +end;
MPRINT(EM_DIAGRAM):   end;
1241631   +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
1241632   +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
1241633   +
1241634   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1241635   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1241636   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1241637    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1241638    quit;
1241639    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1241640    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1241641    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1241642    retain ID 2 Node "Reg3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg3";
1241643    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1241644    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 874 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 874 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1241645    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1241646    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1241647    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 874 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 874 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1241648    proc sort data=EMWS8.Reg3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg3_variableset out=_temp2(keep=NAME CREATOR);
1241649    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1241650    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.REG3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1241651    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1241652    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1241653    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1241654    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1241655    proc contents data=EMWS8.Reg3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg3_train out=_meta(keep=NAME) noprint;
1241656    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1241657    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1241658    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1241659    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1241660    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1241661    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1241662    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1241663    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1241664    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1241665    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1241665  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 434 rows and 5 columns.
 
1241666    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1241667    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1241668    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 434 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 434 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1241669    filename _pref
1241669  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1241670    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1241671    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1241672   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1241673   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1241674   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1241675   +
1241676   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241677   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1241678   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241679   +LABEL GRP_AcceptedCmp5 =
1241680   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1241681   +
1241682   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1241683   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1241684   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1241685   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1241686   +end;
MPRINT(EM_DIAGRAM):   end;
1241687   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1241688   +if (_UFORMAT eq '0'
1241689   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1241690   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1241691   +end;
MPRINT(EM_DIAGRAM):   end;
1241692   +else
1241693   +if (_UFORMAT eq '1'
1241694   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1241695   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1241696   +end;
MPRINT(EM_DIAGRAM):   end;
1241697   +else do;
MPRINT(EM_DIAGRAM):   else do;
1241698   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1241699   +end;
MPRINT(EM_DIAGRAM):   end;
1241700   +end;
MPRINT(EM_DIAGRAM):   end;
1241701   +
1241702   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241703   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1241704   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241705   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1241706   +
1241707   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1241708   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1241709   +end;
MPRINT(EM_DIAGRAM):   end;
1241710   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1241711   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1241712   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1241713   +end;
MPRINT(EM_DIAGRAM):   end;
1241714   +else
1241715   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1241716   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1241717   +end;
MPRINT(EM_DIAGRAM):   end;
1241718   +else
1241719   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1241720   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1241721   +end;
MPRINT(EM_DIAGRAM):   end;
1241722   +else
1241723   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1241724   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1241725   +end;
MPRINT(EM_DIAGRAM):   end;
1241726   +end;
MPRINT(EM_DIAGRAM):   end;
1241727   +
1241728   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241729   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1241730   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241731   +LABEL GRP_Income =
1241732   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1241733   +
1241734   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1241735   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1241736   +end;
MPRINT(EM_DIAGRAM):   end;
1241737   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1241738   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1241739   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1241740   +end;
MPRINT(EM_DIAGRAM):   end;
1241741   +else
1241742   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1241743   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1241744   +end;
MPRINT(EM_DIAGRAM):   end;
1241745   +else
1241746   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1241747   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1241748   +end;
MPRINT(EM_DIAGRAM):   end;
1241749   +else
1241750   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1241751   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1241752   +end;
MPRINT(EM_DIAGRAM):   end;
1241753   +end;
MPRINT(EM_DIAGRAM):   end;
1241754   +
1241755   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241756   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1241757   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241758   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1241759   +
1241760   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1241761   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1241762   +end;
MPRINT(EM_DIAGRAM):   end;
1241763   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1241764   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1241765   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1241766   +end;
MPRINT(EM_DIAGRAM):   end;
1241767   +else
1241768   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1241769   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1241770   +end;
MPRINT(EM_DIAGRAM):   end;
1241771   +else
1241772   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1241773   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1241774   +end;
MPRINT(EM_DIAGRAM):   end;
1241775   +else
1241776   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1241777   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1241778   +end;
MPRINT(EM_DIAGRAM):   end;
1241779   +end;
MPRINT(EM_DIAGRAM):   end;
1241780   +
1241781   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241782   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1241783   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241784   +LABEL GRP_MntFishProducts =
1241785   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1241786   +
1241787   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1241788   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1241789   +end;
MPRINT(EM_DIAGRAM):   end;
1241790   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1241791   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1241792   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1241793   +end;
MPRINT(EM_DIAGRAM):   end;
1241794   +else
1241795   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1241796   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1241797   +end;
MPRINT(EM_DIAGRAM):   end;
1241798   +else
1241799   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1241800   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1241801   +end;
MPRINT(EM_DIAGRAM):   end;
1241802   +else
1241803   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1241804   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1241805   +end;
MPRINT(EM_DIAGRAM):   end;
1241806   +end;
MPRINT(EM_DIAGRAM):   end;
1241807   +
1241808   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241809   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1241810   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241811   +LABEL GRP_MntGoldProds =
1241812   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1241813   +
1241814   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1241815   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1241816   +end;
MPRINT(EM_DIAGRAM):   end;
1241817   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1241818   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1241819   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1241820   +end;
MPRINT(EM_DIAGRAM):   end;
1241821   +else
1241822   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1241823   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1241824   +end;
MPRINT(EM_DIAGRAM):   end;
1241825   +else
1241826   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1241827   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1241828   +end;
MPRINT(EM_DIAGRAM):   end;
1241829   +else
1241830   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1241831   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1241832   +end;
MPRINT(EM_DIAGRAM):   end;
1241833   +end;
MPRINT(EM_DIAGRAM):   end;
1241834   +
1241835   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241836   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1241837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241838   +LABEL GRP_MntMeatProducts =
1241839   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1241840   +
1241841   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1241842   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1241843   +end;
MPRINT(EM_DIAGRAM):   end;
1241844   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1241845   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1241846   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1241847   +end;
MPRINT(EM_DIAGRAM):   end;
1241848   +else
1241849   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1241850   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1241851   +end;
MPRINT(EM_DIAGRAM):   end;
1241852   +else
1241853   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1241854   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1241855   +end;
MPRINT(EM_DIAGRAM):   end;
1241856   +else
1241857   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1241858   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1241859   +end;
MPRINT(EM_DIAGRAM):   end;
1241860   +end;
MPRINT(EM_DIAGRAM):   end;
1241861   +
1241862   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241863   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1241864   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241865   +LABEL GRP_MntWines =
1241866   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1241867   +
1241868   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1241869   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1241870   +end;
MPRINT(EM_DIAGRAM):   end;
1241871   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1241872   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1241873   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1241874   +end;
MPRINT(EM_DIAGRAM):   end;
1241875   +else
1241876   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1241877   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1241878   +end;
MPRINT(EM_DIAGRAM):   end;
1241879   +else
1241880   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1241881   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1241882   +end;
MPRINT(EM_DIAGRAM):   end;
1241883   +else
1241884   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1241885   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1241886   +end;
MPRINT(EM_DIAGRAM):   end;
1241887   +end;
MPRINT(EM_DIAGRAM):   end;
1241888   +
1241889   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241890   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1241891   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241892   +LABEL GRP_NumCatalogPurchases =
1241893   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1241894   +
1241895   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1241896   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1241897   +end;
MPRINT(EM_DIAGRAM):   end;
1241898   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1241899   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1241900   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1241901   +end;
MPRINT(EM_DIAGRAM):   end;
1241902   +else
1241903   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1241904   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1241905   +end;
MPRINT(EM_DIAGRAM):   end;
1241906   +else
1241907   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1241908   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1241909   +end;
MPRINT(EM_DIAGRAM):   end;
1241910   +else
1241911   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1241912   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1241913   +end;
MPRINT(EM_DIAGRAM):   end;
1241914   +end;
MPRINT(EM_DIAGRAM):   end;
1241915   +
1241916   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241917   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1241918   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241919   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1241920   +
1241921   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1241922   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1241923   +end;
MPRINT(EM_DIAGRAM):   end;
1241924   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1241925   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1241926   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1241927   +end;
MPRINT(EM_DIAGRAM):   end;
1241928   +else
1241929   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1241930   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1241931   +end;
MPRINT(EM_DIAGRAM):   end;
1241932   +else
1241933   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1241934   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1241935   +end;
MPRINT(EM_DIAGRAM):   end;
1241936   +else
1241937   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1241938   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1241939   +end;
MPRINT(EM_DIAGRAM):   end;
1241940   +end;
MPRINT(EM_DIAGRAM):   end;
1241941   +
1241942   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241943   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1241944   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241945   +LABEL GRP_NumWebPurchases =
1241946   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1241947   +
1241948   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1241949   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1241950   +end;
MPRINT(EM_DIAGRAM):   end;
1241951   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1241952   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1241953   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1241954   +end;
MPRINT(EM_DIAGRAM):   end;
1241955   +else
1241956   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1241957   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1241958   +end;
MPRINT(EM_DIAGRAM):   end;
1241959   +else
1241960   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1241961   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1241962   +end;
MPRINT(EM_DIAGRAM):   end;
1241963   +else
1241964   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1241965   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1241966   +end;
MPRINT(EM_DIAGRAM):   end;
1241967   +end;
MPRINT(EM_DIAGRAM):   end;
1241968   +
1241969   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241970   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1241971   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241972   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1241973   +
1241974   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1241975   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1241976   +end;
MPRINT(EM_DIAGRAM):   end;
1241977   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1241978   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1241979   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1241980   +end;
MPRINT(EM_DIAGRAM):   end;
1241981   +else
1241982   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1241983   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1241984   +end;
MPRINT(EM_DIAGRAM):   end;
1241985   +else
1241986   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1241987   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1241988   +end;
MPRINT(EM_DIAGRAM):   end;
1241989   +else
1241990   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1241991   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1241992   +end;
MPRINT(EM_DIAGRAM):   end;
1241993   +end;
MPRINT(EM_DIAGRAM):   end;
1241994   +
1241995   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241996   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1241997   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1241998   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1241999   +
1242000   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1242001   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1242002   +end;
MPRINT(EM_DIAGRAM):   end;
1242003   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1242004   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1242005   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1242006   +end;
MPRINT(EM_DIAGRAM):   end;
1242007   +else
1242008   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1242009   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1242010   +end;
MPRINT(EM_DIAGRAM):   end;
1242011   +else
1242012   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1242013   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1242014   +end;
MPRINT(EM_DIAGRAM):   end;
1242015   +else
1242016   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1242017   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1242018   +end;
MPRINT(EM_DIAGRAM):   end;
1242019   +end;
MPRINT(EM_DIAGRAM):   end;
1242020   +
1242021   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242022   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1242023   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242024   +LABEL GRP_Recency =
1242025   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1242026   +
1242027   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1242028   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1242029   +end;
MPRINT(EM_DIAGRAM):   end;
1242030   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1242031   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1242032   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1242033   +end;
MPRINT(EM_DIAGRAM):   end;
1242034   +else
1242035   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1242036   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1242037   +end;
MPRINT(EM_DIAGRAM):   end;
1242038   +else
1242039   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1242040   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1242041   +end;
MPRINT(EM_DIAGRAM):   end;
1242042   +else
1242043   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1242044   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1242045   +end;
MPRINT(EM_DIAGRAM):   end;
1242046   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1242047    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1242048    quit;
1242049    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1242050    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1242051    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1242052    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1242053    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1242054    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242055    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1242056    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1242057    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242058    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1242059    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1242060    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1242061    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1242062    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1242063    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1242064    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242065    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1242066    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1242067    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1242068    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1242069    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242070    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1242071    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1242072    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1242073    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242074    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1242075    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1242075  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.
 
1242076    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242077    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1242078    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 449 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242079    filename _pref
1242079  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1242080    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1242081    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1242082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242083   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1242084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1242085   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1242086   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1242087   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1242088    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1242089    quit;
1242090    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1242091    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1242092    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1242093    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1242094    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1242095    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242096    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1242097    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1242098    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1242099    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1242100    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1242101    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242102    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1242103    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1242104    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1242105    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1242106    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1242107    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1242108    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1242109    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1242110    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242111    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1242112    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1242113    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1242114    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1242115    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1242116    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1242116  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1242117    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242118    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1242119    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 453 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242120    filename _pref
1242120  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1242121    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1242122    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1242123   +
1242124   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1242125   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1242125  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1242126   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1242127   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1242128   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1242129   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1242130   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1242131    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1242132    quit;
1242133    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1242134    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1242135    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1242136    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1242137    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1242138    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1242139    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1242140    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1242141    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242142    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1242143    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1242144    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242145    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1242146    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1242147    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1242148    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1242149    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1242150    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242151    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1242152    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1242153    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242154    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1242155    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1242156    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1242157    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1242158    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1242159    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1242159  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1242160    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242161    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1242162    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 492 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242163    filename _pref
1242163  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1242164    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1242165    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1242166   +
1242167   +
1242168   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1242169   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1242170   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1242171   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1242172   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1242173   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1242174   +
1242175   +
1242176   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1242177   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1242178   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1242179   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1242180   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1242181   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1242182   +
1242183   +
1242184   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1242185   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1242186   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1242187   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1242188   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1242189   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1242190   +
1242191   +
1242192   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1242193   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1242194   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1242195   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1242196   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1242197   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1242198   +
1242199   +
1242200   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1242201   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1242202   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1242203   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1242204   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1242205   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1242206   +
1242207   +
1242208   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1242209   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1242210   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1242211   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1242212   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1242213   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1242214   +
1242215   +
1242216   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1242217   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1242218   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1242219   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1242220   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1242221   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1242222   +
1242223   +
1242224   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1242225   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1242226   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1242227   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1242228   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1242229   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1242230   +if
1242231   +_FILTERNORM1 not in ( '.')
1242232   + and
1242233   +_FILTERNORM2 not in ( '.')
1242234   + and
1242235   +_FILTERNORM3 not in ( '.')
1242236   + and
1242237   +_FILTERNORM4 not in ( '.')
1242238   + and
1242239   +_FILTERNORM5 not in ( '.')
1242240   + and
1242241   +_FILTERNORM6 not in ( '.')
1242242   + and
1242243   +_FILTERNORM7 not in ( ' ')
1242244   + and
1242245   +_FILTERNORM8 not in ( ' ')
1242246   +and
1242247   +( Dt_Customer ne .)
1242248   +and ( Income ne . and (Income<=107000))
1242249   +and ( Kidhome ne .)
1242250   +and ( MntFishProducts ne .)
1242251   +and ( MntFruits ne .)
1242252   +and ( MntGoldProds ne .)
1242253   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1242254   +and ( MntSweetProducts ne .)
1242255   +and ( MntWines ne .)
1242256   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1242257   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1242258   +and ( NumStorePurchases ne .)
1242259   +and ( NumWebPurchases ne .)
1242260   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1242261   +and ( Recency ne .)
1242262   +and ( Teenhome ne .)
1242263   +and ( Year_Birth ne .)
1242264   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1242265   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1242266   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1242267   +end;
MPRINT(EM_DIAGRAM):   end;
1242268   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1242269   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1242270    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1242271    quit;
1242272    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1242273    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1242274    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1242275    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1242276    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1242277    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1242278    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1242279    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1242280    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242281    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1242282    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1242283    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1242284    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1242285    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1242286    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1242287    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242288    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1242289    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
1242290    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1242291    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1242292    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242293    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1242294    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1242295    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1242296    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242297    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1242298    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1242298  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1242299    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1242300    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1242301    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 558 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242302    %macro varDept(fcmpdata=,id=);
1242303    %global nobs&id scoreFlag&id;
1242304    %let scoreFlag&id = 0;
1242305    %if &id=1 or ^&fcmpStart %then %do;
1242306    proc sort data=&fcmpdata out=_temp&id nodupkey;
1242307    by NAME;
1242308    where id=&id and LHS in( %let j=1;
1242309    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1242310    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1242311    "&var" %let j = %eval(&j+1);
1242312    %end;
1242313    );
1242314    run;
1242315    %let dsid = %sysfunc(open(_temp&id));
1242316    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1242317    %let dsid = %sysfunc(close(&dsid));
1242318    %if &&nobs&id %then %do;
1242319    %let scoreFlag&id = 1;
1242320    %let fcmpStart = 1;
1242321    %end;
1242322    %else %let fcmpStart = 0;
1242323    %end;
1242324    %else %do;
1242325    proc sort data=&fcmpdata out=_tempid;
1242326    where id=&id;
1242327    by LHS;
1242328    run;
1242329    %let dsid = %sysfunc(open(_tempid));
1242330    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1242331    %let dsid = %sysfunc(close(&dsid));
1242332    %if ^&&nobs&id %then %do;
1242333    proc datasets lib=work nolist;
1242334    delete _tempid;
1242335    run;
1242336    quit;
1242337    %end;
1242338    %else %do;
1242339    data _tempAll;
1242340    set %let j=%eval(&id-1);
1242341    %do x=1 %to &j;
1242342    %if &&nobs&x %then %do;
1242343    _temp&x %end;
1242344    %end;
1242345    ;
1242346    run;
1242347    proc sql;
1242348    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1242348  ! work._tempid p2 where p.name=p2.lhs;
1242349    quit;
1242350    data _temp&id;
1242351    set _temp&id;
1242352    where LHS ne '' and NAME ne '' and Node ne '';
1242353    run;
1242354    proc datasets lib=work nolist;
1242355    delete _tempAll;
1242356    run;
1242357    %let dsid = %sysfunc(open(_temp&id));
1242358    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1242359    %let dsid = %sysfunc(close(&dsid));
1242360    %if ^&&nobs&id %then %do;
1242361    proc datasets lib=work nolist;
1242362    delete _temp&id;
1242363    run;
1242364    quit;
1242365    %end;
1242366    %else %do;
1242367    %let scoreFlag&id = 1;
1242368    data _temp&id;
1242369    set _temp&id;
1242370    where LHS ne NAME and node ne '';
1242371    run;
1242372    %let dsid = %sysfunc(open(_temp&id));
1242373    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1242374    %let dsid = %sysfunc(close(&dsid));
1242375    %if ^&&nobs&id %then %do;
1242376    proc datasets lib=work nolist;
1242377    delete _temp&id;
1242378    run;
1242379    quit;
1242380    %end;
1242381    %else %do;
1242382    proc sort data=_temp&id nodupkey;
1242383    by LHS NAME;
1242384    run;
1242385    %end;
1242386    %end;
1242387    %end;
1242388    %end;
1242389    %mend varDept;
1242390    %macro optCode(outdata=fcmpdata);
1242391    %global fcmpStart;
1242392    %let fcmpStart = 0;
1242393    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1242394    %let NumNodes=9;
1242395    %do k=1 %to &NumNodes;
1242396    %vardept(fcmpdata=&outdata, id=&k);
1242397    %end;
1242398    %mend optCode;
1242399    %optcode(outData=EMWS8.Ensmbl7_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 33 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 11 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 10 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
The SAS System
 
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 23 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1242400    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1242401    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1242402    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1242403    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242404    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1242405    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1242406    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1242407    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1242408    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1242409    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1242409  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1242410    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242411    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1242412    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1242413    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242414    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1242415    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1242416    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1242417    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242418    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1242419    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1242420    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1242421    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242422    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1242423    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1242423  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 10 rows and 3 columns.
 
1242424    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1242425    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1242426    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1242427    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 10 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1242428    filename _pref
1242428  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMPUBLISHSCORE.sas";
1242429    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1242430    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMPUBLISHSCORE.sas.
1242431   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1242432   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1242433   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1242434   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1242435   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1242436   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1242437   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1242438   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1242439   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1242440   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1242441   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1242442   +LENGTH _WARN_ $4
1242443   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1242444   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1242445   +
1242446   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1242447   +
1242448   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1242449   +
1242450   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1242451   +
1242452   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1242453   +
1242454   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1242455   +
1242456   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1242457   +
1242458   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1242459   +
1242460   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1242461   +
1242462   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1242463   +
1242464   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1242465   +
1242466   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1242467   +
1242468   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1242469   +
1242470   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1242471   +
1242472   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1242473   +
1242474   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1242475   +
1242476   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1242477   +
1242478   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1242479   +
1242480   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1242481   +
1242482   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1242483   +
1242484   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1242485   +
1242486   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1242487   +
1242488   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1242489   +
1242490   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1242491   +
1242492   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1242493   +
1242494   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1242495   +
1242496   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1242497   +
1242498   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1242499   +
1242500   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1242501   +
1242502   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1242503   +
1242504   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1242505   +
1242506   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1242507   +
1242508   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1242509   +
1242510   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1242511   +
1242512   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1242513   +
1242514   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1242515   +
1242516   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1242517   +
1242518   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1242519   +
1242520   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1242521   +
1242522   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1242523   +
1242524   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1242525   +
1242526   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1242527   +
1242528   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1242529   +
1242530   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1242531   +
1242532   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1242533   +
1242534   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1242535   +
1242536   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1242537   +
1242538   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1242539   +
1242540   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1242541   +
1242542   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1242543   +
1242544   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1242545   +
1242546   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1242547   +
1242548   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1242549   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1242550   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1242551   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1242552   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242553   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242554   +end;
MPRINT(EM_DIAGRAM):   end;
1242555   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242556   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242557   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1242558   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242559   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1242560   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1242561   +   end;
MPRINT(EM_DIAGRAM):   end;
1242562   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1242563   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1242564   +   end;
MPRINT(EM_DIAGRAM):   end;
1242565   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242566   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1242567   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242568   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242569   +   end;
MPRINT(EM_DIAGRAM):   end;
1242570   +end;
MPRINT(EM_DIAGRAM):   end;
1242571   +
1242572   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1242573   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1242574   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1242575   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1242576   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1242577   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1242578   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242579   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242580   +end;
MPRINT(EM_DIAGRAM):   end;
1242581   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242582   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242583   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1242584   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242585   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1242586   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1242587   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1242588   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1242589   +   end;
MPRINT(EM_DIAGRAM):   end;
1242590   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1242591   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1242592   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1242593   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1242594   +   end;
MPRINT(EM_DIAGRAM):   end;
1242595   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1242596   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1242597   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1242598   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1242599   +   end;
MPRINT(EM_DIAGRAM):   end;
1242600   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1242601   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1242602   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1242603   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1242604   +   end;
MPRINT(EM_DIAGRAM):   end;
1242605   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242606   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1242607   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1242608   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1242609   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242610   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242611   +   end;
MPRINT(EM_DIAGRAM):   end;
1242612   +end;
MPRINT(EM_DIAGRAM):   end;
1242613   +
1242614   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1242615   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1242616   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1242617   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1242618   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1242619   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1242620   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242621   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242622   +end;
MPRINT(EM_DIAGRAM):   end;
1242623   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242624   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242625   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1242626   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242627   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1242628   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1242629   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1242630   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1242631   +   end;
MPRINT(EM_DIAGRAM):   end;
1242632   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1242633   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1242634   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1242635   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1242636   +   end;
MPRINT(EM_DIAGRAM):   end;
1242637   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1242638   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1242639   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1242640   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1242641   +   end;
MPRINT(EM_DIAGRAM):   end;
1242642   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1242643   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1242644   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1242645   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1242646   +   end;
MPRINT(EM_DIAGRAM):   end;
1242647   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242648   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1242649   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1242650   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1242651   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242652   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242653   +   end;
MPRINT(EM_DIAGRAM):   end;
1242654   +end;
MPRINT(EM_DIAGRAM):   end;
1242655   +
1242656   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1242657   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1242658   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1242659   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1242660   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1242661   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1242662   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242663   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242664   +end;
MPRINT(EM_DIAGRAM):   end;
1242665   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242666   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242667   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1242668   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242669   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1242670   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1242671   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1242672   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1242673   +   end;
MPRINT(EM_DIAGRAM):   end;
1242674   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1242675   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1242676   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1242677   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1242678   +   end;
MPRINT(EM_DIAGRAM):   end;
1242679   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1242680   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1242681   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1242682   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1242683   +   end;
MPRINT(EM_DIAGRAM):   end;
1242684   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1242685   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1242686   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1242687   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1242688   +   end;
MPRINT(EM_DIAGRAM):   end;
1242689   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242690   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1242691   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1242692   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1242693   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242694   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242695   +   end;
MPRINT(EM_DIAGRAM):   end;
1242696   +end;
MPRINT(EM_DIAGRAM):   end;
1242697   +
1242698   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1242699   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1242700   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1242701   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1242702   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1242703   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1242704   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242705   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242706   +end;
MPRINT(EM_DIAGRAM):   end;
1242707   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242708   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242709   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1242710   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242711   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1242712   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1242713   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1242714   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1242715   +   end;
MPRINT(EM_DIAGRAM):   end;
1242716   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1242717   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1242718   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1242719   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1242720   +   end;
MPRINT(EM_DIAGRAM):   end;
1242721   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1242722   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1242723   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1242724   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1242725   +   end;
MPRINT(EM_DIAGRAM):   end;
1242726   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1242727   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1242728   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1242729   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1242730   +   end;
MPRINT(EM_DIAGRAM):   end;
1242731   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242732   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1242733   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1242734   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1242735   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242736   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242737   +   end;
MPRINT(EM_DIAGRAM):   end;
1242738   +end;
MPRINT(EM_DIAGRAM):   end;
1242739   +
1242740   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1242741   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1242742   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1242743   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1242744   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1242745   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1242746   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242747   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242748   +end;
MPRINT(EM_DIAGRAM):   end;
1242749   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242750   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242751   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1242752   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242753   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1242754   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1242755   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1242756   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1242757   +   end;
MPRINT(EM_DIAGRAM):   end;
1242758   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1242759   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1242760   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1242761   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1242762   +   end;
MPRINT(EM_DIAGRAM):   end;
1242763   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1242764   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1242765   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1242766   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1242767   +   end;
MPRINT(EM_DIAGRAM):   end;
1242768   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1242769   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1242770   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1242771   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1242772   +   end;
MPRINT(EM_DIAGRAM):   end;
1242773   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242774   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1242775   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1242776   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1242777   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242778   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242779   +   end;
MPRINT(EM_DIAGRAM):   end;
1242780   +end;
MPRINT(EM_DIAGRAM):   end;
1242781   +
1242782   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1242783   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1242784   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1242785   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1242786   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1242787   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1242788   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242790   +end;
MPRINT(EM_DIAGRAM):   end;
1242791   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242792   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242793   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1242794   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242795   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1242796   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1242797   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1242798   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1242799   +   end;
MPRINT(EM_DIAGRAM):   end;
1242800   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1242801   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1242802   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1242803   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1242804   +   end;
MPRINT(EM_DIAGRAM):   end;
1242805   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1242806   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1242807   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1242808   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1242809   +   end;
MPRINT(EM_DIAGRAM):   end;
1242810   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1242811   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1242812   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1242813   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1242814   +   end;
MPRINT(EM_DIAGRAM):   end;
1242815   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242816   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1242817   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1242818   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1242819   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242820   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242821   +   end;
MPRINT(EM_DIAGRAM):   end;
1242822   +end;
MPRINT(EM_DIAGRAM):   end;
1242823   +
1242824   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1242825   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1242826   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1242827   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1242828   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1242829   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1242830   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242831   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242832   +end;
MPRINT(EM_DIAGRAM):   end;
1242833   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242834   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242835   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1242836   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242837   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1242838   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1242839   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1242840   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1242841   +   end;
MPRINT(EM_DIAGRAM):   end;
1242842   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1242843   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1242844   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1242845   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1242846   +   end;
MPRINT(EM_DIAGRAM):   end;
1242847   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1242848   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1242849   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1242850   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1242851   +   end;
MPRINT(EM_DIAGRAM):   end;
1242852   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1242853   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1242854   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1242855   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1242856   +   end;
MPRINT(EM_DIAGRAM):   end;
1242857   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242858   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1242859   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1242860   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1242861   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242862   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242863   +   end;
MPRINT(EM_DIAGRAM):   end;
1242864   +end;
MPRINT(EM_DIAGRAM):   end;
1242865   +
1242866   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1242867   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1242868   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1242869   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1242870   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1242871   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242872   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242873   +end;
MPRINT(EM_DIAGRAM):   end;
1242874   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242875   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242876   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1242877   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242878   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1242879   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1242880   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1242881   +   end;
MPRINT(EM_DIAGRAM):   end;
1242882   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1242883   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1242884   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1242885   +   end;
MPRINT(EM_DIAGRAM):   end;
1242886   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1242887   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1242888   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1242889   +   end;
MPRINT(EM_DIAGRAM):   end;
1242890   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242891   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1242892   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1242893   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242894   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242895   +   end;
MPRINT(EM_DIAGRAM):   end;
1242896   +end;
MPRINT(EM_DIAGRAM):   end;
1242897   +
1242898   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1242899   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1242900   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1242901   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1242902   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1242903   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1242904   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242905   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242906   +end;
MPRINT(EM_DIAGRAM):   end;
1242907   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242908   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242909   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1242910   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242911   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1242912   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1242913   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1242914   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1242915   +   end;
MPRINT(EM_DIAGRAM):   end;
1242916   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1242917   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1242918   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1242919   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1242920   +   end;
MPRINT(EM_DIAGRAM):   end;
1242921   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1242922   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1242923   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1242924   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1242925   +   end;
MPRINT(EM_DIAGRAM):   end;
1242926   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1242927   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1242928   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1242929   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1242930   +   end;
MPRINT(EM_DIAGRAM):   end;
1242931   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242932   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1242933   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1242934   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1242935   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242936   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242937   +   end;
MPRINT(EM_DIAGRAM):   end;
1242938   +end;
MPRINT(EM_DIAGRAM):   end;
1242939   +
1242940   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1242941   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1242942   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1242943   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1242944   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1242945   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1242946   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242947   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242948   +end;
MPRINT(EM_DIAGRAM):   end;
1242949   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242950   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242951   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1242952   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242953   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1242954   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1242955   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1242956   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1242957   +   end;
MPRINT(EM_DIAGRAM):   end;
1242958   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1242959   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1242960   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1242961   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1242962   +   end;
MPRINT(EM_DIAGRAM):   end;
1242963   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1242964   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1242965   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1242966   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1242967   +   end;
MPRINT(EM_DIAGRAM):   end;
1242968   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1242969   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1242970   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1242971   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1242972   +   end;
MPRINT(EM_DIAGRAM):   end;
1242973   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1242974   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1242975   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1242976   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1242977   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1242978   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242979   +   end;
MPRINT(EM_DIAGRAM):   end;
1242980   +end;
MPRINT(EM_DIAGRAM):   end;
1242981   +
1242982   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1242983   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1242984   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1242985   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1242986   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1242987   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1242988   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1242989   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1242990   +end;
MPRINT(EM_DIAGRAM):   end;
1242991   +else do;
MPRINT(EM_DIAGRAM):   else do;
1242992   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1242993   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1242994   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1242995   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1242996   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1242997   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1242998   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1242999   +   end;
MPRINT(EM_DIAGRAM):   end;
1243000   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1243001   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1243002   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1243003   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1243004   +   end;
MPRINT(EM_DIAGRAM):   end;
1243005   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1243006   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1243007   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1243008   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1243009   +   end;
MPRINT(EM_DIAGRAM):   end;
1243010   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1243011   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1243012   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1243013   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1243014   +   end;
MPRINT(EM_DIAGRAM):   end;
1243015   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1243016   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1243017   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1243018   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1243019   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1243020   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243021   +   end;
MPRINT(EM_DIAGRAM):   end;
1243022   +end;
MPRINT(EM_DIAGRAM):   end;
1243023   +
1243024   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1243025   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1243026   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1243027   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1243028   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1243029   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1243030   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1243031   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243032   +end;
MPRINT(EM_DIAGRAM):   end;
1243033   +else do;
MPRINT(EM_DIAGRAM):   else do;
1243034   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1243035   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1243036   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1243037   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1243038   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1243039   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1243040   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1243041   +   end;
MPRINT(EM_DIAGRAM):   end;
1243042   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1243043   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1243044   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1243045   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1243046   +   end;
MPRINT(EM_DIAGRAM):   end;
1243047   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1243048   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1243049   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1243050   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1243051   +   end;
MPRINT(EM_DIAGRAM):   end;
1243052   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1243053   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1243054   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1243055   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1243056   +   end;
MPRINT(EM_DIAGRAM):   end;
1243057   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1243058   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1243059   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1243060   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1243061   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1243062   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243063   +   end;
MPRINT(EM_DIAGRAM):   end;
1243064   +end;
MPRINT(EM_DIAGRAM):   end;
1243065   +
1243066   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1243067   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1243068   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1243069   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1243070   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1243071   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1243072   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1243073   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243074   +end;
MPRINT(EM_DIAGRAM):   end;
1243075   +else do;
MPRINT(EM_DIAGRAM):   else do;
1243076   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1243077   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1243078   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1243079   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1243080   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1243081   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1243082   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1243083   +   end;
MPRINT(EM_DIAGRAM):   end;
1243084   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1243085   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1243086   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1243087   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1243088   +   end;
MPRINT(EM_DIAGRAM):   end;
1243089   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1243090   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1243091   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1243092   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1243093   +   end;
MPRINT(EM_DIAGRAM):   end;
1243094   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1243095   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1243096   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1243097   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1243098   +   end;
MPRINT(EM_DIAGRAM):   end;
1243099   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1243100   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1243101   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1243102   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1243103   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1243104   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243105   +   end;
MPRINT(EM_DIAGRAM):   end;
1243106   +end;
MPRINT(EM_DIAGRAM):   end;
1243107   +
1243108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243109   +*** Checking missing input Interval
1243110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1243111   +
1243112   +IF NMISS(
1243113   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1243114   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1243115   +
1243116   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1243117   +END;
MPRINT(EM_DIAGRAM):   END;
1243118   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243119   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1243120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243121   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1243122   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1243123   +END;
MPRINT(EM_DIAGRAM):   END;
1243124   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1243125   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1243126   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1243127   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1243128   +END;
MPRINT(EM_DIAGRAM):   END;
1243129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243130   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1243131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243133   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1243134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243135   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1243136   +   H11  =     0.03855897145156 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.03855897145156 * S_Year_Birth ;
1243137   +   H12  =      0.4940754340088 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.4940754340088 * S_Year_Birth ;
1243138   +   H13  =     0.17524137660647 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.17524137660647 * S_Year_Birth ;
1243139   +   H14  =     0.27270757044038 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.27270757044038 * S_Year_Birth ;
1243140   +   H15  =    -0.02127353119313 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.02127353119313 * S_Year_Birth ;
1243141   +   H16  =    -0.10595973365564 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.10595973365564 * S_Year_Birth ;
1243142   +   H17  =    -0.11271332681901 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.11271332681901 * S_Year_Birth ;
1243143   +   H11  = H11  +     0.21558790598329 * GRP_AcceptedCmp52
1243144   +          +    -0.07145572032882 * GRP_Frq2  +     0.09268595548153 * GRP_Frq3
1243145   +          +    -0.20765463263399 * GRP_Frq4  +    -0.00887637988838 *
1243146   +        GRP_Income2  +    -0.34198008097003 * GRP_Income3
1243147   +          +     0.00518173450113 * GRP_Income4  +     0.17153998784849 *
1243148   +        GRP_Mnt2  +    -0.03282863464194 * GRP_Mnt3  +     0.15479242768387 *
1243149   +        GRP_Mnt4  +    -0.14566682947772 * GRP_MntFishProducts2
1243150   +          +    -0.04697385312971 * GRP_MntFishProducts3
1243151   +          +     0.05477300056491 * GRP_MntFishProducts4
1243152   +          +    -0.21182877070793 * GRP_MntGoldProds2
1243153   +          +    -0.06202001203906 * GRP_MntGoldProds3
1243154   +          +    -0.23297283739715 * GRP_MntGoldProds4
1243155   +          +    -0.27072080481215 * GRP_MntMeatProducts2
1243156   +          +     -0.0879595975531 * GRP_MntMeatProducts3
1243157   +          +     0.01711044358319 * GRP_MntMeatProducts4
1243158   +          +     0.01568057691806 * GRP_MntWines2  +    -0.14454572309741 *
1243159   +        GRP_MntWines3  +      0.1665968837033 * GRP_MntWines4
1243160   +          +    -0.24980039994544 * GRP_NumCatalogPurchases3
1243161   +          +    -0.00199030871063 * GRP_NumCatalogPurchases4
1243162   +          +     0.11565917560156 * GRP_NumDistPurchases2
1243163   +          +      0.1678532898895 * GRP_NumDistPurchases3
1243164   +          +     -0.0338568889009 * GRP_NumDistPurchases4
1243165   +          +     0.09970745707934 * GRP_NumWebPurchases2
1243166   +          +     0.02961221360107 * GRP_NumWebPurchases3
1243167   +          +     0.02261054892411 * GRP_NumWebPurchases4
1243168   +          +     0.22891892518291 * GRP_RFMstat2  +     0.30720492174411 *
1243169   +        GRP_RFMstat3  +     0.02558392907316 * GRP_RFMstat4
1243170   +          +    -0.22752513596954 * GRP_RMntFrq2  +    -0.11010023712096 *
1243171   +        GRP_RMntFrq3  +    -0.29294961809478 * GRP_RMntFrq4
1243172   +          +     0.17323450297234 * GRP_Recency2  +    -0.02999008104866 *
1243173   +        GRP_Recency3  +    -0.07522056103469 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21558790598329 * GRP_AcceptedCmp52 + -0.07145572032882 *
GRP_Frq2 + 0.09268595548153 * GRP_Frq3 + -0.20765463263399 * GRP_Frq4 + -0.00887637988838 *
GRP_Income2 + -0.34198008097003 * GRP_Income3 + 0.00518173450113 * GRP_Income4 +
0.17153998784849 * GRP_Mnt2 + -0.03282863464194 * GRP_Mnt3 + 0.15479242768387 * GRP_Mnt4 +
-0.14566682947772 * GRP_MntFishProducts2 + -0.04697385312971 * GRP_MntFishProducts3 +
0.05477300056491 * GRP_MntFishProducts4 + -0.21182877070793 * GRP_MntGoldProds2 +
-0.06202001203906 * GRP_MntGoldProds3 + -0.23297283739715 * GRP_MntGoldProds4 +
-0.27072080481215 * GRP_MntMeatProducts2 + -0.0879595975531 * GRP_MntMeatProducts3 +
0.01711044358319 * GRP_MntMeatProducts4 + 0.01568057691806 * GRP_MntWines2 + -0.14454572309741
* GRP_MntWines3 + 0.1665968837033 * GRP_MntWines4 + -0.24980039994544 *
GRP_NumCatalogPurchases3 + -0.00199030871063 * GRP_NumCatalogPurchases4 + 0.11565917560156 *
GRP_NumDistPurchases2 + 0.1678532898895 * GRP_NumDistPurchases3 + -0.0338568889009 *
GRP_NumDistPurchases4 + 0.09970745707934 * GRP_NumWebPurchases2 + 0.02961221360107 *
GRP_NumWebPurchases3 + 0.02261054892411 * GRP_NumWebPurchases4 + 0.22891892518291 *
GRP_RFMstat2 + 0.30720492174411 * GRP_RFMstat3 + 0.02558392907316 * GRP_RFMstat4 +
-0.22752513596954 * GRP_RMntFrq2 + -0.11010023712096 * GRP_RMntFrq3 + -0.29294961809478 *
GRP_RMntFrq4 + 0.17323450297234 * GRP_Recency2 + -0.02999008104866 * GRP_Recency3 +
-0.07522056103469 * GRP_Recency4 ;
1243174   +   H12  = H12  +    -0.17475665685155 * GRP_AcceptedCmp52
1243175   +          +     0.39850686717751 * GRP_Frq2  +     0.21273190324396 * GRP_Frq3
1243176   +          +    -0.04292229763335 * GRP_Frq4  +     0.48189221687125 *
1243177   +        GRP_Income2  +       0.757675062227 * GRP_Income3
1243178   +          +    -0.31438345261512 * GRP_Income4  +     0.08884755999997 *
1243179   +        GRP_Mnt2  +     0.02891204793625 * GRP_Mnt3  +    -0.11500381143203 *
1243180   +        GRP_Mnt4  +     0.47755891441547 * GRP_MntFishProducts2
1243181   +          +     0.26645530981311 * GRP_MntFishProducts3
1243182   +          +    -0.17631072283513 * GRP_MntFishProducts4
1243183   +          +    -0.35439521021691 * GRP_MntGoldProds2
1243184   +          +     0.11419663880206 * GRP_MntGoldProds3
1243185   +          +     0.07288749113866 * GRP_MntGoldProds4
1243186   +          +    -0.52191822126159 * GRP_MntMeatProducts2
1243187   +          +    -0.08421627788812 * GRP_MntMeatProducts3
1243188   +          +    -0.15930642038763 * GRP_MntMeatProducts4
1243189   +          +     0.17420985773045 * GRP_MntWines2  +     0.21257483876123 *
1243190   +        GRP_MntWines3  +    -0.13198840161443 * GRP_MntWines4
1243191   +          +    -0.24725403471973 * GRP_NumCatalogPurchases3
1243192   +          +     0.28574938745998 * GRP_NumCatalogPurchases4
1243193   +          +     -0.4878996299474 * GRP_NumDistPurchases2
1243194   +          +     0.10139595392447 * GRP_NumDistPurchases3
1243195   +          +     0.05251891244468 * GRP_NumDistPurchases4
1243196   +          +    -0.18486003226007 * GRP_NumWebPurchases2
1243197   +          +      0.0263831646971 * GRP_NumWebPurchases3
1243198   +          +     0.26495059708503 * GRP_NumWebPurchases4
1243199   +          +    -0.16580006605432 * GRP_RFMstat2  +    -0.12537703875848 *
1243200   +        GRP_RFMstat3  +      -0.100652416931 * GRP_RFMstat4
1243201   +          +    -0.00913931308958 * GRP_RMntFrq2  +    -0.15758837200974 *
1243202   +        GRP_RMntFrq3  +     -0.1198225533702 * GRP_RMntFrq4
1243203   +          +       1.075902392162 * GRP_Recency2  +     0.44926983542925 *
1243204   +        GRP_Recency3  +     -0.4970729472837 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17475665685155 * GRP_AcceptedCmp52 + 0.39850686717751 *
GRP_Frq2 + 0.21273190324396 * GRP_Frq3 + -0.04292229763335 * GRP_Frq4 + 0.48189221687125 *
GRP_Income2 + 0.757675062227 * GRP_Income3 + -0.31438345261512 * GRP_Income4 +
0.08884755999997 * GRP_Mnt2 + 0.02891204793625 * GRP_Mnt3 + -0.11500381143203 * GRP_Mnt4 +
0.47755891441547 * GRP_MntFishProducts2 + 0.26645530981311 * GRP_MntFishProducts3 +
-0.17631072283513 * GRP_MntFishProducts4 + -0.35439521021691 * GRP_MntGoldProds2 +
0.11419663880206 * GRP_MntGoldProds3 + 0.07288749113866 * GRP_MntGoldProds4 +
-0.52191822126159 * GRP_MntMeatProducts2 + -0.08421627788812 * GRP_MntMeatProducts3 +
-0.15930642038763 * GRP_MntMeatProducts4 + 0.17420985773045 * GRP_MntWines2 + 0.21257483876123
* GRP_MntWines3 + -0.13198840161443 * GRP_MntWines4 + -0.24725403471973 *
GRP_NumCatalogPurchases3 + 0.28574938745998 * GRP_NumCatalogPurchases4 + -0.4878996299474 *
GRP_NumDistPurchases2 + 0.10139595392447 * GRP_NumDistPurchases3 + 0.05251891244468 *
GRP_NumDistPurchases4 + -0.18486003226007 * GRP_NumWebPurchases2 + 0.0263831646971 *
GRP_NumWebPurchases3 + 0.26495059708503 * GRP_NumWebPurchases4 + -0.16580006605432 *
GRP_RFMstat2 + -0.12537703875848 * GRP_RFMstat3 + -0.100652416931 * GRP_RFMstat4 +
-0.00913931308958 * GRP_RMntFrq2 + -0.15758837200974 * GRP_RMntFrq3 + -0.1198225533702 *
GRP_RMntFrq4 + 1.075902392162 * GRP_Recency2 + 0.44926983542925 * GRP_Recency3 +
-0.4970729472837 * GRP_Recency4 ;
1243205   +   H13  = H13  +     0.00215688122529 * GRP_AcceptedCmp52
1243206   +          +    -0.01427589791379 * GRP_Frq2  +    -0.13098496868755 * GRP_Frq3
1243207   +          +    -0.30502313457201 * GRP_Frq4  +    -0.37973462663051 *
1243208   +        GRP_Income2  +     0.00732780844057 * GRP_Income3
1243209   +          +     0.53278328894406 * GRP_Income4  +     0.29819966041309 *
1243210   +        GRP_Mnt2  +     0.25349727466129 * GRP_Mnt3  +     0.10579488290769 *
1243211   +        GRP_Mnt4  +    -0.09288921771048 * GRP_MntFishProducts2
1243212   +          +     0.02714802509094 * GRP_MntFishProducts3
1243213   +          +     0.27119078554613 * GRP_MntFishProducts4
1243214   +          +     0.19322428614339 * GRP_MntGoldProds2
1243215   +          +     0.34778546410632 * GRP_MntGoldProds3
1243216   +          +    -0.06570146779096 * GRP_MntGoldProds4
1243217   +          +     0.44935275650977 * GRP_MntMeatProducts2
1243218   +          +     0.00805794344265 * GRP_MntMeatProducts3
1243219   +          +     0.02445782833023 * GRP_MntMeatProducts4
1243220   +          +    -0.12082391878766 * GRP_MntWines2  +    -0.28739181733976 *
1243221   +        GRP_MntWines3  +    -0.12417307544408 * GRP_MntWines4
1243222   +          +     0.33901531634752 * GRP_NumCatalogPurchases3
1243223   +          +     -0.0519425405532 * GRP_NumCatalogPurchases4
1243224   +          +     0.03481806823908 * GRP_NumDistPurchases2
1243225   +          +      0.0546202479864 * GRP_NumDistPurchases3
1243226   +          +    -0.05240296080421 * GRP_NumDistPurchases4
1243227   +          +     0.28307550964921 * GRP_NumWebPurchases2
1243228   +          +     0.31503543231591 * GRP_NumWebPurchases3
1243229   +          +     0.24817135719308 * GRP_NumWebPurchases4
1243230   +          +    -0.05017370187238 * GRP_RFMstat2  +     0.08161239885611 *
1243231   +        GRP_RFMstat3  +    -0.14085507706312 * GRP_RFMstat4
1243232   +          +     0.11738278568714 * GRP_RMntFrq2  +     0.28471680928269 *
1243233   +        GRP_RMntFrq3  +     0.46590886050772 * GRP_RMntFrq4
1243234   +          +     -0.2318556486679 * GRP_Recency2  +    -0.37508297533514 *
1243235   +        GRP_Recency3  +     0.05823801065489 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00215688122529 * GRP_AcceptedCmp52 + -0.01427589791379 *
GRP_Frq2 + -0.13098496868755 * GRP_Frq3 + -0.30502313457201 * GRP_Frq4 + -0.37973462663051 *
GRP_Income2 + 0.00732780844057 * GRP_Income3 + 0.53278328894406 * GRP_Income4 +
0.29819966041309 * GRP_Mnt2 + 0.25349727466129 * GRP_Mnt3 + 0.10579488290769 * GRP_Mnt4 +
-0.09288921771048 * GRP_MntFishProducts2 + 0.02714802509094 * GRP_MntFishProducts3 +
0.27119078554613 * GRP_MntFishProducts4 + 0.19322428614339 * GRP_MntGoldProds2 +
0.34778546410632 * GRP_MntGoldProds3 + -0.06570146779096 * GRP_MntGoldProds4 +
0.44935275650977 * GRP_MntMeatProducts2 + 0.00805794344265 * GRP_MntMeatProducts3 +
0.02445782833023 * GRP_MntMeatProducts4 + -0.12082391878766 * GRP_MntWines2 +
-0.28739181733976 * GRP_MntWines3 + -0.12417307544408 * GRP_MntWines4 + 0.33901531634752 *
GRP_NumCatalogPurchases3 + -0.0519425405532 * GRP_NumCatalogPurchases4 + 0.03481806823908 *
GRP_NumDistPurchases2 + 0.0546202479864 * GRP_NumDistPurchases3 + -0.05240296080421 *
GRP_NumDistPurchases4 + 0.28307550964921 * GRP_NumWebPurchases2 + 0.31503543231591 *
GRP_NumWebPurchases3 + 0.24817135719308 * GRP_NumWebPurchases4 + -0.05017370187238 *
GRP_RFMstat2 + 0.08161239885611 * GRP_RFMstat3 + -0.14085507706312 * GRP_RFMstat4 +
0.11738278568714 * GRP_RMntFrq2 + 0.28471680928269 * GRP_RMntFrq3 + 0.46590886050772 *
GRP_RMntFrq4 + -0.2318556486679 * GRP_Recency2 + -0.37508297533514 * GRP_Recency3 +
0.05823801065489 * GRP_Recency4 ;
1243236   +   H14  = H14  +      0.4684617848987 * GRP_AcceptedCmp52
1243237   +          +    -0.10078363733095 * GRP_Frq2  +     0.12187262992305 * GRP_Frq3
1243238   +          +     0.06615581853287 * GRP_Frq4  +    -0.37438533196327 *
1243239   +        GRP_Income2  +    -0.54951239852844 * GRP_Income3
1243240   +          +     0.42517426076684 * GRP_Income4  +     0.01160451666213 *
1243241   +        GRP_Mnt2  +    -0.19046851266656 * GRP_Mnt3  +    -0.22599863084471 *
1243242   +        GRP_Mnt4  +     0.02252915755857 * GRP_MntFishProducts2
1243243   +          +    -0.08997232581072 * GRP_MntFishProducts3
1243244   +          +    -0.05669599356928 * GRP_MntFishProducts4
1243245   +          +      0.2199150131909 * GRP_MntGoldProds2
1243246   +          +     0.05584571259838 * GRP_MntGoldProds3
1243247   +          +    -0.13160142309505 * GRP_MntGoldProds4
1243248   +          +      0.2539849640816 * GRP_MntMeatProducts2
1243249   +          +     0.29448191059312 * GRP_MntMeatProducts3
1243250   +          +    -0.33946200154351 * GRP_MntMeatProducts4
1243251   +          +    -0.47231816370111 * GRP_MntWines2  +    -0.35916844796743 *
1243252   +        GRP_MntWines3  +     0.15578356288597 * GRP_MntWines4
1243253   +          +     0.35913140014848 * GRP_NumCatalogPurchases3
1243254   +          +    -0.07798422379681 * GRP_NumCatalogPurchases4
1243255   +          +     0.38206153529506 * GRP_NumDistPurchases2
1243256   +          +     0.08642998303162 * GRP_NumDistPurchases3
1243257   +          +    -0.00375635377885 * GRP_NumDistPurchases4
1243258   +          +    -0.04352529411419 * GRP_NumWebPurchases2
1243259   +          +    -0.17285172586868 * GRP_NumWebPurchases3
1243260   +          +     0.23030028338396 * GRP_NumWebPurchases4
1243261   +          +     0.16194254582104 * GRP_RFMstat2  +    -0.03413270353062 *
1243262   +        GRP_RFMstat3  +    -0.32516629559317 * GRP_RFMstat4
1243263   +          +    -0.16070809362515 * GRP_RMntFrq2  +    -0.17716471899416 *
1243264   +        GRP_RMntFrq3  +     0.09335047904411 * GRP_RMntFrq4
1243265   +          +    -0.92875393407697 * GRP_Recency2  +     0.16068827585896 *
1243266   +        GRP_Recency3  +     0.41807637211453 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.4684617848987 * GRP_AcceptedCmp52 + -0.10078363733095 *
GRP_Frq2 + 0.12187262992305 * GRP_Frq3 + 0.06615581853287 * GRP_Frq4 + -0.37438533196327 *
GRP_Income2 + -0.54951239852844 * GRP_Income3 + 0.42517426076684 * GRP_Income4 +
0.01160451666213 * GRP_Mnt2 + -0.19046851266656 * GRP_Mnt3 + -0.22599863084471 * GRP_Mnt4 +
0.02252915755857 * GRP_MntFishProducts2 + -0.08997232581072 * GRP_MntFishProducts3 +
-0.05669599356928 * GRP_MntFishProducts4 + 0.2199150131909 * GRP_MntGoldProds2 +
0.05584571259838 * GRP_MntGoldProds3 + -0.13160142309505 * GRP_MntGoldProds4 + 0.2539849640816
* GRP_MntMeatProducts2 + 0.29448191059312 * GRP_MntMeatProducts3 + -0.33946200154351 *
GRP_MntMeatProducts4 + -0.47231816370111 * GRP_MntWines2 + -0.35916844796743 * GRP_MntWines3 +
0.15578356288597 * GRP_MntWines4 + 0.35913140014848 * GRP_NumCatalogPurchases3 +
-0.07798422379681 * GRP_NumCatalogPurchases4 + 0.38206153529506 * GRP_NumDistPurchases2 +
0.08642998303162 * GRP_NumDistPurchases3 + -0.00375635377885 * GRP_NumDistPurchases4 +
-0.04352529411419 * GRP_NumWebPurchases2 + -0.17285172586868 * GRP_NumWebPurchases3 +
0.23030028338396 * GRP_NumWebPurchases4 + 0.16194254582104 * GRP_RFMstat2 + -0.03413270353062
* GRP_RFMstat3 + -0.32516629559317 * GRP_RFMstat4 + -0.16070809362515 * GRP_RMntFrq2 +
-0.17716471899416 * GRP_RMntFrq3 + 0.09335047904411 * GRP_RMntFrq4 + -0.92875393407697 *
GRP_Recency2 + 0.16068827585896 * GRP_Recency3 + 0.41807637211453 * GRP_Recency4 ;
1243267   +   H15  = H15  +    -0.78481953865912 * GRP_AcceptedCmp52
1243268   +          +     0.05211963408638 * GRP_Frq2  +     0.24938737986681 * GRP_Frq3
1243269   +          +    -0.07347952562846 * GRP_Frq4  +    -0.15741135518664 *
1243270   +        GRP_Income2  +     0.01909378686442 * GRP_Income3
1243271   +          +    -0.15898085757789 * GRP_Income4  +     0.09202012507046 *
1243272   +        GRP_Mnt2  +    -0.39641738573024 * GRP_Mnt3  +     0.02885484069701 *
1243273   +        GRP_Mnt4  +     0.29554161293423 * GRP_MntFishProducts2
1243274   +          +    -0.04439366722112 * GRP_MntFishProducts3
1243275   +          +    -0.22939355735301 * GRP_MntFishProducts4
1243276   +          +    -0.00367144103801 * GRP_MntGoldProds2
1243277   +          +      -0.033315128385 * GRP_MntGoldProds3
1243278   +          +     0.10655545066126 * GRP_MntGoldProds4
1243279   +          +     0.04927093675686 * GRP_MntMeatProducts2
1243280   +          +    -0.20156680946257 * GRP_MntMeatProducts3
1243281   +          +     0.29394273234417 * GRP_MntMeatProducts4
1243282   +          +     0.27324472738231 * GRP_MntWines2  +       0.398830803883 *
1243283   +        GRP_MntWines3  +    -0.16588038849208 * GRP_MntWines4
1243284   +          +     -0.3438340194477 * GRP_NumCatalogPurchases3
1243285   +          +    -0.37438590488645 * GRP_NumCatalogPurchases4
1243286   +          +    -0.42285816542086 * GRP_NumDistPurchases2
1243287   +          +     -0.1008716650505 * GRP_NumDistPurchases3
1243288   +          +    -0.42793112700917 * GRP_NumDistPurchases4
1243289   +          +    -0.06792665579186 * GRP_NumWebPurchases2
1243290   +          +     0.37113277513001 * GRP_NumWebPurchases3
1243291   +          +     0.05720653023952 * GRP_NumWebPurchases4
1243292   +          +    -0.30997814005221 * GRP_RFMstat2  +     0.06219993861842 *
1243293   +        GRP_RFMstat3  +    -0.22600753085668 * GRP_RFMstat4
1243294   +          +    -0.31041957734532 * GRP_RMntFrq2  +     0.25053172234721 *
1243295   +        GRP_RMntFrq3  +     0.15983683107051 * GRP_RMntFrq4
1243296   +          +     0.52797823019932 * GRP_Recency2  +     0.11382874879823 *
1243297   +        GRP_Recency3  +    -0.22166533511817 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.78481953865912 * GRP_AcceptedCmp52 + 0.05211963408638 *
GRP_Frq2 + 0.24938737986681 * GRP_Frq3 + -0.07347952562846 * GRP_Frq4 + -0.15741135518664 *
GRP_Income2 + 0.01909378686442 * GRP_Income3 + -0.15898085757789 * GRP_Income4 +
0.09202012507046 * GRP_Mnt2 + -0.39641738573024 * GRP_Mnt3 + 0.02885484069701 * GRP_Mnt4 +
0.29554161293423 * GRP_MntFishProducts2 + -0.04439366722112 * GRP_MntFishProducts3 +
-0.22939355735301 * GRP_MntFishProducts4 + -0.00367144103801 * GRP_MntGoldProds2 +
-0.033315128385 * GRP_MntGoldProds3 + 0.10655545066126 * GRP_MntGoldProds4 + 0.04927093675686
* GRP_MntMeatProducts2 + -0.20156680946257 * GRP_MntMeatProducts3 + 0.29394273234417 *
GRP_MntMeatProducts4 + 0.27324472738231 * GRP_MntWines2 + 0.398830803883 * GRP_MntWines3 +
-0.16588038849208 * GRP_MntWines4 + -0.3438340194477 * GRP_NumCatalogPurchases3 +
-0.37438590488645 * GRP_NumCatalogPurchases4 + -0.42285816542086 * GRP_NumDistPurchases2 +
-0.1008716650505 * GRP_NumDistPurchases3 + -0.42793112700917 * GRP_NumDistPurchases4 +
-0.06792665579186 * GRP_NumWebPurchases2 + 0.37113277513001 * GRP_NumWebPurchases3 +
0.05720653023952 * GRP_NumWebPurchases4 + -0.30997814005221 * GRP_RFMstat2 + 0.06219993861842
* GRP_RFMstat3 + -0.22600753085668 * GRP_RFMstat4 + -0.31041957734532 * GRP_RMntFrq2 +
0.25053172234721 * GRP_RMntFrq3 + 0.15983683107051 * GRP_RMntFrq4 + 0.52797823019932 *
GRP_Recency2 + 0.11382874879823 * GRP_Recency3 + -0.22166533511817 * GRP_Recency4 ;
1243298   +   H16  = H16  +      0.7107136456569 * GRP_AcceptedCmp52
1243299   +          +     -0.4751898387651 * GRP_Frq2  +    -0.11277060686411 * GRP_Frq3
1243300   +          +     0.15821547082299 * GRP_Frq4  +    -0.45945049231995 *
1243301   +        GRP_Income2  +    -0.18413512635176 * GRP_Income3
1243302   +          +     0.39594738835509 * GRP_Income4  +    -0.15472205523822 *
1243303   +        GRP_Mnt2  +     0.02844181224363 * GRP_Mnt3  +     0.45435843401555 *
1243304   +        GRP_Mnt4  +    -0.29220588593813 * GRP_MntFishProducts2
1243305   +          +     0.04340555393469 * GRP_MntFishProducts3
1243306   +          +    -0.20048219926361 * GRP_MntFishProducts4
1243307   +          +     0.16101452165456 * GRP_MntGoldProds2
1243308   +          +    -0.04467647211336 * GRP_MntGoldProds3
1243309   +          +     0.32142013598241 * GRP_MntGoldProds4
1243310   +          +     0.29741565154233 * GRP_MntMeatProducts2
1243311   +          +    -0.00264678222241 * GRP_MntMeatProducts3
1243312   +          +    -0.11596499325048 * GRP_MntMeatProducts4
1243313   +          +    -0.29849043995136 * GRP_MntWines2  +     0.14756452272338 *
1243314   +        GRP_MntWines3  +     0.48995265672675 * GRP_MntWines4
1243315   +          +     0.80854583627117 * GRP_NumCatalogPurchases3
1243316   +          +     0.14001888431357 * GRP_NumCatalogPurchases4
1243317   +          +     0.36107050137299 * GRP_NumDistPurchases2
1243318   +          +    -0.10375572120121 * GRP_NumDistPurchases3
1243319   +          +     0.10557004956787 * GRP_NumDistPurchases4
1243320   +          +     0.04608069099876 * GRP_NumWebPurchases2
1243321   +          +     0.15561947954396 * GRP_NumWebPurchases3
1243322   +          +    -0.01081470092004 * GRP_NumWebPurchases4
1243323   +          +     0.21994454623245 * GRP_RFMstat2  +    -0.08858421895818 *
1243324   +        GRP_RFMstat3  +    -0.13608887793525 * GRP_RFMstat4
1243325   +          +     0.07482010458977 * GRP_RMntFrq2  +    -0.11874760292742 *
1243326   +        GRP_RMntFrq3  +     0.56887215594366 * GRP_RMntFrq4
1243327   +          +    -0.13548983954455 * GRP_Recency2  +    -0.25036935235639 *
1243328   +        GRP_Recency3  +     -0.0282277663071 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.7107136456569 * GRP_AcceptedCmp52 + -0.4751898387651 *
GRP_Frq2 + -0.11277060686411 * GRP_Frq3 + 0.15821547082299 * GRP_Frq4 + -0.45945049231995 *
GRP_Income2 + -0.18413512635176 * GRP_Income3 + 0.39594738835509 * GRP_Income4 +
-0.15472205523822 * GRP_Mnt2 + 0.02844181224363 * GRP_Mnt3 + 0.45435843401555 * GRP_Mnt4 +
-0.29220588593813 * GRP_MntFishProducts2 + 0.04340555393469 * GRP_MntFishProducts3 +
-0.20048219926361 * GRP_MntFishProducts4 + 0.16101452165456 * GRP_MntGoldProds2 +
-0.04467647211336 * GRP_MntGoldProds3 + 0.32142013598241 * GRP_MntGoldProds4 +
0.29741565154233 * GRP_MntMeatProducts2 + -0.00264678222241 * GRP_MntMeatProducts3 +
-0.11596499325048 * GRP_MntMeatProducts4 + -0.29849043995136 * GRP_MntWines2 +
0.14756452272338 * GRP_MntWines3 + 0.48995265672675 * GRP_MntWines4 + 0.80854583627117 *
GRP_NumCatalogPurchases3 + 0.14001888431357 * GRP_NumCatalogPurchases4 + 0.36107050137299 *
GRP_NumDistPurchases2 + -0.10375572120121 * GRP_NumDistPurchases3 + 0.10557004956787 *
GRP_NumDistPurchases4 + 0.04608069099876 * GRP_NumWebPurchases2 + 0.15561947954396 *
GRP_NumWebPurchases3 + -0.01081470092004 * GRP_NumWebPurchases4 + 0.21994454623245 *
GRP_RFMstat2 + -0.08858421895818 * GRP_RFMstat3 + -0.13608887793525 * GRP_RFMstat4 +
0.07482010458977 * GRP_RMntFrq2 + -0.11874760292742 * GRP_RMntFrq3 + 0.56887215594366 *
GRP_RMntFrq4 + -0.13548983954455 * GRP_Recency2 + -0.25036935235639 * GRP_Recency3 +
-0.0282277663071 * GRP_Recency4 ;
1243329   +   H17  = H17  +    -0.06745892596619 * GRP_AcceptedCmp52
1243330   +          +    -0.09506194345469 * GRP_Frq2  +    -0.29707644715885 * GRP_Frq3
1243331   +          +    -0.06874693052001 * GRP_Frq4  +    -0.08949373241741 *
1243332   +        GRP_Income2  +     0.02965579603049 * GRP_Income3
1243333   +          +    -0.02192829727213 * GRP_Income4  +     0.30180973300088 *
1243334   +        GRP_Mnt2  +    -0.10648502526616 * GRP_Mnt3  +     0.07588844839465 *
1243335   +        GRP_Mnt4  +    -0.30524623655199 * GRP_MntFishProducts2
1243336   +          +    -0.20032703571491 * GRP_MntFishProducts3
1243337   +          +    -0.08348811352746 * GRP_MntFishProducts4
1243338   +          +    -0.00744131870881 * GRP_MntGoldProds2
1243339   +          +    -0.27347309859096 * GRP_MntGoldProds3
1243340   +          +    -0.04458870469416 * GRP_MntGoldProds4
1243341   +          +     0.17538261434498 * GRP_MntMeatProducts2
1243342   +          +    -0.08059547298843 * GRP_MntMeatProducts3
1243343   +          +     0.03113249898233 * GRP_MntMeatProducts4
1243344   +          +    -0.23690909413276 * GRP_MntWines2  +    -0.01511980231776 *
1243345   +        GRP_MntWines3  +     -0.2825327824317 * GRP_MntWines4
1243346   +          +     0.13919784888607 * GRP_NumCatalogPurchases3
1243347   +          +    -0.10871281978714 * GRP_NumCatalogPurchases4
1243348   +          +     0.20540014620209 * GRP_NumDistPurchases2
1243349   +          +     0.17744784873298 * GRP_NumDistPurchases3
1243350   +          +      -0.003486430833 * GRP_NumDistPurchases4
1243351   +          +    -0.04863967797645 * GRP_NumWebPurchases2
1243352   +          +     0.07245829152192 * GRP_NumWebPurchases3
1243353   +          +    -0.27395606297099 * GRP_NumWebPurchases4
1243354   +          +    -0.14496279180087 * GRP_RFMstat2  +     0.28224463929838 *
1243355   +        GRP_RFMstat3  +     0.26720059295202 * GRP_RFMstat4
1243356   +          +    -0.07120881723264 * GRP_RMntFrq2  +     0.16350065828319 *
1243357   +        GRP_RMntFrq3  +      0.3117297070285 * GRP_RMntFrq4
1243358   +          +    -0.52884474877094 * GRP_Recency2  +    -0.17937099376746 *
1243359   +        GRP_Recency3  +     -0.0157357289132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.06745892596619 * GRP_AcceptedCmp52 + -0.09506194345469 *
GRP_Frq2 + -0.29707644715885 * GRP_Frq3 + -0.06874693052001 * GRP_Frq4 + -0.08949373241741 *
GRP_Income2 + 0.02965579603049 * GRP_Income3 + -0.02192829727213 * GRP_Income4 +
0.30180973300088 * GRP_Mnt2 + -0.10648502526616 * GRP_Mnt3 + 0.07588844839465 * GRP_Mnt4 +
-0.30524623655199 * GRP_MntFishProducts2 + -0.20032703571491 * GRP_MntFishProducts3 +
-0.08348811352746 * GRP_MntFishProducts4 + -0.00744131870881 * GRP_MntGoldProds2 +
-0.27347309859096 * GRP_MntGoldProds3 + -0.04458870469416 * GRP_MntGoldProds4 +
0.17538261434498 * GRP_MntMeatProducts2 + -0.08059547298843 * GRP_MntMeatProducts3 +
0.03113249898233 * GRP_MntMeatProducts4 + -0.23690909413276 * GRP_MntWines2 +
-0.01511980231776 * GRP_MntWines3 + -0.2825327824317 * GRP_MntWines4 + 0.13919784888607 *
GRP_NumCatalogPurchases3 + -0.10871281978714 * GRP_NumCatalogPurchases4 + 0.20540014620209 *
GRP_NumDistPurchases2 + 0.17744784873298 * GRP_NumDistPurchases3 + -0.003486430833 *
GRP_NumDistPurchases4 + -0.04863967797645 * GRP_NumWebPurchases2 + 0.07245829152192 *
GRP_NumWebPurchases3 + -0.27395606297099 * GRP_NumWebPurchases4 + -0.14496279180087 *
GRP_RFMstat2 + 0.28224463929838 * GRP_RFMstat3 + 0.26720059295202 * GRP_RFMstat4 +
-0.07120881723264 * GRP_RMntFrq2 + 0.16350065828319 * GRP_RMntFrq3 + 0.3117297070285 *
GRP_RMntFrq4 + -0.52884474877094 * GRP_Recency2 + -0.17937099376746 * GRP_Recency3 +
-0.0157357289132 * GRP_Recency4 ;
1243360   +   H11  =    -0.76467628027618 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.76467628027618 + H11 ;
1243361   +   H12  =    -0.03405517571825 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03405517571825 + H12 ;
1243362   +   H13  =    -0.32845676351839 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.32845676351839 + H13 ;
1243363   +   H14  =     0.08379615404181 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.08379615404181 + H14 ;
1243364   +   H15  =    -0.77228291932436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.77228291932436 + H15 ;
1243365   +   H16  =    -0.77356855332279 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.77356855332279 + H16 ;
1243366   +   H17  =     0.45067845230796 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.45067845230796 + H17 ;
1243367   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1243368   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1243369   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1243370   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1243371   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1243372   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1243373   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1243374   +END;
MPRINT(EM_DIAGRAM):   END;
1243375   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1243376   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1243377   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1243378   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1243379   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1243380   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1243381   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1243382   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1243383   +END;
MPRINT(EM_DIAGRAM):   END;
1243384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243385   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1243386   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243387   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1243388   +   P_DepVar1  =    -0.15999450347654 * H11  +     1.35667407296837 * H12
1243389   +          +    -0.71419530867579 * H13  +     -1.0947746264744 * H14
1243390   +          +     0.98315214007209 * H15  +    -1.32163386678746 * H16
1243391   +          +    -0.29329090231091 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.15999450347654 * H11 + 1.35667407296837 * H12 +
-0.71419530867579 * H13 + -1.0947746264744 * H14 + 0.98315214007209 * H15 + -1.32163386678746
* H16 + -0.29329090231091 * H17 ;
1243392   +   P_DepVar1  =    -1.66210022161101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66210022161101 + P_DepVar1 ;
1243393   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1243394   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1243395   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1243396   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1243397   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1243398   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1243399   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1243400   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1243401   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1243402   +END;
MPRINT(EM_DIAGRAM):   END;
1243403   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1243404   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1243405   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1243406   +END;
MPRINT(EM_DIAGRAM):   END;
1243407   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1243408   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1243409   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1243410   +END;
MPRINT(EM_DIAGRAM):   END;
1243411   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243412   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1243413   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1243414   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1243415   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1243416   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1243417   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1243418   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1243419   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1243420   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1243421   +END;
MPRINT(EM_DIAGRAM):   END;
1243422   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1243423   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1243424   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1243425   +drop
1243426   +H11
1243427   +H12
1243428   +H13
1243429   +H14
1243430   +H15
1243431   +H16
1243432   +H17
1243433   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1243434   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1243435    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1243436    quit;
1243437    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1243438    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1243439    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1243440    retain ID 2 Node "Neural18";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural18";
1243441    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1243442    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2256 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2256 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1243443    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1243444    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1243445    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2256 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2256 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243446    proc sort data=EMWS8.Neural18_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural18_variableset out=_temp2(keep=NAME CREATOR);
1243447    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1243448    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.NEURAL18_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243449    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1243450    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1243451    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1243452    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243453    proc contents data=EMWS8.Neural18_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural18_train out=_meta(keep=NAME) noprint;
1243454    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1243455    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1243456    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1243457    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1243458    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1243459    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1243460    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1243461    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243462    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1243463    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1243463  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 985 rows and 5 columns.
 
1243464    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1243465    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1243466    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 985 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 985 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243467    filename _pref
1243467  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1243468    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1243469    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1243470   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1243471   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1243472   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1243473   +
1243474   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243475   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1243476   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243477   +LABEL GRP_AcceptedCmp5 =
1243478   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1243479   +
1243480   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1243481   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1243482   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1243483   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1243484   +end;
MPRINT(EM_DIAGRAM):   end;
1243485   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1243486   +if (_UFORMAT eq '0'
1243487   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1243488   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1243489   +end;
MPRINT(EM_DIAGRAM):   end;
1243490   +else
1243491   +if (_UFORMAT eq '1'
1243492   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1243493   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1243494   +end;
MPRINT(EM_DIAGRAM):   end;
1243495   +else do;
MPRINT(EM_DIAGRAM):   else do;
1243496   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1243497   +end;
MPRINT(EM_DIAGRAM):   end;
1243498   +end;
MPRINT(EM_DIAGRAM):   end;
1243499   +
1243500   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243501   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1243502   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243503   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1243504   +
1243505   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1243506   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1243507   +end;
MPRINT(EM_DIAGRAM):   end;
1243508   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1243509   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1243510   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1243511   +end;
MPRINT(EM_DIAGRAM):   end;
1243512   +else
1243513   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1243514   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1243515   +end;
MPRINT(EM_DIAGRAM):   end;
1243516   +else
1243517   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1243518   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1243519   +end;
MPRINT(EM_DIAGRAM):   end;
1243520   +else
1243521   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1243522   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1243523   +end;
MPRINT(EM_DIAGRAM):   end;
1243524   +end;
MPRINT(EM_DIAGRAM):   end;
1243525   +
1243526   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243527   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1243528   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243529   +LABEL GRP_Income =
1243530   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1243531   +
1243532   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1243533   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1243534   +end;
MPRINT(EM_DIAGRAM):   end;
1243535   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1243536   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1243537   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1243538   +end;
MPRINT(EM_DIAGRAM):   end;
1243539   +else
1243540   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1243541   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1243542   +end;
MPRINT(EM_DIAGRAM):   end;
1243543   +else
1243544   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1243545   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1243546   +end;
MPRINT(EM_DIAGRAM):   end;
1243547   +else
1243548   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1243549   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1243550   +end;
MPRINT(EM_DIAGRAM):   end;
1243551   +end;
MPRINT(EM_DIAGRAM):   end;
1243552   +
1243553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243554   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1243555   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243556   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1243557   +
1243558   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1243559   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1243560   +end;
MPRINT(EM_DIAGRAM):   end;
1243561   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1243562   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1243563   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1243564   +end;
MPRINT(EM_DIAGRAM):   end;
1243565   +else
1243566   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1243567   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1243568   +end;
MPRINT(EM_DIAGRAM):   end;
1243569   +else
1243570   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1243571   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1243572   +end;
MPRINT(EM_DIAGRAM):   end;
1243573   +else
1243574   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1243575   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1243576   +end;
MPRINT(EM_DIAGRAM):   end;
1243577   +end;
MPRINT(EM_DIAGRAM):   end;
1243578   +
1243579   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243580   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1243581   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243582   +LABEL GRP_MntFishProducts =
1243583   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1243584   +
1243585   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1243586   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1243587   +end;
MPRINT(EM_DIAGRAM):   end;
1243588   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1243589   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1243590   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1243591   +end;
MPRINT(EM_DIAGRAM):   end;
1243592   +else
1243593   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1243594   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1243595   +end;
MPRINT(EM_DIAGRAM):   end;
1243596   +else
1243597   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1243598   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1243599   +end;
MPRINT(EM_DIAGRAM):   end;
1243600   +else
1243601   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1243602   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1243603   +end;
MPRINT(EM_DIAGRAM):   end;
1243604   +end;
MPRINT(EM_DIAGRAM):   end;
1243605   +
1243606   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243607   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1243608   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243609   +LABEL GRP_MntGoldProds =
1243610   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1243611   +
1243612   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1243613   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1243614   +end;
MPRINT(EM_DIAGRAM):   end;
1243615   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1243616   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1243617   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1243618   +end;
MPRINT(EM_DIAGRAM):   end;
1243619   +else
1243620   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1243621   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1243622   +end;
MPRINT(EM_DIAGRAM):   end;
1243623   +else
1243624   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1243625   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1243626   +end;
MPRINT(EM_DIAGRAM):   end;
1243627   +else
1243628   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1243629   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1243630   +end;
MPRINT(EM_DIAGRAM):   end;
1243631   +end;
MPRINT(EM_DIAGRAM):   end;
1243632   +
1243633   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243634   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1243635   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243636   +LABEL GRP_MntMeatProducts =
1243637   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1243638   +
1243639   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1243640   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1243641   +end;
MPRINT(EM_DIAGRAM):   end;
1243642   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1243643   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1243644   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1243645   +end;
MPRINT(EM_DIAGRAM):   end;
1243646   +else
1243647   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1243648   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1243649   +end;
MPRINT(EM_DIAGRAM):   end;
1243650   +else
1243651   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1243652   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1243653   +end;
MPRINT(EM_DIAGRAM):   end;
1243654   +else
1243655   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1243656   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1243657   +end;
MPRINT(EM_DIAGRAM):   end;
1243658   +end;
MPRINT(EM_DIAGRAM):   end;
1243659   +
1243660   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243661   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1243662   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243663   +LABEL GRP_MntWines =
1243664   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1243665   +
1243666   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1243667   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1243668   +end;
MPRINT(EM_DIAGRAM):   end;
1243669   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1243670   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1243671   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1243672   +end;
MPRINT(EM_DIAGRAM):   end;
1243673   +else
1243674   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1243675   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1243676   +end;
MPRINT(EM_DIAGRAM):   end;
1243677   +else
1243678   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1243679   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1243680   +end;
MPRINT(EM_DIAGRAM):   end;
1243681   +else
1243682   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1243683   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1243684   +end;
MPRINT(EM_DIAGRAM):   end;
1243685   +end;
MPRINT(EM_DIAGRAM):   end;
1243686   +
1243687   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243688   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1243689   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243690   +LABEL GRP_NumCatalogPurchases =
1243691   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1243692   +
1243693   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1243694   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1243695   +end;
MPRINT(EM_DIAGRAM):   end;
1243696   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1243697   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1243698   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1243699   +end;
MPRINT(EM_DIAGRAM):   end;
1243700   +else
1243701   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1243702   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1243703   +end;
MPRINT(EM_DIAGRAM):   end;
1243704   +else
1243705   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1243706   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1243707   +end;
MPRINT(EM_DIAGRAM):   end;
1243708   +else
1243709   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1243710   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1243711   +end;
MPRINT(EM_DIAGRAM):   end;
1243712   +end;
MPRINT(EM_DIAGRAM):   end;
1243713   +
1243714   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243715   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1243716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243717   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1243718   +
1243719   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1243720   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1243721   +end;
MPRINT(EM_DIAGRAM):   end;
1243722   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1243723   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1243724   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1243725   +end;
MPRINT(EM_DIAGRAM):   end;
1243726   +else
1243727   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1243728   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1243729   +end;
MPRINT(EM_DIAGRAM):   end;
1243730   +else
1243731   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1243732   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1243733   +end;
MPRINT(EM_DIAGRAM):   end;
1243734   +else
1243735   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1243736   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1243737   +end;
MPRINT(EM_DIAGRAM):   end;
1243738   +end;
MPRINT(EM_DIAGRAM):   end;
1243739   +
1243740   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243741   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1243742   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243743   +LABEL GRP_NumWebPurchases =
1243744   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1243745   +
1243746   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1243747   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1243748   +end;
MPRINT(EM_DIAGRAM):   end;
1243749   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1243750   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1243751   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1243752   +end;
MPRINT(EM_DIAGRAM):   end;
1243753   +else
1243754   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1243755   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1243756   +end;
MPRINT(EM_DIAGRAM):   end;
1243757   +else
1243758   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1243759   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1243760   +end;
MPRINT(EM_DIAGRAM):   end;
1243761   +else
1243762   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1243763   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1243764   +end;
MPRINT(EM_DIAGRAM):   end;
1243765   +end;
MPRINT(EM_DIAGRAM):   end;
1243766   +
1243767   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243768   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1243769   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243770   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1243771   +
1243772   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1243773   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1243774   +end;
MPRINT(EM_DIAGRAM):   end;
1243775   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1243776   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1243777   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1243778   +end;
MPRINT(EM_DIAGRAM):   end;
1243779   +else
1243780   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1243781   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1243782   +end;
MPRINT(EM_DIAGRAM):   end;
1243783   +else
1243784   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1243785   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1243786   +end;
MPRINT(EM_DIAGRAM):   end;
1243787   +else
1243788   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1243789   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1243790   +end;
MPRINT(EM_DIAGRAM):   end;
1243791   +end;
MPRINT(EM_DIAGRAM):   end;
1243792   +
1243793   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243794   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1243795   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243796   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1243797   +
1243798   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1243799   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1243800   +end;
MPRINT(EM_DIAGRAM):   end;
1243801   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1243802   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1243803   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1243804   +end;
MPRINT(EM_DIAGRAM):   end;
1243805   +else
1243806   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1243807   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1243808   +end;
MPRINT(EM_DIAGRAM):   end;
1243809   +else
1243810   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1243811   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1243812   +end;
MPRINT(EM_DIAGRAM):   end;
1243813   +else
1243814   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1243815   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1243816   +end;
MPRINT(EM_DIAGRAM):   end;
1243817   +end;
MPRINT(EM_DIAGRAM):   end;
1243818   +
1243819   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243820   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1243821   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243822   +LABEL GRP_Recency =
1243823   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1243824   +
1243825   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1243826   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1243827   +end;
MPRINT(EM_DIAGRAM):   end;
1243828   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1243829   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1243830   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1243831   +end;
MPRINT(EM_DIAGRAM):   end;
1243832   +else
1243833   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1243834   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1243835   +end;
MPRINT(EM_DIAGRAM):   end;
1243836   +else
1243837   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1243838   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1243839   +end;
MPRINT(EM_DIAGRAM):   end;
1243840   +else
1243841   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1243842   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1243843   +end;
MPRINT(EM_DIAGRAM):   end;
1243844   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1243845    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1243846    quit;
1243847    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1243848    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1243849    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1243850    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1243851    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1243852    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243853    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1243854    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1243855    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243856    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1243857    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1243858    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1243859    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1243860    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1243861    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1243862    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243863    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1243864    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1243865    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1243866    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1243867    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243868    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1243869    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1243870    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1243871    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1243872    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1243873    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1243873  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.
 
1243874    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243875    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1243876    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 1000 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243877    filename _pref
1243877  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1243878    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1243879    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1243880   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243881   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1243882   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1243883   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1243884   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1243885   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1243886    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1243887    quit;
1243888    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1243889    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1243890    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1243891    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1243892    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1243893    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243894    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1243895    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1243896    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243897    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1243898    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1243899    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243900    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1243901    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1243902    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1243903    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1243904    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1243905    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1243906    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1243907    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1243908    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1243909    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1243910    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1243911    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1243912    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243913    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1243914    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1243914  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1243915    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243916    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1243917    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 1004 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1243918    filename _pref
1243918  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1243919    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1243920    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1243921   +
1243922   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1243923   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1243923  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1243924   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1243925   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1243926   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1243927   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1243928   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1243929    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1243930    quit;
1243931    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1243932    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1243933    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1243934    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1243935    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1243936    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243937    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1243938    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1243939    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1243940    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1243941    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1243942    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243943    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1243944    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1243945    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1243946    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243947    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1243948    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1243949    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1243950    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1243951    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243952    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1243953    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1243954    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1243955    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243956    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1243957    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1243957  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1243958    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1243959    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1243960    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 1043 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1243961    filename _pref
1243961  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1243962    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1243963    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1243964   +
1243965   +
1243966   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1243967   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1243968   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1243969   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1243970   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1243971   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1243972   +
1243973   +
1243974   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1243975   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1243976   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1243977   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1243978   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1243979   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1243980   +
1243981   +
1243982   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1243983   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1243984   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1243985   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1243986   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1243987   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1243988   +
1243989   +
1243990   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1243991   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1243992   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1243993   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1243994   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1243995   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1243996   +
1243997   +
1243998   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1243999   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1244000   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1244001   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1244002   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1244003   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1244004   +
1244005   +
1244006   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1244007   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1244008   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1244009   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1244010   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1244011   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1244012   +
1244013   +
1244014   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1244015   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1244016   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1244017   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1244018   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1244019   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1244020   +
1244021   +
1244022   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1244023   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1244024   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1244025   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1244026   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1244027   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1244028   +if
1244029   +_FILTERNORM1 not in ( '.')
1244030   + and
1244031   +_FILTERNORM2 not in ( '.')
1244032   + and
1244033   +_FILTERNORM3 not in ( '.')
1244034   + and
1244035   +_FILTERNORM4 not in ( '.')
1244036   + and
1244037   +_FILTERNORM5 not in ( '.')
1244038   + and
1244039   +_FILTERNORM6 not in ( '.')
1244040   + and
1244041   +_FILTERNORM7 not in ( ' ')
1244042   + and
1244043   +_FILTERNORM8 not in ( ' ')
1244044   +and
1244045   +( Dt_Customer ne .)
1244046   +and ( Income ne . and (Income<=107000))
1244047   +and ( Kidhome ne .)
1244048   +and ( MntFishProducts ne .)
1244049   +and ( MntFruits ne .)
1244050   +and ( MntGoldProds ne .)
1244051   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1244052   +and ( MntSweetProducts ne .)
1244053   +and ( MntWines ne .)
1244054   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1244055   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1244056   +and ( NumStorePurchases ne .)
1244057   +and ( NumWebPurchases ne .)
1244058   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1244059   +and ( Recency ne .)
1244060   +and ( Teenhome ne .)
1244061   +and ( Year_Birth ne .)
1244062   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1244063   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1244064   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1244065   +end;
MPRINT(EM_DIAGRAM):   end;
1244066   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1244067   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1244068    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1244069    quit;
1244070    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1244071    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1244072    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1244073    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1244074    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1244075    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1244076    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1244077    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1244078    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1244079    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1244080    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1244081    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1244082    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1244083    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1244084    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1244085    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1244086    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1244087    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1244088    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1244089    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1244090    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1244091    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1244092    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1244093    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1244094    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1244095    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1244096    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1244096  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1244097    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1244098    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1244099    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 1109 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1244100    %macro varDept(fcmpdata=,id=);
1244101    %global nobs&id scoreFlag&id;
1244102    %let scoreFlag&id = 0;
1244103    %if &id=1 or ^&fcmpStart %then %do;
1244104    proc sort data=&fcmpdata out=_temp&id nodupkey;
1244105    by NAME;
1244106    where id=&id and LHS in( %let j=1;
1244107    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1244108    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1244109    "&var" %let j = %eval(&j+1);
1244110    %end;
1244111    );
1244112    run;
1244113    %let dsid = %sysfunc(open(_temp&id));
1244114    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1244115    %let dsid = %sysfunc(close(&dsid));
1244116    %if &&nobs&id %then %do;
1244117    %let scoreFlag&id = 1;
1244118    %let fcmpStart = 1;
1244119    %end;
1244120    %else %let fcmpStart = 0;
1244121    %end;
1244122    %else %do;
1244123    proc sort data=&fcmpdata out=_tempid;
1244124    where id=&id;
1244125    by LHS;
1244126    run;
1244127    %let dsid = %sysfunc(open(_tempid));
1244128    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1244129    %let dsid = %sysfunc(close(&dsid));
1244130    %if ^&&nobs&id %then %do;
1244131    proc datasets lib=work nolist;
1244132    delete _tempid;
1244133    run;
1244134    quit;
1244135    %end;
1244136    %else %do;
1244137    data _tempAll;
1244138    set %let j=%eval(&id-1);
1244139    %do x=1 %to &j;
1244140    %if &&nobs&x %then %do;
1244141    _temp&x %end;
1244142    %end;
1244143    ;
1244144    run;
1244145    proc sql;
1244146    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1244146  ! work._tempid p2 where p.name=p2.lhs;
1244147    quit;
1244148    data _temp&id;
1244149    set _temp&id;
1244150    where LHS ne '' and NAME ne '' and Node ne '';
1244151    run;
1244152    proc datasets lib=work nolist;
1244153    delete _tempAll;
1244154    run;
1244155    %let dsid = %sysfunc(open(_temp&id));
1244156    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1244157    %let dsid = %sysfunc(close(&dsid));
1244158    %if ^&&nobs&id %then %do;
1244159    proc datasets lib=work nolist;
1244160    delete _temp&id;
1244161    run;
1244162    quit;
1244163    %end;
1244164    %else %do;
1244165    %let scoreFlag&id = 1;
1244166    data _temp&id;
1244167    set _temp&id;
1244168    where LHS ne NAME and node ne '';
1244169    run;
1244170    %let dsid = %sysfunc(open(_temp&id));
1244171    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1244172    %let dsid = %sysfunc(close(&dsid));
1244173    %if ^&&nobs&id %then %do;
1244174    proc datasets lib=work nolist;
1244175    delete _temp&id;
1244176    run;
1244177    quit;
1244178    %end;
1244179    %else %do;
1244180    proc sort data=_temp&id nodupkey;
1244181    by LHS NAME;
1244182    run;
1244183    %end;
1244184    %end;
1244185    %end;
1244186    %end;
1244187    %mend varDept;
1244188    %macro optCode(outdata=fcmpdata);
1244189    %global fcmpStart;
1244190    %let fcmpStart = 0;
1244191    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1244192    %let NumNodes=9;
1244193    %do k=1 %to &NumNodes;
1244194    %vardept(fcmpdata=&outdata, id=&k);
1244195    %end;
1244196    %mend optCode;
1244197    %optcode(outData=EMWS8.Ensmbl7_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1244198    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1244199    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1244200    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1244201    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1244202    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1244203    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1244204    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1244205    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1244206    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1244207    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1244207  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1244208    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1244209    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1244210    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1244211    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1244212    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1244213    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1244214    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1244215    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1244216    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1244217    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1244218    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1244219    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1244220    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1244221    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1244221  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.
 
1244222    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1244223    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1244224    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1244225    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1244226    filename _pref
1244226  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMPUBLISHSCORE.sas";
1244227    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1244228    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMPUBLISHSCORE.sas.
1244229   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1244230   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1244231   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1244232   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1244233   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1244234   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1244235   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1244236   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1244237   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1244238   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1244239   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1244240   +LENGTH _WARN_ $4
1244241   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1244242   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1244243   +
1244244   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1244245   +
1244246   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1244247   +
1244248   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1244249   +
1244250   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1244251   +
1244252   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1244253   +
1244254   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1244255   +
1244256   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1244257   +
1244258   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1244259   +
1244260   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1244261   +
1244262   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1244263   +
1244264   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1244265   +
1244266   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1244267   +
1244268   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1244269   +
1244270   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1244271   +
1244272   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1244273   +
1244274   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1244275   +
1244276   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1244277   +
1244278   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1244279   +
1244280   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1244281   +
1244282   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1244283   +
1244284   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1244285   +
1244286   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1244287   +
1244288   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1244289   +
1244290   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1244291   +
1244292   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1244293   +
1244294   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1244295   +
1244296   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1244297   +
1244298   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1244299   +
1244300   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1244301   +
1244302   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1244303   +
1244304   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1244305   +
1244306   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1244307   +
1244308   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1244309   +
1244310   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1244311   +
1244312   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1244313   +
1244314   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1244315   +
1244316   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1244317   +
1244318   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1244319   +
1244320   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1244321   +
1244322   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1244323   +
1244324   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1244325   +
1244326   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1244327   +
1244328   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1244329   +
1244330   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1244331   +
1244332   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1244333   +
1244334   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1244335   +
1244336   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1244337   +
1244338   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1244339   +
1244340   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1244341   +
1244342   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1244343   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1244344   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1244345   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1244346   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244347   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244348   +end;
MPRINT(EM_DIAGRAM):   end;
1244349   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244350   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244351   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1244352   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244353   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1244354   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1244355   +   end;
MPRINT(EM_DIAGRAM):   end;
1244356   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1244357   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1244358   +   end;
MPRINT(EM_DIAGRAM):   end;
1244359   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244360   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1244361   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244362   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244363   +   end;
MPRINT(EM_DIAGRAM):   end;
1244364   +end;
MPRINT(EM_DIAGRAM):   end;
1244365   +
1244366   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1244367   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1244368   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1244369   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1244370   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1244371   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1244372   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244373   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244374   +end;
MPRINT(EM_DIAGRAM):   end;
1244375   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244376   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244377   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1244378   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244379   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1244380   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1244381   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1244382   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1244383   +   end;
MPRINT(EM_DIAGRAM):   end;
1244384   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1244385   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1244386   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1244387   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1244388   +   end;
MPRINT(EM_DIAGRAM):   end;
1244389   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1244390   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1244391   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1244392   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1244393   +   end;
MPRINT(EM_DIAGRAM):   end;
1244394   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1244395   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1244396   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1244397   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1244398   +   end;
MPRINT(EM_DIAGRAM):   end;
1244399   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244400   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1244401   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1244402   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1244403   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244404   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244405   +   end;
MPRINT(EM_DIAGRAM):   end;
1244406   +end;
MPRINT(EM_DIAGRAM):   end;
1244407   +
1244408   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1244409   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1244410   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1244411   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1244412   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1244413   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1244414   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244415   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244416   +end;
MPRINT(EM_DIAGRAM):   end;
1244417   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244418   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244419   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1244420   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244421   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1244422   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1244423   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1244424   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1244425   +   end;
MPRINT(EM_DIAGRAM):   end;
1244426   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1244427   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1244428   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1244429   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1244430   +   end;
MPRINT(EM_DIAGRAM):   end;
1244431   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1244432   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1244433   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1244434   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1244435   +   end;
MPRINT(EM_DIAGRAM):   end;
1244436   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1244437   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1244438   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1244439   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1244440   +   end;
MPRINT(EM_DIAGRAM):   end;
1244441   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244442   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1244443   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1244444   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1244445   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244446   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244447   +   end;
MPRINT(EM_DIAGRAM):   end;
1244448   +end;
MPRINT(EM_DIAGRAM):   end;
1244449   +
1244450   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1244451   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1244452   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1244453   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1244454   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1244455   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1244456   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244457   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244458   +end;
MPRINT(EM_DIAGRAM):   end;
1244459   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244460   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244461   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1244462   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244463   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1244464   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1244465   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1244466   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1244467   +   end;
MPRINT(EM_DIAGRAM):   end;
1244468   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1244469   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1244470   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1244471   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1244472   +   end;
MPRINT(EM_DIAGRAM):   end;
1244473   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1244474   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1244475   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1244476   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1244477   +   end;
MPRINT(EM_DIAGRAM):   end;
1244478   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1244479   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1244480   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1244481   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1244482   +   end;
MPRINT(EM_DIAGRAM):   end;
1244483   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244484   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1244485   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1244486   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1244487   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244488   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244489   +   end;
MPRINT(EM_DIAGRAM):   end;
1244490   +end;
MPRINT(EM_DIAGRAM):   end;
1244491   +
1244492   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1244493   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1244494   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1244495   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1244496   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1244497   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1244498   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244499   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244500   +end;
MPRINT(EM_DIAGRAM):   end;
1244501   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244502   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244503   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1244504   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244505   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1244506   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1244507   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1244508   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1244509   +   end;
MPRINT(EM_DIAGRAM):   end;
1244510   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1244511   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1244512   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1244513   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1244514   +   end;
MPRINT(EM_DIAGRAM):   end;
1244515   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1244516   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1244517   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1244518   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1244519   +   end;
MPRINT(EM_DIAGRAM):   end;
1244520   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1244521   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1244522   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1244523   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1244524   +   end;
MPRINT(EM_DIAGRAM):   end;
1244525   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244526   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1244527   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1244528   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1244529   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244530   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244531   +   end;
MPRINT(EM_DIAGRAM):   end;
1244532   +end;
MPRINT(EM_DIAGRAM):   end;
1244533   +
1244534   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1244535   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1244536   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1244537   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1244538   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1244539   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1244540   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244541   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244542   +end;
MPRINT(EM_DIAGRAM):   end;
1244543   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244544   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244545   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1244546   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244547   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1244548   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1244549   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1244550   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1244551   +   end;
MPRINT(EM_DIAGRAM):   end;
1244552   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1244553   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1244554   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1244555   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1244556   +   end;
MPRINT(EM_DIAGRAM):   end;
1244557   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1244558   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1244559   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1244560   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1244561   +   end;
MPRINT(EM_DIAGRAM):   end;
1244562   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1244563   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1244564   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1244565   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1244566   +   end;
MPRINT(EM_DIAGRAM):   end;
1244567   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244568   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1244569   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1244570   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1244571   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244572   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244573   +   end;
MPRINT(EM_DIAGRAM):   end;
1244574   +end;
MPRINT(EM_DIAGRAM):   end;
1244575   +
1244576   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1244577   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1244578   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1244579   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1244580   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1244581   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1244582   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244583   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244584   +end;
MPRINT(EM_DIAGRAM):   end;
1244585   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244586   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244587   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1244588   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244589   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1244590   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1244591   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1244592   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1244593   +   end;
MPRINT(EM_DIAGRAM):   end;
1244594   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1244595   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1244596   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1244597   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1244598   +   end;
MPRINT(EM_DIAGRAM):   end;
1244599   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1244600   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1244601   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1244602   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1244603   +   end;
MPRINT(EM_DIAGRAM):   end;
1244604   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1244605   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1244606   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1244607   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1244608   +   end;
MPRINT(EM_DIAGRAM):   end;
1244609   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244610   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1244611   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1244612   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1244613   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244614   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244615   +   end;
MPRINT(EM_DIAGRAM):   end;
1244616   +end;
MPRINT(EM_DIAGRAM):   end;
1244617   +
1244618   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1244619   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1244620   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1244621   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1244622   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1244623   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1244624   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244625   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244626   +end;
MPRINT(EM_DIAGRAM):   end;
1244627   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244628   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244629   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1244630   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244631   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1244632   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1244633   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1244634   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1244635   +   end;
MPRINT(EM_DIAGRAM):   end;
1244636   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1244637   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1244638   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1244639   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1244640   +   end;
MPRINT(EM_DIAGRAM):   end;
1244641   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1244642   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1244643   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1244644   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1244645   +   end;
MPRINT(EM_DIAGRAM):   end;
1244646   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1244647   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1244648   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1244649   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1244650   +   end;
MPRINT(EM_DIAGRAM):   end;
1244651   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244652   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1244653   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1244654   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1244655   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244656   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244657   +   end;
MPRINT(EM_DIAGRAM):   end;
1244658   +end;
MPRINT(EM_DIAGRAM):   end;
1244659   +
1244660   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1244661   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1244662   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1244663   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1244664   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1244665   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244666   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244667   +end;
MPRINT(EM_DIAGRAM):   end;
1244668   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244669   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244670   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1244671   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244672   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1244673   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1244674   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1244675   +   end;
MPRINT(EM_DIAGRAM):   end;
1244676   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1244677   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1244678   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1244679   +   end;
MPRINT(EM_DIAGRAM):   end;
1244680   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1244681   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1244682   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1244683   +   end;
MPRINT(EM_DIAGRAM):   end;
1244684   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244685   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1244686   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1244687   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244688   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244689   +   end;
MPRINT(EM_DIAGRAM):   end;
1244690   +end;
MPRINT(EM_DIAGRAM):   end;
1244691   +
1244692   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1244693   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1244694   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1244695   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1244696   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1244697   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1244698   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244699   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244700   +end;
MPRINT(EM_DIAGRAM):   end;
1244701   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244702   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244703   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1244704   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244705   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1244706   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1244707   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1244708   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1244709   +   end;
MPRINT(EM_DIAGRAM):   end;
1244710   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1244711   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1244712   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1244713   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1244714   +   end;
MPRINT(EM_DIAGRAM):   end;
1244715   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1244716   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1244717   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1244718   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1244719   +   end;
MPRINT(EM_DIAGRAM):   end;
1244720   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1244721   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1244722   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1244723   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1244724   +   end;
MPRINT(EM_DIAGRAM):   end;
1244725   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244726   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1244727   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1244728   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1244729   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244730   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244731   +   end;
MPRINT(EM_DIAGRAM):   end;
1244732   +end;
MPRINT(EM_DIAGRAM):   end;
1244733   +
1244734   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1244735   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1244736   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1244737   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1244738   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1244739   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1244740   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244741   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244742   +end;
MPRINT(EM_DIAGRAM):   end;
1244743   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244744   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244745   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1244746   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244747   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1244748   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1244749   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1244750   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1244751   +   end;
MPRINT(EM_DIAGRAM):   end;
1244752   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1244753   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1244754   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1244755   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1244756   +   end;
MPRINT(EM_DIAGRAM):   end;
1244757   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1244758   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1244759   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1244760   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1244761   +   end;
MPRINT(EM_DIAGRAM):   end;
1244762   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1244763   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1244764   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1244765   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1244766   +   end;
MPRINT(EM_DIAGRAM):   end;
1244767   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244768   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1244769   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1244770   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1244771   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244772   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244773   +   end;
MPRINT(EM_DIAGRAM):   end;
1244774   +end;
MPRINT(EM_DIAGRAM):   end;
1244775   +
1244776   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1244777   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1244778   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1244779   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1244780   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1244781   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1244782   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244783   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244784   +end;
MPRINT(EM_DIAGRAM):   end;
1244785   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244786   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244787   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1244788   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244789   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1244790   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1244791   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1244792   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1244793   +   end;
MPRINT(EM_DIAGRAM):   end;
1244794   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1244795   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1244796   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1244797   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1244798   +   end;
MPRINT(EM_DIAGRAM):   end;
1244799   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1244800   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1244801   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1244802   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1244803   +   end;
MPRINT(EM_DIAGRAM):   end;
1244804   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1244805   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1244806   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1244807   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1244808   +   end;
MPRINT(EM_DIAGRAM):   end;
1244809   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244810   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1244811   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1244812   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1244813   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244814   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244815   +   end;
MPRINT(EM_DIAGRAM):   end;
1244816   +end;
MPRINT(EM_DIAGRAM):   end;
1244817   +
1244818   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1244819   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1244820   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1244821   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1244822   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1244823   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1244824   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244825   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244826   +end;
MPRINT(EM_DIAGRAM):   end;
1244827   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244828   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244829   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1244830   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244831   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1244832   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1244833   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1244834   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1244835   +   end;
MPRINT(EM_DIAGRAM):   end;
1244836   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1244837   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1244838   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1244839   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1244840   +   end;
MPRINT(EM_DIAGRAM):   end;
1244841   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1244842   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1244843   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1244844   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1244845   +   end;
MPRINT(EM_DIAGRAM):   end;
1244846   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1244847   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1244848   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1244849   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1244850   +   end;
MPRINT(EM_DIAGRAM):   end;
1244851   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244852   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1244853   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1244854   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1244855   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244856   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244857   +   end;
MPRINT(EM_DIAGRAM):   end;
1244858   +end;
MPRINT(EM_DIAGRAM):   end;
1244859   +
1244860   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1244861   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1244862   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1244863   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1244864   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1244865   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1244866   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1244867   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244868   +end;
MPRINT(EM_DIAGRAM):   end;
1244869   +else do;
MPRINT(EM_DIAGRAM):   else do;
1244870   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1244871   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1244872   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1244873   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1244874   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1244875   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1244876   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1244877   +   end;
MPRINT(EM_DIAGRAM):   end;
1244878   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1244879   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1244880   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1244881   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1244882   +   end;
MPRINT(EM_DIAGRAM):   end;
1244883   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1244884   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1244885   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1244886   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1244887   +   end;
MPRINT(EM_DIAGRAM):   end;
1244888   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1244889   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1244890   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1244891   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1244892   +   end;
MPRINT(EM_DIAGRAM):   end;
1244893   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1244894   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1244895   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1244896   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1244897   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1244898   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244899   +   end;
MPRINT(EM_DIAGRAM):   end;
1244900   +end;
MPRINT(EM_DIAGRAM):   end;
1244901   +
1244902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244903   +*** Checking missing input Interval
1244904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1244905   +
1244906   +IF NMISS(
1244907   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1244908   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1244909   +
1244910   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1244911   +END;
MPRINT(EM_DIAGRAM):   END;
1244912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244913   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1244914   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244915   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1244916   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1244917   +END;
MPRINT(EM_DIAGRAM):   END;
1244918   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1244919   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1244920   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1244921   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1244922   +END;
MPRINT(EM_DIAGRAM):   END;
1244923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244924   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1244925   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244926   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244927   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1244928   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1244929   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1244930   +   H11  =     0.04727192845675 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.04727192845675 * S_Year_Birth ;
1244931   +   H12  =    -0.03499603197831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.03499603197831 * S_Year_Birth ;
1244932   +   H13  =      -0.249387333167 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.249387333167 * S_Year_Birth ;
1244933   +   H14  =    -0.18145230662582 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.18145230662582 * S_Year_Birth ;
1244934   +   H15  =    -0.07744416350216 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.07744416350216 * S_Year_Birth ;
1244935   +   H11  = H11  +    -0.25371698668168 * GRP_AcceptedCmp52
1244936   +          +     0.38185615945621 * GRP_Frq2  +     0.03545555759423 * GRP_Frq3
1244937   +          +    -0.00061660249238 * GRP_Frq4  +     0.41779261820045 *
1244938   +        GRP_Income2  +     0.51800912898069 * GRP_Income3
1244939   +          +    -0.36427548932695 * GRP_Income4  +    -0.06433979614617 *
1244940   +        GRP_Mnt2  +     0.00045120565293 * GRP_Mnt3  +    -0.13992317322759 *
1244941   +        GRP_Mnt4  +     0.34207391538024 * GRP_MntFishProducts2
1244942   +          +     0.03411739869638 * GRP_MntFishProducts3
1244943   +          +      -0.083693402353 * GRP_MntFishProducts4
1244944   +          +     -0.1318128730187 * GRP_MntGoldProds2
1244945   +          +     -0.0614737729382 * GRP_MntGoldProds3
1244946   +          +    -0.00372986687449 * GRP_MntGoldProds4
1244947   +          +     -0.3129171829017 * GRP_MntMeatProducts2
1244948   +          +     0.01519664718127 * GRP_MntMeatProducts3
1244949   +          +     0.29997111548812 * GRP_MntMeatProducts4
1244950   +          +       0.389673942682 * GRP_MntWines2  +     0.21159785789434 *
1244951   +        GRP_MntWines3  +    -0.26921349986988 * GRP_MntWines4
1244952   +          +    -0.47013218092095 * GRP_NumCatalogPurchases3
1244953   +          +     0.23943411636141 * GRP_NumCatalogPurchases4
1244954   +          +    -0.68715024477164 * GRP_NumDistPurchases2
1244955   +          +    -0.09178471992122 * GRP_NumDistPurchases3
1244956   +          +    -0.01170225640351 * GRP_NumDistPurchases4
1244957   +          +    -0.14760833919227 * GRP_NumWebPurchases2
1244958   +          +     0.02966820025811 * GRP_NumWebPurchases3
1244959   +          +    -0.04127892210576 * GRP_NumWebPurchases4
1244960   +          +    -0.45467119970502 * GRP_RFMstat2  +    -0.14644406995031 *
1244961   +        GRP_RFMstat3  +    -0.12660007404037 * GRP_RFMstat4
1244962   +          +     0.04829215694488 * GRP_RMntFrq2  +     0.10137738373353 *
1244963   +        GRP_RMntFrq3  +     -0.2873514159435 * GRP_RMntFrq4
1244964   +          +     0.61737333380878 * GRP_Recency2  +     0.16651370318087 *
1244965   +        GRP_Recency3  +    -0.15382569411658 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25371698668168 * GRP_AcceptedCmp52 + 0.38185615945621 *
GRP_Frq2 + 0.03545555759423 * GRP_Frq3 + -0.00061660249238 * GRP_Frq4 + 0.41779261820045 *
GRP_Income2 + 0.51800912898069 * GRP_Income3 + -0.36427548932695 * GRP_Income4 +
-0.06433979614617 * GRP_Mnt2 + 0.00045120565293 * GRP_Mnt3 + -0.13992317322759 * GRP_Mnt4 +
0.34207391538024 * GRP_MntFishProducts2 + 0.03411739869638 * GRP_MntFishProducts3 +
-0.083693402353 * GRP_MntFishProducts4 + -0.1318128730187 * GRP_MntGoldProds2 +
-0.0614737729382 * GRP_MntGoldProds3 + -0.00372986687449 * GRP_MntGoldProds4 +
-0.3129171829017 * GRP_MntMeatProducts2 + 0.01519664718127 * GRP_MntMeatProducts3 +
0.29997111548812 * GRP_MntMeatProducts4 + 0.389673942682 * GRP_MntWines2 + 0.21159785789434 *
GRP_MntWines3 + -0.26921349986988 * GRP_MntWines4 + -0.47013218092095 *
GRP_NumCatalogPurchases3 + 0.23943411636141 * GRP_NumCatalogPurchases4 + -0.68715024477164 *
GRP_NumDistPurchases2 + -0.09178471992122 * GRP_NumDistPurchases3 + -0.01170225640351 *
GRP_NumDistPurchases4 + -0.14760833919227 * GRP_NumWebPurchases2 + 0.02966820025811 *
GRP_NumWebPurchases3 + -0.04127892210576 * GRP_NumWebPurchases4 + -0.45467119970502 *
GRP_RFMstat2 + -0.14644406995031 * GRP_RFMstat3 + -0.12660007404037 * GRP_RFMstat4 +
0.04829215694488 * GRP_RMntFrq2 + 0.10137738373353 * GRP_RMntFrq3 + -0.2873514159435 *
GRP_RMntFrq4 + 0.61737333380878 * GRP_Recency2 + 0.16651370318087 * GRP_Recency3 +
-0.15382569411658 * GRP_Recency4 ;
1244966   +   H12  = H12  +    -0.00960598895677 * GRP_AcceptedCmp52
1244967   +          +    -0.13877780492855 * GRP_Frq2  +    -0.12078849771739 * GRP_Frq3
1244968   +          +     0.25058833013238 * GRP_Frq4  +     0.13932014454657 *
1244969   +        GRP_Income2  +    -0.11560599273748 * GRP_Income3
1244970   +          +    -0.36622829757109 * GRP_Income4  +     0.12796853065131 *
1244971   +        GRP_Mnt2  +    -0.15829126446209 * GRP_Mnt3  +    -0.35779207872654 *
1244972   +        GRP_Mnt4  +     0.06590491513415 * GRP_MntFishProducts2
1244973   +          +     0.00842475350903 * GRP_MntFishProducts3
1244974   +          +     -0.1623103908885 * GRP_MntFishProducts4
1244975   +          +    -0.23845524931139 * GRP_MntGoldProds2
1244976   +          +    -0.07128567155438 * GRP_MntGoldProds3
1244977   +          +     0.25778887379163 * GRP_MntGoldProds4
1244978   +          +    -0.12224351227219 * GRP_MntMeatProducts2
1244979   +          +     0.06269922653052 * GRP_MntMeatProducts3
1244980   +          +      0.2587215409794 * GRP_MntMeatProducts4
1244981   +          +     0.20096090232239 * GRP_MntWines2  +    -0.16858917844476 *
1244982   +        GRP_MntWines3  +     0.03815809499779 * GRP_MntWines4
1244983   +          +     0.05177526225067 * GRP_NumCatalogPurchases3
1244984   +          +    -0.18831777813313 * GRP_NumCatalogPurchases4
1244985   +          +     0.12374838743082 * GRP_NumDistPurchases2
1244986   +          +    -0.19910688422086 * GRP_NumDistPurchases3
1244987   +          +    -0.03804569737208 * GRP_NumDistPurchases4
1244988   +          +    -0.17179633678901 * GRP_NumWebPurchases2
1244989   +          +    -0.08560184232365 * GRP_NumWebPurchases3
1244990   +          +     0.09237237622553 * GRP_NumWebPurchases4
1244991   +          +     0.01544327143979 * GRP_RFMstat2  +      0.1127818122444 *
1244992   +        GRP_RFMstat3  +    -0.21371736650143 * GRP_RFMstat4
1244993   +          +    -0.14005478166078 * GRP_RMntFrq2  +     0.07954568858907 *
1244994   +        GRP_RMntFrq3  +    -0.02313269086836 * GRP_RMntFrq4
1244995   +          +     0.04358116545272 * GRP_Recency2  +    -0.02969695172962 *
1244996   +        GRP_Recency3  +     0.00206593904485 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00960598895677 * GRP_AcceptedCmp52 + -0.13877780492855 *
GRP_Frq2 + -0.12078849771739 * GRP_Frq3 + 0.25058833013238 * GRP_Frq4 + 0.13932014454657 *
GRP_Income2 + -0.11560599273748 * GRP_Income3 + -0.36622829757109 * GRP_Income4 +
0.12796853065131 * GRP_Mnt2 + -0.15829126446209 * GRP_Mnt3 + -0.35779207872654 * GRP_Mnt4 +
0.06590491513415 * GRP_MntFishProducts2 + 0.00842475350903 * GRP_MntFishProducts3 +
-0.1623103908885 * GRP_MntFishProducts4 + -0.23845524931139 * GRP_MntGoldProds2 +
-0.07128567155438 * GRP_MntGoldProds3 + 0.25778887379163 * GRP_MntGoldProds4 +
-0.12224351227219 * GRP_MntMeatProducts2 + 0.06269922653052 * GRP_MntMeatProducts3 +
0.2587215409794 * GRP_MntMeatProducts4 + 0.20096090232239 * GRP_MntWines2 + -0.16858917844476
* GRP_MntWines3 + 0.03815809499779 * GRP_MntWines4 + 0.05177526225067 *
GRP_NumCatalogPurchases3 + -0.18831777813313 * GRP_NumCatalogPurchases4 + 0.12374838743082 *
GRP_NumDistPurchases2 + -0.19910688422086 * GRP_NumDistPurchases3 + -0.03804569737208 *
GRP_NumDistPurchases4 + -0.17179633678901 * GRP_NumWebPurchases2 + -0.08560184232365 *
GRP_NumWebPurchases3 + 0.09237237622553 * GRP_NumWebPurchases4 + 0.01544327143979 *
GRP_RFMstat2 + 0.1127818122444 * GRP_RFMstat3 + -0.21371736650143 * GRP_RFMstat4 +
-0.14005478166078 * GRP_RMntFrq2 + 0.07954568858907 * GRP_RMntFrq3 + -0.02313269086836 *
GRP_RMntFrq4 + 0.04358116545272 * GRP_Recency2 + -0.02969695172962 * GRP_Recency3 +
0.00206593904485 * GRP_Recency4 ;
1244997   +   H13  = H13  +     0.11273135858209 * GRP_AcceptedCmp52
1244998   +          +    -0.15015665173608 * GRP_Frq2  +    -0.20454924588356 * GRP_Frq3
1244999   +          +    -0.04047998964496 * GRP_Frq4  +    -0.29897237144541 *
1245000   +        GRP_Income2  +      -0.028464296882 * GRP_Income3
1245001   +          +     0.24836294191696 * GRP_Income4  +     0.08738925553158 *
1245002   +        GRP_Mnt2  +     0.00962293230168 * GRP_Mnt3  +    -0.12661643514597 *
1245003   +        GRP_Mnt4  +    -0.03747719154948 * GRP_MntFishProducts2
1245004   +          +    -0.07078012229572 * GRP_MntFishProducts3
1245005   +          +    -0.14569186671189 * GRP_MntFishProducts4
1245006   +          +     0.14963390032413 * GRP_MntGoldProds2
1245007   +          +    -0.11869917970226 * GRP_MntGoldProds3
1245008   +          +     0.25943105626615 * GRP_MntGoldProds4
1245009   +          +     0.36609689271233 * GRP_MntMeatProducts2
1245010   +          +     0.10969864655073 * GRP_MntMeatProducts3
1245011   +          +    -0.03446779336952 * GRP_MntMeatProducts4
1245012   +          +    -0.16882321573662 * GRP_MntWines2  +     0.07914922328232 *
1245013   +        GRP_MntWines3  +     0.13243594484158 * GRP_MntWines4
1245014   +          +     0.39758714937962 * GRP_NumCatalogPurchases3
1245015   +          +     0.31434011051179 * GRP_NumCatalogPurchases4
1245016   +          +     0.08068432649382 * GRP_NumDistPurchases2
1245017   +          +    -0.08875599058351 * GRP_NumDistPurchases3
1245018   +          +     0.26738740475822 * GRP_NumDistPurchases4
1245019   +          +     -0.0916247468051 * GRP_NumWebPurchases2
1245020   +          +    -0.17267741073665 * GRP_NumWebPurchases3
1245021   +          +     0.01349113315351 * GRP_NumWebPurchases4
1245022   +          +    -0.19075973281592 * GRP_RFMstat2  +    -0.20146461162283 *
1245023   +        GRP_RFMstat3  +    -0.13097471458987 * GRP_RFMstat4
1245024   +          +     0.06761773631631 * GRP_RMntFrq2  +     0.27576244694442 *
1245025   +        GRP_RMntFrq3  +      0.1281788430307 * GRP_RMntFrq4
1245026   +          +    -0.15939599795679 * GRP_Recency2  +    -0.00210397286084 *
1245027   +        GRP_Recency3  +     0.28490847560375 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.11273135858209 * GRP_AcceptedCmp52 + -0.15015665173608 *
GRP_Frq2 + -0.20454924588356 * GRP_Frq3 + -0.04047998964496 * GRP_Frq4 + -0.29897237144541 *
GRP_Income2 + -0.028464296882 * GRP_Income3 + 0.24836294191696 * GRP_Income4 +
0.08738925553158 * GRP_Mnt2 + 0.00962293230168 * GRP_Mnt3 + -0.12661643514597 * GRP_Mnt4 +
-0.03747719154948 * GRP_MntFishProducts2 + -0.07078012229572 * GRP_MntFishProducts3 +
-0.14569186671189 * GRP_MntFishProducts4 + 0.14963390032413 * GRP_MntGoldProds2 +
-0.11869917970226 * GRP_MntGoldProds3 + 0.25943105626615 * GRP_MntGoldProds4 +
0.36609689271233 * GRP_MntMeatProducts2 + 0.10969864655073 * GRP_MntMeatProducts3 +
-0.03446779336952 * GRP_MntMeatProducts4 + -0.16882321573662 * GRP_MntWines2 +
0.07914922328232 * GRP_MntWines3 + 0.13243594484158 * GRP_MntWines4 + 0.39758714937962 *
GRP_NumCatalogPurchases3 + 0.31434011051179 * GRP_NumCatalogPurchases4 + 0.08068432649382 *
GRP_NumDistPurchases2 + -0.08875599058351 * GRP_NumDistPurchases3 + 0.26738740475822 *
GRP_NumDistPurchases4 + -0.0916247468051 * GRP_NumWebPurchases2 + -0.17267741073665 *
GRP_NumWebPurchases3 + 0.01349113315351 * GRP_NumWebPurchases4 + -0.19075973281592 *
GRP_RFMstat2 + -0.20146461162283 * GRP_RFMstat3 + -0.13097471458987 * GRP_RFMstat4 +
0.06761773631631 * GRP_RMntFrq2 + 0.27576244694442 * GRP_RMntFrq3 + 0.1281788430307 *
GRP_RMntFrq4 + -0.15939599795679 * GRP_Recency2 + -0.00210397286084 * GRP_Recency3 +
0.28490847560375 * GRP_Recency4 ;
1245028   +   H14  = H14  +     0.27713596853764 * GRP_AcceptedCmp52
1245029   +          +    -0.11480256849934 * GRP_Frq2  +      0.0285240312455 * GRP_Frq3
1245030   +          +     0.09416065239682 * GRP_Frq4  +     -0.1229961422993 *
1245031   +        GRP_Income2  +     0.01867364051002 * GRP_Income3
1245032   +          +     0.05820105400306 * GRP_Income4  +    -0.16873429334819 *
1245033   +        GRP_Mnt2  +    -0.01221085891741 * GRP_Mnt3  +    -0.10225236565235 *
1245034   +        GRP_Mnt4  +    -0.09613387975858 * GRP_MntFishProducts2
1245035   +          +    -0.18334484867808 * GRP_MntFishProducts3
1245036   +          +     0.13484477561766 * GRP_MntFishProducts4
1245037   +          +    -0.05145913380692 * GRP_MntGoldProds2
1245038   +          +     0.04459987080173 * GRP_MntGoldProds3
1245039   +          +     0.01539767655772 * GRP_MntGoldProds4
1245040   +          +     0.26537148543352 * GRP_MntMeatProducts2
1245041   +          +     0.22913678530176 * GRP_MntMeatProducts3
1245042   +          +     0.21262490658374 * GRP_MntMeatProducts4
1245043   +          +    -0.11513521401249 * GRP_MntWines2  +    -0.14420673462527 *
1245044   +        GRP_MntWines3  +     0.11949691312637 * GRP_MntWines4
1245045   +          +    -0.02289734111038 * GRP_NumCatalogPurchases3
1245046   +          +    -0.12014539185275 * GRP_NumCatalogPurchases4
1245047   +          +     0.09224372228857 * GRP_NumDistPurchases2
1245048   +          +    -0.14205094961773 * GRP_NumDistPurchases3
1245049   +          +    -0.27160467877541 * GRP_NumDistPurchases4
1245050   +          +    -0.15428446875019 * GRP_NumWebPurchases2
1245051   +          +    -0.36914157795453 * GRP_NumWebPurchases3
1245052   +          +    -0.41610537355059 * GRP_NumWebPurchases4
1245053   +          +    -0.29442656678388 * GRP_RFMstat2  +     0.03961235509827 *
1245054   +        GRP_RFMstat3  +    -0.18322878380243 * GRP_RFMstat4
1245055   +          +     0.06857495854453 * GRP_RMntFrq2  +     0.08325769999442 *
1245056   +        GRP_RMntFrq3  +     0.24334424933749 * GRP_RMntFrq4
1245057   +          +    -0.50963259840069 * GRP_Recency2  +    -0.24163634485458 *
1245058   +        GRP_Recency3  +     -0.1023689653207 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.27713596853764 * GRP_AcceptedCmp52 + -0.11480256849934 *
GRP_Frq2 + 0.0285240312455 * GRP_Frq3 + 0.09416065239682 * GRP_Frq4 + -0.1229961422993 *
GRP_Income2 + 0.01867364051002 * GRP_Income3 + 0.05820105400306 * GRP_Income4 +
-0.16873429334819 * GRP_Mnt2 + -0.01221085891741 * GRP_Mnt3 + -0.10225236565235 * GRP_Mnt4 +
-0.09613387975858 * GRP_MntFishProducts2 + -0.18334484867808 * GRP_MntFishProducts3 +
0.13484477561766 * GRP_MntFishProducts4 + -0.05145913380692 * GRP_MntGoldProds2 +
0.04459987080173 * GRP_MntGoldProds3 + 0.01539767655772 * GRP_MntGoldProds4 + 0.26537148543352
* GRP_MntMeatProducts2 + 0.22913678530176 * GRP_MntMeatProducts3 + 0.21262490658374 *
GRP_MntMeatProducts4 + -0.11513521401249 * GRP_MntWines2 + -0.14420673462527 * GRP_MntWines3 +
0.11949691312637 * GRP_MntWines4 + -0.02289734111038 * GRP_NumCatalogPurchases3 +
-0.12014539185275 * GRP_NumCatalogPurchases4 + 0.09224372228857 * GRP_NumDistPurchases2 +
-0.14205094961773 * GRP_NumDistPurchases3 + -0.27160467877541 * GRP_NumDistPurchases4 +
-0.15428446875019 * GRP_NumWebPurchases2 + -0.36914157795453 * GRP_NumWebPurchases3 +
-0.41610537355059 * GRP_NumWebPurchases4 + -0.29442656678388 * GRP_RFMstat2 + 0.03961235509827
* GRP_RFMstat3 + -0.18322878380243 * GRP_RFMstat4 + 0.06857495854453 * GRP_RMntFrq2 +
0.08325769999442 * GRP_RMntFrq3 + 0.24334424933749 * GRP_RMntFrq4 + -0.50963259840069 *
GRP_Recency2 + -0.24163634485458 * GRP_Recency3 + -0.1023689653207 * GRP_Recency4 ;
1245059   +   H15  = H15  +    -0.58071728739803 * GRP_AcceptedCmp52
1245060   +          +    -0.33803120859672 * GRP_Frq2  +    -0.08690701614481 * GRP_Frq3
1245061   +          +     0.06107334775294 * GRP_Frq4  +     0.00751374071999 *
1245062   +        GRP_Income2  +     0.20911873861779 * GRP_Income3
1245063   +          +    -0.14977199160976 * GRP_Income4  +     0.15427447371686 *
1245064   +        GRP_Mnt2  +    -0.24298277669059 * GRP_Mnt3  +    -0.02935492111499 *
1245065   +        GRP_Mnt4  +     0.04923982061963 * GRP_MntFishProducts2
1245066   +          +    -0.08952948139975 * GRP_MntFishProducts3
1245067   +          +     0.15338133379465 * GRP_MntFishProducts4
1245068   +          +     0.04821845492824 * GRP_MntGoldProds2
1245069   +          +     0.20117781904284 * GRP_MntGoldProds3
1245070   +          +     0.13013396690778 * GRP_MntGoldProds4
1245071   +          +    -0.03940841472157 * GRP_MntMeatProducts2
1245072   +          +     0.03161017721112 * GRP_MntMeatProducts3
1245073   +          +    -0.21938330779867 * GRP_MntMeatProducts4
1245074   +          +      0.3039864690076 * GRP_MntWines2  +     0.33038690291786 *
1245075   +        GRP_MntWines3  +     0.03314465135063 * GRP_MntWines4
1245076   +          +    -0.07655889365033 * GRP_NumCatalogPurchases3
1245077   +          +    -0.17353955777897 * GRP_NumCatalogPurchases4
1245078   +          +    -0.16058154480995 * GRP_NumDistPurchases2
1245079   +          +    -0.30101518928361 * GRP_NumDistPurchases3
1245080   +          +      0.0473480026433 * GRP_NumDistPurchases4
1245081   +          +     0.03132883547053 * GRP_NumWebPurchases2
1245082   +          +    -0.29425936985479 * GRP_NumWebPurchases3
1245083   +          +    -0.12527625315403 * GRP_NumWebPurchases4
1245084   +          +     0.30683805591766 * GRP_RFMstat2  +    -0.21275334469197 *
1245085   +        GRP_RFMstat3  +     0.32474239840607 * GRP_RFMstat4
1245086   +          +     0.09289841520091 * GRP_RMntFrq2  +     0.22137778862379 *
1245087   +        GRP_RMntFrq3  +     0.12254524703503 * GRP_RMntFrq4
1245088   +          +     0.46836624272095 * GRP_Recency2  +     0.01747843890017 *
1245089   +        GRP_Recency3  +    -0.28363324780869 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.58071728739803 * GRP_AcceptedCmp52 + -0.33803120859672 *
GRP_Frq2 + -0.08690701614481 * GRP_Frq3 + 0.06107334775294 * GRP_Frq4 + 0.00751374071999 *
GRP_Income2 + 0.20911873861779 * GRP_Income3 + -0.14977199160976 * GRP_Income4 +
0.15427447371686 * GRP_Mnt2 + -0.24298277669059 * GRP_Mnt3 + -0.02935492111499 * GRP_Mnt4 +
0.04923982061963 * GRP_MntFishProducts2 + -0.08952948139975 * GRP_MntFishProducts3 +
0.15338133379465 * GRP_MntFishProducts4 + 0.04821845492824 * GRP_MntGoldProds2 +
0.20117781904284 * GRP_MntGoldProds3 + 0.13013396690778 * GRP_MntGoldProds4 +
-0.03940841472157 * GRP_MntMeatProducts2 + 0.03161017721112 * GRP_MntMeatProducts3 +
-0.21938330779867 * GRP_MntMeatProducts4 + 0.3039864690076 * GRP_MntWines2 + 0.33038690291786
* GRP_MntWines3 + 0.03314465135063 * GRP_MntWines4 + -0.07655889365033 *
GRP_NumCatalogPurchases3 + -0.17353955777897 * GRP_NumCatalogPurchases4 + -0.16058154480995 *
GRP_NumDistPurchases2 + -0.30101518928361 * GRP_NumDistPurchases3 + 0.0473480026433 *
GRP_NumDistPurchases4 + 0.03132883547053 * GRP_NumWebPurchases2 + -0.29425936985479 *
GRP_NumWebPurchases3 + -0.12527625315403 * GRP_NumWebPurchases4 + 0.30683805591766 *
GRP_RFMstat2 + -0.21275334469197 * GRP_RFMstat3 + 0.32474239840607 * GRP_RFMstat4 +
0.09289841520091 * GRP_RMntFrq2 + 0.22137778862379 * GRP_RMntFrq3 + 0.12254524703503 *
GRP_RMntFrq4 + 0.46836624272095 * GRP_Recency2 + 0.01747843890017 * GRP_Recency3 +
-0.28363324780869 * GRP_Recency4 ;
1245090   +   H11  =    -0.09329902916762 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.09329902916762 + H11 ;
1245091   +   H12  =     0.21894996952826 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.21894996952826 + H12 ;
1245092   +   H13  =    -0.97210428395662 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.97210428395662 + H13 ;
1245093   +   H14  =    -0.47241372860242 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.47241372860242 + H14 ;
1245094   +   H15  =    -0.89551869986721 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.89551869986721 + H15 ;
1245095   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1245096   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1245097   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1245098   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1245099   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1245100   +END;
MPRINT(EM_DIAGRAM):   END;
1245101   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1245102   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1245103   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1245104   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1245105   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1245106   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1245107   +END;
MPRINT(EM_DIAGRAM):   END;
1245108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245109   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1245110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245111   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1245112   +   P_DepVar1  =     2.68876927057109 * H11  +     0.34381275178608 * H12
1245113   +          +    -1.13153750790029 * H13  +    -0.93563986714952 * H14
1245114   +          +     1.84382077322412 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.68876927057109 * H11 + 0.34381275178608 * H12 +
-1.13153750790029 * H13 + -0.93563986714952 * H14 + 1.84382077322412 * H15 ;
1245115   +   P_DepVar1  =    -1.53169022796223 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53169022796223 + P_DepVar1 ;
1245116   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1245117   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1245118   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1245119   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1245120   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1245121   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1245122   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1245123   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1245124   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1245125   +END;
MPRINT(EM_DIAGRAM):   END;
1245126   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1245127   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1245128   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1245129   +END;
MPRINT(EM_DIAGRAM):   END;
1245130   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1245131   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1245132   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1245133   +END;
MPRINT(EM_DIAGRAM):   END;
1245134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245135   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1245136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1245137   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1245138   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1245139   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1245140   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1245141   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1245142   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1245143   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1245144   +END;
MPRINT(EM_DIAGRAM):   END;
1245145   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1245146   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1245147   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1245148   +drop
1245149   +H11
1245150   +H12
1245151   +H13
1245152   +H14
1245153   +H15
1245154   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1245155   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1245156    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1245157    quit;
1245158    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1245159    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1245160    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1245161    retain ID 2 Node "Neural22";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural22";
1245162    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1245163    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1980 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1980 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245164    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1245165    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245166    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1980 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1980 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245167    proc sort data=EMWS8.Neural22_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural22_variableset out=_temp2(keep=NAME CREATOR);
1245168    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245169    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.NEURAL22_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245170    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1245171    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1245172    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1245173    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1245174    proc contents data=EMWS8.Neural22_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural22_train out=_meta(keep=NAME) noprint;
1245175    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245176    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1245177    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245178    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1245179    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1245180    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1245181    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245182    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245183    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1245184    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1245184  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 925 rows and 5 columns.
 
1245185    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245186    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1245187    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 925 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 925 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245188    filename _pref
1245188  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1245189    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1245190    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1245191   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1245192   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1245193   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1245194   +
1245195   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245196   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1245197   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245198   +LABEL GRP_AcceptedCmp5 =
1245199   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1245200   +
1245201   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1245202   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1245203   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1245204   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1245205   +end;
MPRINT(EM_DIAGRAM):   end;
1245206   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1245207   +if (_UFORMAT eq '0'
1245208   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1245209   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1245210   +end;
MPRINT(EM_DIAGRAM):   end;
1245211   +else
1245212   +if (_UFORMAT eq '1'
1245213   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1245214   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1245215   +end;
MPRINT(EM_DIAGRAM):   end;
1245216   +else do;
MPRINT(EM_DIAGRAM):   else do;
1245217   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1245218   +end;
MPRINT(EM_DIAGRAM):   end;
1245219   +end;
MPRINT(EM_DIAGRAM):   end;
1245220   +
1245221   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245222   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1245223   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245224   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1245225   +
1245226   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1245227   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1245228   +end;
MPRINT(EM_DIAGRAM):   end;
1245229   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1245230   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1245231   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1245232   +end;
MPRINT(EM_DIAGRAM):   end;
1245233   +else
1245234   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1245235   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1245236   +end;
MPRINT(EM_DIAGRAM):   end;
1245237   +else
1245238   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1245239   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1245240   +end;
MPRINT(EM_DIAGRAM):   end;
1245241   +else
1245242   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1245243   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1245244   +end;
MPRINT(EM_DIAGRAM):   end;
1245245   +end;
MPRINT(EM_DIAGRAM):   end;
1245246   +
1245247   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245248   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1245249   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245250   +LABEL GRP_Income =
1245251   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1245252   +
1245253   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1245254   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1245255   +end;
MPRINT(EM_DIAGRAM):   end;
1245256   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1245257   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1245258   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1245259   +end;
MPRINT(EM_DIAGRAM):   end;
1245260   +else
1245261   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1245262   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1245263   +end;
MPRINT(EM_DIAGRAM):   end;
1245264   +else
1245265   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1245266   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1245267   +end;
MPRINT(EM_DIAGRAM):   end;
1245268   +else
1245269   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1245270   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1245271   +end;
MPRINT(EM_DIAGRAM):   end;
1245272   +end;
MPRINT(EM_DIAGRAM):   end;
1245273   +
1245274   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245275   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1245276   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245277   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1245278   +
1245279   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1245280   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1245281   +end;
MPRINT(EM_DIAGRAM):   end;
1245282   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1245283   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1245284   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1245285   +end;
MPRINT(EM_DIAGRAM):   end;
1245286   +else
1245287   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1245288   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1245289   +end;
MPRINT(EM_DIAGRAM):   end;
1245290   +else
1245291   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1245292   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1245293   +end;
MPRINT(EM_DIAGRAM):   end;
1245294   +else
1245295   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1245296   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1245297   +end;
MPRINT(EM_DIAGRAM):   end;
1245298   +end;
MPRINT(EM_DIAGRAM):   end;
1245299   +
1245300   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245301   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1245302   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245303   +LABEL GRP_MntFishProducts =
1245304   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1245305   +
1245306   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1245307   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1245308   +end;
MPRINT(EM_DIAGRAM):   end;
1245309   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1245310   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1245311   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1245312   +end;
MPRINT(EM_DIAGRAM):   end;
1245313   +else
1245314   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1245315   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1245316   +end;
MPRINT(EM_DIAGRAM):   end;
1245317   +else
1245318   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1245319   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1245320   +end;
MPRINT(EM_DIAGRAM):   end;
1245321   +else
1245322   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1245323   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1245324   +end;
MPRINT(EM_DIAGRAM):   end;
1245325   +end;
MPRINT(EM_DIAGRAM):   end;
1245326   +
1245327   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245328   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1245329   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245330   +LABEL GRP_MntGoldProds =
1245331   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1245332   +
1245333   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1245334   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1245335   +end;
MPRINT(EM_DIAGRAM):   end;
1245336   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1245337   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1245338   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1245339   +end;
MPRINT(EM_DIAGRAM):   end;
1245340   +else
1245341   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1245342   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1245343   +end;
MPRINT(EM_DIAGRAM):   end;
1245344   +else
1245345   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1245346   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1245347   +end;
MPRINT(EM_DIAGRAM):   end;
1245348   +else
1245349   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1245350   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1245351   +end;
MPRINT(EM_DIAGRAM):   end;
1245352   +end;
MPRINT(EM_DIAGRAM):   end;
1245353   +
1245354   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245355   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1245356   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245357   +LABEL GRP_MntMeatProducts =
1245358   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1245359   +
1245360   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1245361   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1245362   +end;
MPRINT(EM_DIAGRAM):   end;
1245363   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1245364   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1245365   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1245366   +end;
MPRINT(EM_DIAGRAM):   end;
1245367   +else
1245368   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1245369   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1245370   +end;
MPRINT(EM_DIAGRAM):   end;
1245371   +else
1245372   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1245373   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1245374   +end;
MPRINT(EM_DIAGRAM):   end;
1245375   +else
1245376   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1245377   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1245378   +end;
MPRINT(EM_DIAGRAM):   end;
1245379   +end;
MPRINT(EM_DIAGRAM):   end;
1245380   +
1245381   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245382   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1245383   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245384   +LABEL GRP_MntWines =
1245385   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1245386   +
1245387   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1245388   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1245389   +end;
MPRINT(EM_DIAGRAM):   end;
1245390   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1245391   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1245392   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1245393   +end;
MPRINT(EM_DIAGRAM):   end;
1245394   +else
1245395   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1245396   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1245397   +end;
MPRINT(EM_DIAGRAM):   end;
1245398   +else
1245399   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1245400   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1245401   +end;
MPRINT(EM_DIAGRAM):   end;
1245402   +else
1245403   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1245404   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1245405   +end;
MPRINT(EM_DIAGRAM):   end;
1245406   +end;
MPRINT(EM_DIAGRAM):   end;
1245407   +
1245408   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245409   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1245410   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245411   +LABEL GRP_NumCatalogPurchases =
1245412   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1245413   +
1245414   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1245415   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1245416   +end;
MPRINT(EM_DIAGRAM):   end;
1245417   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1245418   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1245419   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1245420   +end;
MPRINT(EM_DIAGRAM):   end;
1245421   +else
1245422   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1245423   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1245424   +end;
MPRINT(EM_DIAGRAM):   end;
1245425   +else
1245426   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1245427   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1245428   +end;
MPRINT(EM_DIAGRAM):   end;
1245429   +else
1245430   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1245431   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1245432   +end;
MPRINT(EM_DIAGRAM):   end;
1245433   +end;
MPRINT(EM_DIAGRAM):   end;
1245434   +
1245435   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245436   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1245437   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245438   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1245439   +
1245440   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1245441   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1245442   +end;
MPRINT(EM_DIAGRAM):   end;
1245443   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1245444   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1245445   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1245446   +end;
MPRINT(EM_DIAGRAM):   end;
1245447   +else
1245448   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1245449   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1245450   +end;
MPRINT(EM_DIAGRAM):   end;
1245451   +else
1245452   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1245453   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1245454   +end;
MPRINT(EM_DIAGRAM):   end;
1245455   +else
1245456   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1245457   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1245458   +end;
MPRINT(EM_DIAGRAM):   end;
1245459   +end;
MPRINT(EM_DIAGRAM):   end;
1245460   +
1245461   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245462   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1245463   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245464   +LABEL GRP_NumWebPurchases =
1245465   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1245466   +
1245467   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1245468   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1245469   +end;
MPRINT(EM_DIAGRAM):   end;
1245470   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1245471   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1245472   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1245473   +end;
MPRINT(EM_DIAGRAM):   end;
1245474   +else
1245475   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1245476   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1245477   +end;
MPRINT(EM_DIAGRAM):   end;
1245478   +else
1245479   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1245480   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1245481   +end;
MPRINT(EM_DIAGRAM):   end;
1245482   +else
1245483   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1245484   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1245485   +end;
MPRINT(EM_DIAGRAM):   end;
1245486   +end;
MPRINT(EM_DIAGRAM):   end;
1245487   +
1245488   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245489   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1245490   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245491   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1245492   +
1245493   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1245494   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1245495   +end;
MPRINT(EM_DIAGRAM):   end;
1245496   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1245497   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1245498   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1245499   +end;
MPRINT(EM_DIAGRAM):   end;
1245500   +else
1245501   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1245502   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1245503   +end;
MPRINT(EM_DIAGRAM):   end;
1245504   +else
1245505   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1245506   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1245507   +end;
MPRINT(EM_DIAGRAM):   end;
1245508   +else
1245509   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1245510   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1245511   +end;
MPRINT(EM_DIAGRAM):   end;
1245512   +end;
MPRINT(EM_DIAGRAM):   end;
1245513   +
1245514   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245515   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1245516   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245517   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1245518   +
1245519   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1245520   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1245521   +end;
MPRINT(EM_DIAGRAM):   end;
1245522   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1245523   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1245524   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1245525   +end;
MPRINT(EM_DIAGRAM):   end;
1245526   +else
1245527   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1245528   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1245529   +end;
MPRINT(EM_DIAGRAM):   end;
1245530   +else
1245531   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1245532   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1245533   +end;
MPRINT(EM_DIAGRAM):   end;
1245534   +else
1245535   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1245536   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1245537   +end;
MPRINT(EM_DIAGRAM):   end;
1245538   +end;
MPRINT(EM_DIAGRAM):   end;
1245539   +
1245540   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245541   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1245542   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245543   +LABEL GRP_Recency =
1245544   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1245545   +
1245546   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1245547   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1245548   +end;
MPRINT(EM_DIAGRAM):   end;
1245549   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1245550   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1245551   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1245552   +end;
MPRINT(EM_DIAGRAM):   end;
1245553   +else
1245554   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1245555   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1245556   +end;
MPRINT(EM_DIAGRAM):   end;
1245557   +else
1245558   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1245559   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1245560   +end;
MPRINT(EM_DIAGRAM):   end;
1245561   +else
1245562   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1245563   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1245564   +end;
MPRINT(EM_DIAGRAM):   end;
1245565   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1245566    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1245567    quit;
1245568    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1245569    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1245570    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1245571    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1245572    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1245573    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245574    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1245575    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245576    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245577    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1245578    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245579    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245580    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1245581    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1245582    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1245583    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245584    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1245585    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245586    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1245587    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245588    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245589    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1245590    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1245591    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245592    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245593    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1245594    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1245594  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.
 
1245595    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245596    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1245597    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 940 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1245598    filename _pref
1245598  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1245599    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1245600    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1245601   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245602   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1245603   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1245604   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1245605   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1245606   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1245607    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1245608    quit;
1245609    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1245610    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1245611    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1245612    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1245613    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1245614    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245615    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1245616    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245617    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245618    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1245619    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245620    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245621    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1245622    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1245623    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1245624    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245625    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1245626    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245627    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1245628    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245629    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245630    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1245631    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1245632    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245633    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245634    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1245635    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1245635  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1245636    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245637    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1245638    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 944 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245639    filename _pref
1245639  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1245640    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1245641    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1245642   +
1245643   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1245644   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1245644  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1245645   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1245646   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1245647   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1245648   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1245649   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1245650    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1245651    quit;
1245652    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1245653    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1245654    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1245655    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1245656    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1245657    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245658    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1245659    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245660    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245661    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1245662    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245663    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245664    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1245665    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1245666    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1245667    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245668    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1245669    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245670    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1245671    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245672    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1245673    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1245674    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1245675    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245676    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245677    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1245678    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1245678  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1245679    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245680    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1245681    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 983 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245682    filename _pref
1245682  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1245683    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1245684    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1245685   +
1245686   +
1245687   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1245688   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1245689   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1245690   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1245691   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1245692   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1245693   +
1245694   +
1245695   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1245696   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1245697   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1245698   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1245699   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1245700   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1245701   +
1245702   +
1245703   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1245704   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1245705   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1245706   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1245707   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1245708   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1245709   +
1245710   +
1245711   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1245712   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1245713   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1245714   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1245715   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1245716   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1245717   +
1245718   +
1245719   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1245720   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1245721   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1245722   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1245723   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1245724   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1245725   +
1245726   +
1245727   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1245728   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1245729   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1245730   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1245731   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1245732   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1245733   +
1245734   +
1245735   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1245736   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1245737   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1245738   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1245739   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1245740   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1245741   +
1245742   +
1245743   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1245744   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1245745   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1245746   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1245747   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1245748   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1245749   +if
1245750   +_FILTERNORM1 not in ( '.')
1245751   + and
1245752   +_FILTERNORM2 not in ( '.')
1245753   + and
1245754   +_FILTERNORM3 not in ( '.')
1245755   + and
1245756   +_FILTERNORM4 not in ( '.')
1245757   + and
1245758   +_FILTERNORM5 not in ( '.')
1245759   + and
1245760   +_FILTERNORM6 not in ( '.')
1245761   + and
1245762   +_FILTERNORM7 not in ( ' ')
1245763   + and
1245764   +_FILTERNORM8 not in ( ' ')
1245765   +and
1245766   +( Dt_Customer ne .)
1245767   +and ( Income ne . and (Income<=107000))
1245768   +and ( Kidhome ne .)
1245769   +and ( MntFishProducts ne .)
1245770   +and ( MntFruits ne .)
1245771   +and ( MntGoldProds ne .)
1245772   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1245773   +and ( MntSweetProducts ne .)
1245774   +and ( MntWines ne .)
1245775   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1245776   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1245777   +and ( NumStorePurchases ne .)
1245778   +and ( NumWebPurchases ne .)
1245779   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1245780   +and ( Recency ne .)
1245781   +and ( Teenhome ne .)
1245782   +and ( Year_Birth ne .)
1245783   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1245784   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1245785   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1245786   +end;
MPRINT(EM_DIAGRAM):   end;
1245787   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1245788   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1245789    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1245790    quit;
1245791    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1245792    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1245793    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1245794    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1245795    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1245796    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245797    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1245798    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245799    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245800    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1245801    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245802    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245803    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1245804    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1245805    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1245806    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245807    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1245808    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245809    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1245810    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245811    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245812    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1245813    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1245814    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1245815    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245816    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1245817    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1245817  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1245818    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245819    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1245820    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 1049 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245821    %macro varDept(fcmpdata=,id=);
1245822    %global nobs&id scoreFlag&id;
1245823    %let scoreFlag&id = 0;
1245824    %if &id=1 or ^&fcmpStart %then %do;
1245825    proc sort data=&fcmpdata out=_temp&id nodupkey;
1245826    by NAME;
1245827    where id=&id and LHS in( %let j=1;
1245828    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1245829    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1245830    "&var" %let j = %eval(&j+1);
1245831    %end;
1245832    );
1245833    run;
1245834    %let dsid = %sysfunc(open(_temp&id));
1245835    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1245836    %let dsid = %sysfunc(close(&dsid));
1245837    %if &&nobs&id %then %do;
1245838    %let scoreFlag&id = 1;
1245839    %let fcmpStart = 1;
1245840    %end;
1245841    %else %let fcmpStart = 0;
1245842    %end;
1245843    %else %do;
1245844    proc sort data=&fcmpdata out=_tempid;
1245845    where id=&id;
1245846    by LHS;
1245847    run;
1245848    %let dsid = %sysfunc(open(_tempid));
1245849    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1245850    %let dsid = %sysfunc(close(&dsid));
1245851    %if ^&&nobs&id %then %do;
1245852    proc datasets lib=work nolist;
1245853    delete _tempid;
1245854    run;
1245855    quit;
1245856    %end;
1245857    %else %do;
1245858    data _tempAll;
1245859    set %let j=%eval(&id-1);
1245860    %do x=1 %to &j;
1245861    %if &&nobs&x %then %do;
1245862    _temp&x %end;
1245863    %end;
1245864    ;
1245865    run;
1245866    proc sql;
1245867    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1245867  ! work._tempid p2 where p.name=p2.lhs;
1245868    quit;
1245869    data _temp&id;
1245870    set _temp&id;
1245871    where LHS ne '' and NAME ne '' and Node ne '';
1245872    run;
1245873    proc datasets lib=work nolist;
1245874    delete _tempAll;
1245875    run;
1245876    %let dsid = %sysfunc(open(_temp&id));
1245877    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1245878    %let dsid = %sysfunc(close(&dsid));
1245879    %if ^&&nobs&id %then %do;
1245880    proc datasets lib=work nolist;
1245881    delete _temp&id;
1245882    run;
1245883    quit;
1245884    %end;
1245885    %else %do;
1245886    %let scoreFlag&id = 1;
1245887    data _temp&id;
1245888    set _temp&id;
1245889    where LHS ne NAME and node ne '';
1245890    run;
1245891    %let dsid = %sysfunc(open(_temp&id));
1245892    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1245893    %let dsid = %sysfunc(close(&dsid));
1245894    %if ^&&nobs&id %then %do;
1245895    proc datasets lib=work nolist;
1245896    delete _temp&id;
1245897    run;
1245898    quit;
1245899    %end;
1245900    %else %do;
1245901    proc sort data=_temp&id nodupkey;
1245902    by LHS NAME;
1245903    run;
1245904    %end;
1245905    %end;
1245906    %end;
1245907    %end;
1245908    %mend varDept;
1245909    %macro optCode(outdata=fcmpdata);
1245910    %global fcmpStart;
1245911    %let fcmpStart = 0;
1245912    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1245913    %let NumNodes=9;
1245914    %do k=1 %to &NumNodes;
1245915    %vardept(fcmpdata=&outdata, id=&k);
1245916    %end;
1245917    %mend optCode;
1245918    %optcode(outData=EMWS8.Ensmbl7_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1245919    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1245920    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1245921    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1245922    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245923    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1245924    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1245925    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1245926    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245927    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1245928    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1245928  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1245929    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245930    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1245931    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1245932    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245933    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1245934    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1245935    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1245936    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245937    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1245938    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1245939    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1245940    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245941    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1245942    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1245942  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.
 
1245943    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1245944    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1245945    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1245946    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1245947    filename _pref
1245947  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMPUBLISHSCORE.sas";
1245948    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1245949    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMPUBLISHSCORE.sas.
1245950   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1245951   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1245952   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1245953   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1245954   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1245955   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1245956   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1245957   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1245958   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1245959   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1245960   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1245961   +LENGTH _WARN_ $4
1245962   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1245963   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1245964   +
1245965   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1245966   +
1245967   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1245968   +
1245969   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1245970   +
1245971   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1245972   +
1245973   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1245974   +
1245975   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1245976   +
1245977   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1245978   +
1245979   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1245980   +
1245981   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1245982   +
1245983   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1245984   +
1245985   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1245986   +
1245987   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1245988   +
1245989   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1245990   +
1245991   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1245992   +
1245993   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1245994   +
1245995   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1245996   +
1245997   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1245998   +
1245999   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1246000   +
1246001   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1246002   +
1246003   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1246004   +
1246005   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1246006   +
1246007   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1246008   +
1246009   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1246010   +
1246011   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1246012   +
1246013   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1246014   +
1246015   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1246016   +
1246017   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1246018   +
1246019   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1246020   +
1246021   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1246022   +
1246023   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1246024   +
1246025   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1246026   +
1246027   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1246028   +
1246029   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1246030   +
1246031   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1246032   +
1246033   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1246034   +
1246035   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1246036   +
1246037   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1246038   +
1246039   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1246040   +
1246041   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1246042   +
1246043   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1246044   +
1246045   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1246046   +
1246047   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1246048   +
1246049   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1246050   +
1246051   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1246052   +
1246053   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1246054   +
1246055   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1246056   +
1246057   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1246058   +
1246059   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1246060   +
1246061   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1246062   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1246063   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1246064   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1246065   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246066   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246067   +end;
MPRINT(EM_DIAGRAM):   end;
1246068   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246069   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246070   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1246071   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246072   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1246073   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1246074   +   end;
MPRINT(EM_DIAGRAM):   end;
1246075   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1246076   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1246077   +   end;
MPRINT(EM_DIAGRAM):   end;
1246078   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246079   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1246080   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246081   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246082   +   end;
MPRINT(EM_DIAGRAM):   end;
1246083   +end;
MPRINT(EM_DIAGRAM):   end;
1246084   +
1246085   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1246086   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1246087   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1246088   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1246089   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1246090   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1246091   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246092   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246093   +end;
MPRINT(EM_DIAGRAM):   end;
1246094   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246095   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246096   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1246097   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246098   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1246099   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1246100   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1246101   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1246102   +   end;
MPRINT(EM_DIAGRAM):   end;
1246103   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1246104   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1246105   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1246106   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1246107   +   end;
MPRINT(EM_DIAGRAM):   end;
1246108   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1246109   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1246110   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1246111   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1246112   +   end;
MPRINT(EM_DIAGRAM):   end;
1246113   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1246114   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1246115   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1246116   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1246117   +   end;
MPRINT(EM_DIAGRAM):   end;
1246118   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246119   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1246120   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1246121   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1246122   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246123   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246124   +   end;
MPRINT(EM_DIAGRAM):   end;
1246125   +end;
MPRINT(EM_DIAGRAM):   end;
1246126   +
1246127   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1246128   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1246129   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1246130   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1246131   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1246132   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1246133   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246134   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246135   +end;
MPRINT(EM_DIAGRAM):   end;
1246136   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246137   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246138   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1246139   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246140   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1246141   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1246142   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1246143   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1246144   +   end;
MPRINT(EM_DIAGRAM):   end;
1246145   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1246146   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1246147   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1246148   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1246149   +   end;
MPRINT(EM_DIAGRAM):   end;
1246150   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1246151   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1246152   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1246153   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1246154   +   end;
MPRINT(EM_DIAGRAM):   end;
1246155   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1246156   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1246157   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1246158   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1246159   +   end;
MPRINT(EM_DIAGRAM):   end;
1246160   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246161   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1246162   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1246163   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1246164   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246165   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246166   +   end;
MPRINT(EM_DIAGRAM):   end;
1246167   +end;
MPRINT(EM_DIAGRAM):   end;
1246168   +
1246169   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1246170   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1246171   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1246172   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1246173   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1246174   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1246175   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246176   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246177   +end;
MPRINT(EM_DIAGRAM):   end;
1246178   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246179   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246180   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1246181   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246182   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1246183   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1246184   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1246185   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1246186   +   end;
MPRINT(EM_DIAGRAM):   end;
1246187   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1246188   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1246189   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1246190   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1246191   +   end;
MPRINT(EM_DIAGRAM):   end;
1246192   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1246193   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1246194   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1246195   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1246196   +   end;
MPRINT(EM_DIAGRAM):   end;
1246197   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1246198   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1246199   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1246200   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1246201   +   end;
MPRINT(EM_DIAGRAM):   end;
1246202   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246203   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1246204   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1246205   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1246206   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246207   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246208   +   end;
MPRINT(EM_DIAGRAM):   end;
1246209   +end;
MPRINT(EM_DIAGRAM):   end;
1246210   +
1246211   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1246212   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1246213   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1246214   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1246215   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1246216   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1246217   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246218   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246219   +end;
MPRINT(EM_DIAGRAM):   end;
1246220   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246221   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246222   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1246223   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246224   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1246225   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1246226   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1246227   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1246228   +   end;
MPRINT(EM_DIAGRAM):   end;
1246229   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1246230   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1246231   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1246232   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1246233   +   end;
MPRINT(EM_DIAGRAM):   end;
1246234   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1246235   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1246236   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1246237   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1246238   +   end;
MPRINT(EM_DIAGRAM):   end;
1246239   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1246240   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1246241   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1246242   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1246243   +   end;
MPRINT(EM_DIAGRAM):   end;
1246244   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246245   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1246246   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1246247   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1246248   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246249   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246250   +   end;
MPRINT(EM_DIAGRAM):   end;
1246251   +end;
MPRINT(EM_DIAGRAM):   end;
1246252   +
1246253   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1246254   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1246255   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1246256   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1246257   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1246258   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1246259   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246260   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246261   +end;
MPRINT(EM_DIAGRAM):   end;
1246262   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246263   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246264   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1246265   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246266   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1246267   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1246268   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1246269   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1246270   +   end;
MPRINT(EM_DIAGRAM):   end;
1246271   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1246272   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1246273   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1246274   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1246275   +   end;
MPRINT(EM_DIAGRAM):   end;
1246276   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1246277   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1246278   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1246279   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1246280   +   end;
MPRINT(EM_DIAGRAM):   end;
1246281   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1246282   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1246283   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1246284   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1246285   +   end;
MPRINT(EM_DIAGRAM):   end;
1246286   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246287   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1246288   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1246289   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1246290   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246291   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246292   +   end;
MPRINT(EM_DIAGRAM):   end;
1246293   +end;
MPRINT(EM_DIAGRAM):   end;
1246294   +
1246295   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1246296   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1246297   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1246298   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1246299   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1246300   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1246301   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246302   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246303   +end;
MPRINT(EM_DIAGRAM):   end;
1246304   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246305   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246306   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1246307   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246308   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1246309   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1246310   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1246311   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1246312   +   end;
MPRINT(EM_DIAGRAM):   end;
1246313   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1246314   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1246315   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1246316   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1246317   +   end;
MPRINT(EM_DIAGRAM):   end;
1246318   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1246319   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1246320   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1246321   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1246322   +   end;
MPRINT(EM_DIAGRAM):   end;
1246323   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1246324   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1246325   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1246326   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1246327   +   end;
MPRINT(EM_DIAGRAM):   end;
1246328   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246329   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1246330   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1246331   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1246332   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246333   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246334   +   end;
MPRINT(EM_DIAGRAM):   end;
1246335   +end;
MPRINT(EM_DIAGRAM):   end;
1246336   +
1246337   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1246338   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1246339   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1246340   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1246341   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1246342   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1246343   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246344   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246345   +end;
MPRINT(EM_DIAGRAM):   end;
1246346   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246347   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246348   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1246349   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246350   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1246351   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1246352   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1246353   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1246354   +   end;
MPRINT(EM_DIAGRAM):   end;
1246355   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1246356   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1246357   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1246358   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1246359   +   end;
MPRINT(EM_DIAGRAM):   end;
1246360   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1246361   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1246362   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1246363   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1246364   +   end;
MPRINT(EM_DIAGRAM):   end;
1246365   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1246366   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1246367   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1246368   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1246369   +   end;
MPRINT(EM_DIAGRAM):   end;
1246370   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246371   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1246372   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1246373   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1246374   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246375   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246376   +   end;
MPRINT(EM_DIAGRAM):   end;
1246377   +end;
MPRINT(EM_DIAGRAM):   end;
1246378   +
1246379   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1246380   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1246381   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1246382   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1246383   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1246384   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246385   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246386   +end;
MPRINT(EM_DIAGRAM):   end;
1246387   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246388   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246389   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1246390   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246391   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1246392   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1246393   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1246394   +   end;
MPRINT(EM_DIAGRAM):   end;
1246395   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1246396   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1246397   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1246398   +   end;
MPRINT(EM_DIAGRAM):   end;
1246399   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1246400   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1246401   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1246402   +   end;
MPRINT(EM_DIAGRAM):   end;
1246403   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246404   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1246405   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1246406   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246407   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246408   +   end;
MPRINT(EM_DIAGRAM):   end;
1246409   +end;
MPRINT(EM_DIAGRAM):   end;
1246410   +
1246411   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1246412   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1246413   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1246414   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1246415   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1246416   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1246417   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246418   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246419   +end;
MPRINT(EM_DIAGRAM):   end;
1246420   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246421   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246422   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1246423   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246424   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1246425   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1246426   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1246427   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1246428   +   end;
MPRINT(EM_DIAGRAM):   end;
1246429   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1246430   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1246431   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1246432   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1246433   +   end;
MPRINT(EM_DIAGRAM):   end;
1246434   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1246435   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1246436   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1246437   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1246438   +   end;
MPRINT(EM_DIAGRAM):   end;
1246439   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1246440   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1246441   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1246442   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1246443   +   end;
MPRINT(EM_DIAGRAM):   end;
1246444   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246445   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1246446   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1246447   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1246448   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246449   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246450   +   end;
MPRINT(EM_DIAGRAM):   end;
1246451   +end;
MPRINT(EM_DIAGRAM):   end;
1246452   +
1246453   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1246454   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1246455   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1246456   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1246457   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1246458   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1246459   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246460   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246461   +end;
MPRINT(EM_DIAGRAM):   end;
1246462   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246463   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246464   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1246465   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246466   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1246467   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1246468   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1246469   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1246470   +   end;
MPRINT(EM_DIAGRAM):   end;
1246471   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1246472   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1246473   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1246474   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1246475   +   end;
MPRINT(EM_DIAGRAM):   end;
1246476   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1246477   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1246478   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1246479   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1246480   +   end;
MPRINT(EM_DIAGRAM):   end;
1246481   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1246482   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1246483   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1246484   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1246485   +   end;
MPRINT(EM_DIAGRAM):   end;
1246486   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246487   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1246488   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1246489   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1246490   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246491   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246492   +   end;
MPRINT(EM_DIAGRAM):   end;
1246493   +end;
MPRINT(EM_DIAGRAM):   end;
1246494   +
1246495   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1246496   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1246497   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1246498   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1246499   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1246500   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1246501   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246502   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246503   +end;
MPRINT(EM_DIAGRAM):   end;
1246504   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246505   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246506   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1246507   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246508   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1246509   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1246510   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1246511   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1246512   +   end;
MPRINT(EM_DIAGRAM):   end;
1246513   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1246514   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1246515   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1246516   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1246517   +   end;
MPRINT(EM_DIAGRAM):   end;
1246518   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1246519   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1246520   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1246521   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1246522   +   end;
MPRINT(EM_DIAGRAM):   end;
1246523   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1246524   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
The SAS System
 
1246525   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1246526   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1246527   +   end;
MPRINT(EM_DIAGRAM):   end;
1246528   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246529   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1246530   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1246531   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1246532   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246533   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246534   +   end;
MPRINT(EM_DIAGRAM):   end;
1246535   +end;
MPRINT(EM_DIAGRAM):   end;
1246536   +
1246537   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1246538   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1246539   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1246540   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1246541   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1246542   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1246543   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246544   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246545   +end;
MPRINT(EM_DIAGRAM):   end;
1246546   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246547   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246548   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1246549   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246550   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1246551   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1246552   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1246553   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1246554   +   end;
MPRINT(EM_DIAGRAM):   end;
1246555   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1246556   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1246557   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1246558   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1246559   +   end;
MPRINT(EM_DIAGRAM):   end;
1246560   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1246561   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1246562   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1246563   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1246564   +   end;
MPRINT(EM_DIAGRAM):   end;
1246565   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1246566   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1246567   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1246568   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1246569   +   end;
MPRINT(EM_DIAGRAM):   end;
1246570   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246571   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1246572   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1246573   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1246574   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246575   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246576   +   end;
MPRINT(EM_DIAGRAM):   end;
1246577   +end;
MPRINT(EM_DIAGRAM):   end;
1246578   +
1246579   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1246580   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1246581   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1246582   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1246583   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1246584   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1246585   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1246586   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246587   +end;
MPRINT(EM_DIAGRAM):   end;
1246588   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246589   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1246590   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1246591   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1246592   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1246593   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1246594   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1246595   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1246596   +   end;
MPRINT(EM_DIAGRAM):   end;
1246597   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1246598   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1246599   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1246600   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1246601   +   end;
MPRINT(EM_DIAGRAM):   end;
1246602   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1246603   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1246604   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1246605   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1246606   +   end;
MPRINT(EM_DIAGRAM):   end;
1246607   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1246608   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1246609   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1246610   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1246611   +   end;
MPRINT(EM_DIAGRAM):   end;
1246612   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1246613   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1246614   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1246615   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1246616   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1246617   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246618   +   end;
MPRINT(EM_DIAGRAM):   end;
1246619   +end;
MPRINT(EM_DIAGRAM):   end;
1246620   +
1246621   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246622   +*** Checking missing input Interval
1246623   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1246624   +
1246625   +IF NMISS(
1246626   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1246627   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1246628   +
1246629   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1246630   +END;
MPRINT(EM_DIAGRAM):   END;
1246631   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246632   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1246633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246634   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1246635   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1246636   +END;
MPRINT(EM_DIAGRAM):   END;
1246637   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1246638   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1246639   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1246640   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1246641   +END;
MPRINT(EM_DIAGRAM):   END;
1246642   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246643   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1246644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246645   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246646   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1246647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246648   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1246649   +   H11  =      0.0668146440452 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.0668146440452 * S_Year_Birth ;
1246650   +   H12  =     0.02918236951724 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.02918236951724 * S_Year_Birth ;
1246651   +   H13  =     0.52122974180208 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.52122974180208 * S_Year_Birth ;
1246652   +   H14  =     -0.1823800721103 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.1823800721103 * S_Year_Birth ;
1246653   +   H11  = H11  +    -0.48347630033708 * GRP_AcceptedCmp52
1246654   +          +     0.37100635990339 * GRP_Frq2  +     0.04377799127913 * GRP_Frq3
1246655   +          +     -0.1974477050613 * GRP_Frq4  +     0.10700887225506 *
1246656   +        GRP_Income2  +      0.3291591268929 * GRP_Income3
1246657   +          +     0.00612929517663 * GRP_Income4  +    -0.23329153390557 *
1246658   +        GRP_Mnt2  +    -0.08800204437411 * GRP_Mnt3  +    -0.08445529701198 *
1246659   +        GRP_Mnt4  +     0.28673732624133 * GRP_MntFishProducts2
1246660   +          +    -0.14978605827752 * GRP_MntFishProducts3
1246661   +          +     0.22642470616542 * GRP_MntFishProducts4
1246662   +          +     0.07604404821672 * GRP_MntGoldProds2
1246663   +          +     0.04745212568332 * GRP_MntGoldProds3
1246664   +          +    -0.10028215217028 * GRP_MntGoldProds4
1246665   +          +    -0.07377682497053 * GRP_MntMeatProducts2
1246666   +          +    -0.09960214357487 * GRP_MntMeatProducts3
1246667   +          +    -0.25438120582859 * GRP_MntMeatProducts4
1246668   +          +     0.42639299324809 * GRP_MntWines2  +     0.31089292559786 *
1246669   +        GRP_MntWines3  +    -0.26826041457934 * GRP_MntWines4
1246670   +          +    -0.53742609478771 * GRP_NumCatalogPurchases3
1246671   +          +    -0.03023603128161 * GRP_NumCatalogPurchases4
1246672   +          +    -0.37743946252805 * GRP_NumDistPurchases2
1246673   +          +    -0.01872647257623 * GRP_NumDistPurchases3
1246674   +          +    -0.31993024737958 * GRP_NumDistPurchases4
1246675   +          +    -0.11078713164327 * GRP_NumWebPurchases2
1246676   +          +     0.24754701690398 * GRP_NumWebPurchases3
1246677   +          +     0.01530465573539 * GRP_NumWebPurchases4
1246678   +          +    -0.17630256491744 * GRP_RFMstat2  +    -0.47929093118323 *
1246679   +        GRP_RFMstat3  +     0.26729201021061 * GRP_RFMstat4
1246680   +          +    -0.20197995708067 * GRP_RMntFrq2  +    -0.07138949090838 *
1246681   +        GRP_RMntFrq3  +    -0.08653988697814 * GRP_RMntFrq4
1246682   +          +     1.10790516734526 * GRP_Recency2  +     0.22440369463671 *
1246683   +        GRP_Recency3  +    -0.44624012521308 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.48347630033708 * GRP_AcceptedCmp52 + 0.37100635990339 *
GRP_Frq2 + 0.04377799127913 * GRP_Frq3 + -0.1974477050613 * GRP_Frq4 + 0.10700887225506 *
GRP_Income2 + 0.3291591268929 * GRP_Income3 + 0.00612929517663 * GRP_Income4 +
-0.23329153390557 * GRP_Mnt2 + -0.08800204437411 * GRP_Mnt3 + -0.08445529701198 * GRP_Mnt4 +
0.28673732624133 * GRP_MntFishProducts2 + -0.14978605827752 * GRP_MntFishProducts3 +
0.22642470616542 * GRP_MntFishProducts4 + 0.07604404821672 * GRP_MntGoldProds2 +
0.04745212568332 * GRP_MntGoldProds3 + -0.10028215217028 * GRP_MntGoldProds4 +
-0.07377682497053 * GRP_MntMeatProducts2 + -0.09960214357487 * GRP_MntMeatProducts3 +
-0.25438120582859 * GRP_MntMeatProducts4 + 0.42639299324809 * GRP_MntWines2 + 0.31089292559786
* GRP_MntWines3 + -0.26826041457934 * GRP_MntWines4 + -0.53742609478771 *
GRP_NumCatalogPurchases3 + -0.03023603128161 * GRP_NumCatalogPurchases4 + -0.37743946252805 *
GRP_NumDistPurchases2 + -0.01872647257623 * GRP_NumDistPurchases3 + -0.31993024737958 *
GRP_NumDistPurchases4 + -0.11078713164327 * GRP_NumWebPurchases2 + 0.24754701690398 *
GRP_NumWebPurchases3 + 0.01530465573539 * GRP_NumWebPurchases4 + -0.17630256491744 *
GRP_RFMstat2 + -0.47929093118323 * GRP_RFMstat3 + 0.26729201021061 * GRP_RFMstat4 +
-0.20197995708067 * GRP_RMntFrq2 + -0.07138949090838 * GRP_RMntFrq3 + -0.08653988697814 *
GRP_RMntFrq4 + 1.10790516734526 * GRP_Recency2 + 0.22440369463671 * GRP_Recency3 +
-0.44624012521308 * GRP_Recency4 ;
1246684   +   H12  = H12  +    -0.39171353947494 * GRP_AcceptedCmp52
1246685   +          +     0.47539355981113 * GRP_Frq2  +     0.13865083322043 * GRP_Frq3
1246686   +          +     0.07826446095659 * GRP_Frq4  +     0.08299165408218 *
1246687   +        GRP_Income2  +     0.19385348399904 * GRP_Income3
1246688   +          +     -0.4686130167393 * GRP_Income4  +     0.07036992149948 *
1246689   +        GRP_Mnt2  +     0.03891677493503 * GRP_Mnt3  +     0.07820077346387 *
1246690   +        GRP_Mnt4  +     0.36400126236983 * GRP_MntFishProducts2
1246691   +          +    -0.12626287803422 * GRP_MntFishProducts3
1246692   +          +    -0.42885022606866 * GRP_MntFishProducts4
1246693   +          +    -0.08312331608509 * GRP_MntGoldProds2
1246694   +          +    -0.20061238652989 * GRP_MntGoldProds3
1246695   +          +      0.2540651659901 * GRP_MntGoldProds4
1246696   +          +    -0.05377938516186 * GRP_MntMeatProducts2
1246697   +          +    -0.20960578757846 * GRP_MntMeatProducts3
1246698   +          +     0.40616704937625 * GRP_MntMeatProducts4
1246699   +          +     0.10444770584156 * GRP_MntWines2  +     0.28632714955895 *
1246700   +        GRP_MntWines3  +     -0.0752487603973 * GRP_MntWines4
1246701   +          +    -0.34375303246386 * GRP_NumCatalogPurchases3
1246702   +          +     0.09580710843179 * GRP_NumCatalogPurchases4
1246703   +          +    -0.07273864038222 * GRP_NumDistPurchases2
1246704   +          +     0.10966715611059 * GRP_NumDistPurchases3
1246705   +          +      -0.043035493739 * GRP_NumDistPurchases4
1246706   +          +    -0.11780256604927 * GRP_NumWebPurchases2
1246707   +          +    -0.18165047164828 * GRP_NumWebPurchases3
1246708   +          +     0.26936545488609 * GRP_NumWebPurchases4
1246709   +          +    -0.06874165804548 * GRP_RFMstat2  +     0.09298117986488 *
1246710   +        GRP_RFMstat3  +    -0.24177720125931 * GRP_RFMstat4
1246711   +          +    -0.06280623207978 * GRP_RMntFrq2  +     0.01871815739589 *
1246712   +        GRP_RMntFrq3  +    -0.14308267957716 * GRP_RMntFrq4
1246713   +          +     0.34467425877566 * GRP_Recency2  +     0.05820913643645 *
1246714   +        GRP_Recency3  +     -0.0454148085012 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.39171353947494 * GRP_AcceptedCmp52 + 0.47539355981113 *
GRP_Frq2 + 0.13865083322043 * GRP_Frq3 + 0.07826446095659 * GRP_Frq4 + 0.08299165408218 *
GRP_Income2 + 0.19385348399904 * GRP_Income3 + -0.4686130167393 * GRP_Income4 +
0.07036992149948 * GRP_Mnt2 + 0.03891677493503 * GRP_Mnt3 + 0.07820077346387 * GRP_Mnt4 +
0.36400126236983 * GRP_MntFishProducts2 + -0.12626287803422 * GRP_MntFishProducts3 +
-0.42885022606866 * GRP_MntFishProducts4 + -0.08312331608509 * GRP_MntGoldProds2 +
-0.20061238652989 * GRP_MntGoldProds3 + 0.2540651659901 * GRP_MntGoldProds4 +
-0.05377938516186 * GRP_MntMeatProducts2 + -0.20960578757846 * GRP_MntMeatProducts3 +
0.40616704937625 * GRP_MntMeatProducts4 + 0.10444770584156 * GRP_MntWines2 + 0.28632714955895
* GRP_MntWines3 + -0.0752487603973 * GRP_MntWines4 + -0.34375303246386 *
GRP_NumCatalogPurchases3 + 0.09580710843179 * GRP_NumCatalogPurchases4 + -0.07273864038222 *
GRP_NumDistPurchases2 + 0.10966715611059 * GRP_NumDistPurchases3 + -0.043035493739 *
GRP_NumDistPurchases4 + -0.11780256604927 * GRP_NumWebPurchases2 + -0.18165047164828 *
GRP_NumWebPurchases3 + 0.26936545488609 * GRP_NumWebPurchases4 + -0.06874165804548 *
GRP_RFMstat2 + 0.09298117986488 * GRP_RFMstat3 + -0.24177720125931 * GRP_RFMstat4 +
-0.06280623207978 * GRP_RMntFrq2 + 0.01871815739589 * GRP_RMntFrq3 + -0.14308267957716 *
GRP_RMntFrq4 + 0.34467425877566 * GRP_Recency2 + 0.05820913643645 * GRP_Recency3 +
-0.0454148085012 * GRP_Recency4 ;
1246715   +   H13  = H13  +    -0.08768819217047 * GRP_AcceptedCmp52
1246716   +          +     0.44895652806962 * GRP_Frq2  +      0.3800586670059 * GRP_Frq3
1246717   +          +    -0.07849333722318 * GRP_Frq4  +     0.61398939980043 *
1246718   +        GRP_Income2  +     0.47732933105902 * GRP_Income3
1246719   +          +    -0.46767598050409 * GRP_Income4  +     0.00119742402812 *
1246720   +        GRP_Mnt2  +     0.28434487319801 * GRP_Mnt3  +    -0.16337373090226 *
1246721   +        GRP_Mnt4  +     0.24731982804653 * GRP_MntFishProducts2
1246722   +          +     0.07001619920815 * GRP_MntFishProducts3
1246723   +          +     0.07735498521359 * GRP_MntFishProducts4
1246724   +          +    -0.15884098938162 * GRP_MntGoldProds2
1246725   +          +    -0.27657428867783 * GRP_MntGoldProds3
1246726   +          +     -0.1812542301124 * GRP_MntGoldProds4
1246727   +          +    -0.05299867036647 * GRP_MntMeatProducts2
1246728   +          +     0.00010942539908 * GRP_MntMeatProducts3
1246729   +          +     0.03587382246671 * GRP_MntMeatProducts4
1246730   +          +      0.1756484217323 * GRP_MntWines2  +     0.00289944116976 *
1246731   +        GRP_MntWines3  +    -0.03752905583429 * GRP_MntWines4
1246732   +          +     0.14681010085531 * GRP_NumCatalogPurchases3
1246733   +          +    -0.23177792190553 * GRP_NumCatalogPurchases4
1246734   +          +      -0.481887498986 * GRP_NumDistPurchases2
1246735   +          +    -0.09943718589693 * GRP_NumDistPurchases3
1246736   +          +     0.21760620991618 * GRP_NumDistPurchases4
1246737   +          +    -0.09523799103665 * GRP_NumWebPurchases2
1246738   +          +     0.06245025753157 * GRP_NumWebPurchases3
1246739   +          +     0.11312469123111 * GRP_NumWebPurchases4
1246740   +          +     -0.0156924842698 * GRP_RFMstat2  +     0.04329307564553 *
1246741   +        GRP_RFMstat3  +    -0.06522539538042 * GRP_RFMstat4
1246742   +          +     0.03130432577469 * GRP_RMntFrq2  +     0.15385182155627 *
1246743   +        GRP_RMntFrq3  +    -0.05116322369837 * GRP_RMntFrq4
1246744   +          +     0.52385840277978 * GRP_Recency2  +     0.44348058106283 *
1246745   +        GRP_Recency3  +    -0.30003743891847 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08768819217047 * GRP_AcceptedCmp52 + 0.44895652806962 *
GRP_Frq2 + 0.3800586670059 * GRP_Frq3 + -0.07849333722318 * GRP_Frq4 + 0.61398939980043 *
GRP_Income2 + 0.47732933105902 * GRP_Income3 + -0.46767598050409 * GRP_Income4 +
0.00119742402812 * GRP_Mnt2 + 0.28434487319801 * GRP_Mnt3 + -0.16337373090226 * GRP_Mnt4 +
0.24731982804653 * GRP_MntFishProducts2 + 0.07001619920815 * GRP_MntFishProducts3 +
0.07735498521359 * GRP_MntFishProducts4 + -0.15884098938162 * GRP_MntGoldProds2 +
-0.27657428867783 * GRP_MntGoldProds3 + -0.1812542301124 * GRP_MntGoldProds4 +
-0.05299867036647 * GRP_MntMeatProducts2 + 0.00010942539908 * GRP_MntMeatProducts3 +
0.03587382246671 * GRP_MntMeatProducts4 + 0.1756484217323 * GRP_MntWines2 + 0.00289944116976 *
GRP_MntWines3 + -0.03752905583429 * GRP_MntWines4 + 0.14681010085531 *
GRP_NumCatalogPurchases3 + -0.23177792190553 * GRP_NumCatalogPurchases4 + -0.481887498986 *
GRP_NumDistPurchases2 + -0.09943718589693 * GRP_NumDistPurchases3 + 0.21760620991618 *
GRP_NumDistPurchases4 + -0.09523799103665 * GRP_NumWebPurchases2 + 0.06245025753157 *
GRP_NumWebPurchases3 + 0.11312469123111 * GRP_NumWebPurchases4 + -0.0156924842698 *
GRP_RFMstat2 + 0.04329307564553 * GRP_RFMstat3 + -0.06522539538042 * GRP_RFMstat4 +
0.03130432577469 * GRP_RMntFrq2 + 0.15385182155627 * GRP_RMntFrq3 + -0.05116322369837 *
GRP_RMntFrq4 + 0.52385840277978 * GRP_Recency2 + 0.44348058106283 * GRP_Recency3 +
-0.30003743891847 * GRP_Recency4 ;
1246746   +   H14  = H14  +    -0.30891588421078 * GRP_AcceptedCmp52
1246747   +          +     0.10101143238536 * GRP_Frq2  +    -0.03148220138998 * GRP_Frq3
1246748   +          +     0.09807803608029 * GRP_Frq4  +     0.11294471318052 *
1246749   +        GRP_Income2  +      0.0433560034099 * GRP_Income3
1246750   +          +    -0.35503487261838 * GRP_Income4  +     0.15199410100967 *
1246751   +        GRP_Mnt2  +    -0.15675008677561 * GRP_Mnt3  +    -0.06110606567063 *
1246752   +        GRP_Mnt4  +     0.10272197664106 * GRP_MntFishProducts2
1246753   +          +     0.33369645018356 * GRP_MntFishProducts3
1246754   +          +     0.08427214551103 * GRP_MntFishProducts4
1246755   +          +    -0.36187933889617 * GRP_MntGoldProds2
1246756   +          +      0.1522584097588 * GRP_MntGoldProds3
1246757   +          +    -0.18069803129722 * GRP_MntGoldProds4
1246758   +          +    -0.39829328143793 * GRP_MntMeatProducts2
1246759   +          +     0.00511939388608 * GRP_MntMeatProducts3
1246760   +          +      0.0518722466688 * GRP_MntMeatProducts4
1246761   +          +     0.10413724420858 * GRP_MntWines2  +    -0.30183392073068 *
1246762   +        GRP_MntWines3  +    -0.40546180997599 * GRP_MntWines4
1246763   +          +    -0.73564355192687 * GRP_NumCatalogPurchases3
1246764   +          +     0.04239157662699 * GRP_NumCatalogPurchases4
1246765   +          +    -0.61448773428482 * GRP_NumDistPurchases2
1246766   +          +    -0.10817170519054 * GRP_NumDistPurchases3
1246767   +          +    -0.00883878051452 * GRP_NumDistPurchases4
1246768   +          +      0.0024401108853 * GRP_NumWebPurchases2
1246769   +          +     -0.1066188825276 * GRP_NumWebPurchases3
1246770   +          +     -0.2845728776007 * GRP_NumWebPurchases4
1246771   +          +    -0.46846387193519 * GRP_RFMstat2  +     0.01548835288752 *
1246772   +        GRP_RFMstat3  +     0.29056719482503 * GRP_RFMstat4
1246773   +          +     0.13283388675843 * GRP_RMntFrq2  +    -0.01179035894062 *
1246774   +        GRP_RMntFrq3  +    -0.40979674551139 * GRP_RMntFrq4
1246775   +          +     0.39674687653317 * GRP_Recency2  +     0.48674783005161 *
1246776   +        GRP_Recency3  +     0.19384397786172 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30891588421078 * GRP_AcceptedCmp52 + 0.10101143238536 *
GRP_Frq2 + -0.03148220138998 * GRP_Frq3 + 0.09807803608029 * GRP_Frq4 + 0.11294471318052 *
GRP_Income2 + 0.0433560034099 * GRP_Income3 + -0.35503487261838 * GRP_Income4 +
0.15199410100967 * GRP_Mnt2 + -0.15675008677561 * GRP_Mnt3 + -0.06110606567063 * GRP_Mnt4 +
0.10272197664106 * GRP_MntFishProducts2 + 0.33369645018356 * GRP_MntFishProducts3 +
0.08427214551103 * GRP_MntFishProducts4 + -0.36187933889617 * GRP_MntGoldProds2 +
0.1522584097588 * GRP_MntGoldProds3 + -0.18069803129722 * GRP_MntGoldProds4 +
-0.39829328143793 * GRP_MntMeatProducts2 + 0.00511939388608 * GRP_MntMeatProducts3 +
0.0518722466688 * GRP_MntMeatProducts4 + 0.10413724420858 * GRP_MntWines2 + -0.30183392073068
* GRP_MntWines3 + -0.40546180997599 * GRP_MntWines4 + -0.73564355192687 *
GRP_NumCatalogPurchases3 + 0.04239157662699 * GRP_NumCatalogPurchases4 + -0.61448773428482 *
GRP_NumDistPurchases2 + -0.10817170519054 * GRP_NumDistPurchases3 + -0.00883878051452 *
GRP_NumDistPurchases4 + 0.0024401108853 * GRP_NumWebPurchases2 + -0.1066188825276 *
GRP_NumWebPurchases3 + -0.2845728776007 * GRP_NumWebPurchases4 + -0.46846387193519 *
GRP_RFMstat2 + 0.01548835288752 * GRP_RFMstat3 + 0.29056719482503 * GRP_RFMstat4 +
0.13283388675843 * GRP_RMntFrq2 + -0.01179035894062 * GRP_RMntFrq3 + -0.40979674551139 *
GRP_RMntFrq4 + 0.39674687653317 * GRP_Recency2 + 0.48674783005161 * GRP_Recency3 +
0.19384397786172 * GRP_Recency4 ;
1246777   +   H11  =    -1.18381596942405 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18381596942405 + H11 ;
1246778   +   H12  =     0.86336963287203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.86336963287203 + H12 ;
1246779   +   H13  =     -0.9724199391604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.9724199391604 + H13 ;
1246780   +   H14  =     1.35533016839911 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.35533016839911 + H14 ;
1246781   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1246782   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1246783   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1246784   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1246785   +END;
MPRINT(EM_DIAGRAM):   END;
1246786   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1246787   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1246788   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1246789   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1246790   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1246791   +END;
MPRINT(EM_DIAGRAM):   END;
1246792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246793   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1246794   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246795   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1246796   +   P_DepVar1  =     2.12648206014408 * H11  +      1.4206902210932 * H12
1246797   +          +     1.21164854880393 * H13  +      1.5803543453738 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.12648206014408 * H11 + 1.4206902210932 * H12 +
1.21164854880393 * H13 + 1.5803543453738 * H14 ;
1246798   +   P_DepVar1  =    -1.66515506353131 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66515506353131 + P_DepVar1 ;
1246799   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1246800   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1246801   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1246802   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1246803   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1246804   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1246805   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1246806   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1246807   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1246808   +END;
MPRINT(EM_DIAGRAM):   END;
1246809   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1246810   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1246811   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1246812   +END;
MPRINT(EM_DIAGRAM):   END;
1246813   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1246814   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1246815   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1246816   +END;
MPRINT(EM_DIAGRAM):   END;
1246817   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246818   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1246819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1246820   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1246821   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1246822   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1246823   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1246824   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1246825   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1246826   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1246827   +END;
MPRINT(EM_DIAGRAM):   END;
1246828   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1246829   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1246830   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1246831   +drop
1246832   +H11
1246833   +H12
1246834   +H13
1246835   +H14
1246836   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1246837   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1246838    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1246839    quit;
1246840    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1246841    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1246842    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1246843    retain ID 2 Node "Neural21";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural21";
1246844    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1246845    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1842 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1842 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1246846    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1246847    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1246848    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1842 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1842 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1246849    proc sort data=EMWS8.Neural21_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural21_variableset out=_temp2(keep=NAME CREATOR);
1246850    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1246851    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.NEURAL21_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1246852    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1246853    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1246854    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1246855    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1246856    proc contents data=EMWS8.Neural21_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural21_train out=_meta(keep=NAME) noprint;
1246857    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1246858    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1246859    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1246860    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1246861    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1246862    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1246863    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1246864    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1246865    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1246866    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1246866  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 895 rows and 5 columns.
 
1246867    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1246868    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1246869    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 895 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 895 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1246870    filename _pref
1246870  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1246871    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1246872    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1246873   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1246874   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1246875   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1246876   +
1246877   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1246878   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1246879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1246880   +LABEL GRP_AcceptedCmp5 =
1246881   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1246882   +
1246883   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1246884   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1246885   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1246886   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1246887   +end;
MPRINT(EM_DIAGRAM):   end;
1246888   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1246889   +if (_UFORMAT eq '0'
1246890   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1246891   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1246892   +end;
MPRINT(EM_DIAGRAM):   end;
1246893   +else
1246894   +if (_UFORMAT eq '1'
1246895   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1246896   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1246897   +end;
MPRINT(EM_DIAGRAM):   end;
1246898   +else do;
MPRINT(EM_DIAGRAM):   else do;
1246899   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1246900   +end;
MPRINT(EM_DIAGRAM):   end;
1246901   +end;
MPRINT(EM_DIAGRAM):   end;
1246902   +
1246903   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1246904   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1246905   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1246906   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1246907   +
1246908   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1246909   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1246910   +end;
MPRINT(EM_DIAGRAM):   end;
1246911   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1246912   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1246913   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1246914   +end;
MPRINT(EM_DIAGRAM):   end;
1246915   +else
1246916   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1246917   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1246918   +end;
MPRINT(EM_DIAGRAM):   end;
1246919   +else
1246920   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1246921   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1246922   +end;
MPRINT(EM_DIAGRAM):   end;
1246923   +else
1246924   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1246925   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1246926   +end;
MPRINT(EM_DIAGRAM):   end;
1246927   +end;
MPRINT(EM_DIAGRAM):   end;
1246928   +
1246929   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1246930   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1246931   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1246932   +LABEL GRP_Income =
1246933   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1246934   +
1246935   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1246936   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1246937   +end;
MPRINT(EM_DIAGRAM):   end;
1246938   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1246939   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1246940   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1246941   +end;
MPRINT(EM_DIAGRAM):   end;
1246942   +else
1246943   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1246944   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1246945   +end;
MPRINT(EM_DIAGRAM):   end;
1246946   +else
1246947   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1246948   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1246949   +end;
MPRINT(EM_DIAGRAM):   end;
1246950   +else
1246951   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1246952   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1246953   +end;
MPRINT(EM_DIAGRAM):   end;
1246954   +end;
MPRINT(EM_DIAGRAM):   end;
1246955   +
1246956   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1246957   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1246958   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1246959   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1246960   +
1246961   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1246962   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1246963   +end;
MPRINT(EM_DIAGRAM):   end;
1246964   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1246965   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1246966   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1246967   +end;
MPRINT(EM_DIAGRAM):   end;
1246968   +else
1246969   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1246970   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1246971   +end;
MPRINT(EM_DIAGRAM):   end;
1246972   +else
1246973   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1246974   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1246975   +end;
MPRINT(EM_DIAGRAM):   end;
1246976   +else
1246977   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1246978   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1246979   +end;
MPRINT(EM_DIAGRAM):   end;
1246980   +end;
MPRINT(EM_DIAGRAM):   end;
1246981   +
1246982   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1246983   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1246984   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1246985   +LABEL GRP_MntFishProducts =
1246986   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1246987   +
1246988   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1246989   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1246990   +end;
MPRINT(EM_DIAGRAM):   end;
1246991   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1246992   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1246993   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1246994   +end;
MPRINT(EM_DIAGRAM):   end;
1246995   +else
1246996   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1246997   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1246998   +end;
MPRINT(EM_DIAGRAM):   end;
1246999   +else
1247000   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1247001   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1247002   +end;
MPRINT(EM_DIAGRAM):   end;
1247003   +else
1247004   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1247005   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1247006   +end;
MPRINT(EM_DIAGRAM):   end;
1247007   +end;
MPRINT(EM_DIAGRAM):   end;
1247008   +
1247009   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247010   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1247011   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247012   +LABEL GRP_MntGoldProds =
1247013   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1247014   +
1247015   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1247016   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1247017   +end;
MPRINT(EM_DIAGRAM):   end;
1247018   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1247019   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1247020   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1247021   +end;
MPRINT(EM_DIAGRAM):   end;
1247022   +else
1247023   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1247024   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1247025   +end;
MPRINT(EM_DIAGRAM):   end;
1247026   +else
1247027   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1247028   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1247029   +end;
MPRINT(EM_DIAGRAM):   end;
1247030   +else
1247031   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1247032   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1247033   +end;
MPRINT(EM_DIAGRAM):   end;
1247034   +end;
MPRINT(EM_DIAGRAM):   end;
1247035   +
1247036   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247037   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1247038   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247039   +LABEL GRP_MntMeatProducts =
1247040   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1247041   +
1247042   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1247043   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1247044   +end;
MPRINT(EM_DIAGRAM):   end;
1247045   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1247046   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1247047   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1247048   +end;
MPRINT(EM_DIAGRAM):   end;
1247049   +else
1247050   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1247051   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1247052   +end;
MPRINT(EM_DIAGRAM):   end;
1247053   +else
1247054   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1247055   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1247056   +end;
MPRINT(EM_DIAGRAM):   end;
1247057   +else
1247058   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1247059   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1247060   +end;
MPRINT(EM_DIAGRAM):   end;
1247061   +end;
MPRINT(EM_DIAGRAM):   end;
1247062   +
1247063   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247064   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1247065   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247066   +LABEL GRP_MntWines =
1247067   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1247068   +
1247069   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1247070   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1247071   +end;
MPRINT(EM_DIAGRAM):   end;
1247072   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1247073   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1247074   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1247075   +end;
MPRINT(EM_DIAGRAM):   end;
1247076   +else
1247077   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1247078   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1247079   +end;
MPRINT(EM_DIAGRAM):   end;
1247080   +else
1247081   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1247082   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1247083   +end;
MPRINT(EM_DIAGRAM):   end;
1247084   +else
1247085   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1247086   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1247087   +end;
MPRINT(EM_DIAGRAM):   end;
1247088   +end;
MPRINT(EM_DIAGRAM):   end;
1247089   +
1247090   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247091   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1247092   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247093   +LABEL GRP_NumCatalogPurchases =
1247094   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1247095   +
1247096   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1247097   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1247098   +end;
MPRINT(EM_DIAGRAM):   end;
1247099   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1247100   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1247101   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1247102   +end;
MPRINT(EM_DIAGRAM):   end;
1247103   +else
1247104   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1247105   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1247106   +end;
MPRINT(EM_DIAGRAM):   end;
1247107   +else
1247108   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1247109   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1247110   +end;
MPRINT(EM_DIAGRAM):   end;
1247111   +else
1247112   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1247113   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1247114   +end;
MPRINT(EM_DIAGRAM):   end;
1247115   +end;
MPRINT(EM_DIAGRAM):   end;
1247116   +
1247117   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247118   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1247119   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247120   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1247121   +
1247122   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1247123   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1247124   +end;
MPRINT(EM_DIAGRAM):   end;
1247125   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1247126   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1247127   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1247128   +end;
MPRINT(EM_DIAGRAM):   end;
1247129   +else
1247130   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1247131   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1247132   +end;
MPRINT(EM_DIAGRAM):   end;
1247133   +else
1247134   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1247135   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1247136   +end;
MPRINT(EM_DIAGRAM):   end;
1247137   +else
1247138   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1247139   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1247140   +end;
MPRINT(EM_DIAGRAM):   end;
1247141   +end;
MPRINT(EM_DIAGRAM):   end;
1247142   +
1247143   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247144   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1247145   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247146   +LABEL GRP_NumWebPurchases =
1247147   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1247148   +
1247149   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1247150   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1247151   +end;
MPRINT(EM_DIAGRAM):   end;
1247152   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1247153   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1247154   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1247155   +end;
MPRINT(EM_DIAGRAM):   end;
1247156   +else
1247157   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1247158   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1247159   +end;
MPRINT(EM_DIAGRAM):   end;
1247160   +else
1247161   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1247162   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1247163   +end;
MPRINT(EM_DIAGRAM):   end;
1247164   +else
1247165   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1247166   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1247167   +end;
MPRINT(EM_DIAGRAM):   end;
1247168   +end;
MPRINT(EM_DIAGRAM):   end;
1247169   +
1247170   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247171   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1247172   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247173   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1247174   +
1247175   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1247176   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1247177   +end;
MPRINT(EM_DIAGRAM):   end;
1247178   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1247179   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1247180   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1247181   +end;
MPRINT(EM_DIAGRAM):   end;
1247182   +else
1247183   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1247184   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1247185   +end;
MPRINT(EM_DIAGRAM):   end;
1247186   +else
1247187   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1247188   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1247189   +end;
MPRINT(EM_DIAGRAM):   end;
1247190   +else
1247191   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1247192   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1247193   +end;
MPRINT(EM_DIAGRAM):   end;
1247194   +end;
MPRINT(EM_DIAGRAM):   end;
1247195   +
1247196   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247197   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1247198   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247199   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1247200   +
1247201   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1247202   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1247203   +end;
MPRINT(EM_DIAGRAM):   end;
1247204   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1247205   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1247206   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1247207   +end;
MPRINT(EM_DIAGRAM):   end;
1247208   +else
1247209   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1247210   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1247211   +end;
MPRINT(EM_DIAGRAM):   end;
1247212   +else
1247213   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1247214   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1247215   +end;
MPRINT(EM_DIAGRAM):   end;
1247216   +else
1247217   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1247218   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1247219   +end;
MPRINT(EM_DIAGRAM):   end;
1247220   +end;
MPRINT(EM_DIAGRAM):   end;
1247221   +
1247222   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247223   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1247224   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247225   +LABEL GRP_Recency =
1247226   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1247227   +
1247228   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1247229   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1247230   +end;
MPRINT(EM_DIAGRAM):   end;
1247231   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1247232   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1247233   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1247234   +end;
MPRINT(EM_DIAGRAM):   end;
1247235   +else
1247236   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1247237   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1247238   +end;
MPRINT(EM_DIAGRAM):   end;
1247239   +else
1247240   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1247241   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1247242   +end;
MPRINT(EM_DIAGRAM):   end;
1247243   +else
1247244   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1247245   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1247246   +end;
MPRINT(EM_DIAGRAM):   end;
1247247   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1247248    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1247249    quit;
1247250    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1247251    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1247252    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1247253    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1247254    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1247255    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247256    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1247257    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1247258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247259    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1247260    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1247261    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247262    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1247263    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1247264    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1247265    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247266    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1247267    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1247268    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1247269    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1247270    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1247271    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1247272    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1247273    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1247274    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247275    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1247276    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1247276  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.
 
1247277    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247278    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1247279    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 910 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1247280    filename _pref
1247280  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1247281    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1247282    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1247283   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247284   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1247285   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1247286   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1247287   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1247288   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1247289    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1247290    quit;
1247291    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1247292    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1247293    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1247294    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1247295    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1247296    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247297    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1247298    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1247299    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247300    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1247301    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1247302    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1247303    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1247304    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1247305    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1247306    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247307    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1247308    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
1247309    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1247310    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1247311    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247312    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1247313    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1247314    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1247315    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247316    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1247317    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1247317  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1247318    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1247319    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1247320    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 914 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247321    filename _pref
1247321  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1247322    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1247323    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1247324   +
1247325   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1247326   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1247326  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1247327   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1247328   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1247329   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1247330   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1247331   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1247332    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1247333    quit;
1247334    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1247335    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1247336    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1247337    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1247338    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1247339    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247340    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1247341    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1247342    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247343    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1247344    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1247345    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247346    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1247347    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1247348    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1247349    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247350    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1247351    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1247352    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1247353    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1247354    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247355    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1247356    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1247357    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1247358    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247359    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1247360    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1247360  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1247361    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1247362    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1247363    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 953 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247364    filename _pref
1247364  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1247365    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1247366    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1247367   +
1247368   +
1247369   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1247370   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1247371   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1247372   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1247373   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1247374   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1247375   +
1247376   +
1247377   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1247378   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1247379   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1247380   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1247381   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1247382   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1247383   +
1247384   +
1247385   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1247386   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1247387   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1247388   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1247389   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1247390   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1247391   +
1247392   +
1247393   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1247394   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1247395   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1247396   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1247397   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1247398   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1247399   +
1247400   +
1247401   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1247402   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1247403   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1247404   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1247405   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1247406   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1247407   +
1247408   +
1247409   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1247410   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1247411   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1247412   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1247413   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1247414   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1247415   +
1247416   +
1247417   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1247418   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1247419   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1247420   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1247421   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1247422   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1247423   +
1247424   +
1247425   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1247426   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1247427   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1247428   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1247429   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1247430   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1247431   +if
1247432   +_FILTERNORM1 not in ( '.')
1247433   + and
1247434   +_FILTERNORM2 not in ( '.')
1247435   + and
1247436   +_FILTERNORM3 not in ( '.')
1247437   + and
1247438   +_FILTERNORM4 not in ( '.')
1247439   + and
1247440   +_FILTERNORM5 not in ( '.')
1247441   + and
1247442   +_FILTERNORM6 not in ( '.')
1247443   + and
1247444   +_FILTERNORM7 not in ( ' ')
1247445   + and
1247446   +_FILTERNORM8 not in ( ' ')
1247447   +and
1247448   +( Dt_Customer ne .)
1247449   +and ( Income ne . and (Income<=107000))
1247450   +and ( Kidhome ne .)
1247451   +and ( MntFishProducts ne .)
1247452   +and ( MntFruits ne .)
1247453   +and ( MntGoldProds ne .)
1247454   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1247455   +and ( MntSweetProducts ne .)
1247456   +and ( MntWines ne .)
1247457   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1247458   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1247459   +and ( NumStorePurchases ne .)
1247460   +and ( NumWebPurchases ne .)
1247461   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1247462   +and ( Recency ne .)
1247463   +and ( Teenhome ne .)
1247464   +and ( Year_Birth ne .)
1247465   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1247466   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1247467   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1247468   +end;
MPRINT(EM_DIAGRAM):   end;
1247469   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1247470   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1247471    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1247472    quit;
1247473    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1247474    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1247475    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1247476    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1247477    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1247478    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247479    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1247480    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1247481    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1247482    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1247483    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1247484    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247485    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1247486    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1247487    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1247488    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247489    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1247490    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1247491    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1247492    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1247493    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1247494    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1247495    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1247496    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1247497    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247498    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1247499    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1247499  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1247500    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1247501    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1247502    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 1019 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247503    %macro varDept(fcmpdata=,id=);
1247504    %global nobs&id scoreFlag&id;
1247505    %let scoreFlag&id = 0;
1247506    %if &id=1 or ^&fcmpStart %then %do;
1247507    proc sort data=&fcmpdata out=_temp&id nodupkey;
1247508    by NAME;
1247509    where id=&id and LHS in( %let j=1;
1247510    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1247511    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1247512    "&var" %let j = %eval(&j+1);
1247513    %end;
1247514    );
1247515    run;
1247516    %let dsid = %sysfunc(open(_temp&id));
1247517    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1247518    %let dsid = %sysfunc(close(&dsid));
1247519    %if &&nobs&id %then %do;
1247520    %let scoreFlag&id = 1;
1247521    %let fcmpStart = 1;
1247522    %end;
1247523    %else %let fcmpStart = 0;
1247524    %end;
1247525    %else %do;
1247526    proc sort data=&fcmpdata out=_tempid;
1247527    where id=&id;
1247528    by LHS;
1247529    run;
1247530    %let dsid = %sysfunc(open(_tempid));
1247531    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1247532    %let dsid = %sysfunc(close(&dsid));
1247533    %if ^&&nobs&id %then %do;
1247534    proc datasets lib=work nolist;
1247535    delete _tempid;
1247536    run;
1247537    quit;
1247538    %end;
1247539    %else %do;
1247540    data _tempAll;
1247541    set %let j=%eval(&id-1);
1247542    %do x=1 %to &j;
1247543    %if &&nobs&x %then %do;
1247544    _temp&x %end;
1247545    %end;
1247546    ;
1247547    run;
1247548    proc sql;
1247549    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1247549  ! work._tempid p2 where p.name=p2.lhs;
1247550    quit;
1247551    data _temp&id;
1247552    set _temp&id;
1247553    where LHS ne '' and NAME ne '' and Node ne '';
1247554    run;
1247555    proc datasets lib=work nolist;
1247556    delete _tempAll;
1247557    run;
1247558    %let dsid = %sysfunc(open(_temp&id));
1247559    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1247560    %let dsid = %sysfunc(close(&dsid));
1247561    %if ^&&nobs&id %then %do;
1247562    proc datasets lib=work nolist;
1247563    delete _temp&id;
1247564    run;
1247565    quit;
1247566    %end;
1247567    %else %do;
1247568    %let scoreFlag&id = 1;
1247569    data _temp&id;
1247570    set _temp&id;
1247571    where LHS ne NAME and node ne '';
1247572    run;
1247573    %let dsid = %sysfunc(open(_temp&id));
1247574    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1247575    %let dsid = %sysfunc(close(&dsid));
1247576    %if ^&&nobs&id %then %do;
1247577    proc datasets lib=work nolist;
1247578    delete _temp&id;
1247579    run;
1247580    quit;
1247581    %end;
1247582    %else %do;
1247583    proc sort data=_temp&id nodupkey;
1247584    by LHS NAME;
1247585    run;
1247586    %end;
1247587    %end;
1247588    %end;
1247589    %end;
1247590    %mend varDept;
1247591    %macro optCode(outdata=fcmpdata);
1247592    %global fcmpStart;
1247593    %let fcmpStart = 0;
1247594    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1247595    %let NumNodes=9;
1247596    %do k=1 %to &NumNodes;
1247597    %vardept(fcmpdata=&outdata, id=&k);
1247598    %end;
1247599    %mend optCode;
1247600    %optcode(outData=EMWS8.Ensmbl7_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1247601    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1247602    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1247603    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1247604    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247605    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1247606    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1247607    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1247608    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247609    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1247610    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1247610  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1247611    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1247612    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1247613    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1247614    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247615    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1247616    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1247617    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1247618    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247619    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1247620    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1247621    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1247622    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1247623    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1247624    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1247624  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.
 
1247625    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1247626    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1247627    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1247628    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1247629    filename _pref
1247629  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMPUBLISHSCORE.sas";
1247630    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1247631    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMPUBLISHSCORE.sas.
1247632   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1247633   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1247634   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1247635   +
1247636   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1247637   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1247638   +
1247639   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1247640   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1247641   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1247642   +array REG7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG7DRF [2] $12 _temporary_ ('1' '0' );
1247643   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1247644   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1247645   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1247646   +ARRAY REG7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG7DRU[2] _TEMPORARY_ (1 0);
1247647   +
1247648   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1247649   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1247650   +
1247651   +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
1247652   +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
1247653   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247654   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247655   +end;
MPRINT(EM_DIAGRAM):   end;
1247656   +
1247657   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1247658   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1247659   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1247660   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1247661   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247662   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247663   +end;
MPRINT(EM_DIAGRAM):   end;
1247664   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247665   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1247666   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1247667   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247668   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1247669   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1247670   +   end;
MPRINT(EM_DIAGRAM):   end;
1247671   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1247672   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1247673   +   end;
MPRINT(EM_DIAGRAM):   end;
1247674   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247675   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1247676   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1247677   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247678   +   end;
MPRINT(EM_DIAGRAM):   end;
1247679   +end;
MPRINT(EM_DIAGRAM):   end;
1247680   +
1247681   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1247682   +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
1247683   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1247684   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1247685   +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1247686   +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1247687   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247688   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247689   +end;
MPRINT(EM_DIAGRAM):   end;
1247690   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247691   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1247692   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1247693   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247694   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1247695   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1247696   +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
1247697   +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
1247698   +   end;
MPRINT(EM_DIAGRAM):   end;
1247699   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1247700   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1247701   +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
1247702   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1247703   +   end;
MPRINT(EM_DIAGRAM):   end;
1247704   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1247705   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1247706   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1247707   +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
1247708   +   end;
MPRINT(EM_DIAGRAM):   end;
1247709   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1247710   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1247711   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1247712   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1247713   +   end;
MPRINT(EM_DIAGRAM):   end;
1247714   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247715   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1247716   +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1247717   +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1247718   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1247719   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247720   +   end;
MPRINT(EM_DIAGRAM):   end;
1247721   +end;
MPRINT(EM_DIAGRAM):   end;
1247722   +
1247723   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1247724   +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
1247725   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1247726   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1247727   +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1247728   +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1247729   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247730   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247731   +end;
MPRINT(EM_DIAGRAM):   end;
1247732   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247733   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1247734   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1247735   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247736   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1247737   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1247738   +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
1247739   +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
1247740   +   end;
MPRINT(EM_DIAGRAM):   end;
1247741   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1247742   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1247743   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1247744   +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
1247745   +   end;
MPRINT(EM_DIAGRAM):   end;
1247746   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1247747   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1247748   +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
1247749   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1247750   +   end;
MPRINT(EM_DIAGRAM):   end;
1247751   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1247752   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1247753   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1247754   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1247755   +   end;
MPRINT(EM_DIAGRAM):   end;
1247756   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247757   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1247758   +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1247759   +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1247760   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1247761   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247762   +   end;
MPRINT(EM_DIAGRAM):   end;
1247763   +end;
MPRINT(EM_DIAGRAM):   end;
1247764   +
1247765   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1247766   +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
1247767   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1247768   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1247769   +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1247770   +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1247771   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247772   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247773   +end;
MPRINT(EM_DIAGRAM):   end;
1247774   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247775   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1247776   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1247777   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247778   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1247779   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1247780   +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
1247781   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1247782   +   end;
MPRINT(EM_DIAGRAM):   end;
1247783   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1247784   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1247785   +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
1247786   +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
1247787   +   end;
MPRINT(EM_DIAGRAM):   end;
1247788   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1247789   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1247790   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1247791   +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
1247792   +   end;
MPRINT(EM_DIAGRAM):   end;
1247793   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1247794   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1247795   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1247796   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1247797   +   end;
MPRINT(EM_DIAGRAM):   end;
1247798   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247799   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1247800   +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1247801   +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1247802   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1247803   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247804   +   end;
MPRINT(EM_DIAGRAM):   end;
1247805   +end;
MPRINT(EM_DIAGRAM):   end;
1247806   +
1247807   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1247808   +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
1247809   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1247810   +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1247811   +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1247812   +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1247813   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247814   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247815   +end;
MPRINT(EM_DIAGRAM):   end;
1247816   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247817   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1247818   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1247819   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247820   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1247821   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1247822   +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
1247823   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1247824   +   end;
MPRINT(EM_DIAGRAM):   end;
1247825   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1247826   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1247827   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1247828   +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
1247829   +   end;
MPRINT(EM_DIAGRAM):   end;
1247830   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1247831   +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
1247832   +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
1247833   +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
1247834   +   end;
MPRINT(EM_DIAGRAM):   end;
1247835   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1247836   +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
1247837   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1247838   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1247839   +   end;
MPRINT(EM_DIAGRAM):   end;
1247840   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247841   +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1247842   +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1247843   +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1247844   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1247845   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247846   +   end;
MPRINT(EM_DIAGRAM):   end;
1247847   +end;
MPRINT(EM_DIAGRAM):   end;
1247848   +
1247849   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1247850   +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
1247851   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1247852   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1247853   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1247854   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1247855   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247856   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247857   +end;
MPRINT(EM_DIAGRAM):   end;
1247858   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247859   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1247860   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1247861   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247862   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1247863   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1247864   +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1247865   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1247866   +   end;
MPRINT(EM_DIAGRAM):   end;
1247867   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1247868   +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1247869   +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1247870   +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1247871   +   end;
MPRINT(EM_DIAGRAM):   end;
1247872   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1247873   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1247874   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1247875   +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1247876   +   end;
MPRINT(EM_DIAGRAM):   end;
1247877   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1247878   +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1247879   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1247880   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1247881   +   end;
MPRINT(EM_DIAGRAM):   end;
1247882   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247883   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1247884   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1247885   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1247886   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1247887   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247888   +   end;
MPRINT(EM_DIAGRAM):   end;
1247889   +end;
MPRINT(EM_DIAGRAM):   end;
1247890   +
1247891   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1247892   +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
1247893   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1247894   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1247895   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1247896   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247897   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247898   +end;
MPRINT(EM_DIAGRAM):   end;
1247899   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247900   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1247901   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1247902   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247903   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1247904   +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1247905   +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1247906   +   end;
MPRINT(EM_DIAGRAM):   end;
1247907   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1247908   +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1247909   +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1247910   +   end;
MPRINT(EM_DIAGRAM):   end;
1247911   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1247912   +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1247913   +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1247914   +   end;
MPRINT(EM_DIAGRAM):   end;
1247915   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247916   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1247917   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1247918   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1247919   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247920   +   end;
MPRINT(EM_DIAGRAM):   end;
1247921   +end;
MPRINT(EM_DIAGRAM):   end;
1247922   +
1247923   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1247924   +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
1247925   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1247926   +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1247927   +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1247928   +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1247929   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247930   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247931   +end;
MPRINT(EM_DIAGRAM):   end;
1247932   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247933   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1247934   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1247935   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247936   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1247937   +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
1247938   +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
1247939   +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
1247940   +   end;
MPRINT(EM_DIAGRAM):   end;
1247941   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1247942   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1247943   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1247944   +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
1247945   +   end;
MPRINT(EM_DIAGRAM):   end;
1247946   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1247947   +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
1247948   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1247949   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1247950   +   end;
MPRINT(EM_DIAGRAM):   end;
1247951   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1247952   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1247953   +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
1247954   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1247955   +   end;
MPRINT(EM_DIAGRAM):   end;
1247956   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247957   +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1247958   +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1247959   +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1247960   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1247961   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247962   +   end;
MPRINT(EM_DIAGRAM):   end;
1247963   +end;
MPRINT(EM_DIAGRAM):   end;
1247964   +
1247965   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1247966   +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
1247967   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1247968   +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1247969   +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1247970   +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1247971   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1247972   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1247973   +end;
MPRINT(EM_DIAGRAM):   end;
1247974   +else do;
MPRINT(EM_DIAGRAM):   else do;
1247975   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1247976   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1247977   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1247978   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1247979   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1247980   +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
1247981   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1247982   +   end;
MPRINT(EM_DIAGRAM):   end;
1247983   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1247984   +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
1247985   +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
1247986   +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
1247987   +   end;
MPRINT(EM_DIAGRAM):   end;
1247988   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1247989   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1247990   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1247991   +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
1247992   +   end;
MPRINT(EM_DIAGRAM):   end;
1247993   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1247994   +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
1247995   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1247996   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1247997   +   end;
MPRINT(EM_DIAGRAM):   end;
1247998   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1247999   +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1248000   +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1248001   +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1248002   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1248003   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1248004   +   end;
MPRINT(EM_DIAGRAM):   end;
1248005   +end;
MPRINT(EM_DIAGRAM):   end;
1248006   +
1248007   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1248008   +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
1248009   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1248010   +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1248011   +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1248012   +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1248013   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1248014   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1248015   +end;
MPRINT(EM_DIAGRAM):   end;
1248016   +else do;
MPRINT(EM_DIAGRAM):   else do;
1248017   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1248018   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1248019   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1248020   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1248021   +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
1248022   +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
1248023   +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
1248024   +   end;
MPRINT(EM_DIAGRAM):   end;
1248025   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1248026   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1248027   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1248028   +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
1248029   +   end;
MPRINT(EM_DIAGRAM):   end;
1248030   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1248031   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1248032   +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
1248033   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1248034   +   end;
MPRINT(EM_DIAGRAM):   end;
1248035   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1248036   +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
1248037   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1248038   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1248039   +   end;
MPRINT(EM_DIAGRAM):   end;
1248040   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1248041   +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1248042   +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1248043   +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1248044   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1248045   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1248046   +   end;
MPRINT(EM_DIAGRAM):   end;
1248047   +end;
MPRINT(EM_DIAGRAM):   end;
1248048   +
1248049   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1248050   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1248051   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1248052   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1248053   +   goto REG7DR1;
MPRINT(EM_DIAGRAM):   goto REG7DR1;
1248054   +end;
MPRINT(EM_DIAGRAM):   end;
1248055   +
1248056   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1248057   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1248058   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1248059   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1248060   +
1248061   +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
1248062   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1248063   +_LP0 = _LP0 + (    -0.5862337869734) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5862337869734) * _TEMP * _1_0;
1248064   +
1248065   +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
1248066   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1248067   +_LP0 = _LP0 + (     1.0565693238421) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.0565693238421) * _TEMP * _2_0;
1248068   +_LP0 = _LP0 + (     0.0911336121088) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0911336121088) * _TEMP * _2_1;
1248069   +_LP0 = _LP0 + (   -0.37448220273968) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.37448220273968) * _TEMP * _2_2;
1248070   +
1248071   +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
1248072   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1248073   +_LP0 = _LP0 + (    0.51658584340625) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51658584340625) * _TEMP * _3_0;
1248074   +_LP0 = _LP0 + (    0.48505772489262) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.48505772489262) * _TEMP * _3_1;
1248075   +_LP0 = _LP0 + (   -0.50854630566525) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.50854630566525) * _TEMP * _3_2;
1248076   +
1248077   +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
1248078   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1248079   +_LP0 = _LP0 + (    0.38994498659965) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38994498659965) * _TEMP * _5_0;
1248080   +_LP0 = _LP0 + (    0.03146325606998) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03146325606998) * _TEMP * _5_1;
1248081   +_LP0 = _LP0 + (   -0.05372169204837) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05372169204837) * _TEMP * _5_2;
1248082   +
1248083   +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
1248084   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1248085   +_LP0 = _LP0 + (   -0.79733877870259) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.79733877870259) * _TEMP * _7_0;
1248086   +_LP0 = _LP0 + (   -0.15003183676105) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.15003183676105) * _TEMP * _7_1;
1248087   +_LP0 = _LP0 + (    0.31191597751128) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.31191597751128) * _TEMP * _7_2;
1248088   +
1248089   +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
1248090   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1248091   +_LP0 = _LP0 + (    0.53434964580952) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53434964580952) * _TEMP * _8_0;
1248092   +_LP0 = _LP0 + (    0.22167667253067) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.22167667253067) * _TEMP * _8_1;
1248093   +_LP0 = _LP0 + (     -0.305489910536) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.305489910536) * _TEMP * _8_2;
1248094   +
1248095   +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
1248096   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1248097   +_LP0 = _LP0 + (     -0.629899271763) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.629899271763) * _TEMP * _9_0;
1248098   +_LP0 = _LP0 + (    0.03240844395355) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03240844395355) * _TEMP * _9_1;
1248099   +
1248100   +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
1248101   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1248102   +_LP0 = _LP0 + (   -1.42622019893988) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.42622019893988) * _TEMP * _10_0;
1248103   +_LP0 = _LP0 + (    0.05466498093201) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05466498093201) * _TEMP * _10_1;
1248104   +_LP0 = _LP0 + (    0.25182489000571) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25182489000571) * _TEMP * _10_2;
1248105   +
1248106   +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
1248107   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1248108   +_LP0 = _LP0 + (   -0.14979245852204) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14979245852204) * _TEMP * _13_0;
1248109   +_LP0 = _LP0 + (     0.0056028143187) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0056028143187) * _TEMP * _13_1;
1248110   +_LP0 = _LP0 + (   -0.23315930182624) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23315930182624) * _TEMP * _13_2;
1248111   +
1248112   +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
1248113   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1248114   +_LP0 = _LP0 + (    1.06974976023651) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.06974976023651) * _TEMP * _14_0;
1248115   +_LP0 = _LP0 + (    0.29139327664531) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29139327664531) * _TEMP * _14_1;
1248116   +_LP0 = _LP0 + (   -0.34742570667526) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.34742570667526) * _TEMP * _14_2;
1248117   +
1248118   +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
1248119   +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
1248120   +_LP0 = _LP0 + (    0.01045707390649 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01045707390649 * _TEMP);
1248121   +
1248122   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1248123   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1248124   +_P0 = probnorm((   -21.5603180840073) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -21.5603180840073) + _LP0);
1248125   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1248126   +
1248127   +REG7DR1:
1248128   +
1248129   +
1248130   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG7DR1: *** Posterior Probabilities and Predicted Level;
1248131   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1248132   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1248133   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1248134   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1248135   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1248136   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1248137   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1248138   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1248139   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1248140   +end;
MPRINT(EM_DIAGRAM):   end;
1248141   +I_DepVar = REG7DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG7DRF[_IY];
1248142   +U_DepVar = REG7DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG7DRU[_IY];
1248143   +
1248144   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1248145   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1248146   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1248147    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1248148    quit;
1248149    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1248150    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1248151    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1248152    retain ID 2 Node "Reg7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg7";
1248153    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1248154    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 779 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 779 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248155    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1248156    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248157    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 779 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 779 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248158    proc sort data=EMWS8.Reg7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg7_variableset out=_temp2(keep=NAME CREATOR);
1248159    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248160    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.REG7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1248161    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1248162    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1248163    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1248164    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248165    proc contents data=EMWS8.Reg7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg7_train out=_meta(keep=NAME) noprint;
1248166    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1248167    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1248168    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248169    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248170    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1248171    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1248172    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248173    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248174    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1248175    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1248175  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 413 rows and 5 columns.
 
1248176    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1248177    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1248178    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 413 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 413 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248179    filename _pref
1248179  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1248180    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1248181    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1248182   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1248183   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1248184   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1248185   +
1248186   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248187   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1248188   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248189   +LABEL GRP_AcceptedCmp5 =
1248190   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1248191   +
1248192   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1248193   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1248194   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1248195   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1248196   +end;
MPRINT(EM_DIAGRAM):   end;
1248197   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1248198   +if (_UFORMAT eq '0'
1248199   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1248200   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1248201   +end;
MPRINT(EM_DIAGRAM):   end;
1248202   +else
1248203   +if (_UFORMAT eq '1'
1248204   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1248205   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1248206   +end;
MPRINT(EM_DIAGRAM):   end;
1248207   +else do;
MPRINT(EM_DIAGRAM):   else do;
1248208   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1248209   +end;
MPRINT(EM_DIAGRAM):   end;
1248210   +end;
MPRINT(EM_DIAGRAM):   end;
1248211   +
1248212   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248213   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1248214   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248215   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1248216   +
1248217   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1248218   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1248219   +end;
MPRINT(EM_DIAGRAM):   end;
1248220   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1248221   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1248222   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1248223   +end;
MPRINT(EM_DIAGRAM):   end;
1248224   +else
1248225   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1248226   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1248227   +end;
MPRINT(EM_DIAGRAM):   end;
1248228   +else
1248229   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1248230   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1248231   +end;
MPRINT(EM_DIAGRAM):   end;
1248232   +else
1248233   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1248234   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1248235   +end;
MPRINT(EM_DIAGRAM):   end;
1248236   +end;
MPRINT(EM_DIAGRAM):   end;
1248237   +
1248238   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248239   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1248240   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248241   +LABEL GRP_Income =
1248242   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1248243   +
1248244   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1248245   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1248246   +end;
MPRINT(EM_DIAGRAM):   end;
1248247   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1248248   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1248249   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1248250   +end;
MPRINT(EM_DIAGRAM):   end;
1248251   +else
1248252   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1248253   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1248254   +end;
MPRINT(EM_DIAGRAM):   end;
1248255   +else
1248256   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1248257   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1248258   +end;
MPRINT(EM_DIAGRAM):   end;
1248259   +else
1248260   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1248261   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1248262   +end;
MPRINT(EM_DIAGRAM):   end;
1248263   +end;
MPRINT(EM_DIAGRAM):   end;
1248264   +
1248265   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248266   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1248267   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248268   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1248269   +
1248270   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1248271   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1248272   +end;
MPRINT(EM_DIAGRAM):   end;
1248273   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1248274   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1248275   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1248276   +end;
MPRINT(EM_DIAGRAM):   end;
1248277   +else
1248278   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1248279   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1248280   +end;
MPRINT(EM_DIAGRAM):   end;
1248281   +else
1248282   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1248283   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1248284   +end;
MPRINT(EM_DIAGRAM):   end;
1248285   +else
1248286   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1248287   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1248288   +end;
MPRINT(EM_DIAGRAM):   end;
1248289   +end;
MPRINT(EM_DIAGRAM):   end;
1248290   +
1248291   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248292   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1248293   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248294   +LABEL GRP_MntFishProducts =
1248295   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1248296   +
1248297   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1248298   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1248299   +end;
MPRINT(EM_DIAGRAM):   end;
1248300   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1248301   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1248302   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1248303   +end;
MPRINT(EM_DIAGRAM):   end;
1248304   +else
1248305   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1248306   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1248307   +end;
MPRINT(EM_DIAGRAM):   end;
1248308   +else
1248309   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1248310   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1248311   +end;
MPRINT(EM_DIAGRAM):   end;
1248312   +else
1248313   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1248314   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1248315   +end;
MPRINT(EM_DIAGRAM):   end;
1248316   +end;
MPRINT(EM_DIAGRAM):   end;
1248317   +
1248318   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248319   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1248320   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248321   +LABEL GRP_MntGoldProds =
1248322   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1248323   +
1248324   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1248325   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1248326   +end;
MPRINT(EM_DIAGRAM):   end;
1248327   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1248328   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1248329   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1248330   +end;
MPRINT(EM_DIAGRAM):   end;
1248331   +else
1248332   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1248333   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1248334   +end;
MPRINT(EM_DIAGRAM):   end;
1248335   +else
1248336   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1248337   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1248338   +end;
MPRINT(EM_DIAGRAM):   end;
1248339   +else
1248340   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1248341   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1248342   +end;
MPRINT(EM_DIAGRAM):   end;
1248343   +end;
MPRINT(EM_DIAGRAM):   end;
1248344   +
1248345   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248346   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1248347   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248348   +LABEL GRP_MntMeatProducts =
1248349   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1248350   +
1248351   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1248352   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1248353   +end;
MPRINT(EM_DIAGRAM):   end;
1248354   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1248355   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1248356   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1248357   +end;
MPRINT(EM_DIAGRAM):   end;
1248358   +else
1248359   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1248360   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1248361   +end;
MPRINT(EM_DIAGRAM):   end;
1248362   +else
1248363   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1248364   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1248365   +end;
MPRINT(EM_DIAGRAM):   end;
1248366   +else
1248367   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1248368   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1248369   +end;
MPRINT(EM_DIAGRAM):   end;
1248370   +end;
MPRINT(EM_DIAGRAM):   end;
1248371   +
1248372   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248373   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1248374   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248375   +LABEL GRP_MntWines =
1248376   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1248377   +
1248378   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1248379   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1248380   +end;
MPRINT(EM_DIAGRAM):   end;
1248381   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1248382   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1248383   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1248384   +end;
MPRINT(EM_DIAGRAM):   end;
1248385   +else
1248386   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1248387   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1248388   +end;
MPRINT(EM_DIAGRAM):   end;
1248389   +else
1248390   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1248391   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1248392   +end;
MPRINT(EM_DIAGRAM):   end;
1248393   +else
1248394   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1248395   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1248396   +end;
MPRINT(EM_DIAGRAM):   end;
1248397   +end;
MPRINT(EM_DIAGRAM):   end;
1248398   +
1248399   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248400   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1248401   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248402   +LABEL GRP_NumCatalogPurchases =
1248403   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1248404   +
1248405   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1248406   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1248407   +end;
MPRINT(EM_DIAGRAM):   end;
1248408   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1248409   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1248410   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1248411   +end;
MPRINT(EM_DIAGRAM):   end;
1248412   +else
1248413   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1248414   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1248415   +end;
MPRINT(EM_DIAGRAM):   end;
1248416   +else
1248417   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1248418   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1248419   +end;
MPRINT(EM_DIAGRAM):   end;
1248420   +else
1248421   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1248422   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1248423   +end;
MPRINT(EM_DIAGRAM):   end;
1248424   +end;
MPRINT(EM_DIAGRAM):   end;
1248425   +
1248426   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248427   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1248428   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248429   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1248430   +
1248431   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1248432   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1248433   +end;
MPRINT(EM_DIAGRAM):   end;
1248434   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1248435   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1248436   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1248437   +end;
MPRINT(EM_DIAGRAM):   end;
1248438   +else
1248439   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1248440   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1248441   +end;
MPRINT(EM_DIAGRAM):   end;
1248442   +else
1248443   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1248444   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1248445   +end;
MPRINT(EM_DIAGRAM):   end;
1248446   +else
1248447   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1248448   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1248449   +end;
MPRINT(EM_DIAGRAM):   end;
1248450   +end;
MPRINT(EM_DIAGRAM):   end;
1248451   +
1248452   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248453   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1248454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248455   +LABEL GRP_NumWebPurchases =
1248456   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1248457   +
1248458   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1248459   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1248460   +end;
MPRINT(EM_DIAGRAM):   end;
1248461   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1248462   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1248463   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1248464   +end;
MPRINT(EM_DIAGRAM):   end;
1248465   +else
1248466   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1248467   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1248468   +end;
MPRINT(EM_DIAGRAM):   end;
1248469   +else
1248470   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1248471   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1248472   +end;
MPRINT(EM_DIAGRAM):   end;
1248473   +else
1248474   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1248475   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1248476   +end;
MPRINT(EM_DIAGRAM):   end;
1248477   +end;
MPRINT(EM_DIAGRAM):   end;
1248478   +
1248479   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248480   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1248481   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248482   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1248483   +
1248484   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1248485   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1248486   +end;
MPRINT(EM_DIAGRAM):   end;
1248487   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1248488   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1248489   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1248490   +end;
MPRINT(EM_DIAGRAM):   end;
1248491   +else
1248492   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1248493   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1248494   +end;
MPRINT(EM_DIAGRAM):   end;
1248495   +else
1248496   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1248497   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1248498   +end;
MPRINT(EM_DIAGRAM):   end;
1248499   +else
1248500   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1248501   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1248502   +end;
MPRINT(EM_DIAGRAM):   end;
1248503   +end;
MPRINT(EM_DIAGRAM):   end;
1248504   +
1248505   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248506   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1248507   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248508   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1248509   +
1248510   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1248511   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1248512   +end;
MPRINT(EM_DIAGRAM):   end;
1248513   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1248514   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1248515   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1248516   +end;
MPRINT(EM_DIAGRAM):   end;
1248517   +else
1248518   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1248519   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1248520   +end;
MPRINT(EM_DIAGRAM):   end;
1248521   +else
1248522   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1248523   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1248524   +end;
MPRINT(EM_DIAGRAM):   end;
1248525   +else
1248526   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1248527   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1248528   +end;
MPRINT(EM_DIAGRAM):   end;
1248529   +end;
MPRINT(EM_DIAGRAM):   end;
1248530   +
1248531   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248532   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1248533   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248534   +LABEL GRP_Recency =
1248535   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1248536   +
1248537   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1248538   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1248539   +end;
MPRINT(EM_DIAGRAM):   end;
1248540   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1248541   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1248542   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1248543   +end;
MPRINT(EM_DIAGRAM):   end;
1248544   +else
1248545   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1248546   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1248547   +end;
MPRINT(EM_DIAGRAM):   end;
1248548   +else
1248549   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1248550   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1248551   +end;
MPRINT(EM_DIAGRAM):   end;
1248552   +else
1248553   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1248554   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1248555   +end;
MPRINT(EM_DIAGRAM):   end;
1248556   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1248557    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1248558    quit;
1248559    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1248560    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1248561    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1248562    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1248563    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1248564    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248565    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1248566    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248567    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248568    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1248569    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248570    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1248571    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1248572    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1248573    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1248574    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248575    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1248576    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1248577    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1248578    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248579    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248580    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1248581    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1248582    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248583    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248584    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1248585    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1248585  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.
 
1248586    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248587    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1248588    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 428 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248589    filename _pref
1248589  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1248590    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1248591    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1248592   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248593   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1248594   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1248595   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1248596   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1248597   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1248598    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1248599    quit;
1248600    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1248601    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1248602    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1248603    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1248604    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1248605    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248606    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1248607    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248608    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1248609    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1248610    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248611    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248612    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1248613    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1248614    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1248615    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248616    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1248617    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.25 seconds
      cpu time            0.03 seconds
 
 
1248618    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1248619    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248620    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248621    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1248622    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1248623    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248624    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1248625    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1248626    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1248626  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1248627    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248628    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1248629    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 432 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248630    filename _pref
1248630  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1248631    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1248632    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1248633   +
1248634   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1248635   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1248635  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1248636   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1248637   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1248638   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1248639   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1248640   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1248641    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1248642    quit;
1248643    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1248644    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1248645    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1248646    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1248647    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1248648    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248649    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1248650    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248651    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1248652    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1248653    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248654    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248655    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1248656    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1248657    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1248658    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248659    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1248660    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1248661    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1248662    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248663    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248664    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1248665    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1248666    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248667    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248668    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1248669    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1248669  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1248670    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248671    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1248672    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 471 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248673    filename _pref
1248673  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1248674    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1248675    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1248676   +
1248677   +
1248678   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1248679   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1248680   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1248681   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1248682   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1248683   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1248684   +
1248685   +
1248686   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1248687   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1248688   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1248689   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1248690   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1248691   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1248692   +
1248693   +
1248694   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1248695   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1248696   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1248697   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1248698   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1248699   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1248700   +
1248701   +
1248702   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1248703   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1248704   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1248705   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1248706   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1248707   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1248708   +
1248709   +
1248710   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1248711   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1248712   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1248713   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1248714   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1248715   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1248716   +
1248717   +
1248718   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1248719   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1248720   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1248721   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1248722   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1248723   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1248724   +
1248725   +
1248726   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1248727   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1248728   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1248729   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1248730   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1248731   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1248732   +
1248733   +
1248734   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1248735   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1248736   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1248737   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1248738   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1248739   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1248740   +if
1248741   +_FILTERNORM1 not in ( '.')
1248742   + and
1248743   +_FILTERNORM2 not in ( '.')
1248744   + and
1248745   +_FILTERNORM3 not in ( '.')
1248746   + and
1248747   +_FILTERNORM4 not in ( '.')
1248748   + and
1248749   +_FILTERNORM5 not in ( '.')
1248750   + and
1248751   +_FILTERNORM6 not in ( '.')
1248752   + and
1248753   +_FILTERNORM7 not in ( ' ')
1248754   + and
1248755   +_FILTERNORM8 not in ( ' ')
1248756   +and
1248757   +( Dt_Customer ne .)
1248758   +and ( Income ne . and (Income<=107000))
1248759   +and ( Kidhome ne .)
1248760   +and ( MntFishProducts ne .)
1248761   +and ( MntFruits ne .)
1248762   +and ( MntGoldProds ne .)
1248763   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1248764   +and ( MntSweetProducts ne .)
1248765   +and ( MntWines ne .)
1248766   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1248767   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1248768   +and ( NumStorePurchases ne .)
1248769   +and ( NumWebPurchases ne .)
1248770   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1248771   +and ( Recency ne .)
1248772   +and ( Teenhome ne .)
1248773   +and ( Year_Birth ne .)
1248774   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1248775   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1248776   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1248777   +end;
MPRINT(EM_DIAGRAM):   end;
1248778   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1248779   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1248780    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1248781    quit;
1248782    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1248783    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1248784    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1248785    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1248786    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1248787    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1248788    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1248789    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248790    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248791    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1248792    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248793    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248794    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1248795    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1248796    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1248797    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1248798    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1248799    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1248800    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1248801    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248802    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1248803    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1248804    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1248805    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1248806    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248807    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1248808    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1248808  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1248809    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248810    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1248811    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 537 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248812    %macro varDept(fcmpdata=,id=);
1248813    %global nobs&id scoreFlag&id;
1248814    %let scoreFlag&id = 0;
1248815    %if &id=1 or ^&fcmpStart %then %do;
1248816    proc sort data=&fcmpdata out=_temp&id nodupkey;
1248817    by NAME;
1248818    where id=&id and LHS in( %let j=1;
1248819    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1248820    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1248821    "&var" %let j = %eval(&j+1);
1248822    %end;
1248823    );
1248824    run;
1248825    %let dsid = %sysfunc(open(_temp&id));
1248826    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1248827    %let dsid = %sysfunc(close(&dsid));
1248828    %if &&nobs&id %then %do;
1248829    %let scoreFlag&id = 1;
1248830    %let fcmpStart = 1;
1248831    %end;
1248832    %else %let fcmpStart = 0;
1248833    %end;
1248834    %else %do;
1248835    proc sort data=&fcmpdata out=_tempid;
1248836    where id=&id;
1248837    by LHS;
1248838    run;
1248839    %let dsid = %sysfunc(open(_tempid));
1248840    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1248841    %let dsid = %sysfunc(close(&dsid));
1248842    %if ^&&nobs&id %then %do;
1248843    proc datasets lib=work nolist;
1248844    delete _tempid;
1248845    run;
1248846    quit;
1248847    %end;
1248848    %else %do;
1248849    data _tempAll;
1248850    set %let j=%eval(&id-1);
1248851    %do x=1 %to &j;
1248852    %if &&nobs&x %then %do;
1248853    _temp&x %end;
1248854    %end;
1248855    ;
1248856    run;
1248857    proc sql;
1248858    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1248858  ! work._tempid p2 where p.name=p2.lhs;
1248859    quit;
1248860    data _temp&id;
1248861    set _temp&id;
1248862    where LHS ne '' and NAME ne '' and Node ne '';
1248863    run;
1248864    proc datasets lib=work nolist;
1248865    delete _tempAll;
1248866    run;
1248867    %let dsid = %sysfunc(open(_temp&id));
1248868    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1248869    %let dsid = %sysfunc(close(&dsid));
1248870    %if ^&&nobs&id %then %do;
1248871    proc datasets lib=work nolist;
1248872    delete _temp&id;
1248873    run;
1248874    quit;
1248875    %end;
1248876    %else %do;
1248877    %let scoreFlag&id = 1;
1248878    data _temp&id;
1248879    set _temp&id;
1248880    where LHS ne NAME and node ne '';
1248881    run;
1248882    %let dsid = %sysfunc(open(_temp&id));
1248883    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1248884    %let dsid = %sysfunc(close(&dsid));
1248885    %if ^&&nobs&id %then %do;
1248886    proc datasets lib=work nolist;
1248887    delete _temp&id;
1248888    run;
1248889    quit;
1248890    %end;
1248891    %else %do;
1248892    proc sort data=_temp&id nodupkey;
1248893    by LHS NAME;
1248894    run;
1248895    %end;
1248896    %end;
1248897    %end;
1248898    %end;
1248899    %mend varDept;
1248900    %macro optCode(outdata=fcmpdata);
1248901    %global fcmpStart;
1248902    %let fcmpStart = 0;
1248903    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1248904    %let NumNodes=9;
1248905    %do k=1 %to &NumNodes;
1248906    %vardept(fcmpdata=&outdata, id=&k);
1248907    %end;
1248908    %mend optCode;
1248909    %optcode(outData=EMWS8.Ensmbl7_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 33 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 11 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 10 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 23 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1248910    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1248911    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1248912    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1248913    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1248914    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1248915    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1248916    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1248917    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248918    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1248919    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1248919  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1248920    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1248921    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1248922    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1248923    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248924    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1248925    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1248926    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1248927    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1248928    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1248929    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1248930    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1248931    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1248932    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1248933    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1248933  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 10 rows and 3 columns.
 
1248934    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1248935    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1248936    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1248937    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 10 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1248938    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1248939    * Ensmbl7: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Computing metadata for TRAIN data;
1248940    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL7_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl7_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl7_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl7_TRAIN out=WORK.M0HMZX_0 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0HMZX_0;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0HMZX_0(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0HMZX_0;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0HMZX_0;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0355KDY NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0355KDY;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0355KDY;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M30F2Z46(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0355KDY;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0355KDY;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0355KDY;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0355KDY;
MPRINT(EMADVISECOLUMNS):   set WORK.M0355KDY;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl7";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl7";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl7";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl7";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl7";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl7";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl7";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl7";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl7";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl7";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl7";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1249260    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1249261    set EMWS8.Ensmbl7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_EMINFO;
1249262    where DATA='Ensmbl7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
1249263    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_EMINFO.
      WHERE (DATA='Ensmbl7') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1249264    data EMWS8.Ensmbl7_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl7_EMINFO;
1249265    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1249266    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1249267    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1249271    run;
1249272    data EMWS8.Ensmbl7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_EMINFO;
1249273    set EMWS8.Ensmbl7_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_EMINFO WORK.MODELTEMP_INFO;
1249274    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL7_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1249275    proc sort data = EMWS8.Ensmbl7_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl7_EMINFO NOTHREADS;
1249276    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1249277    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL7_EMINFO.
NOTE: The data set EMWS8.ENSMBL7_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1249278    proc sort data = EMWS8.Reg3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1249279    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1249280    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.REG3_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1249281    proc sort data = EMWS8.Ensmbl7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1249282    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1249283    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL7_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1249284    data EMWS8.Ensmbl7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_EMINFO;
1249285    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1249286    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1249287    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL7_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1249288    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1249289    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1249290    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1249291    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.ENSMBL7_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL7_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.18 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                19. April 2016
Time:                11.18 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O247RDWQ
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O247RDWQ new;
MPRINT(EM_DIAGRAM):   run;
1249315    data EMWS8.Ensmbl7_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl7_EMOUTFIT;
1249316    set EMWS8.Ensmbl7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_EMOUTFIT;
1249317    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1249318    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1249318  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1249319    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1249320    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL7_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL7_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1249321    proc sort data=EMWS8.Ensmbl7_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl7_EMREPORTFIT nothreads;
1249322    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1249323    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL7_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL7_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1249324    %let _EMwarndup = 0;
1249325    %let _EMtargetdup =;
1249326    %let _EMASEtargetdup =;
1249327    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1249328    set EMWS8.Ensmbl7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_EMOUTFIT;
1249329    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1249330    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1249331    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1249332    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1249333    end;
MPRINT(EM_DIAGRAM):   end;
1249334    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL7_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1249335    proc sort data=EMWS8.Reg3_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Reg3_CMeta_TRAIN out=WORK.SUBSETINMETA;
1249336    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1249337    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 58 observations read from the data set EMWS8.REG3_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 58 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1249338    proc sort data=EMWS8.Ensmbl7_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl7_VariableSet out=WORK.SUBSETVARSET(keep=NAME
REPORT);
1249339    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1249340    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.ENSMBL7_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1249341    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1249342    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1249343    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1249344    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 58 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 48 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 58 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1249345    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1249346    set EMWS8.Ensmbl7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_CMeta_TRAIN;
1249347    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1249347  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1249348    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL7_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1249349    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1249350    set EMWS8.Ensmbl7_TRAIN(keep=
1249351    F_DepVar
1249352    I_DepVar
1249353    P_DepVar0
1249354    P_DepVar1
1249355    R_DepVar0
1249356    R_DepVar1
1249357    U_DepVar
1249358    _WARN_
1249359    DepVar
1249360    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1249361    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: View EMWS8.ENSMBL7_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.REG3_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL7_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl7_3LYBHMY nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl7_3LYBHMY;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl7_3LYBHMY(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl7_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl7_3LYBHMY;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl7_3LYBHMY;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl7_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg3_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0005055929 OVLMAX 0.9659898703 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1253627    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1253628    set EMWS8.Ensmbl7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_CMeta_TRAIN;
1253629    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1253629  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1253630    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL7_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1253631    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1253632    set EMWS8.Ensmbl7_VALIDATE(keep=
1253633    F_DepVar
1253634    I_DepVar
1253635    P_DepVar0
1253636    P_DepVar1
1253637    R_DepVar0
1253638    R_DepVar1
1253639    U_DepVar
1253640    _WARN_
1253641    DepVar
1253642    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1253643    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.BINNING_VALIDATE.
NOTE: View EMWS8.ENSMBL7_VALIDATE.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.REG3_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL7_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl7_0R9OYQS nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl7_0R9OYQS;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl7_0R9OYQS(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl7_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_EMCLASSIFICATION WORK.Ensmbl7_0R9OYQS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl7_0R9OYQS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl7_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg3_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0006244342 OVLMAX 0.9545199864 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1257918    %let _cn = %sysfunc(getoption(CENTER));
1257919    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1257920    proc print data=EMWS8.Ensmbl7_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl7_EMREPORTFIT noobs label;
1257921    var STAT LABEL TRAIN
1257922    VALIDATE
1257923    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1257924    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1257925    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1257926    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1257927    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL7_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 972.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1257928    title10;
MPRINT(EM_DIAGRAM):   title10;
1257929    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1257930    proc sort data=EMWS8.Ensmbl7_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl7_EMCLASSIFICATION nothreads;
1257931    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1257932    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL7_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL7_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1257933    %let _cn = %sysfunc(getoption(CENTER));
1257934    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1257935    proc print data=EMWS8.Ensmbl7_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl7_EMCLASSIFICATION noobs label;
1257936    var from into pct_row pct_col count percent
1257937    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1257938    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1257939    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1257940    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1257941    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1257942    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1257943    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1257944    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1257945    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1257946    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1257947    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1257948    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL7_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 973.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1257949    title9;
MPRINT(EM_DIAGRAM):   title9;
1257950    title10;
MPRINT(EM_DIAGRAM):   title10;
1257951    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1257952    %let _cn = %sysfunc(getoption(CENTER));
1257953    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1257954    data EMWS8.Ensmbl7_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_EMEVENTREPORT;
1257955    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1257955  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1257956    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1257956  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1257956  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1257956  ! FALSEEVENT
1257957    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1257957  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1257957  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1257958       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1257959    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1257960    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1257961    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1257962    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1257963    set EMWS8.Ensmbl7_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_EMEVENTREPORT;
1257964    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL7_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL7_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1257965    proc print data=EMWS8.Ensmbl7_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl7_EMEVENTREPORT noobs label;
1257966    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1257967    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1257968    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1257969    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL7_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 974.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1257970    title10;
MPRINT(EM_DIAGRAM):   title10;
1257971    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1257972    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1257973    modify Ensmbl7_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl7_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1257974    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1257975    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1257975  ! ;
MPRINT(EM_DIAGRAM):   run;
1257976    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL7_EMRANK.DATA.
1257977    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
1257978    %let _cn = %sysfunc(getoption(CENTER));
1257979    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1257980    proc print data=EMWS8.Ensmbl7_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl7_EMRANK label noobs;
1257981    var
1257982    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1257983    by
1257984    notsorted DATAROLE
1257985    notsorted TARGET
1257986    notsorted TARGETLABEL
1257987    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1257988    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1257989    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1257990    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL7_EMRANK.
NOTE: The PROCEDURE PRINT printed page 975.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1257991    title10;
MPRINT(EM_DIAGRAM):   title10;
1257992    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1257993    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1257994    modify Ensmbl7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1257995    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1257995  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1257996    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1257996  ! ;
MPRINT(EM_DIAGRAM):   run;
1257997    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL7_EMSCOREDIST.DATA.
1257998    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl7_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
