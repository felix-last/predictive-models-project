*------------------------------------------------------------*
User:                Lukas Fahr
Date:                19. April 2016
Time:                12.35 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.34 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                19. April 2016
Time:                12.34 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1E2MJ72
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1E2MJ72 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.34 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.34 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[197527] MAX=1 EXCEEDMAXVALUE='' )[197531] )[197525]
VALIDCHOICES=(CHOICE1='Y' )[197529] )[197813] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[197535]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[197539] )[197537] )[197533] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[197543]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[197549] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[197547] )[197545] )[197541] )[197523]
1291245    proc freq data=EMWS8.Ensmbl7_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl7_VariableSet noprint;
1291246    table ROLE*LEVEL/out=WORK.Ensmbl7META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl7META;
1291247    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.ENSMBL7_VARIABLESET.
NOTE: The data set WORK.ENSMBL7META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1291248    proc print data=WORK.Ensmbl7META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl7META label noobs;
1291249    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1291250    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1291250  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1291250  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1291251    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1291252    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1291253    run;
 
NOTE: There were 6 observations read from the data set WORK.ENSMBL7META.
NOTE: The PROCEDURE PRINT printed page 995.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1291254    title10;
MPRINT(EM_DIAGRAM):   title10;
1291255    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Neural21_TRAIN EMWS8.Neural21_TRAIN
EMWS8.Neural21_TRAIN EMWS8.Neural21_TRAIN EMWS8 Neural21_TRAIN
EMWS8.Neural21_TRAIN EMWS8.Neural21_TRAIN
EMWS8.Neural21_TRAIN EMWS8.Neural21_TRAIN EMWS8 Neural21_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Neural21_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural21_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1291284    data WORK.Ensmbl7_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl7_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1291285    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1291286    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1291286  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1291286  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1291287       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1291287  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1291287  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1291288    set EMWS8.NEURAL21_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL21_DEPVAR_DM( where=(_TYPE_="TARGET"));
1291289    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1291290    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1291291    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1291292    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1291293    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1291294    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1291295    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1291296    end;
MPRINT(EM_DIAGRAM):   end;
1291297    output;
MPRINT(EM_DIAGRAM):   output;
1291298    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL21_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL7_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1291299    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1291300    proc print data=WORK.Ensmbl7_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl7_EVENT noobs label;
1291301    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1291302    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1291303    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1291304    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL7_EVENT.
NOTE: The PROCEDURE PRINT printed page 996.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1291305    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1291306    proc print data = EMWS8.Neural21_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural21_DepVar_DM noobs label;
1291307    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1291308    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1291309    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1291309  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1291309  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1291310    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1291311    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1291312    run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL21_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 997.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1291313    title10;
MPRINT(EM_DIAGRAM):   title10;
1291314    %let groupid =;
1291315    %let endGroupid =;
1291316    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1291317    set EMWS8.Neural21_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural21_EMINFO;
1291318    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1291318  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1291319    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1291320    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1291321    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL21_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1291322    %let groupid =;
1291323    %let endGroupid =;
1291324    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1291325    set EMWS8.Neural22_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_EMINFO;
1291326    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1291326  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1291327    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1291328    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1291329    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL22_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1291330    %let groupid =;
1291331    %let endGroupid =;
1291332    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1291333    set EMWS8.Neural18_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural18_EMINFO;
1291334    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1291334  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1291335    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1291336    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1291337    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL18_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1291338    data WORK.Ensmbl7;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl7;
1291339    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
1291340    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
1291340  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
1291341    nodeid="NEURAL21";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL21";
1291342    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1291343    output;
MPRINT(EM_DIAGRAM):   output;
1291344    nodeid="NEURAL22";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL22";
1291345    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1291346    output;
MPRINT(EM_DIAGRAM):   output;
1291347    nodeid="NEURAL18";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL18";
1291348    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1291349    output;
MPRINT(EM_DIAGRAM):   output;
1291350    ;
MPRINT(EM_DIAGRAM):   ;
1291351    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL7 has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1291352    title;
MPRINT(EM_DIAGRAM):   title;
1291353    proc print data=WORK.Ensmbl7 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl7 label noobs;
1291354    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
1291355    title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
1291356    run;
 
NOTE: There were 3 observations read from the data set WORK.ENSMBL7.
NOTE: The PROCEDURE PRINT printed page 998.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1291357    title9;
MPRINT(EM_DIAGRAM):   title9;
1291358    title10;
MPRINT(EM_DIAGRAM):   title10;
1291359    data WORK.M3FNSMCS;
MPRINT(EM_DIAGRAM):    data WORK.M3FNSMCS;
1291360    set WORK.M3FNSMCS;
MPRINT(EM_DIAGRAM):   set WORK.M3FNSMCS;
1291361    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
1291362    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M3FNSMCS.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M3FNSMCS has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1291363    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1291364    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1291365    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1291366    %macro DMDBClass;
1291367        DepVar(DESC)
1291368    %mend DMDBClass;
1291369    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1291370    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1291371    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1291372    %macro DMDBVar;
1291373
1291374    %mend DMDBVar;
1291375    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291376    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1291377    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291378    proc dmdb batch data=EMWS8.Neural21_TRAIN
1291379    dmdbcat=WORK.EM_DMDB
1291380    maxlevel = 513
1291381    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Neural21_TRAIN dmdbcat=WORK.EM_DMDB maxlevel
= 513 ;
MPRINT(EM_DIAGRAM):   class
1291382    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
1291383    target
1291384    DepVar
1291385    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1291386    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.NEURAL21_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL21_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1291387    quit;
1291388    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.34 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                12.34 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O09O5ORD
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O09O5ORD new;
MPRINT(EM_DIAGRAM):   run;
1291490    filename emflow
1291490  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring NEURAL21_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291491    *------------------------------------------------------------*;
1291492    * Ensmbl7: Scoring NEURAL21_TRAIN data;
1291493    *------------------------------------------------------------*;
1291494    data EMWS8.Ensmbl7_TRAIN
1291495    / view=EMWS8.Ensmbl7_TRAIN
1291496    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_TRAIN / view=EMWS8.Ensmbl7_TRAIN ;
1291497    set EMWS8.Neural21_TRAIN
1291498    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural21_TRAIN ;
1291499    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMFLOWSCORE.sas.
1291500   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291501   +* Ensmbl7: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Combine model for DepVar;
1291502   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291503   +* Ensmbl7: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring Code of model 1 of 3;
1291504   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291505   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291506   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1291507   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1291508   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1291509   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291510   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291511   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1291512   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1291513   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1291514   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291515   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291516   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1291517   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1291518   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1291519   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291520   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291521   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1291522   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1291523   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1291524   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291525   +
1291526   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1291527   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1291527  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1291528   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1291529   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1291530   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1291531   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1291532   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1291533   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291534   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1291535   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1291536   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1291537   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291538   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291539   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1291540   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291541   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1291542   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1291543   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1291544   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291545   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1291546   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1291547   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1291548   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291549   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291550   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1291551   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1291552   +* NODE: BINNING;
MPRINT(EM_DIAGRAM):   * NODE: BINNING;
1291553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291554   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1291555   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1291556   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1291557   +
1291558   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291559   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1291560   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291561   +LABEL GRP_AcceptedCmp5 =
1291562   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1291563   +
1291564   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1291565   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1291566   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1291567   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1291568   +end;
MPRINT(EM_DIAGRAM):   end;
1291569   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1291570   +if (_UFORMAT eq '0'
1291571   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1291572   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1291573   +end;
MPRINT(EM_DIAGRAM):   end;
1291574   +else
1291575   +if (_UFORMAT eq '1'
1291576   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1291577   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1291578   +end;
MPRINT(EM_DIAGRAM):   end;
1291579   +else do;
MPRINT(EM_DIAGRAM):   else do;
1291580   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1291581   +end;
MPRINT(EM_DIAGRAM):   end;
1291582   +end;
MPRINT(EM_DIAGRAM):   end;
1291583   +
1291584   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291585   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1291586   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291587   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1291588   +
1291589   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1291590   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1291591   +end;
MPRINT(EM_DIAGRAM):   end;
1291592   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1291593   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1291594   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1291595   +end;
MPRINT(EM_DIAGRAM):   end;
1291596   +else
1291597   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1291598   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1291599   +end;
MPRINT(EM_DIAGRAM):   end;
1291600   +else
1291601   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1291602   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1291603   +end;
MPRINT(EM_DIAGRAM):   end;
1291604   +else
1291605   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1291606   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1291607   +end;
MPRINT(EM_DIAGRAM):   end;
1291608   +end;
MPRINT(EM_DIAGRAM):   end;
1291609   +
1291610   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291611   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1291612   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291613   +LABEL GRP_Income =
1291614   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1291615   +
1291616   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1291617   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1291618   +end;
MPRINT(EM_DIAGRAM):   end;
1291619   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1291620   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1291621   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1291622   +end;
MPRINT(EM_DIAGRAM):   end;
1291623   +else
1291624   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1291625   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1291626   +end;
MPRINT(EM_DIAGRAM):   end;
1291627   +else
1291628   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1291629   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1291630   +end;
MPRINT(EM_DIAGRAM):   end;
1291631   +else
1291632   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1291633   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1291634   +end;
MPRINT(EM_DIAGRAM):   end;
1291635   +end;
MPRINT(EM_DIAGRAM):   end;
1291636   +
1291637   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291638   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1291639   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291640   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1291641   +
1291642   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1291643   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1291644   +end;
MPRINT(EM_DIAGRAM):   end;
1291645   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1291646   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1291647   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1291648   +end;
MPRINT(EM_DIAGRAM):   end;
1291649   +else
1291650   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1291651   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1291652   +end;
MPRINT(EM_DIAGRAM):   end;
1291653   +else
1291654   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1291655   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1291656   +end;
MPRINT(EM_DIAGRAM):   end;
1291657   +else
1291658   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1291659   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1291660   +end;
MPRINT(EM_DIAGRAM):   end;
1291661   +end;
MPRINT(EM_DIAGRAM):   end;
1291662   +
1291663   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291664   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1291665   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291666   +LABEL GRP_MntFishProducts =
1291667   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1291668   +
1291669   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1291670   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1291671   +end;
MPRINT(EM_DIAGRAM):   end;
1291672   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1291673   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1291674   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1291675   +end;
MPRINT(EM_DIAGRAM):   end;
1291676   +else
1291677   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1291678   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1291679   +end;
MPRINT(EM_DIAGRAM):   end;
1291680   +else
1291681   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1291682   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1291683   +end;
MPRINT(EM_DIAGRAM):   end;
1291684   +else
1291685   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1291686   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1291687   +end;
MPRINT(EM_DIAGRAM):   end;
1291688   +end;
MPRINT(EM_DIAGRAM):   end;
1291689   +
1291690   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291691   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1291692   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291693   +LABEL GRP_MntGoldProds =
1291694   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1291695   +
1291696   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1291697   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1291698   +end;
MPRINT(EM_DIAGRAM):   end;
1291699   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1291700   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1291701   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1291702   +end;
MPRINT(EM_DIAGRAM):   end;
1291703   +else
1291704   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1291705   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1291706   +end;
MPRINT(EM_DIAGRAM):   end;
1291707   +else
1291708   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1291709   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1291710   +end;
MPRINT(EM_DIAGRAM):   end;
1291711   +else
1291712   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1291713   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1291714   +end;
MPRINT(EM_DIAGRAM):   end;
1291715   +end;
MPRINT(EM_DIAGRAM):   end;
1291716   +
1291717   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291718   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1291719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291720   +LABEL GRP_MntMeatProducts =
1291721   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1291722   +
1291723   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1291724   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1291725   +end;
MPRINT(EM_DIAGRAM):   end;
1291726   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1291727   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1291728   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1291729   +end;
MPRINT(EM_DIAGRAM):   end;
1291730   +else
1291731   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1291732   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1291733   +end;
MPRINT(EM_DIAGRAM):   end;
1291734   +else
1291735   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1291736   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1291737   +end;
MPRINT(EM_DIAGRAM):   end;
1291738   +else
1291739   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1291740   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1291741   +end;
MPRINT(EM_DIAGRAM):   end;
1291742   +end;
MPRINT(EM_DIAGRAM):   end;
1291743   +
1291744   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291745   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1291746   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291747   +LABEL GRP_MntWines =
1291748   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1291749   +
1291750   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1291751   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1291752   +end;
MPRINT(EM_DIAGRAM):   end;
1291753   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1291754   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1291755   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1291756   +end;
MPRINT(EM_DIAGRAM):   end;
1291757   +else
1291758   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1291759   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1291760   +end;
MPRINT(EM_DIAGRAM):   end;
1291761   +else
1291762   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1291763   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1291764   +end;
MPRINT(EM_DIAGRAM):   end;
1291765   +else
1291766   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1291767   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1291768   +end;
MPRINT(EM_DIAGRAM):   end;
1291769   +end;
MPRINT(EM_DIAGRAM):   end;
1291770   +
1291771   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291772   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1291773   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291774   +LABEL GRP_NumCatalogPurchases =
1291775   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1291776   +
1291777   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1291778   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1291779   +end;
MPRINT(EM_DIAGRAM):   end;
1291780   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1291781   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1291782   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1291783   +end;
MPRINT(EM_DIAGRAM):   end;
1291784   +else
1291785   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1291786   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1291787   +end;
MPRINT(EM_DIAGRAM):   end;
1291788   +else
1291789   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1291790   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1291791   +end;
MPRINT(EM_DIAGRAM):   end;
1291792   +else
1291793   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1291794   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1291795   +end;
MPRINT(EM_DIAGRAM):   end;
1291796   +end;
MPRINT(EM_DIAGRAM):   end;
1291797   +
1291798   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291799   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1291800   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291801   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1291802   +
1291803   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1291804   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1291805   +end;
MPRINT(EM_DIAGRAM):   end;
1291806   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1291807   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1291808   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1291809   +end;
MPRINT(EM_DIAGRAM):   end;
1291810   +else
1291811   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1291812   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1291813   +end;
MPRINT(EM_DIAGRAM):   end;
1291814   +else
1291815   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1291816   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1291817   +end;
MPRINT(EM_DIAGRAM):   end;
1291818   +else
1291819   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1291820   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1291821   +end;
MPRINT(EM_DIAGRAM):   end;
1291822   +end;
MPRINT(EM_DIAGRAM):   end;
1291823   +
1291824   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291825   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1291826   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291827   +LABEL GRP_NumWebPurchases =
1291828   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1291829   +
1291830   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1291831   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1291832   +end;
MPRINT(EM_DIAGRAM):   end;
1291833   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1291834   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1291835   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1291836   +end;
MPRINT(EM_DIAGRAM):   end;
1291837   +else
1291838   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1291839   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1291840   +end;
MPRINT(EM_DIAGRAM):   end;
1291841   +else
1291842   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1291843   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1291844   +end;
MPRINT(EM_DIAGRAM):   end;
1291845   +else
1291846   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1291847   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1291848   +end;
MPRINT(EM_DIAGRAM):   end;
1291849   +end;
MPRINT(EM_DIAGRAM):   end;
1291850   +
1291851   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291852   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1291853   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291854   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1291855   +
1291856   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1291857   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1291858   +end;
MPRINT(EM_DIAGRAM):   end;
1291859   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1291860   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1291861   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1291862   +end;
MPRINT(EM_DIAGRAM):   end;
1291863   +else
1291864   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1291865   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1291866   +end;
MPRINT(EM_DIAGRAM):   end;
1291867   +else
1291868   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1291869   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1291870   +end;
MPRINT(EM_DIAGRAM):   end;
1291871   +else
1291872   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1291873   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1291874   +end;
MPRINT(EM_DIAGRAM):   end;
1291875   +end;
MPRINT(EM_DIAGRAM):   end;
1291876   +
1291877   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291878   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1291879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291880   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1291881   +
1291882   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1291883   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1291884   +end;
MPRINT(EM_DIAGRAM):   end;
1291885   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1291886   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1291887   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1291888   +end;
MPRINT(EM_DIAGRAM):   end;
1291889   +else
1291890   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1291891   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1291892   +end;
MPRINT(EM_DIAGRAM):   end;
1291893   +else
1291894   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1291895   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1291896   +end;
MPRINT(EM_DIAGRAM):   end;
1291897   +else
1291898   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1291899   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1291900   +end;
MPRINT(EM_DIAGRAM):   end;
1291901   +end;
MPRINT(EM_DIAGRAM):   end;
1291902   +
1291903   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291904   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1291905   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291906   +LABEL GRP_Recency =
1291907   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1291908   +
1291909   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1291910   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1291911   +end;
MPRINT(EM_DIAGRAM):   end;
1291912   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1291913   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1291914   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1291915   +end;
MPRINT(EM_DIAGRAM):   end;
1291916   +else
1291917   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1291918   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1291919   +end;
MPRINT(EM_DIAGRAM):   end;
1291920   +else
1291921   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1291922   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1291923   +end;
MPRINT(EM_DIAGRAM):   end;
1291924   +else
1291925   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1291926   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1291927   +end;
MPRINT(EM_DIAGRAM):   end;
1291928   +end;
MPRINT(EM_DIAGRAM):   end;
1291929   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291930   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1291931   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1291932   +* NODE: Neural21;
MPRINT(EM_DIAGRAM):   * NODE: Neural21;
1291933   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291934   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1291935   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1291936   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1291937   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1291938   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1291939   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1291940   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1291941   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1291942   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1291943   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1291944   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1291945   +LENGTH _WARN_ $4
1291946   +      F_DepVar  $ 12
1291947   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1291948   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1291949   +
1291950   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1291951   +
1291952   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1291953   +
1291954   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1291955   +
1291956   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1291957   +
1291958   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1291959   +
1291960   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1291961   +
1291962   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1291963   +
1291964   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1291965   +
1291966   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1291967   +
1291968   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1291969   +
1291970   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1291971   +
1291972   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1291973   +
1291974   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1291975   +
1291976   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1291977   +
1291978   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1291979   +
1291980   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1291981   +
1291982   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1291983   +
1291984   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1291985   +
1291986   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1291987   +
1291988   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1291989   +
1291990   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1291991   +
1291992   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1291993   +
1291994   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1291995   +
1291996   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1291997   +
1291998   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1291999   +
1292000   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1292001   +
1292002   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1292003   +
1292004   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1292005   +
1292006   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1292007   +
1292008   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1292009   +
1292010   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1292011   +
1292012   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1292013   +
1292014   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1292015   +
1292016   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1292017   +
1292018   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1292019   +
1292020   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1292021   +
1292022   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1292023   +
1292024   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1292025   +
1292026   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1292027   +
1292028   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1292029   +
1292030   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1292031   +
1292032   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1292033   +
1292034   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1292035   +
1292036   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1292037   +
1292038   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1292039   +
1292040   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1292041   +
1292042   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1292043   +
1292044   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1292045   +
1292046   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1292047   +
1292048   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1292049   +
1292050   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1292051   +
1292052   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1292053   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1292054   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1292055   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1292056   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292057   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292058   +end;
MPRINT(EM_DIAGRAM):   end;
1292059   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292060   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292061   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1292062   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292063   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1292064   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1292065   +   end;
MPRINT(EM_DIAGRAM):   end;
1292066   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1292067   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1292068   +   end;
MPRINT(EM_DIAGRAM):   end;
1292069   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292070   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1292071   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292072   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292073   +   end;
MPRINT(EM_DIAGRAM):   end;
1292074   +end;
MPRINT(EM_DIAGRAM):   end;
1292075   +
1292076   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1292077   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1292078   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1292079   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1292080   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1292081   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1292082   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292083   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292084   +end;
MPRINT(EM_DIAGRAM):   end;
1292085   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292086   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292087   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1292088   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292089   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1292090   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1292091   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1292092   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1292093   +   end;
MPRINT(EM_DIAGRAM):   end;
1292094   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1292095   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1292096   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1292097   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1292098   +   end;
MPRINT(EM_DIAGRAM):   end;
1292099   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1292100   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1292101   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1292102   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1292103   +   end;
MPRINT(EM_DIAGRAM):   end;
1292104   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1292105   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1292106   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1292107   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1292108   +   end;
MPRINT(EM_DIAGRAM):   end;
1292109   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292110   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1292111   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1292112   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1292113   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292114   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292115   +   end;
MPRINT(EM_DIAGRAM):   end;
1292116   +end;
MPRINT(EM_DIAGRAM):   end;
1292117   +
1292118   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1292119   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1292120   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1292121   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1292122   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1292123   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1292124   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292125   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292126   +end;
MPRINT(EM_DIAGRAM):   end;
1292127   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292128   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292129   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1292130   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292131   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1292132   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1292133   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1292134   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1292135   +   end;
MPRINT(EM_DIAGRAM):   end;
1292136   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1292137   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1292138   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1292139   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1292140   +   end;
MPRINT(EM_DIAGRAM):   end;
1292141   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1292142   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1292143   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1292144   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1292145   +   end;
MPRINT(EM_DIAGRAM):   end;
1292146   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1292147   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1292148   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1292149   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1292150   +   end;
MPRINT(EM_DIAGRAM):   end;
1292151   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292152   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1292153   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1292154   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1292155   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292156   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292157   +   end;
MPRINT(EM_DIAGRAM):   end;
1292158   +end;
MPRINT(EM_DIAGRAM):   end;
1292159   +
1292160   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1292161   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1292162   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1292163   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1292164   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1292165   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1292166   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292167   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292168   +end;
MPRINT(EM_DIAGRAM):   end;
1292169   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292170   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292171   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1292172   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292173   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1292174   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1292175   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1292176   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1292177   +   end;
MPRINT(EM_DIAGRAM):   end;
1292178   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1292179   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1292180   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1292181   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1292182   +   end;
MPRINT(EM_DIAGRAM):   end;
1292183   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1292184   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1292185   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1292186   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1292187   +   end;
MPRINT(EM_DIAGRAM):   end;
1292188   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1292189   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1292190   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1292191   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1292192   +   end;
MPRINT(EM_DIAGRAM):   end;
1292193   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292194   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1292195   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1292196   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1292197   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292198   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292199   +   end;
MPRINT(EM_DIAGRAM):   end;
1292200   +end;
MPRINT(EM_DIAGRAM):   end;
1292201   +
1292202   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1292203   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1292204   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1292205   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1292206   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1292207   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1292208   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292209   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292210   +end;
MPRINT(EM_DIAGRAM):   end;
1292211   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292212   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292213   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1292214   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292215   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1292216   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1292217   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1292218   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1292219   +   end;
MPRINT(EM_DIAGRAM):   end;
1292220   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1292221   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1292222   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1292223   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1292224   +   end;
MPRINT(EM_DIAGRAM):   end;
1292225   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1292226   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1292227   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1292228   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1292229   +   end;
MPRINT(EM_DIAGRAM):   end;
1292230   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1292231   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1292232   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1292233   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1292234   +   end;
MPRINT(EM_DIAGRAM):   end;
1292235   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292236   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1292237   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1292238   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1292239   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292240   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292241   +   end;
MPRINT(EM_DIAGRAM):   end;
1292242   +end;
MPRINT(EM_DIAGRAM):   end;
1292243   +
1292244   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1292245   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1292246   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1292247   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1292248   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1292249   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1292250   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292251   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292252   +end;
MPRINT(EM_DIAGRAM):   end;
1292253   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292254   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292255   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1292256   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292257   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1292258   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1292259   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1292260   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1292261   +   end;
MPRINT(EM_DIAGRAM):   end;
1292262   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1292263   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1292264   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1292265   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1292266   +   end;
MPRINT(EM_DIAGRAM):   end;
1292267   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1292268   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1292269   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1292270   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1292271   +   end;
MPRINT(EM_DIAGRAM):   end;
1292272   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1292273   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1292274   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1292275   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1292276   +   end;
MPRINT(EM_DIAGRAM):   end;
1292277   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292278   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1292279   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1292280   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1292281   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292282   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292283   +   end;
MPRINT(EM_DIAGRAM):   end;
1292284   +end;
MPRINT(EM_DIAGRAM):   end;
1292285   +
1292286   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1292287   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1292288   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1292289   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1292290   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1292291   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1292292   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292293   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292294   +end;
MPRINT(EM_DIAGRAM):   end;
1292295   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292296   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292297   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1292298   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292299   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1292300   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1292301   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1292302   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1292303   +   end;
MPRINT(EM_DIAGRAM):   end;
1292304   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1292305   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1292306   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1292307   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1292308   +   end;
MPRINT(EM_DIAGRAM):   end;
1292309   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1292310   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1292311   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1292312   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1292313   +   end;
MPRINT(EM_DIAGRAM):   end;
1292314   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1292315   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1292316   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1292317   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1292318   +   end;
MPRINT(EM_DIAGRAM):   end;
1292319   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292320   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1292321   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1292322   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1292323   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292324   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292325   +   end;
MPRINT(EM_DIAGRAM):   end;
1292326   +end;
MPRINT(EM_DIAGRAM):   end;
1292327   +
1292328   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1292329   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1292330   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1292331   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1292332   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1292333   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1292334   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292335   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292336   +end;
MPRINT(EM_DIAGRAM):   end;
1292337   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292338   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292339   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1292340   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292341   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1292342   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1292343   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1292344   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1292345   +   end;
MPRINT(EM_DIAGRAM):   end;
1292346   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1292347   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1292348   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1292349   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1292350   +   end;
MPRINT(EM_DIAGRAM):   end;
1292351   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1292352   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1292353   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1292354   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1292355   +   end;
MPRINT(EM_DIAGRAM):   end;
1292356   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1292357   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1292358   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1292359   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1292360   +   end;
MPRINT(EM_DIAGRAM):   end;
1292361   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292362   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1292363   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1292364   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1292365   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292366   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292367   +   end;
MPRINT(EM_DIAGRAM):   end;
1292368   +end;
MPRINT(EM_DIAGRAM):   end;
1292369   +
1292370   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1292371   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1292372   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1292373   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1292374   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1292375   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292376   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292377   +end;
MPRINT(EM_DIAGRAM):   end;
1292378   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292379   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292380   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1292381   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292382   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1292383   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1292384   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1292385   +   end;
MPRINT(EM_DIAGRAM):   end;
1292386   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1292387   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1292388   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1292389   +   end;
MPRINT(EM_DIAGRAM):   end;
1292390   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1292391   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1292392   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1292393   +   end;
MPRINT(EM_DIAGRAM):   end;
1292394   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292395   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1292396   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1292397   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292398   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292399   +   end;
MPRINT(EM_DIAGRAM):   end;
1292400   +end;
MPRINT(EM_DIAGRAM):   end;
1292401   +
1292402   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1292403   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1292404   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1292405   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1292406   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1292407   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1292408   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292409   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292410   +end;
MPRINT(EM_DIAGRAM):   end;
1292411   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292412   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292413   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1292414   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292415   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1292416   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1292417   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1292418   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1292419   +   end;
MPRINT(EM_DIAGRAM):   end;
1292420   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1292421   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1292422   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1292423   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1292424   +   end;
MPRINT(EM_DIAGRAM):   end;
1292425   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1292426   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1292427   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1292428   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1292429   +   end;
MPRINT(EM_DIAGRAM):   end;
1292430   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1292431   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1292432   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1292433   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1292434   +   end;
MPRINT(EM_DIAGRAM):   end;
1292435   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292436   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1292437   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1292438   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1292439   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292440   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292441   +   end;
MPRINT(EM_DIAGRAM):   end;
1292442   +end;
MPRINT(EM_DIAGRAM):   end;
1292443   +
1292444   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1292445   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1292446   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1292447   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1292448   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1292449   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1292450   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292451   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292452   +end;
MPRINT(EM_DIAGRAM):   end;
1292453   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292454   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292455   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1292456   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292457   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1292458   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1292459   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1292460   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1292461   +   end;
MPRINT(EM_DIAGRAM):   end;
1292462   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1292463   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1292464   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1292465   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1292466   +   end;
MPRINT(EM_DIAGRAM):   end;
1292467   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1292468   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1292469   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1292470   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1292471   +   end;
MPRINT(EM_DIAGRAM):   end;
1292472   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1292473   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1292474   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1292475   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1292476   +   end;
MPRINT(EM_DIAGRAM):   end;
1292477   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292478   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1292479   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1292480   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1292481   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292482   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292483   +   end;
MPRINT(EM_DIAGRAM):   end;
1292484   +end;
MPRINT(EM_DIAGRAM):   end;
1292485   +
1292486   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1292487   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1292488   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1292489   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1292490   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1292491   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1292492   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292493   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292494   +end;
MPRINT(EM_DIAGRAM):   end;
1292495   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292496   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292497   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1292498   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292499   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1292500   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1292501   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1292502   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1292503   +   end;
MPRINT(EM_DIAGRAM):   end;
1292504   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1292505   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1292506   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1292507   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1292508   +   end;
MPRINT(EM_DIAGRAM):   end;
1292509   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1292510   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1292511   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1292512   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1292513   +   end;
MPRINT(EM_DIAGRAM):   end;
1292514   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1292515   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1292516   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1292517   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1292518   +   end;
MPRINT(EM_DIAGRAM):   end;
1292519   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292520   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1292521   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1292522   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1292523   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292524   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292525   +   end;
MPRINT(EM_DIAGRAM):   end;
1292526   +end;
MPRINT(EM_DIAGRAM):   end;
1292527   +
1292528   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1292529   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1292530   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1292531   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1292532   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1292533   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1292534   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292535   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292536   +end;
MPRINT(EM_DIAGRAM):   end;
1292537   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292538   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292539   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1292540   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292541   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1292542   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1292543   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1292544   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1292545   +   end;
MPRINT(EM_DIAGRAM):   end;
1292546   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1292547   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1292548   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1292549   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1292550   +   end;
MPRINT(EM_DIAGRAM):   end;
1292551   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1292552   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1292553   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1292554   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1292555   +   end;
MPRINT(EM_DIAGRAM):   end;
1292556   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1292557   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1292558   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1292559   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1292560   +   end;
MPRINT(EM_DIAGRAM):   end;
1292561   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292562   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1292563   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1292564   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1292565   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292566   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292567   +   end;
MPRINT(EM_DIAGRAM):   end;
1292568   +end;
MPRINT(EM_DIAGRAM):   end;
1292569   +
1292570   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1292571   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1292572   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1292573   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1292574   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1292575   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1292576   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1292577   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292578   +end;
MPRINT(EM_DIAGRAM):   end;
1292579   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292580   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1292581   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1292582   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292583   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1292584   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1292585   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1292586   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1292587   +   end;
MPRINT(EM_DIAGRAM):   end;
1292588   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1292589   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1292590   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1292591   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1292592   +   end;
MPRINT(EM_DIAGRAM):   end;
1292593   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1292594   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1292595   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1292596   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1292597   +   end;
MPRINT(EM_DIAGRAM):   end;
1292598   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1292599   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1292600   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1292601   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1292602   +   end;
MPRINT(EM_DIAGRAM):   end;
1292603   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292604   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1292605   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1292606   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1292607   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1292608   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292609   +   end;
MPRINT(EM_DIAGRAM):   end;
1292610   +end;
MPRINT(EM_DIAGRAM):   end;
1292611   +
1292612   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292613   +*** Checking missing input Interval
1292614   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1292615   +
1292616   +IF NMISS(
1292617   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1292618   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1292619   +
1292620   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1292621   +END;
MPRINT(EM_DIAGRAM):   END;
1292622   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292623   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1292624   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292625   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1292626   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1292627   +END;
MPRINT(EM_DIAGRAM):   END;
1292628   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1292629   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1292630   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1292631   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1292632   +END;
MPRINT(EM_DIAGRAM):   END;
1292633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292634   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1292635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292637   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1292638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292639   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1292640   +   H11  =      0.0668146440452 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.0668146440452 * S_Year_Birth ;
1292641   +   H12  =     0.02918236951724 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.02918236951724 * S_Year_Birth ;
1292642   +   H13  =     0.52122974180208 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.52122974180208 * S_Year_Birth ;
1292643   +   H14  =     -0.1823800721103 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.1823800721103 * S_Year_Birth ;
1292644   +   H11  = H11  +    -0.48347630033708 * GRP_AcceptedCmp52
1292645   +          +     0.37100635990339 * GRP_Frq2  +     0.04377799127913 * GRP_Frq3
1292646   +          +     -0.1974477050613 * GRP_Frq4  +     0.10700887225506 *
1292647   +        GRP_Income2  +      0.3291591268929 * GRP_Income3
1292648   +          +     0.00612929517663 * GRP_Income4  +    -0.23329153390557 *
1292649   +        GRP_Mnt2  +    -0.08800204437411 * GRP_Mnt3  +    -0.08445529701198 *
1292650   +        GRP_Mnt4  +     0.28673732624133 * GRP_MntFishProducts2
1292651   +          +    -0.14978605827752 * GRP_MntFishProducts3
1292652   +          +     0.22642470616542 * GRP_MntFishProducts4
1292653   +          +     0.07604404821672 * GRP_MntGoldProds2
1292654   +          +     0.04745212568332 * GRP_MntGoldProds3
1292655   +          +    -0.10028215217028 * GRP_MntGoldProds4
1292656   +          +    -0.07377682497053 * GRP_MntMeatProducts2
1292657   +          +    -0.09960214357487 * GRP_MntMeatProducts3
1292658   +          +    -0.25438120582859 * GRP_MntMeatProducts4
1292659   +          +     0.42639299324809 * GRP_MntWines2  +     0.31089292559786 *
1292660   +        GRP_MntWines3  +    -0.26826041457934 * GRP_MntWines4
1292661   +          +    -0.53742609478771 * GRP_NumCatalogPurchases3
1292662   +          +    -0.03023603128161 * GRP_NumCatalogPurchases4
1292663   +          +    -0.37743946252805 * GRP_NumDistPurchases2
1292664   +          +    -0.01872647257623 * GRP_NumDistPurchases3
1292665   +          +    -0.31993024737958 * GRP_NumDistPurchases4
1292666   +          +    -0.11078713164327 * GRP_NumWebPurchases2
1292667   +          +     0.24754701690398 * GRP_NumWebPurchases3
1292668   +          +     0.01530465573539 * GRP_NumWebPurchases4
1292669   +          +    -0.17630256491744 * GRP_RFMstat2  +    -0.47929093118323 *
1292670   +        GRP_RFMstat3  +     0.26729201021061 * GRP_RFMstat4
1292671   +          +    -0.20197995708067 * GRP_RMntFrq2  +    -0.07138949090838 *
1292672   +        GRP_RMntFrq3  +    -0.08653988697814 * GRP_RMntFrq4
1292673   +          +     1.10790516734526 * GRP_Recency2  +     0.22440369463671 *
1292674   +        GRP_Recency3  +    -0.44624012521308 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.48347630033708 * GRP_AcceptedCmp52 + 0.37100635990339 *
GRP_Frq2 + 0.04377799127913 * GRP_Frq3 + -0.1974477050613 * GRP_Frq4 + 0.10700887225506 *
GRP_Income2 + 0.3291591268929 * GRP_Income3 + 0.00612929517663 * GRP_Income4 +
-0.23329153390557 * GRP_Mnt2 + -0.08800204437411 * GRP_Mnt3 + -0.08445529701198 * GRP_Mnt4 +
0.28673732624133 * GRP_MntFishProducts2 + -0.14978605827752 * GRP_MntFishProducts3 +
0.22642470616542 * GRP_MntFishProducts4 + 0.07604404821672 * GRP_MntGoldProds2 +
0.04745212568332 * GRP_MntGoldProds3 + -0.10028215217028 * GRP_MntGoldProds4 +
-0.07377682497053 * GRP_MntMeatProducts2 + -0.09960214357487 * GRP_MntMeatProducts3 +
-0.25438120582859 * GRP_MntMeatProducts4 + 0.42639299324809 * GRP_MntWines2 + 0.31089292559786
* GRP_MntWines3 + -0.26826041457934 * GRP_MntWines4 + -0.53742609478771 *
GRP_NumCatalogPurchases3 + -0.03023603128161 * GRP_NumCatalogPurchases4 + -0.37743946252805 *
GRP_NumDistPurchases2 + -0.01872647257623 * GRP_NumDistPurchases3 + -0.31993024737958 *
GRP_NumDistPurchases4 + -0.11078713164327 * GRP_NumWebPurchases2 + 0.24754701690398 *
GRP_NumWebPurchases3 + 0.01530465573539 * GRP_NumWebPurchases4 + -0.17630256491744 *
GRP_RFMstat2 + -0.47929093118323 * GRP_RFMstat3 + 0.26729201021061 * GRP_RFMstat4 +
-0.20197995708067 * GRP_RMntFrq2 + -0.07138949090838 * GRP_RMntFrq3 + -0.08653988697814 *
GRP_RMntFrq4 + 1.10790516734526 * GRP_Recency2 + 0.22440369463671 * GRP_Recency3 +
-0.44624012521308 * GRP_Recency4 ;
1292675   +   H12  = H12  +    -0.39171353947494 * GRP_AcceptedCmp52
1292676   +          +     0.47539355981113 * GRP_Frq2  +     0.13865083322043 * GRP_Frq3
1292677   +          +     0.07826446095659 * GRP_Frq4  +     0.08299165408218 *
1292678   +        GRP_Income2  +     0.19385348399904 * GRP_Income3
1292679   +          +     -0.4686130167393 * GRP_Income4  +     0.07036992149948 *
1292680   +        GRP_Mnt2  +     0.03891677493503 * GRP_Mnt3  +     0.07820077346387 *
1292681   +        GRP_Mnt4  +     0.36400126236983 * GRP_MntFishProducts2
1292682   +          +    -0.12626287803422 * GRP_MntFishProducts3
1292683   +          +    -0.42885022606866 * GRP_MntFishProducts4
1292684   +          +    -0.08312331608509 * GRP_MntGoldProds2
1292685   +          +    -0.20061238652989 * GRP_MntGoldProds3
1292686   +          +      0.2540651659901 * GRP_MntGoldProds4
1292687   +          +    -0.05377938516186 * GRP_MntMeatProducts2
1292688   +          +    -0.20960578757846 * GRP_MntMeatProducts3
1292689   +          +     0.40616704937625 * GRP_MntMeatProducts4
1292690   +          +     0.10444770584156 * GRP_MntWines2  +     0.28632714955895 *
1292691   +        GRP_MntWines3  +     -0.0752487603973 * GRP_MntWines4
1292692   +          +    -0.34375303246386 * GRP_NumCatalogPurchases3
1292693   +          +     0.09580710843179 * GRP_NumCatalogPurchases4
1292694   +          +    -0.07273864038222 * GRP_NumDistPurchases2
1292695   +          +     0.10966715611059 * GRP_NumDistPurchases3
1292696   +          +      -0.043035493739 * GRP_NumDistPurchases4
1292697   +          +    -0.11780256604927 * GRP_NumWebPurchases2
1292698   +          +    -0.18165047164828 * GRP_NumWebPurchases3
1292699   +          +     0.26936545488609 * GRP_NumWebPurchases4
1292700   +          +    -0.06874165804548 * GRP_RFMstat2  +     0.09298117986488 *
1292701   +        GRP_RFMstat3  +    -0.24177720125931 * GRP_RFMstat4
1292702   +          +    -0.06280623207978 * GRP_RMntFrq2  +     0.01871815739589 *
1292703   +        GRP_RMntFrq3  +    -0.14308267957716 * GRP_RMntFrq4
1292704   +          +     0.34467425877566 * GRP_Recency2  +     0.05820913643645 *
1292705   +        GRP_Recency3  +     -0.0454148085012 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.39171353947494 * GRP_AcceptedCmp52 + 0.47539355981113 *
GRP_Frq2 + 0.13865083322043 * GRP_Frq3 + 0.07826446095659 * GRP_Frq4 + 0.08299165408218 *
GRP_Income2 + 0.19385348399904 * GRP_Income3 + -0.4686130167393 * GRP_Income4 +
0.07036992149948 * GRP_Mnt2 + 0.03891677493503 * GRP_Mnt3 + 0.07820077346387 * GRP_Mnt4 +
0.36400126236983 * GRP_MntFishProducts2 + -0.12626287803422 * GRP_MntFishProducts3 +
-0.42885022606866 * GRP_MntFishProducts4 + -0.08312331608509 * GRP_MntGoldProds2 +
-0.20061238652989 * GRP_MntGoldProds3 + 0.2540651659901 * GRP_MntGoldProds4 +
-0.05377938516186 * GRP_MntMeatProducts2 + -0.20960578757846 * GRP_MntMeatProducts3 +
0.40616704937625 * GRP_MntMeatProducts4 + 0.10444770584156 * GRP_MntWines2 + 0.28632714955895
* GRP_MntWines3 + -0.0752487603973 * GRP_MntWines4 + -0.34375303246386 *
GRP_NumCatalogPurchases3 + 0.09580710843179 * GRP_NumCatalogPurchases4 + -0.07273864038222 *
GRP_NumDistPurchases2 + 0.10966715611059 * GRP_NumDistPurchases3 + -0.043035493739 *
GRP_NumDistPurchases4 + -0.11780256604927 * GRP_NumWebPurchases2 + -0.18165047164828 *
GRP_NumWebPurchases3 + 0.26936545488609 * GRP_NumWebPurchases4 + -0.06874165804548 *
GRP_RFMstat2 + 0.09298117986488 * GRP_RFMstat3 + -0.24177720125931 * GRP_RFMstat4 +
-0.06280623207978 * GRP_RMntFrq2 + 0.01871815739589 * GRP_RMntFrq3 + -0.14308267957716 *
GRP_RMntFrq4 + 0.34467425877566 * GRP_Recency2 + 0.05820913643645 * GRP_Recency3 +
-0.0454148085012 * GRP_Recency4 ;
1292706   +   H13  = H13  +    -0.08768819217047 * GRP_AcceptedCmp52
1292707   +          +     0.44895652806962 * GRP_Frq2  +      0.3800586670059 * GRP_Frq3
1292708   +          +    -0.07849333722318 * GRP_Frq4  +     0.61398939980043 *
1292709   +        GRP_Income2  +     0.47732933105902 * GRP_Income3
1292710   +          +    -0.46767598050409 * GRP_Income4  +     0.00119742402812 *
1292711   +        GRP_Mnt2  +     0.28434487319801 * GRP_Mnt3  +    -0.16337373090226 *
1292712   +        GRP_Mnt4  +     0.24731982804653 * GRP_MntFishProducts2
1292713   +          +     0.07001619920815 * GRP_MntFishProducts3
1292714   +          +     0.07735498521359 * GRP_MntFishProducts4
1292715   +          +    -0.15884098938162 * GRP_MntGoldProds2
1292716   +          +    -0.27657428867783 * GRP_MntGoldProds3
1292717   +          +     -0.1812542301124 * GRP_MntGoldProds4
1292718   +          +    -0.05299867036647 * GRP_MntMeatProducts2
1292719   +          +     0.00010942539908 * GRP_MntMeatProducts3
1292720   +          +     0.03587382246671 * GRP_MntMeatProducts4
1292721   +          +      0.1756484217323 * GRP_MntWines2  +     0.00289944116976 *
1292722   +        GRP_MntWines3  +    -0.03752905583429 * GRP_MntWines4
1292723   +          +     0.14681010085531 * GRP_NumCatalogPurchases3
1292724   +          +    -0.23177792190553 * GRP_NumCatalogPurchases4
1292725   +          +      -0.481887498986 * GRP_NumDistPurchases2
1292726   +          +    -0.09943718589693 * GRP_NumDistPurchases3
1292727   +          +     0.21760620991618 * GRP_NumDistPurchases4
1292728   +          +    -0.09523799103665 * GRP_NumWebPurchases2
1292729   +          +     0.06245025753157 * GRP_NumWebPurchases3
1292730   +          +     0.11312469123111 * GRP_NumWebPurchases4
1292731   +          +     -0.0156924842698 * GRP_RFMstat2  +     0.04329307564553 *
1292732   +        GRP_RFMstat3  +    -0.06522539538042 * GRP_RFMstat4
1292733   +          +     0.03130432577469 * GRP_RMntFrq2  +     0.15385182155627 *
1292734   +        GRP_RMntFrq3  +    -0.05116322369837 * GRP_RMntFrq4
1292735   +          +     0.52385840277978 * GRP_Recency2  +     0.44348058106283 *
1292736   +        GRP_Recency3  +    -0.30003743891847 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08768819217047 * GRP_AcceptedCmp52 + 0.44895652806962 *
GRP_Frq2 + 0.3800586670059 * GRP_Frq3 + -0.07849333722318 * GRP_Frq4 + 0.61398939980043 *
GRP_Income2 + 0.47732933105902 * GRP_Income3 + -0.46767598050409 * GRP_Income4 +
0.00119742402812 * GRP_Mnt2 + 0.28434487319801 * GRP_Mnt3 + -0.16337373090226 * GRP_Mnt4 +
0.24731982804653 * GRP_MntFishProducts2 + 0.07001619920815 * GRP_MntFishProducts3 +
0.07735498521359 * GRP_MntFishProducts4 + -0.15884098938162 * GRP_MntGoldProds2 +
-0.27657428867783 * GRP_MntGoldProds3 + -0.1812542301124 * GRP_MntGoldProds4 +
-0.05299867036647 * GRP_MntMeatProducts2 + 0.00010942539908 * GRP_MntMeatProducts3 +
0.03587382246671 * GRP_MntMeatProducts4 + 0.1756484217323 * GRP_MntWines2 + 0.00289944116976 *
GRP_MntWines3 + -0.03752905583429 * GRP_MntWines4 + 0.14681010085531 *
GRP_NumCatalogPurchases3 + -0.23177792190553 * GRP_NumCatalogPurchases4 + -0.481887498986 *
GRP_NumDistPurchases2 + -0.09943718589693 * GRP_NumDistPurchases3 + 0.21760620991618 *
GRP_NumDistPurchases4 + -0.09523799103665 * GRP_NumWebPurchases2 + 0.06245025753157 *
GRP_NumWebPurchases3 + 0.11312469123111 * GRP_NumWebPurchases4 + -0.0156924842698 *
GRP_RFMstat2 + 0.04329307564553 * GRP_RFMstat3 + -0.06522539538042 * GRP_RFMstat4 +
0.03130432577469 * GRP_RMntFrq2 + 0.15385182155627 * GRP_RMntFrq3 + -0.05116322369837 *
GRP_RMntFrq4 + 0.52385840277978 * GRP_Recency2 + 0.44348058106283 * GRP_Recency3 +
-0.30003743891847 * GRP_Recency4 ;
1292737   +   H14  = H14  +    -0.30891588421078 * GRP_AcceptedCmp52
1292738   +          +     0.10101143238536 * GRP_Frq2  +    -0.03148220138998 * GRP_Frq3
1292739   +          +     0.09807803608029 * GRP_Frq4  +     0.11294471318052 *
1292740   +        GRP_Income2  +      0.0433560034099 * GRP_Income3
1292741   +          +    -0.35503487261838 * GRP_Income4  +     0.15199410100967 *
1292742   +        GRP_Mnt2  +    -0.15675008677561 * GRP_Mnt3  +    -0.06110606567063 *
1292743   +        GRP_Mnt4  +     0.10272197664106 * GRP_MntFishProducts2
1292744   +          +     0.33369645018356 * GRP_MntFishProducts3
1292745   +          +     0.08427214551103 * GRP_MntFishProducts4
1292746   +          +    -0.36187933889617 * GRP_MntGoldProds2
1292747   +          +      0.1522584097588 * GRP_MntGoldProds3
1292748   +          +    -0.18069803129722 * GRP_MntGoldProds4
1292749   +          +    -0.39829328143793 * GRP_MntMeatProducts2
1292750   +          +     0.00511939388608 * GRP_MntMeatProducts3
1292751   +          +      0.0518722466688 * GRP_MntMeatProducts4
1292752   +          +     0.10413724420858 * GRP_MntWines2  +    -0.30183392073068 *
1292753   +        GRP_MntWines3  +    -0.40546180997599 * GRP_MntWines4
1292754   +          +    -0.73564355192687 * GRP_NumCatalogPurchases3
1292755   +          +     0.04239157662699 * GRP_NumCatalogPurchases4
1292756   +          +    -0.61448773428482 * GRP_NumDistPurchases2
1292757   +          +    -0.10817170519054 * GRP_NumDistPurchases3
1292758   +          +    -0.00883878051452 * GRP_NumDistPurchases4
1292759   +          +      0.0024401108853 * GRP_NumWebPurchases2
1292760   +          +     -0.1066188825276 * GRP_NumWebPurchases3
1292761   +          +     -0.2845728776007 * GRP_NumWebPurchases4
1292762   +          +    -0.46846387193519 * GRP_RFMstat2  +     0.01548835288752 *
1292763   +        GRP_RFMstat3  +     0.29056719482503 * GRP_RFMstat4
1292764   +          +     0.13283388675843 * GRP_RMntFrq2  +    -0.01179035894062 *
1292765   +        GRP_RMntFrq3  +    -0.40979674551139 * GRP_RMntFrq4
1292766   +          +     0.39674687653317 * GRP_Recency2  +     0.48674783005161 *
1292767   +        GRP_Recency3  +     0.19384397786172 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30891588421078 * GRP_AcceptedCmp52 + 0.10101143238536 *
GRP_Frq2 + -0.03148220138998 * GRP_Frq3 + 0.09807803608029 * GRP_Frq4 + 0.11294471318052 *
GRP_Income2 + 0.0433560034099 * GRP_Income3 + -0.35503487261838 * GRP_Income4 +
0.15199410100967 * GRP_Mnt2 + -0.15675008677561 * GRP_Mnt3 + -0.06110606567063 * GRP_Mnt4 +
0.10272197664106 * GRP_MntFishProducts2 + 0.33369645018356 * GRP_MntFishProducts3 +
0.08427214551103 * GRP_MntFishProducts4 + -0.36187933889617 * GRP_MntGoldProds2 +
0.1522584097588 * GRP_MntGoldProds3 + -0.18069803129722 * GRP_MntGoldProds4 +
-0.39829328143793 * GRP_MntMeatProducts2 + 0.00511939388608 * GRP_MntMeatProducts3 +
0.0518722466688 * GRP_MntMeatProducts4 + 0.10413724420858 * GRP_MntWines2 + -0.30183392073068
* GRP_MntWines3 + -0.40546180997599 * GRP_MntWines4 + -0.73564355192687 *
GRP_NumCatalogPurchases3 + 0.04239157662699 * GRP_NumCatalogPurchases4 + -0.61448773428482 *
GRP_NumDistPurchases2 + -0.10817170519054 * GRP_NumDistPurchases3 + -0.00883878051452 *
GRP_NumDistPurchases4 + 0.0024401108853 * GRP_NumWebPurchases2 + -0.1066188825276 *
GRP_NumWebPurchases3 + -0.2845728776007 * GRP_NumWebPurchases4 + -0.46846387193519 *
GRP_RFMstat2 + 0.01548835288752 * GRP_RFMstat3 + 0.29056719482503 * GRP_RFMstat4 +
0.13283388675843 * GRP_RMntFrq2 + -0.01179035894062 * GRP_RMntFrq3 + -0.40979674551139 *
GRP_RMntFrq4 + 0.39674687653317 * GRP_Recency2 + 0.48674783005161 * GRP_Recency3 +
0.19384397786172 * GRP_Recency4 ;
1292768   +   H11  =    -1.18381596942405 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18381596942405 + H11 ;
1292769   +   H12  =     0.86336963287203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.86336963287203 + H12 ;
1292770   +   H13  =     -0.9724199391604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.9724199391604 + H13 ;
1292771   +   H14  =     1.35533016839911 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.35533016839911 + H14 ;
1292772   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1292773   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1292774   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1292775   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1292776   +END;
MPRINT(EM_DIAGRAM):   END;
1292777   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1292778   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1292779   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1292780   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1292781   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1292782   +END;
MPRINT(EM_DIAGRAM):   END;
1292783   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292784   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1292785   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292786   +
1292787   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1292788   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1292789   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1292790   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1292791   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1292792   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1292793   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1292794   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1292795   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1292796   +end;
MPRINT(EM_DIAGRAM):   end;
1292797   +else do;
MPRINT(EM_DIAGRAM):   else do;
1292798   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1292799   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1292800   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1292801   +   end;
MPRINT(EM_DIAGRAM):   end;
1292802   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1292803   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1292804   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1292805   +   end;
MPRINT(EM_DIAGRAM):   end;
1292806   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1292807   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1292808   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1292809   +   end;
MPRINT(EM_DIAGRAM):   end;
1292810   +end;
MPRINT(EM_DIAGRAM):   end;
1292811   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1292812   +   P_DepVar1  =     2.12648206014408 * H11  +      1.4206902210932 * H12
1292813   +          +     1.21164854880393 * H13  +      1.5803543453738 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.12648206014408 * H11 + 1.4206902210932 * H12 +
1.21164854880393 * H13 + 1.5803543453738 * H14 ;
1292814   +   P_DepVar1  =    -1.66515506353131 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66515506353131 + P_DepVar1 ;
1292815   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1292816   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1292817   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1292818   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1292819   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1292820   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1292821   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1292822   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1292823   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1292824   +END;
MPRINT(EM_DIAGRAM):   END;
1292825   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1292826   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1292827   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1292828   +END;
MPRINT(EM_DIAGRAM):   END;
1292829   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1292830   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1292831   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1292832   +END;
MPRINT(EM_DIAGRAM):   END;
1292833   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1292834   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1292835   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1292836   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1292837   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1292838   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1292839   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1292840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292841   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1292842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1292843   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1292844   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1292845   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1292846   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1292847   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1292848   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1292849   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1292850   +END;
MPRINT(EM_DIAGRAM):   END;
1292851   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1292852   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1292853   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1292854   +drop
1292855   +H11
1292856   +H12
1292857   +H13
1292858   +H14
1292859   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1292860   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1292861   +* Renaming variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural21;
1292862   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1292863   +* Renaming Posterior variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural21;
1292864   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1292865   +drop Neural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar1;
1292866   +Neural21_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar1 = P_DepVar1;
1292867   +drop Neural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar0;
1292868   +Neural21_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar0 = P_DepVar0;
1292869   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1292870   +* Renaming _WARN_ variable for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural21;
1292871   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1292872   +length Neural21_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural21_WARN_ $4;
1292873   +drop Neural21_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural21_WARN_;
1292874   +Neural21_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural21_WARN_ = _WARN_;
1292875   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1292876   +* Ensmbl7: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring Code of model 2 of 3;
1292877   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1292878   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1292879   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1292880   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1292881   +* NODE: Neural22;
MPRINT(EM_DIAGRAM):   * NODE: Neural22;
1292882   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1292883   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1292884   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1292885   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1292886   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1292887   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1292888   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1292889   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1292890   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1292891   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1292892   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1292893   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1292894   +LENGTH _WARN_ $4
1292895   +      F_DepVar  $ 12
1292896   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1292897   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1292898   +
1292899   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1292900   +
1292901   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1292902   +
1292903   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1292904   +
1292905   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1292906   +
1292907   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1292908   +
1292909   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1292910   +
1292911   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1292912   +
1292913   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1292914   +
1292915   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1292916   +
1292917   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1292918   +
1292919   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1292920   +
1292921   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1292922   +
1292923   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1292924   +
1292925   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1292926   +
1292927   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1292928   +
1292929   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1292930   +
1292931   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1292932   +
1292933   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1292934   +
1292935   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1292936   +
1292937   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1292938   +
1292939   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1292940   +
1292941   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1292942   +
1292943   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1292944   +
1292945   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1292946   +
1292947   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1292948   +
1292949   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1292950   +
1292951   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1292952   +
1292953   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1292954   +
1292955   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1292956   +
1292957   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1292958   +
1292959   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1292960   +
1292961   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1292962   +
1292963   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1292964   +
1292965   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1292966   +
1292967   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1292968   +
1292969   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1292970   +
1292971   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1292972   +
1292973   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1292974   +
1292975   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1292976   +
1292977   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1292978   +
1292979   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1292980   +
1292981   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1292982   +
1292983   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1292984   +
1292985   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1292986   +
1292987   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1292988   +
1292989   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1292990   +
1292991   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1292992   +
1292993   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1292994   +
1292995   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1292996   +
1292997   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1292998   +
1292999   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1293000   +
1293001   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1293002   +
1293003   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1293004   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1293005   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1293006   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1293007   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293008   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293009   +end;
MPRINT(EM_DIAGRAM):   end;
1293010   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293011   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293012   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1293013   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
The SAS System
 
MPRINT(DMNORMIP):  );
1293014   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1293015   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1293016   +   end;
MPRINT(EM_DIAGRAM):   end;
1293017   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1293018   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1293019   +   end;
MPRINT(EM_DIAGRAM):   end;
1293020   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293021   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1293022   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293023   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293024   +   end;
MPRINT(EM_DIAGRAM):   end;
1293025   +end;
MPRINT(EM_DIAGRAM):   end;
1293026   +
1293027   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1293028   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1293029   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1293030   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1293031   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1293032   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1293033   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293034   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293035   +end;
MPRINT(EM_DIAGRAM):   end;
1293036   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293037   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293038   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1293039   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293040   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1293041   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1293042   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1293043   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1293044   +   end;
MPRINT(EM_DIAGRAM):   end;
1293045   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1293046   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1293047   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1293048   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1293049   +   end;
MPRINT(EM_DIAGRAM):   end;
1293050   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1293051   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1293052   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1293053   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1293054   +   end;
MPRINT(EM_DIAGRAM):   end;
1293055   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1293056   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1293057   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1293058   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1293059   +   end;
MPRINT(EM_DIAGRAM):   end;
1293060   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293061   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1293062   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1293063   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1293064   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293065   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293066   +   end;
MPRINT(EM_DIAGRAM):   end;
1293067   +end;
MPRINT(EM_DIAGRAM):   end;
1293068   +
1293069   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1293070   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1293071   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1293072   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1293073   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1293074   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1293075   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293076   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293077   +end;
MPRINT(EM_DIAGRAM):   end;
1293078   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293079   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293080   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1293081   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293082   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1293083   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1293084   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1293085   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1293086   +   end;
MPRINT(EM_DIAGRAM):   end;
1293087   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1293088   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1293089   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1293090   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1293091   +   end;
MPRINT(EM_DIAGRAM):   end;
1293092   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1293093   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1293094   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1293095   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1293096   +   end;
MPRINT(EM_DIAGRAM):   end;
1293097   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1293098   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1293099   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1293100   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1293101   +   end;
MPRINT(EM_DIAGRAM):   end;
1293102   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293103   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1293104   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1293105   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1293106   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293107   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293108   +   end;
MPRINT(EM_DIAGRAM):   end;
1293109   +end;
MPRINT(EM_DIAGRAM):   end;
1293110   +
1293111   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1293112   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1293113   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1293114   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1293115   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1293116   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1293117   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293118   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293119   +end;
MPRINT(EM_DIAGRAM):   end;
1293120   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293121   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293122   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1293123   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293124   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1293125   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1293126   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1293127   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1293128   +   end;
MPRINT(EM_DIAGRAM):   end;
1293129   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1293130   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1293131   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1293132   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1293133   +   end;
MPRINT(EM_DIAGRAM):   end;
1293134   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1293135   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1293136   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1293137   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1293138   +   end;
MPRINT(EM_DIAGRAM):   end;
1293139   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1293140   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1293141   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1293142   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1293143   +   end;
MPRINT(EM_DIAGRAM):   end;
1293144   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293145   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1293146   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1293147   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1293148   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293149   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293150   +   end;
MPRINT(EM_DIAGRAM):   end;
1293151   +end;
MPRINT(EM_DIAGRAM):   end;
1293152   +
1293153   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1293154   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1293155   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1293156   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1293157   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1293158   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1293159   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293160   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293161   +end;
MPRINT(EM_DIAGRAM):   end;
1293162   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293163   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293164   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1293165   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293166   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1293167   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1293168   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1293169   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1293170   +   end;
MPRINT(EM_DIAGRAM):   end;
1293171   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1293172   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1293173   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1293174   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1293175   +   end;
MPRINT(EM_DIAGRAM):   end;
1293176   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1293177   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1293178   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1293179   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1293180   +   end;
MPRINT(EM_DIAGRAM):   end;
1293181   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1293182   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1293183   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1293184   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1293185   +   end;
MPRINT(EM_DIAGRAM):   end;
1293186   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293187   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1293188   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1293189   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1293190   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293191   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293192   +   end;
MPRINT(EM_DIAGRAM):   end;
1293193   +end;
MPRINT(EM_DIAGRAM):   end;
1293194   +
1293195   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1293196   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1293197   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1293198   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1293199   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1293200   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1293201   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293202   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293203   +end;
MPRINT(EM_DIAGRAM):   end;
1293204   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293205   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293206   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1293207   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293208   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1293209   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1293210   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1293211   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1293212   +   end;
MPRINT(EM_DIAGRAM):   end;
1293213   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1293214   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1293215   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1293216   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1293217   +   end;
MPRINT(EM_DIAGRAM):   end;
1293218   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1293219   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1293220   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1293221   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1293222   +   end;
MPRINT(EM_DIAGRAM):   end;
1293223   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1293224   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1293225   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1293226   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1293227   +   end;
MPRINT(EM_DIAGRAM):   end;
1293228   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293229   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1293230   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1293231   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1293232   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293233   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293234   +   end;
MPRINT(EM_DIAGRAM):   end;
1293235   +end;
MPRINT(EM_DIAGRAM):   end;
1293236   +
1293237   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1293238   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1293239   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1293240   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1293241   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1293242   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1293243   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293244   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293245   +end;
MPRINT(EM_DIAGRAM):   end;
1293246   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293247   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293248   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1293249   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293250   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1293251   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1293252   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1293253   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1293254   +   end;
MPRINT(EM_DIAGRAM):   end;
1293255   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1293256   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1293257   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1293258   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1293259   +   end;
MPRINT(EM_DIAGRAM):   end;
1293260   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1293261   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1293262   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1293263   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1293264   +   end;
MPRINT(EM_DIAGRAM):   end;
1293265   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1293266   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1293267   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1293268   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1293269   +   end;
MPRINT(EM_DIAGRAM):   end;
1293270   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293271   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1293272   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1293273   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1293274   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293275   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293276   +   end;
MPRINT(EM_DIAGRAM):   end;
1293277   +end;
MPRINT(EM_DIAGRAM):   end;
1293278   +
1293279   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1293280   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1293281   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1293282   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1293283   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1293284   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1293285   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293286   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293287   +end;
MPRINT(EM_DIAGRAM):   end;
1293288   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293289   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293290   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1293291   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293292   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1293293   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1293294   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1293295   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1293296   +   end;
MPRINT(EM_DIAGRAM):   end;
1293297   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1293298   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1293299   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1293300   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1293301   +   end;
MPRINT(EM_DIAGRAM):   end;
1293302   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1293303   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1293304   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1293305   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1293306   +   end;
MPRINT(EM_DIAGRAM):   end;
1293307   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1293308   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1293309   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1293310   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1293311   +   end;
MPRINT(EM_DIAGRAM):   end;
1293312   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293313   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1293314   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1293315   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1293316   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293317   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293318   +   end;
MPRINT(EM_DIAGRAM):   end;
1293319   +end;
MPRINT(EM_DIAGRAM):   end;
1293320   +
1293321   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1293322   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1293323   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1293324   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1293325   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1293326   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293327   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293328   +end;
MPRINT(EM_DIAGRAM):   end;
1293329   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293330   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293331   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1293332   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293333   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1293334   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1293335   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1293336   +   end;
MPRINT(EM_DIAGRAM):   end;
1293337   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1293338   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1293339   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1293340   +   end;
MPRINT(EM_DIAGRAM):   end;
1293341   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1293342   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1293343   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1293344   +   end;
MPRINT(EM_DIAGRAM):   end;
1293345   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293346   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1293347   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1293348   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293349   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293350   +   end;
MPRINT(EM_DIAGRAM):   end;
1293351   +end;
MPRINT(EM_DIAGRAM):   end;
1293352   +
1293353   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1293354   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1293355   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1293356   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1293357   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1293358   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1293359   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293360   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293361   +end;
MPRINT(EM_DIAGRAM):   end;
1293362   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293363   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293364   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1293365   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293366   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1293367   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1293368   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1293369   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1293370   +   end;
MPRINT(EM_DIAGRAM):   end;
1293371   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1293372   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1293373   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1293374   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1293375   +   end;
MPRINT(EM_DIAGRAM):   end;
1293376   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1293377   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1293378   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1293379   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1293380   +   end;
MPRINT(EM_DIAGRAM):   end;
1293381   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1293382   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1293383   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1293384   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1293385   +   end;
MPRINT(EM_DIAGRAM):   end;
1293386   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293387   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1293388   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1293389   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1293390   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293391   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293392   +   end;
MPRINT(EM_DIAGRAM):   end;
1293393   +end;
MPRINT(EM_DIAGRAM):   end;
1293394   +
1293395   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1293396   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1293397   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1293398   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1293399   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1293400   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1293401   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293402   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293403   +end;
MPRINT(EM_DIAGRAM):   end;
1293404   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293405   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293406   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1293407   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293408   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1293409   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1293410   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1293411   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1293412   +   end;
MPRINT(EM_DIAGRAM):   end;
1293413   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1293414   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1293415   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1293416   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1293417   +   end;
MPRINT(EM_DIAGRAM):   end;
1293418   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1293419   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1293420   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1293421   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1293422   +   end;
MPRINT(EM_DIAGRAM):   end;
1293423   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1293424   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1293425   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1293426   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1293427   +   end;
MPRINT(EM_DIAGRAM):   end;
1293428   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293429   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1293430   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1293431   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1293432   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293433   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293434   +   end;
MPRINT(EM_DIAGRAM):   end;
1293435   +end;
MPRINT(EM_DIAGRAM):   end;
1293436   +
1293437   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1293438   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1293439   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1293440   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1293441   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1293442   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1293443   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293444   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293445   +end;
MPRINT(EM_DIAGRAM):   end;
1293446   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293447   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293448   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1293449   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293450   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1293451   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1293452   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1293453   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1293454   +   end;
MPRINT(EM_DIAGRAM):   end;
1293455   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1293456   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1293457   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1293458   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1293459   +   end;
MPRINT(EM_DIAGRAM):   end;
1293460   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1293461   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1293462   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1293463   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1293464   +   end;
MPRINT(EM_DIAGRAM):   end;
1293465   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1293466   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1293467   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1293468   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1293469   +   end;
MPRINT(EM_DIAGRAM):   end;
1293470   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293471   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1293472   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1293473   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1293474   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293475   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293476   +   end;
MPRINT(EM_DIAGRAM):   end;
1293477   +end;
MPRINT(EM_DIAGRAM):   end;
1293478   +
1293479   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1293480   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1293481   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1293482   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1293483   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1293484   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1293485   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293486   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293487   +end;
MPRINT(EM_DIAGRAM):   end;
1293488   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293489   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293490   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1293491   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293492   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1293493   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1293494   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1293495   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1293496   +   end;
MPRINT(EM_DIAGRAM):   end;
1293497   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1293498   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1293499   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1293500   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1293501   +   end;
MPRINT(EM_DIAGRAM):   end;
1293502   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1293503   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1293504   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1293505   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1293506   +   end;
MPRINT(EM_DIAGRAM):   end;
1293507   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1293508   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1293509   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1293510   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1293511   +   end;
MPRINT(EM_DIAGRAM):   end;
1293512   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293513   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1293514   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1293515   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1293516   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293517   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293518   +   end;
MPRINT(EM_DIAGRAM):   end;
1293519   +end;
MPRINT(EM_DIAGRAM):   end;
1293520   +
1293521   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1293522   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1293523   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1293524   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1293525   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1293526   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1293527   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1293528   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293529   +end;
MPRINT(EM_DIAGRAM):   end;
1293530   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293531   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1293532   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1293533   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293534   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1293535   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1293536   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1293537   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1293538   +   end;
MPRINT(EM_DIAGRAM):   end;
1293539   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1293540   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1293541   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1293542   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1293543   +   end;
MPRINT(EM_DIAGRAM):   end;
1293544   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1293545   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1293546   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1293547   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1293548   +   end;
MPRINT(EM_DIAGRAM):   end;
1293549   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1293550   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1293551   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1293552   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1293553   +   end;
MPRINT(EM_DIAGRAM):   end;
1293554   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293555   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1293556   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1293557   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1293558   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1293559   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293560   +   end;
MPRINT(EM_DIAGRAM):   end;
1293561   +end;
MPRINT(EM_DIAGRAM):   end;
1293562   +
1293563   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1293564   +*** Checking missing input Interval
1293565   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1293566   +
1293567   +IF NMISS(
1293568   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1293569   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1293570   +
1293571   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1293572   +END;
MPRINT(EM_DIAGRAM):   END;
1293573   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1293574   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1293575   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1293576   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1293577   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1293578   +END;
MPRINT(EM_DIAGRAM):   END;
1293579   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1293580   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1293581   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1293582   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1293583   +END;
MPRINT(EM_DIAGRAM):   END;
1293584   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1293585   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1293586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1293587   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1293588   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1293589   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1293590   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1293591   +   H11  =     0.04727192845675 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.04727192845675 * S_Year_Birth ;
1293592   +   H12  =    -0.03499603197831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.03499603197831 * S_Year_Birth ;
1293593   +   H13  =      -0.249387333167 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.249387333167 * S_Year_Birth ;
1293594   +   H14  =    -0.18145230662582 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.18145230662582 * S_Year_Birth ;
1293595   +   H15  =    -0.07744416350216 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.07744416350216 * S_Year_Birth ;
1293596   +   H11  = H11  +    -0.25371698668168 * GRP_AcceptedCmp52
1293597   +          +     0.38185615945621 * GRP_Frq2  +     0.03545555759423 * GRP_Frq3
1293598   +          +    -0.00061660249238 * GRP_Frq4  +     0.41779261820045 *
1293599   +        GRP_Income2  +     0.51800912898069 * GRP_Income3
1293600   +          +    -0.36427548932695 * GRP_Income4  +    -0.06433979614617 *
1293601   +        GRP_Mnt2  +     0.00045120565293 * GRP_Mnt3  +    -0.13992317322759 *
1293602   +        GRP_Mnt4  +     0.34207391538024 * GRP_MntFishProducts2
1293603   +          +     0.03411739869638 * GRP_MntFishProducts3
1293604   +          +      -0.083693402353 * GRP_MntFishProducts4
1293605   +          +     -0.1318128730187 * GRP_MntGoldProds2
1293606   +          +     -0.0614737729382 * GRP_MntGoldProds3
1293607   +          +    -0.00372986687449 * GRP_MntGoldProds4
1293608   +          +     -0.3129171829017 * GRP_MntMeatProducts2
1293609   +          +     0.01519664718127 * GRP_MntMeatProducts3
1293610   +          +     0.29997111548812 * GRP_MntMeatProducts4
1293611   +          +       0.389673942682 * GRP_MntWines2  +     0.21159785789434 *
1293612   +        GRP_MntWines3  +    -0.26921349986988 * GRP_MntWines4
1293613   +          +    -0.47013218092095 * GRP_NumCatalogPurchases3
1293614   +          +     0.23943411636141 * GRP_NumCatalogPurchases4
1293615   +          +    -0.68715024477164 * GRP_NumDistPurchases2
1293616   +          +    -0.09178471992122 * GRP_NumDistPurchases3
1293617   +          +    -0.01170225640351 * GRP_NumDistPurchases4
1293618   +          +    -0.14760833919227 * GRP_NumWebPurchases2
1293619   +          +     0.02966820025811 * GRP_NumWebPurchases3
1293620   +          +    -0.04127892210576 * GRP_NumWebPurchases4
1293621   +          +    -0.45467119970502 * GRP_RFMstat2  +    -0.14644406995031 *
1293622   +        GRP_RFMstat3  +    -0.12660007404037 * GRP_RFMstat4
1293623   +          +     0.04829215694488 * GRP_RMntFrq2  +     0.10137738373353 *
1293624   +        GRP_RMntFrq3  +     -0.2873514159435 * GRP_RMntFrq4
1293625   +          +     0.61737333380878 * GRP_Recency2  +     0.16651370318087 *
1293626   +        GRP_Recency3  +    -0.15382569411658 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25371698668168 * GRP_AcceptedCmp52 + 0.38185615945621 *
GRP_Frq2 + 0.03545555759423 * GRP_Frq3 + -0.00061660249238 * GRP_Frq4 + 0.41779261820045 *
GRP_Income2 + 0.51800912898069 * GRP_Income3 + -0.36427548932695 * GRP_Income4 +
-0.06433979614617 * GRP_Mnt2 + 0.00045120565293 * GRP_Mnt3 + -0.13992317322759 * GRP_Mnt4 +
0.34207391538024 * GRP_MntFishProducts2 + 0.03411739869638 * GRP_MntFishProducts3 +
-0.083693402353 * GRP_MntFishProducts4 + -0.1318128730187 * GRP_MntGoldProds2 +
-0.0614737729382 * GRP_MntGoldProds3 + -0.00372986687449 * GRP_MntGoldProds4 +
-0.3129171829017 * GRP_MntMeatProducts2 + 0.01519664718127 * GRP_MntMeatProducts3 +
0.29997111548812 * GRP_MntMeatProducts4 + 0.389673942682 * GRP_MntWines2 + 0.21159785789434 *
GRP_MntWines3 + -0.26921349986988 * GRP_MntWines4 + -0.47013218092095 *
GRP_NumCatalogPurchases3 + 0.23943411636141 * GRP_NumCatalogPurchases4 + -0.68715024477164 *
GRP_NumDistPurchases2 + -0.09178471992122 * GRP_NumDistPurchases3 + -0.01170225640351 *
GRP_NumDistPurchases4 + -0.14760833919227 * GRP_NumWebPurchases2 + 0.02966820025811 *
GRP_NumWebPurchases3 + -0.04127892210576 * GRP_NumWebPurchases4 + -0.45467119970502 *
GRP_RFMstat2 + -0.14644406995031 * GRP_RFMstat3 + -0.12660007404037 * GRP_RFMstat4 +
0.04829215694488 * GRP_RMntFrq2 + 0.10137738373353 * GRP_RMntFrq3 + -0.2873514159435 *
GRP_RMntFrq4 + 0.61737333380878 * GRP_Recency2 + 0.16651370318087 * GRP_Recency3 +
-0.15382569411658 * GRP_Recency4 ;
1293627   +   H12  = H12  +    -0.00960598895677 * GRP_AcceptedCmp52
1293628   +          +    -0.13877780492855 * GRP_Frq2  +    -0.12078849771739 * GRP_Frq3
1293629   +          +     0.25058833013238 * GRP_Frq4  +     0.13932014454657 *
1293630   +        GRP_Income2  +    -0.11560599273748 * GRP_Income3
1293631   +          +    -0.36622829757109 * GRP_Income4  +     0.12796853065131 *
1293632   +        GRP_Mnt2  +    -0.15829126446209 * GRP_Mnt3  +    -0.35779207872654 *
1293633   +        GRP_Mnt4  +     0.06590491513415 * GRP_MntFishProducts2
1293634   +          +     0.00842475350903 * GRP_MntFishProducts3
1293635   +          +     -0.1623103908885 * GRP_MntFishProducts4
1293636   +          +    -0.23845524931139 * GRP_MntGoldProds2
1293637   +          +    -0.07128567155438 * GRP_MntGoldProds3
1293638   +          +     0.25778887379163 * GRP_MntGoldProds4
1293639   +          +    -0.12224351227219 * GRP_MntMeatProducts2
1293640   +          +     0.06269922653052 * GRP_MntMeatProducts3
1293641   +          +      0.2587215409794 * GRP_MntMeatProducts4
1293642   +          +     0.20096090232239 * GRP_MntWines2  +    -0.16858917844476 *
1293643   +        GRP_MntWines3  +     0.03815809499779 * GRP_MntWines4
1293644   +          +     0.05177526225067 * GRP_NumCatalogPurchases3
1293645   +          +    -0.18831777813313 * GRP_NumCatalogPurchases4
1293646   +          +     0.12374838743082 * GRP_NumDistPurchases2
1293647   +          +    -0.19910688422086 * GRP_NumDistPurchases3
1293648   +          +    -0.03804569737208 * GRP_NumDistPurchases4
1293649   +          +    -0.17179633678901 * GRP_NumWebPurchases2
1293650   +          +    -0.08560184232365 * GRP_NumWebPurchases3
1293651   +          +     0.09237237622553 * GRP_NumWebPurchases4
1293652   +          +     0.01544327143979 * GRP_RFMstat2  +      0.1127818122444 *
1293653   +        GRP_RFMstat3  +    -0.21371736650143 * GRP_RFMstat4
1293654   +          +    -0.14005478166078 * GRP_RMntFrq2  +     0.07954568858907 *
1293655   +        GRP_RMntFrq3  +    -0.02313269086836 * GRP_RMntFrq4
1293656   +          +     0.04358116545272 * GRP_Recency2  +    -0.02969695172962 *
1293657   +        GRP_Recency3  +     0.00206593904485 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00960598895677 * GRP_AcceptedCmp52 + -0.13877780492855 *
GRP_Frq2 + -0.12078849771739 * GRP_Frq3 + 0.25058833013238 * GRP_Frq4 + 0.13932014454657 *
GRP_Income2 + -0.11560599273748 * GRP_Income3 + -0.36622829757109 * GRP_Income4 +
0.12796853065131 * GRP_Mnt2 + -0.15829126446209 * GRP_Mnt3 + -0.35779207872654 * GRP_Mnt4 +
0.06590491513415 * GRP_MntFishProducts2 + 0.00842475350903 * GRP_MntFishProducts3 +
-0.1623103908885 * GRP_MntFishProducts4 + -0.23845524931139 * GRP_MntGoldProds2 +
-0.07128567155438 * GRP_MntGoldProds3 + 0.25778887379163 * GRP_MntGoldProds4 +
-0.12224351227219 * GRP_MntMeatProducts2 + 0.06269922653052 * GRP_MntMeatProducts3 +
0.2587215409794 * GRP_MntMeatProducts4 + 0.20096090232239 * GRP_MntWines2 + -0.16858917844476
* GRP_MntWines3 + 0.03815809499779 * GRP_MntWines4 + 0.05177526225067 *
GRP_NumCatalogPurchases3 + -0.18831777813313 * GRP_NumCatalogPurchases4 + 0.12374838743082 *
GRP_NumDistPurchases2 + -0.19910688422086 * GRP_NumDistPurchases3 + -0.03804569737208 *
GRP_NumDistPurchases4 + -0.17179633678901 * GRP_NumWebPurchases2 + -0.08560184232365 *
GRP_NumWebPurchases3 + 0.09237237622553 * GRP_NumWebPurchases4 + 0.01544327143979 *
GRP_RFMstat2 + 0.1127818122444 * GRP_RFMstat3 + -0.21371736650143 * GRP_RFMstat4 +
-0.14005478166078 * GRP_RMntFrq2 + 0.07954568858907 * GRP_RMntFrq3 + -0.02313269086836 *
GRP_RMntFrq4 + 0.04358116545272 * GRP_Recency2 + -0.02969695172962 * GRP_Recency3 +
0.00206593904485 * GRP_Recency4 ;
1293658   +   H13  = H13  +     0.11273135858209 * GRP_AcceptedCmp52
1293659   +          +    -0.15015665173608 * GRP_Frq2  +    -0.20454924588356 * GRP_Frq3
1293660   +          +    -0.04047998964496 * GRP_Frq4  +    -0.29897237144541 *
1293661   +        GRP_Income2  +      -0.028464296882 * GRP_Income3
1293662   +          +     0.24836294191696 * GRP_Income4  +     0.08738925553158 *
1293663   +        GRP_Mnt2  +     0.00962293230168 * GRP_Mnt3  +    -0.12661643514597 *
1293664   +        GRP_Mnt4  +    -0.03747719154948 * GRP_MntFishProducts2
1293665   +          +    -0.07078012229572 * GRP_MntFishProducts3
1293666   +          +    -0.14569186671189 * GRP_MntFishProducts4
1293667   +          +     0.14963390032413 * GRP_MntGoldProds2
1293668   +          +    -0.11869917970226 * GRP_MntGoldProds3
1293669   +          +     0.25943105626615 * GRP_MntGoldProds4
1293670   +          +     0.36609689271233 * GRP_MntMeatProducts2
1293671   +          +     0.10969864655073 * GRP_MntMeatProducts3
1293672   +          +    -0.03446779336952 * GRP_MntMeatProducts4
1293673   +          +    -0.16882321573662 * GRP_MntWines2  +     0.07914922328232 *
1293674   +        GRP_MntWines3  +     0.13243594484158 * GRP_MntWines4
1293675   +          +     0.39758714937962 * GRP_NumCatalogPurchases3
1293676   +          +     0.31434011051179 * GRP_NumCatalogPurchases4
1293677   +          +     0.08068432649382 * GRP_NumDistPurchases2
1293678   +          +    -0.08875599058351 * GRP_NumDistPurchases3
1293679   +          +     0.26738740475822 * GRP_NumDistPurchases4
1293680   +          +     -0.0916247468051 * GRP_NumWebPurchases2
1293681   +          +    -0.17267741073665 * GRP_NumWebPurchases3
1293682   +          +     0.01349113315351 * GRP_NumWebPurchases4
1293683   +          +    -0.19075973281592 * GRP_RFMstat2  +    -0.20146461162283 *
1293684   +        GRP_RFMstat3  +    -0.13097471458987 * GRP_RFMstat4
1293685   +          +     0.06761773631631 * GRP_RMntFrq2  +     0.27576244694442 *
1293686   +        GRP_RMntFrq3  +      0.1281788430307 * GRP_RMntFrq4
1293687   +          +    -0.15939599795679 * GRP_Recency2  +    -0.00210397286084 *
1293688   +        GRP_Recency3  +     0.28490847560375 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.11273135858209 * GRP_AcceptedCmp52 + -0.15015665173608 *
GRP_Frq2 + -0.20454924588356 * GRP_Frq3 + -0.04047998964496 * GRP_Frq4 + -0.29897237144541 *
GRP_Income2 + -0.028464296882 * GRP_Income3 + 0.24836294191696 * GRP_Income4 +
0.08738925553158 * GRP_Mnt2 + 0.00962293230168 * GRP_Mnt3 + -0.12661643514597 * GRP_Mnt4 +
-0.03747719154948 * GRP_MntFishProducts2 + -0.07078012229572 * GRP_MntFishProducts3 +
-0.14569186671189 * GRP_MntFishProducts4 + 0.14963390032413 * GRP_MntGoldProds2 +
-0.11869917970226 * GRP_MntGoldProds3 + 0.25943105626615 * GRP_MntGoldProds4 +
0.36609689271233 * GRP_MntMeatProducts2 + 0.10969864655073 * GRP_MntMeatProducts3 +
-0.03446779336952 * GRP_MntMeatProducts4 + -0.16882321573662 * GRP_MntWines2 +
0.07914922328232 * GRP_MntWines3 + 0.13243594484158 * GRP_MntWines4 + 0.39758714937962 *
GRP_NumCatalogPurchases3 + 0.31434011051179 * GRP_NumCatalogPurchases4 + 0.08068432649382 *
GRP_NumDistPurchases2 + -0.08875599058351 * GRP_NumDistPurchases3 + 0.26738740475822 *
GRP_NumDistPurchases4 + -0.0916247468051 * GRP_NumWebPurchases2 + -0.17267741073665 *
GRP_NumWebPurchases3 + 0.01349113315351 * GRP_NumWebPurchases4 + -0.19075973281592 *
GRP_RFMstat2 + -0.20146461162283 * GRP_RFMstat3 + -0.13097471458987 * GRP_RFMstat4 +
0.06761773631631 * GRP_RMntFrq2 + 0.27576244694442 * GRP_RMntFrq3 + 0.1281788430307 *
GRP_RMntFrq4 + -0.15939599795679 * GRP_Recency2 + -0.00210397286084 * GRP_Recency3 +
0.28490847560375 * GRP_Recency4 ;
1293689   +   H14  = H14  +     0.27713596853764 * GRP_AcceptedCmp52
1293690   +          +    -0.11480256849934 * GRP_Frq2  +      0.0285240312455 * GRP_Frq3
1293691   +          +     0.09416065239682 * GRP_Frq4  +     -0.1229961422993 *
1293692   +        GRP_Income2  +     0.01867364051002 * GRP_Income3
1293693   +          +     0.05820105400306 * GRP_Income4  +    -0.16873429334819 *
1293694   +        GRP_Mnt2  +    -0.01221085891741 * GRP_Mnt3  +    -0.10225236565235 *
1293695   +        GRP_Mnt4  +    -0.09613387975858 * GRP_MntFishProducts2
1293696   +          +    -0.18334484867808 * GRP_MntFishProducts3
1293697   +          +     0.13484477561766 * GRP_MntFishProducts4
1293698   +          +    -0.05145913380692 * GRP_MntGoldProds2
1293699   +          +     0.04459987080173 * GRP_MntGoldProds3
1293700   +          +     0.01539767655772 * GRP_MntGoldProds4
1293701   +          +     0.26537148543352 * GRP_MntMeatProducts2
1293702   +          +     0.22913678530176 * GRP_MntMeatProducts3
1293703   +          +     0.21262490658374 * GRP_MntMeatProducts4
1293704   +          +    -0.11513521401249 * GRP_MntWines2  +    -0.14420673462527 *
1293705   +        GRP_MntWines3  +     0.11949691312637 * GRP_MntWines4
1293706   +          +    -0.02289734111038 * GRP_NumCatalogPurchases3
1293707   +          +    -0.12014539185275 * GRP_NumCatalogPurchases4
1293708   +          +     0.09224372228857 * GRP_NumDistPurchases2
1293709   +          +    -0.14205094961773 * GRP_NumDistPurchases3
1293710   +          +    -0.27160467877541 * GRP_NumDistPurchases4
1293711   +          +    -0.15428446875019 * GRP_NumWebPurchases2
1293712   +          +    -0.36914157795453 * GRP_NumWebPurchases3
1293713   +          +    -0.41610537355059 * GRP_NumWebPurchases4
1293714   +          +    -0.29442656678388 * GRP_RFMstat2  +     0.03961235509827 *
1293715   +        GRP_RFMstat3  +    -0.18322878380243 * GRP_RFMstat4
1293716   +          +     0.06857495854453 * GRP_RMntFrq2  +     0.08325769999442 *
1293717   +        GRP_RMntFrq3  +     0.24334424933749 * GRP_RMntFrq4
1293718   +          +    -0.50963259840069 * GRP_Recency2  +    -0.24163634485458 *
1293719   +        GRP_Recency3  +     -0.1023689653207 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.27713596853764 * GRP_AcceptedCmp52 + -0.11480256849934 *
GRP_Frq2 + 0.0285240312455 * GRP_Frq3 + 0.09416065239682 * GRP_Frq4 + -0.1229961422993 *
GRP_Income2 + 0.01867364051002 * GRP_Income3 + 0.05820105400306 * GRP_Income4 +
-0.16873429334819 * GRP_Mnt2 + -0.01221085891741 * GRP_Mnt3 + -0.10225236565235 * GRP_Mnt4 +
-0.09613387975858 * GRP_MntFishProducts2 + -0.18334484867808 * GRP_MntFishProducts3 +
0.13484477561766 * GRP_MntFishProducts4 + -0.05145913380692 * GRP_MntGoldProds2 +
0.04459987080173 * GRP_MntGoldProds3 + 0.01539767655772 * GRP_MntGoldProds4 + 0.26537148543352
* GRP_MntMeatProducts2 + 0.22913678530176 * GRP_MntMeatProducts3 + 0.21262490658374 *
GRP_MntMeatProducts4 + -0.11513521401249 * GRP_MntWines2 + -0.14420673462527 * GRP_MntWines3 +
0.11949691312637 * GRP_MntWines4 + -0.02289734111038 * GRP_NumCatalogPurchases3 +
-0.12014539185275 * GRP_NumCatalogPurchases4 + 0.09224372228857 * GRP_NumDistPurchases2 +
-0.14205094961773 * GRP_NumDistPurchases3 + -0.27160467877541 * GRP_NumDistPurchases4 +
-0.15428446875019 * GRP_NumWebPurchases2 + -0.36914157795453 * GRP_NumWebPurchases3 +
-0.41610537355059 * GRP_NumWebPurchases4 + -0.29442656678388 * GRP_RFMstat2 + 0.03961235509827
* GRP_RFMstat3 + -0.18322878380243 * GRP_RFMstat4 + 0.06857495854453 * GRP_RMntFrq2 +
0.08325769999442 * GRP_RMntFrq3 + 0.24334424933749 * GRP_RMntFrq4 + -0.50963259840069 *
GRP_Recency2 + -0.24163634485458 * GRP_Recency3 + -0.1023689653207 * GRP_Recency4 ;
1293720   +   H15  = H15  +    -0.58071728739803 * GRP_AcceptedCmp52
1293721   +          +    -0.33803120859672 * GRP_Frq2  +    -0.08690701614481 * GRP_Frq3
1293722   +          +     0.06107334775294 * GRP_Frq4  +     0.00751374071999 *
1293723   +        GRP_Income2  +     0.20911873861779 * GRP_Income3
1293724   +          +    -0.14977199160976 * GRP_Income4  +     0.15427447371686 *
1293725   +        GRP_Mnt2  +    -0.24298277669059 * GRP_Mnt3  +    -0.02935492111499 *
1293726   +        GRP_Mnt4  +     0.04923982061963 * GRP_MntFishProducts2
1293727   +          +    -0.08952948139975 * GRP_MntFishProducts3
1293728   +          +     0.15338133379465 * GRP_MntFishProducts4
1293729   +          +     0.04821845492824 * GRP_MntGoldProds2
1293730   +          +     0.20117781904284 * GRP_MntGoldProds3
1293731   +          +     0.13013396690778 * GRP_MntGoldProds4
1293732   +          +    -0.03940841472157 * GRP_MntMeatProducts2
1293733   +          +     0.03161017721112 * GRP_MntMeatProducts3
1293734   +          +    -0.21938330779867 * GRP_MntMeatProducts4
1293735   +          +      0.3039864690076 * GRP_MntWines2  +     0.33038690291786 *
1293736   +        GRP_MntWines3  +     0.03314465135063 * GRP_MntWines4
1293737   +          +    -0.07655889365033 * GRP_NumCatalogPurchases3
1293738   +          +    -0.17353955777897 * GRP_NumCatalogPurchases4
1293739   +          +    -0.16058154480995 * GRP_NumDistPurchases2
1293740   +          +    -0.30101518928361 * GRP_NumDistPurchases3
1293741   +          +      0.0473480026433 * GRP_NumDistPurchases4
1293742   +          +     0.03132883547053 * GRP_NumWebPurchases2
1293743   +          +    -0.29425936985479 * GRP_NumWebPurchases3
1293744   +          +    -0.12527625315403 * GRP_NumWebPurchases4
1293745   +          +     0.30683805591766 * GRP_RFMstat2  +    -0.21275334469197 *
1293746   +        GRP_RFMstat3  +     0.32474239840607 * GRP_RFMstat4
1293747   +          +     0.09289841520091 * GRP_RMntFrq2  +     0.22137778862379 *
1293748   +        GRP_RMntFrq3  +     0.12254524703503 * GRP_RMntFrq4
1293749   +          +     0.46836624272095 * GRP_Recency2  +     0.01747843890017 *
1293750   +        GRP_Recency3  +    -0.28363324780869 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.58071728739803 * GRP_AcceptedCmp52 + -0.33803120859672 *
GRP_Frq2 + -0.08690701614481 * GRP_Frq3 + 0.06107334775294 * GRP_Frq4 + 0.00751374071999 *
GRP_Income2 + 0.20911873861779 * GRP_Income3 + -0.14977199160976 * GRP_Income4 +
0.15427447371686 * GRP_Mnt2 + -0.24298277669059 * GRP_Mnt3 + -0.02935492111499 * GRP_Mnt4 +
0.04923982061963 * GRP_MntFishProducts2 + -0.08952948139975 * GRP_MntFishProducts3 +
0.15338133379465 * GRP_MntFishProducts4 + 0.04821845492824 * GRP_MntGoldProds2 +
0.20117781904284 * GRP_MntGoldProds3 + 0.13013396690778 * GRP_MntGoldProds4 +
-0.03940841472157 * GRP_MntMeatProducts2 + 0.03161017721112 * GRP_MntMeatProducts3 +
-0.21938330779867 * GRP_MntMeatProducts4 + 0.3039864690076 * GRP_MntWines2 + 0.33038690291786
* GRP_MntWines3 + 0.03314465135063 * GRP_MntWines4 + -0.07655889365033 *
GRP_NumCatalogPurchases3 + -0.17353955777897 * GRP_NumCatalogPurchases4 + -0.16058154480995 *
GRP_NumDistPurchases2 + -0.30101518928361 * GRP_NumDistPurchases3 + 0.0473480026433 *
GRP_NumDistPurchases4 + 0.03132883547053 * GRP_NumWebPurchases2 + -0.29425936985479 *
GRP_NumWebPurchases3 + -0.12527625315403 * GRP_NumWebPurchases4 + 0.30683805591766 *
GRP_RFMstat2 + -0.21275334469197 * GRP_RFMstat3 + 0.32474239840607 * GRP_RFMstat4 +
0.09289841520091 * GRP_RMntFrq2 + 0.22137778862379 * GRP_RMntFrq3 + 0.12254524703503 *
GRP_RMntFrq4 + 0.46836624272095 * GRP_Recency2 + 0.01747843890017 * GRP_Recency3 +
-0.28363324780869 * GRP_Recency4 ;
1293751   +   H11  =    -0.09329902916762 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.09329902916762 + H11 ;
1293752   +   H12  =     0.21894996952826 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.21894996952826 + H12 ;
1293753   +   H13  =    -0.97210428395662 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.97210428395662 + H13 ;
1293754   +   H14  =    -0.47241372860242 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.47241372860242 + H14 ;
1293755   +   H15  =    -0.89551869986721 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.89551869986721 + H15 ;
1293756   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1293757   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1293758   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1293759   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1293760   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1293761   +END;
MPRINT(EM_DIAGRAM):   END;
1293762   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1293763   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1293764   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1293765   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1293766   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1293767   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1293768   +END;
MPRINT(EM_DIAGRAM):   END;
1293769   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1293770   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1293771   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1293772   +
1293773   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1293774   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1293775   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1293776   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1293777   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1293778   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1293779   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1293780   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1293781   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1293782   +end;
MPRINT(EM_DIAGRAM):   end;
1293783   +else do;
MPRINT(EM_DIAGRAM):   else do;
1293784   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1293785   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1293786   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1293787   +   end;
MPRINT(EM_DIAGRAM):   end;
1293788   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1293789   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1293790   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1293791   +   end;
MPRINT(EM_DIAGRAM):   end;
1293792   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1293793   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1293794   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1293795   +   end;
MPRINT(EM_DIAGRAM):   end;
1293796   +end;
MPRINT(EM_DIAGRAM):   end;
1293797   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1293798   +   P_DepVar1  =     2.68876927057109 * H11  +     0.34381275178608 * H12
1293799   +          +    -1.13153750790029 * H13  +    -0.93563986714952 * H14
1293800   +          +     1.84382077322412 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.68876927057109 * H11 + 0.34381275178608 * H12 +
-1.13153750790029 * H13 + -0.93563986714952 * H14 + 1.84382077322412 * H15 ;
1293801   +   P_DepVar1  =    -1.53169022796223 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53169022796223 + P_DepVar1 ;
1293802   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1293803   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1293804   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1293805   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1293806   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1293807   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1293808   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1293809   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1293810   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1293811   +END;
MPRINT(EM_DIAGRAM):   END;
1293812   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1293813   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1293814   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1293815   +END;
MPRINT(EM_DIAGRAM):   END;
1293816   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1293817   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1293818   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1293819   +END;
MPRINT(EM_DIAGRAM):   END;
1293820   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1293821   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1293822   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1293823   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1293824   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1293825   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1293826   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1293827   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1293828   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1293829   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1293830   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1293831   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1293832   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1293833   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1293834   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1293835   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1293836   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1293837   +END;
MPRINT(EM_DIAGRAM):   END;
1293838   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1293839   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1293840   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1293841   +drop
1293842   +H11
1293843   +H12
1293844   +H13
1293845   +H14
1293846   +H15
1293847   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1293848   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1293849   +* Renaming variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural22;
1293850   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293851   +* Renaming Posterior variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural22;
1293852   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293853   +drop Neural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar1;
1293854   +Neural22_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar1 = P_DepVar1;
1293855   +drop Neural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar0;
1293856   +Neural22_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar0 = P_DepVar0;
1293857   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293858   +* Renaming _WARN_ variable for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural22;
1293859   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293860   +length Neural22_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural22_WARN_ $4;
1293861   +drop Neural22_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural22_WARN_;
1293862   +Neural22_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural22_WARN_ = _WARN_;
1293863   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293864   +* Ensmbl7: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring Code of model 3 of 3;
1293865   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293866   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293867   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1293868   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1293869   +* NODE: Neural18;
MPRINT(EM_DIAGRAM):   * NODE: Neural18;
1293870   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1293871   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1293872   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1293873   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1293874   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1293875   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1293876   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1293877   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1293878   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1293879   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1293880   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1293881   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1293882   +LENGTH _WARN_ $4
1293883   +      F_DepVar  $ 12
1293884   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1293885   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1293886   +
1293887   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1293888   +
1293889   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1293890   +
1293891   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1293892   +
1293893   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1293894   +
1293895   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1293896   +
1293897   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1293898   +
1293899   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1293900   +
1293901   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1293902   +
1293903   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1293904   +
1293905   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1293906   +
1293907   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1293908   +
1293909   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1293910   +
1293911   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1293912   +
1293913   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1293914   +
1293915   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1293916   +
1293917   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1293918   +
1293919   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1293920   +
1293921   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1293922   +
1293923   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1293924   +
1293925   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1293926   +
1293927   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1293928   +
1293929   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1293930   +
1293931   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1293932   +
1293933   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1293934   +
1293935   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1293936   +
1293937   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1293938   +
1293939   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1293940   +
1293941   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1293942   +
1293943   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1293944   +
1293945   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1293946   +
1293947   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1293948   +
1293949   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1293950   +
1293951   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1293952   +
1293953   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1293954   +
1293955   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1293956   +
1293957   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1293958   +
1293959   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1293960   +
1293961   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1293962   +
1293963   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1293964   +
1293965   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1293966   +
1293967   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1293968   +
1293969   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1293970   +
1293971   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1293972   +
1293973   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1293974   +
1293975   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1293976   +
1293977   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1293978   +
1293979   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1293980   +
1293981   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1293982   +
1293983   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1293984   +
1293985   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1293986   +
1293987   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1293988   +
1293989   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1293990   +
1293991   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1293992   +
1293993   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1293994   +
1293995   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1293996   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1293997   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1293998   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1293999   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294000   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294001   +end;
MPRINT(EM_DIAGRAM):   end;
1294002   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294003   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294004   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1294005   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294006   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1294007   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1294008   +   end;
MPRINT(EM_DIAGRAM):   end;
1294009   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1294010   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1294011   +   end;
MPRINT(EM_DIAGRAM):   end;
1294012   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294013   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1294014   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294015   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294016   +   end;
MPRINT(EM_DIAGRAM):   end;
1294017   +end;
MPRINT(EM_DIAGRAM):   end;
1294018   +
1294019   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1294020   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1294021   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1294022   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1294023   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1294024   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1294025   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294026   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294027   +end;
MPRINT(EM_DIAGRAM):   end;
1294028   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294029   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294030   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1294031   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294032   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1294033   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1294034   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1294035   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1294036   +   end;
MPRINT(EM_DIAGRAM):   end;
1294037   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1294038   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1294039   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1294040   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1294041   +   end;
MPRINT(EM_DIAGRAM):   end;
1294042   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1294043   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1294044   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1294045   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1294046   +   end;
MPRINT(EM_DIAGRAM):   end;
1294047   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1294048   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1294049   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1294050   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1294051   +   end;
MPRINT(EM_DIAGRAM):   end;
1294052   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294053   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1294054   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1294055   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1294056   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294057   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294058   +   end;
MPRINT(EM_DIAGRAM):   end;
1294059   +end;
MPRINT(EM_DIAGRAM):   end;
1294060   +
1294061   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1294062   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1294063   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1294064   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1294065   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1294066   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1294067   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294068   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294069   +end;
MPRINT(EM_DIAGRAM):   end;
1294070   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294071   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294072   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1294073   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294074   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1294075   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1294076   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1294077   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1294078   +   end;
MPRINT(EM_DIAGRAM):   end;
1294079   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1294080   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1294081   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1294082   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1294083   +   end;
MPRINT(EM_DIAGRAM):   end;
1294084   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1294085   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1294086   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1294087   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1294088   +   end;
MPRINT(EM_DIAGRAM):   end;
1294089   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1294090   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1294091   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1294092   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1294093   +   end;
MPRINT(EM_DIAGRAM):   end;
1294094   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294095   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1294096   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1294097   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1294098   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294099   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294100   +   end;
MPRINT(EM_DIAGRAM):   end;
1294101   +end;
MPRINT(EM_DIAGRAM):   end;
1294102   +
1294103   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1294104   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1294105   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1294106   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1294107   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1294108   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1294109   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294110   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294111   +end;
MPRINT(EM_DIAGRAM):   end;
1294112   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294113   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294114   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1294115   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294116   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1294117   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1294118   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1294119   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1294120   +   end;
MPRINT(EM_DIAGRAM):   end;
1294121   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1294122   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1294123   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1294124   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1294125   +   end;
MPRINT(EM_DIAGRAM):   end;
1294126   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1294127   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1294128   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1294129   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1294130   +   end;
MPRINT(EM_DIAGRAM):   end;
1294131   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1294132   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1294133   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1294134   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1294135   +   end;
MPRINT(EM_DIAGRAM):   end;
1294136   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294137   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1294138   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1294139   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1294140   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294141   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294142   +   end;
MPRINT(EM_DIAGRAM):   end;
1294143   +end;
MPRINT(EM_DIAGRAM):   end;
1294144   +
1294145   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1294146   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1294147   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1294148   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1294149   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1294150   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1294151   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294152   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294153   +end;
MPRINT(EM_DIAGRAM):   end;
1294154   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294155   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294156   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1294157   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294158   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1294159   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1294160   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1294161   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1294162   +   end;
MPRINT(EM_DIAGRAM):   end;
1294163   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1294164   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1294165   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1294166   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1294167   +   end;
MPRINT(EM_DIAGRAM):   end;
1294168   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1294169   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1294170   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1294171   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1294172   +   end;
MPRINT(EM_DIAGRAM):   end;
1294173   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1294174   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1294175   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1294176   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1294177   +   end;
MPRINT(EM_DIAGRAM):   end;
1294178   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294179   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1294180   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1294181   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1294182   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294183   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294184   +   end;
MPRINT(EM_DIAGRAM):   end;
1294185   +end;
MPRINT(EM_DIAGRAM):   end;
1294186   +
1294187   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1294188   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1294189   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1294190   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1294191   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1294192   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1294193   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294194   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294195   +end;
MPRINT(EM_DIAGRAM):   end;
1294196   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294197   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294198   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1294199   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294200   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1294201   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1294202   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1294203   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1294204   +   end;
MPRINT(EM_DIAGRAM):   end;
1294205   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1294206   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1294207   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1294208   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1294209   +   end;
MPRINT(EM_DIAGRAM):   end;
1294210   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1294211   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1294212   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1294213   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1294214   +   end;
MPRINT(EM_DIAGRAM):   end;
1294215   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1294216   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1294217   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1294218   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1294219   +   end;
MPRINT(EM_DIAGRAM):   end;
1294220   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294221   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1294222   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1294223   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1294224   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294225   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294226   +   end;
MPRINT(EM_DIAGRAM):   end;
1294227   +end;
MPRINT(EM_DIAGRAM):   end;
1294228   +
1294229   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1294230   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1294231   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1294232   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1294233   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1294234   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1294235   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294236   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294237   +end;
MPRINT(EM_DIAGRAM):   end;
1294238   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294239   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294240   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1294241   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294242   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1294243   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1294244   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1294245   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1294246   +   end;
MPRINT(EM_DIAGRAM):   end;
1294247   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1294248   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1294249   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1294250   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1294251   +   end;
MPRINT(EM_DIAGRAM):   end;
1294252   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1294253   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1294254   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1294255   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1294256   +   end;
MPRINT(EM_DIAGRAM):   end;
1294257   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1294258   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1294259   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1294260   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1294261   +   end;
MPRINT(EM_DIAGRAM):   end;
1294262   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294263   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1294264   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1294265   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1294266   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294267   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294268   +   end;
MPRINT(EM_DIAGRAM):   end;
1294269   +end;
MPRINT(EM_DIAGRAM):   end;
1294270   +
1294271   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1294272   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1294273   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1294274   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1294275   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1294276   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1294277   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294278   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294279   +end;
MPRINT(EM_DIAGRAM):   end;
1294280   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294281   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294282   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1294283   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294284   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1294285   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1294286   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1294287   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1294288   +   end;
MPRINT(EM_DIAGRAM):   end;
1294289   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1294290   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1294291   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1294292   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1294293   +   end;
MPRINT(EM_DIAGRAM):   end;
1294294   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1294295   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1294296   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1294297   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1294298   +   end;
MPRINT(EM_DIAGRAM):   end;
1294299   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1294300   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1294301   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1294302   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1294303   +   end;
MPRINT(EM_DIAGRAM):   end;
1294304   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294305   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1294306   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1294307   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1294308   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294309   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294310   +   end;
MPRINT(EM_DIAGRAM):   end;
1294311   +end;
MPRINT(EM_DIAGRAM):   end;
1294312   +
1294313   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1294314   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1294315   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1294316   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1294317   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1294318   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294319   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294320   +end;
MPRINT(EM_DIAGRAM):   end;
1294321   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294322   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294323   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1294324   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294325   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1294326   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1294327   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1294328   +   end;
MPRINT(EM_DIAGRAM):   end;
1294329   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1294330   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1294331   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1294332   +   end;
MPRINT(EM_DIAGRAM):   end;
1294333   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1294334   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1294335   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1294336   +   end;
MPRINT(EM_DIAGRAM):   end;
1294337   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294338   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1294339   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1294340   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294341   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294342   +   end;
MPRINT(EM_DIAGRAM):   end;
1294343   +end;
MPRINT(EM_DIAGRAM):   end;
1294344   +
1294345   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1294346   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1294347   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1294348   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1294349   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1294350   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1294351   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294352   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294353   +end;
MPRINT(EM_DIAGRAM):   end;
1294354   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294355   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294356   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1294357   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294358   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1294359   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1294360   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1294361   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1294362   +   end;
MPRINT(EM_DIAGRAM):   end;
1294363   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1294364   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1294365   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1294366   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1294367   +   end;
MPRINT(EM_DIAGRAM):   end;
1294368   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1294369   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1294370   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1294371   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1294372   +   end;
MPRINT(EM_DIAGRAM):   end;
1294373   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1294374   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1294375   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1294376   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1294377   +   end;
MPRINT(EM_DIAGRAM):   end;
1294378   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294379   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1294380   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1294381   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1294382   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294383   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294384   +   end;
MPRINT(EM_DIAGRAM):   end;
1294385   +end;
MPRINT(EM_DIAGRAM):   end;
1294386   +
1294387   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1294388   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1294389   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1294390   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1294391   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1294392   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1294393   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294394   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294395   +end;
MPRINT(EM_DIAGRAM):   end;
1294396   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294397   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294398   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1294399   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294400   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1294401   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1294402   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1294403   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1294404   +   end;
MPRINT(EM_DIAGRAM):   end;
1294405   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1294406   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1294407   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1294408   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1294409   +   end;
MPRINT(EM_DIAGRAM):   end;
1294410   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1294411   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1294412   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1294413   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1294414   +   end;
MPRINT(EM_DIAGRAM):   end;
1294415   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1294416   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1294417   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1294418   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1294419   +   end;
MPRINT(EM_DIAGRAM):   end;
1294420   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294421   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1294422   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1294423   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1294424   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294425   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294426   +   end;
MPRINT(EM_DIAGRAM):   end;
1294427   +end;
MPRINT(EM_DIAGRAM):   end;
1294428   +
1294429   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1294430   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1294431   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1294432   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1294433   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1294434   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1294435   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294436   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294437   +end;
MPRINT(EM_DIAGRAM):   end;
1294438   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294439   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294440   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1294441   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294442   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1294443   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1294444   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1294445   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1294446   +   end;
MPRINT(EM_DIAGRAM):   end;
1294447   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1294448   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1294449   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1294450   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1294451   +   end;
MPRINT(EM_DIAGRAM):   end;
1294452   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1294453   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1294454   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1294455   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1294456   +   end;
MPRINT(EM_DIAGRAM):   end;
1294457   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1294458   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1294459   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1294460   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1294461   +   end;
MPRINT(EM_DIAGRAM):   end;
1294462   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294463   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1294464   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1294465   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1294466   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294467   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294468   +   end;
MPRINT(EM_DIAGRAM):   end;
1294469   +end;
MPRINT(EM_DIAGRAM):   end;
1294470   +
1294471   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1294472   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1294473   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1294474   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1294475   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1294476   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1294477   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294478   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294479   +end;
MPRINT(EM_DIAGRAM):   end;
1294480   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294481   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294482   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1294483   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294484   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1294485   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1294486   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1294487   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1294488   +   end;
MPRINT(EM_DIAGRAM):   end;
1294489   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1294490   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1294491   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1294492   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1294493   +   end;
MPRINT(EM_DIAGRAM):   end;
1294494   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1294495   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1294496   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1294497   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1294498   +   end;
MPRINT(EM_DIAGRAM):   end;
1294499   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1294500   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1294501   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1294502   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1294503   +   end;
MPRINT(EM_DIAGRAM):   end;
1294504   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294505   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1294506   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1294507   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1294508   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294509   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294510   +   end;
MPRINT(EM_DIAGRAM):   end;
1294511   +end;
MPRINT(EM_DIAGRAM):   end;
1294512   +
1294513   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1294514   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1294515   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1294516   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1294517   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1294518   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1294519   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1294520   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294521   +end;
MPRINT(EM_DIAGRAM):   end;
1294522   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294523   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1294524   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1294525   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294526   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1294527   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1294528   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1294529   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1294530   +   end;
MPRINT(EM_DIAGRAM):   end;
1294531   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1294532   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1294533   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1294534   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1294535   +   end;
MPRINT(EM_DIAGRAM):   end;
1294536   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1294537   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1294538   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1294539   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1294540   +   end;
MPRINT(EM_DIAGRAM):   end;
1294541   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1294542   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1294543   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1294544   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1294545   +   end;
MPRINT(EM_DIAGRAM):   end;
1294546   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294547   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1294548   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1294549   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1294550   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1294551   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294552   +   end;
MPRINT(EM_DIAGRAM):   end;
1294553   +end;
MPRINT(EM_DIAGRAM):   end;
1294554   +
1294555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294556   +*** Checking missing input Interval
1294557   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1294558   +
1294559   +IF NMISS(
1294560   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1294561   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1294562   +
1294563   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1294564   +END;
MPRINT(EM_DIAGRAM):   END;
1294565   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294566   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1294567   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294568   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1294569   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1294570   +END;
MPRINT(EM_DIAGRAM):   END;
1294571   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1294572   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1294573   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1294574   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1294575   +END;
MPRINT(EM_DIAGRAM):   END;
1294576   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294577   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1294578   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294580   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1294581   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294582   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1294583   +   H11  =     0.03855897145156 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.03855897145156 * S_Year_Birth ;
1294584   +   H12  =      0.4940754340088 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.4940754340088 * S_Year_Birth ;
1294585   +   H13  =     0.17524137660647 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.17524137660647 * S_Year_Birth ;
1294586   +   H14  =     0.27270757044038 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.27270757044038 * S_Year_Birth ;
1294587   +   H15  =    -0.02127353119313 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.02127353119313 * S_Year_Birth ;
1294588   +   H16  =    -0.10595973365564 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.10595973365564 * S_Year_Birth ;
1294589   +   H17  =    -0.11271332681901 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.11271332681901 * S_Year_Birth ;
1294590   +   H11  = H11  +     0.21558790598329 * GRP_AcceptedCmp52
1294591   +          +    -0.07145572032882 * GRP_Frq2  +     0.09268595548153 * GRP_Frq3
1294592   +          +    -0.20765463263399 * GRP_Frq4  +    -0.00887637988838 *
1294593   +        GRP_Income2  +    -0.34198008097003 * GRP_Income3
1294594   +          +     0.00518173450113 * GRP_Income4  +     0.17153998784849 *
1294595   +        GRP_Mnt2  +    -0.03282863464194 * GRP_Mnt3  +     0.15479242768387 *
1294596   +        GRP_Mnt4  +    -0.14566682947772 * GRP_MntFishProducts2
1294597   +          +    -0.04697385312971 * GRP_MntFishProducts3
1294598   +          +     0.05477300056491 * GRP_MntFishProducts4
1294599   +          +    -0.21182877070793 * GRP_MntGoldProds2
1294600   +          +    -0.06202001203906 * GRP_MntGoldProds3
1294601   +          +    -0.23297283739715 * GRP_MntGoldProds4
1294602   +          +    -0.27072080481215 * GRP_MntMeatProducts2
1294603   +          +     -0.0879595975531 * GRP_MntMeatProducts3
1294604   +          +     0.01711044358319 * GRP_MntMeatProducts4
1294605   +          +     0.01568057691806 * GRP_MntWines2  +    -0.14454572309741 *
1294606   +        GRP_MntWines3  +      0.1665968837033 * GRP_MntWines4
1294607   +          +    -0.24980039994544 * GRP_NumCatalogPurchases3
1294608   +          +    -0.00199030871063 * GRP_NumCatalogPurchases4
1294609   +          +     0.11565917560156 * GRP_NumDistPurchases2
1294610   +          +      0.1678532898895 * GRP_NumDistPurchases3
1294611   +          +     -0.0338568889009 * GRP_NumDistPurchases4
1294612   +          +     0.09970745707934 * GRP_NumWebPurchases2
1294613   +          +     0.02961221360107 * GRP_NumWebPurchases3
1294614   +          +     0.02261054892411 * GRP_NumWebPurchases4
1294615   +          +     0.22891892518291 * GRP_RFMstat2  +     0.30720492174411 *
1294616   +        GRP_RFMstat3  +     0.02558392907316 * GRP_RFMstat4
1294617   +          +    -0.22752513596954 * GRP_RMntFrq2  +    -0.11010023712096 *
1294618   +        GRP_RMntFrq3  +    -0.29294961809478 * GRP_RMntFrq4
1294619   +          +     0.17323450297234 * GRP_Recency2  +    -0.02999008104866 *
1294620   +        GRP_Recency3  +    -0.07522056103469 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21558790598329 * GRP_AcceptedCmp52 + -0.07145572032882 *
GRP_Frq2 + 0.09268595548153 * GRP_Frq3 + -0.20765463263399 * GRP_Frq4 + -0.00887637988838 *
GRP_Income2 + -0.34198008097003 * GRP_Income3 + 0.00518173450113 * GRP_Income4 +
0.17153998784849 * GRP_Mnt2 + -0.03282863464194 * GRP_Mnt3 + 0.15479242768387 * GRP_Mnt4 +
-0.14566682947772 * GRP_MntFishProducts2 + -0.04697385312971 * GRP_MntFishProducts3 +
0.05477300056491 * GRP_MntFishProducts4 + -0.21182877070793 * GRP_MntGoldProds2 +
-0.06202001203906 * GRP_MntGoldProds3 + -0.23297283739715 * GRP_MntGoldProds4 +
-0.27072080481215 * GRP_MntMeatProducts2 + -0.0879595975531 * GRP_MntMeatProducts3 +
0.01711044358319 * GRP_MntMeatProducts4 + 0.01568057691806 * GRP_MntWines2 + -0.14454572309741
* GRP_MntWines3 + 0.1665968837033 * GRP_MntWines4 + -0.24980039994544 *
GRP_NumCatalogPurchases3 + -0.00199030871063 * GRP_NumCatalogPurchases4 + 0.11565917560156 *
GRP_NumDistPurchases2 + 0.1678532898895 * GRP_NumDistPurchases3 + -0.0338568889009 *
GRP_NumDistPurchases4 + 0.09970745707934 * GRP_NumWebPurchases2 + 0.02961221360107 *
GRP_NumWebPurchases3 + 0.02261054892411 * GRP_NumWebPurchases4 + 0.22891892518291 *
GRP_RFMstat2 + 0.30720492174411 * GRP_RFMstat3 + 0.02558392907316 * GRP_RFMstat4 +
-0.22752513596954 * GRP_RMntFrq2 + -0.11010023712096 * GRP_RMntFrq3 + -0.29294961809478 *
GRP_RMntFrq4 + 0.17323450297234 * GRP_Recency2 + -0.02999008104866 * GRP_Recency3 +
-0.07522056103469 * GRP_Recency4 ;
1294621   +   H12  = H12  +    -0.17475665685155 * GRP_AcceptedCmp52
1294622   +          +     0.39850686717751 * GRP_Frq2  +     0.21273190324396 * GRP_Frq3
1294623   +          +    -0.04292229763335 * GRP_Frq4  +     0.48189221687125 *
1294624   +        GRP_Income2  +       0.757675062227 * GRP_Income3
1294625   +          +    -0.31438345261512 * GRP_Income4  +     0.08884755999997 *
1294626   +        GRP_Mnt2  +     0.02891204793625 * GRP_Mnt3  +    -0.11500381143203 *
1294627   +        GRP_Mnt4  +     0.47755891441547 * GRP_MntFishProducts2
1294628   +          +     0.26645530981311 * GRP_MntFishProducts3
1294629   +          +    -0.17631072283513 * GRP_MntFishProducts4
1294630   +          +    -0.35439521021691 * GRP_MntGoldProds2
1294631   +          +     0.11419663880206 * GRP_MntGoldProds3
1294632   +          +     0.07288749113866 * GRP_MntGoldProds4
1294633   +          +    -0.52191822126159 * GRP_MntMeatProducts2
1294634   +          +    -0.08421627788812 * GRP_MntMeatProducts3
1294635   +          +    -0.15930642038763 * GRP_MntMeatProducts4
1294636   +          +     0.17420985773045 * GRP_MntWines2  +     0.21257483876123 *
1294637   +        GRP_MntWines3  +    -0.13198840161443 * GRP_MntWines4
1294638   +          +    -0.24725403471973 * GRP_NumCatalogPurchases3
1294639   +          +     0.28574938745998 * GRP_NumCatalogPurchases4
1294640   +          +     -0.4878996299474 * GRP_NumDistPurchases2
1294641   +          +     0.10139595392447 * GRP_NumDistPurchases3
1294642   +          +     0.05251891244468 * GRP_NumDistPurchases4
1294643   +          +    -0.18486003226007 * GRP_NumWebPurchases2
1294644   +          +      0.0263831646971 * GRP_NumWebPurchases3
1294645   +          +     0.26495059708503 * GRP_NumWebPurchases4
1294646   +          +    -0.16580006605432 * GRP_RFMstat2  +    -0.12537703875848 *
1294647   +        GRP_RFMstat3  +      -0.100652416931 * GRP_RFMstat4
1294648   +          +    -0.00913931308958 * GRP_RMntFrq2  +    -0.15758837200974 *
1294649   +        GRP_RMntFrq3  +     -0.1198225533702 * GRP_RMntFrq4
1294650   +          +       1.075902392162 * GRP_Recency2  +     0.44926983542925 *
1294651   +        GRP_Recency3  +     -0.4970729472837 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17475665685155 * GRP_AcceptedCmp52 + 0.39850686717751 *
GRP_Frq2 + 0.21273190324396 * GRP_Frq3 + -0.04292229763335 * GRP_Frq4 + 0.48189221687125 *
GRP_Income2 + 0.757675062227 * GRP_Income3 + -0.31438345261512 * GRP_Income4 +
0.08884755999997 * GRP_Mnt2 + 0.02891204793625 * GRP_Mnt3 + -0.11500381143203 * GRP_Mnt4 +
0.47755891441547 * GRP_MntFishProducts2 + 0.26645530981311 * GRP_MntFishProducts3 +
-0.17631072283513 * GRP_MntFishProducts4 + -0.35439521021691 * GRP_MntGoldProds2 +
0.11419663880206 * GRP_MntGoldProds3 + 0.07288749113866 * GRP_MntGoldProds4 +
-0.52191822126159 * GRP_MntMeatProducts2 + -0.08421627788812 * GRP_MntMeatProducts3 +
-0.15930642038763 * GRP_MntMeatProducts4 + 0.17420985773045 * GRP_MntWines2 + 0.21257483876123
* GRP_MntWines3 + -0.13198840161443 * GRP_MntWines4 + -0.24725403471973 *
GRP_NumCatalogPurchases3 + 0.28574938745998 * GRP_NumCatalogPurchases4 + -0.4878996299474 *
GRP_NumDistPurchases2 + 0.10139595392447 * GRP_NumDistPurchases3 + 0.05251891244468 *
GRP_NumDistPurchases4 + -0.18486003226007 * GRP_NumWebPurchases2 + 0.0263831646971 *
GRP_NumWebPurchases3 + 0.26495059708503 * GRP_NumWebPurchases4 + -0.16580006605432 *
GRP_RFMstat2 + -0.12537703875848 * GRP_RFMstat3 + -0.100652416931 * GRP_RFMstat4 +
-0.00913931308958 * GRP_RMntFrq2 + -0.15758837200974 * GRP_RMntFrq3 + -0.1198225533702 *
GRP_RMntFrq4 + 1.075902392162 * GRP_Recency2 + 0.44926983542925 * GRP_Recency3 +
-0.4970729472837 * GRP_Recency4 ;
1294652   +   H13  = H13  +     0.00215688122529 * GRP_AcceptedCmp52
1294653   +          +    -0.01427589791379 * GRP_Frq2  +    -0.13098496868755 * GRP_Frq3
1294654   +          +    -0.30502313457201 * GRP_Frq4  +    -0.37973462663051 *
1294655   +        GRP_Income2  +     0.00732780844057 * GRP_Income3
1294656   +          +     0.53278328894406 * GRP_Income4  +     0.29819966041309 *
1294657   +        GRP_Mnt2  +     0.25349727466129 * GRP_Mnt3  +     0.10579488290769 *
1294658   +        GRP_Mnt4  +    -0.09288921771048 * GRP_MntFishProducts2
1294659   +          +     0.02714802509094 * GRP_MntFishProducts3
1294660   +          +     0.27119078554613 * GRP_MntFishProducts4
1294661   +          +     0.19322428614339 * GRP_MntGoldProds2
1294662   +          +     0.34778546410632 * GRP_MntGoldProds3
1294663   +          +    -0.06570146779096 * GRP_MntGoldProds4
1294664   +          +     0.44935275650977 * GRP_MntMeatProducts2
1294665   +          +     0.00805794344265 * GRP_MntMeatProducts3
1294666   +          +     0.02445782833023 * GRP_MntMeatProducts4
1294667   +          +    -0.12082391878766 * GRP_MntWines2  +    -0.28739181733976 *
1294668   +        GRP_MntWines3  +    -0.12417307544408 * GRP_MntWines4
1294669   +          +     0.33901531634752 * GRP_NumCatalogPurchases3
1294670   +          +     -0.0519425405532 * GRP_NumCatalogPurchases4
1294671   +          +     0.03481806823908 * GRP_NumDistPurchases2
1294672   +          +      0.0546202479864 * GRP_NumDistPurchases3
1294673   +          +    -0.05240296080421 * GRP_NumDistPurchases4
1294674   +          +     0.28307550964921 * GRP_NumWebPurchases2
1294675   +          +     0.31503543231591 * GRP_NumWebPurchases3
1294676   +          +     0.24817135719308 * GRP_NumWebPurchases4
1294677   +          +    -0.05017370187238 * GRP_RFMstat2  +     0.08161239885611 *
1294678   +        GRP_RFMstat3  +    -0.14085507706312 * GRP_RFMstat4
1294679   +          +     0.11738278568714 * GRP_RMntFrq2  +     0.28471680928269 *
1294680   +        GRP_RMntFrq3  +     0.46590886050772 * GRP_RMntFrq4
1294681   +          +     -0.2318556486679 * GRP_Recency2  +    -0.37508297533514 *
1294682   +        GRP_Recency3  +     0.05823801065489 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00215688122529 * GRP_AcceptedCmp52 + -0.01427589791379 *
GRP_Frq2 + -0.13098496868755 * GRP_Frq3 + -0.30502313457201 * GRP_Frq4 + -0.37973462663051 *
GRP_Income2 + 0.00732780844057 * GRP_Income3 + 0.53278328894406 * GRP_Income4 +
0.29819966041309 * GRP_Mnt2 + 0.25349727466129 * GRP_Mnt3 + 0.10579488290769 * GRP_Mnt4 +
-0.09288921771048 * GRP_MntFishProducts2 + 0.02714802509094 * GRP_MntFishProducts3 +
0.27119078554613 * GRP_MntFishProducts4 + 0.19322428614339 * GRP_MntGoldProds2 +
0.34778546410632 * GRP_MntGoldProds3 + -0.06570146779096 * GRP_MntGoldProds4 +
0.44935275650977 * GRP_MntMeatProducts2 + 0.00805794344265 * GRP_MntMeatProducts3 +
0.02445782833023 * GRP_MntMeatProducts4 + -0.12082391878766 * GRP_MntWines2 +
-0.28739181733976 * GRP_MntWines3 + -0.12417307544408 * GRP_MntWines4 + 0.33901531634752 *
GRP_NumCatalogPurchases3 + -0.0519425405532 * GRP_NumCatalogPurchases4 + 0.03481806823908 *
GRP_NumDistPurchases2 + 0.0546202479864 * GRP_NumDistPurchases3 + -0.05240296080421 *
GRP_NumDistPurchases4 + 0.28307550964921 * GRP_NumWebPurchases2 + 0.31503543231591 *
GRP_NumWebPurchases3 + 0.24817135719308 * GRP_NumWebPurchases4 + -0.05017370187238 *
GRP_RFMstat2 + 0.08161239885611 * GRP_RFMstat3 + -0.14085507706312 * GRP_RFMstat4 +
0.11738278568714 * GRP_RMntFrq2 + 0.28471680928269 * GRP_RMntFrq3 + 0.46590886050772 *
GRP_RMntFrq4 + -0.2318556486679 * GRP_Recency2 + -0.37508297533514 * GRP_Recency3 +
0.05823801065489 * GRP_Recency4 ;
1294683   +   H14  = H14  +      0.4684617848987 * GRP_AcceptedCmp52
1294684   +          +    -0.10078363733095 * GRP_Frq2  +     0.12187262992305 * GRP_Frq3
1294685   +          +     0.06615581853287 * GRP_Frq4  +    -0.37438533196327 *
1294686   +        GRP_Income2  +    -0.54951239852844 * GRP_Income3
1294687   +          +     0.42517426076684 * GRP_Income4  +     0.01160451666213 *
1294688   +        GRP_Mnt2  +    -0.19046851266656 * GRP_Mnt3  +    -0.22599863084471 *
1294689   +        GRP_Mnt4  +     0.02252915755857 * GRP_MntFishProducts2
1294690   +          +    -0.08997232581072 * GRP_MntFishProducts3
1294691   +          +    -0.05669599356928 * GRP_MntFishProducts4
1294692   +          +      0.2199150131909 * GRP_MntGoldProds2
1294693   +          +     0.05584571259838 * GRP_MntGoldProds3
1294694   +          +    -0.13160142309505 * GRP_MntGoldProds4
1294695   +          +      0.2539849640816 * GRP_MntMeatProducts2
1294696   +          +     0.29448191059312 * GRP_MntMeatProducts3
1294697   +          +    -0.33946200154351 * GRP_MntMeatProducts4
1294698   +          +    -0.47231816370111 * GRP_MntWines2  +    -0.35916844796743 *
1294699   +        GRP_MntWines3  +     0.15578356288597 * GRP_MntWines4
1294700   +          +     0.35913140014848 * GRP_NumCatalogPurchases3
1294701   +          +    -0.07798422379681 * GRP_NumCatalogPurchases4
1294702   +          +     0.38206153529506 * GRP_NumDistPurchases2
1294703   +          +     0.08642998303162 * GRP_NumDistPurchases3
1294704   +          +    -0.00375635377885 * GRP_NumDistPurchases4
1294705   +          +    -0.04352529411419 * GRP_NumWebPurchases2
1294706   +          +    -0.17285172586868 * GRP_NumWebPurchases3
1294707   +          +     0.23030028338396 * GRP_NumWebPurchases4
1294708   +          +     0.16194254582104 * GRP_RFMstat2  +    -0.03413270353062 *
1294709   +        GRP_RFMstat3  +    -0.32516629559317 * GRP_RFMstat4
1294710   +          +    -0.16070809362515 * GRP_RMntFrq2  +    -0.17716471899416 *
1294711   +        GRP_RMntFrq3  +     0.09335047904411 * GRP_RMntFrq4
1294712   +          +    -0.92875393407697 * GRP_Recency2  +     0.16068827585896 *
1294713   +        GRP_Recency3  +     0.41807637211453 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.4684617848987 * GRP_AcceptedCmp52 + -0.10078363733095 *
GRP_Frq2 + 0.12187262992305 * GRP_Frq3 + 0.06615581853287 * GRP_Frq4 + -0.37438533196327 *
GRP_Income2 + -0.54951239852844 * GRP_Income3 + 0.42517426076684 * GRP_Income4 +
0.01160451666213 * GRP_Mnt2 + -0.19046851266656 * GRP_Mnt3 + -0.22599863084471 * GRP_Mnt4 +
0.02252915755857 * GRP_MntFishProducts2 + -0.08997232581072 * GRP_MntFishProducts3 +
-0.05669599356928 * GRP_MntFishProducts4 + 0.2199150131909 * GRP_MntGoldProds2 +
0.05584571259838 * GRP_MntGoldProds3 + -0.13160142309505 * GRP_MntGoldProds4 + 0.2539849640816
* GRP_MntMeatProducts2 + 0.29448191059312 * GRP_MntMeatProducts3 + -0.33946200154351 *
GRP_MntMeatProducts4 + -0.47231816370111 * GRP_MntWines2 + -0.35916844796743 * GRP_MntWines3 +
0.15578356288597 * GRP_MntWines4 + 0.35913140014848 * GRP_NumCatalogPurchases3 +
-0.07798422379681 * GRP_NumCatalogPurchases4 + 0.38206153529506 * GRP_NumDistPurchases2 +
0.08642998303162 * GRP_NumDistPurchases3 + -0.00375635377885 * GRP_NumDistPurchases4 +
-0.04352529411419 * GRP_NumWebPurchases2 + -0.17285172586868 * GRP_NumWebPurchases3 +
0.23030028338396 * GRP_NumWebPurchases4 + 0.16194254582104 * GRP_RFMstat2 + -0.03413270353062
* GRP_RFMstat3 + -0.32516629559317 * GRP_RFMstat4 + -0.16070809362515 * GRP_RMntFrq2 +
-0.17716471899416 * GRP_RMntFrq3 + 0.09335047904411 * GRP_RMntFrq4 + -0.92875393407697 *
GRP_Recency2 + 0.16068827585896 * GRP_Recency3 + 0.41807637211453 * GRP_Recency4 ;
1294714   +   H15  = H15  +    -0.78481953865912 * GRP_AcceptedCmp52
1294715   +          +     0.05211963408638 * GRP_Frq2  +     0.24938737986681 * GRP_Frq3
1294716   +          +    -0.07347952562846 * GRP_Frq4  +    -0.15741135518664 *
1294717   +        GRP_Income2  +     0.01909378686442 * GRP_Income3
1294718   +          +    -0.15898085757789 * GRP_Income4  +     0.09202012507046 *
1294719   +        GRP_Mnt2  +    -0.39641738573024 * GRP_Mnt3  +     0.02885484069701 *
1294720   +        GRP_Mnt4  +     0.29554161293423 * GRP_MntFishProducts2
1294721   +          +    -0.04439366722112 * GRP_MntFishProducts3
1294722   +          +    -0.22939355735301 * GRP_MntFishProducts4
1294723   +          +    -0.00367144103801 * GRP_MntGoldProds2
1294724   +          +      -0.033315128385 * GRP_MntGoldProds3
1294725   +          +     0.10655545066126 * GRP_MntGoldProds4
1294726   +          +     0.04927093675686 * GRP_MntMeatProducts2
1294727   +          +    -0.20156680946257 * GRP_MntMeatProducts3
1294728   +          +     0.29394273234417 * GRP_MntMeatProducts4
1294729   +          +     0.27324472738231 * GRP_MntWines2  +       0.398830803883 *
1294730   +        GRP_MntWines3  +    -0.16588038849208 * GRP_MntWines4
1294731   +          +     -0.3438340194477 * GRP_NumCatalogPurchases3
1294732   +          +    -0.37438590488645 * GRP_NumCatalogPurchases4
1294733   +          +    -0.42285816542086 * GRP_NumDistPurchases2
1294734   +          +     -0.1008716650505 * GRP_NumDistPurchases3
1294735   +          +    -0.42793112700917 * GRP_NumDistPurchases4
1294736   +          +    -0.06792665579186 * GRP_NumWebPurchases2
1294737   +          +     0.37113277513001 * GRP_NumWebPurchases3
1294738   +          +     0.05720653023952 * GRP_NumWebPurchases4
1294739   +          +    -0.30997814005221 * GRP_RFMstat2  +     0.06219993861842 *
1294740   +        GRP_RFMstat3  +    -0.22600753085668 * GRP_RFMstat4
1294741   +          +    -0.31041957734532 * GRP_RMntFrq2  +     0.25053172234721 *
1294742   +        GRP_RMntFrq3  +     0.15983683107051 * GRP_RMntFrq4
1294743   +          +     0.52797823019932 * GRP_Recency2  +     0.11382874879823 *
1294744   +        GRP_Recency3  +    -0.22166533511817 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.78481953865912 * GRP_AcceptedCmp52 + 0.05211963408638 *
GRP_Frq2 + 0.24938737986681 * GRP_Frq3 + -0.07347952562846 * GRP_Frq4 + -0.15741135518664 *
GRP_Income2 + 0.01909378686442 * GRP_Income3 + -0.15898085757789 * GRP_Income4 +
0.09202012507046 * GRP_Mnt2 + -0.39641738573024 * GRP_Mnt3 + 0.02885484069701 * GRP_Mnt4 +
0.29554161293423 * GRP_MntFishProducts2 + -0.04439366722112 * GRP_MntFishProducts3 +
-0.22939355735301 * GRP_MntFishProducts4 + -0.00367144103801 * GRP_MntGoldProds2 +
-0.033315128385 * GRP_MntGoldProds3 + 0.10655545066126 * GRP_MntGoldProds4 + 0.04927093675686
* GRP_MntMeatProducts2 + -0.20156680946257 * GRP_MntMeatProducts3 + 0.29394273234417 *
GRP_MntMeatProducts4 + 0.27324472738231 * GRP_MntWines2 + 0.398830803883 * GRP_MntWines3 +
-0.16588038849208 * GRP_MntWines4 + -0.3438340194477 * GRP_NumCatalogPurchases3 +
-0.37438590488645 * GRP_NumCatalogPurchases4 + -0.42285816542086 * GRP_NumDistPurchases2 +
-0.1008716650505 * GRP_NumDistPurchases3 + -0.42793112700917 * GRP_NumDistPurchases4 +
-0.06792665579186 * GRP_NumWebPurchases2 + 0.37113277513001 * GRP_NumWebPurchases3 +
0.05720653023952 * GRP_NumWebPurchases4 + -0.30997814005221 * GRP_RFMstat2 + 0.06219993861842
* GRP_RFMstat3 + -0.22600753085668 * GRP_RFMstat4 + -0.31041957734532 * GRP_RMntFrq2 +
0.25053172234721 * GRP_RMntFrq3 + 0.15983683107051 * GRP_RMntFrq4 + 0.52797823019932 *
GRP_Recency2 + 0.11382874879823 * GRP_Recency3 + -0.22166533511817 * GRP_Recency4 ;
1294745   +   H16  = H16  +      0.7107136456569 * GRP_AcceptedCmp52
1294746   +          +     -0.4751898387651 * GRP_Frq2  +    -0.11277060686411 * GRP_Frq3
1294747   +          +     0.15821547082299 * GRP_Frq4  +    -0.45945049231995 *
1294748   +        GRP_Income2  +    -0.18413512635176 * GRP_Income3
1294749   +          +     0.39594738835509 * GRP_Income4  +    -0.15472205523822 *
1294750   +        GRP_Mnt2  +     0.02844181224363 * GRP_Mnt3  +     0.45435843401555 *
1294751   +        GRP_Mnt4  +    -0.29220588593813 * GRP_MntFishProducts2
1294752   +          +     0.04340555393469 * GRP_MntFishProducts3
1294753   +          +    -0.20048219926361 * GRP_MntFishProducts4
1294754   +          +     0.16101452165456 * GRP_MntGoldProds2
1294755   +          +    -0.04467647211336 * GRP_MntGoldProds3
1294756   +          +     0.32142013598241 * GRP_MntGoldProds4
1294757   +          +     0.29741565154233 * GRP_MntMeatProducts2
1294758   +          +    -0.00264678222241 * GRP_MntMeatProducts3
1294759   +          +    -0.11596499325048 * GRP_MntMeatProducts4
1294760   +          +    -0.29849043995136 * GRP_MntWines2  +     0.14756452272338 *
1294761   +        GRP_MntWines3  +     0.48995265672675 * GRP_MntWines4
1294762   +          +     0.80854583627117 * GRP_NumCatalogPurchases3
1294763   +          +     0.14001888431357 * GRP_NumCatalogPurchases4
1294764   +          +     0.36107050137299 * GRP_NumDistPurchases2
1294765   +          +    -0.10375572120121 * GRP_NumDistPurchases3
1294766   +          +     0.10557004956787 * GRP_NumDistPurchases4
1294767   +          +     0.04608069099876 * GRP_NumWebPurchases2
1294768   +          +     0.15561947954396 * GRP_NumWebPurchases3
1294769   +          +    -0.01081470092004 * GRP_NumWebPurchases4
1294770   +          +     0.21994454623245 * GRP_RFMstat2  +    -0.08858421895818 *
1294771   +        GRP_RFMstat3  +    -0.13608887793525 * GRP_RFMstat4
1294772   +          +     0.07482010458977 * GRP_RMntFrq2  +    -0.11874760292742 *
1294773   +        GRP_RMntFrq3  +     0.56887215594366 * GRP_RMntFrq4
1294774   +          +    -0.13548983954455 * GRP_Recency2  +    -0.25036935235639 *
1294775   +        GRP_Recency3  +     -0.0282277663071 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.7107136456569 * GRP_AcceptedCmp52 + -0.4751898387651 *
GRP_Frq2 + -0.11277060686411 * GRP_Frq3 + 0.15821547082299 * GRP_Frq4 + -0.45945049231995 *
GRP_Income2 + -0.18413512635176 * GRP_Income3 + 0.39594738835509 * GRP_Income4 +
-0.15472205523822 * GRP_Mnt2 + 0.02844181224363 * GRP_Mnt3 + 0.45435843401555 * GRP_Mnt4 +
-0.29220588593813 * GRP_MntFishProducts2 + 0.04340555393469 * GRP_MntFishProducts3 +
-0.20048219926361 * GRP_MntFishProducts4 + 0.16101452165456 * GRP_MntGoldProds2 +
-0.04467647211336 * GRP_MntGoldProds3 + 0.32142013598241 * GRP_MntGoldProds4 +
0.29741565154233 * GRP_MntMeatProducts2 + -0.00264678222241 * GRP_MntMeatProducts3 +
-0.11596499325048 * GRP_MntMeatProducts4 + -0.29849043995136 * GRP_MntWines2 +
0.14756452272338 * GRP_MntWines3 + 0.48995265672675 * GRP_MntWines4 + 0.80854583627117 *
GRP_NumCatalogPurchases3 + 0.14001888431357 * GRP_NumCatalogPurchases4 + 0.36107050137299 *
GRP_NumDistPurchases2 + -0.10375572120121 * GRP_NumDistPurchases3 + 0.10557004956787 *
GRP_NumDistPurchases4 + 0.04608069099876 * GRP_NumWebPurchases2 + 0.15561947954396 *
GRP_NumWebPurchases3 + -0.01081470092004 * GRP_NumWebPurchases4 + 0.21994454623245 *
GRP_RFMstat2 + -0.08858421895818 * GRP_RFMstat3 + -0.13608887793525 * GRP_RFMstat4 +
0.07482010458977 * GRP_RMntFrq2 + -0.11874760292742 * GRP_RMntFrq3 + 0.56887215594366 *
GRP_RMntFrq4 + -0.13548983954455 * GRP_Recency2 + -0.25036935235639 * GRP_Recency3 +
-0.0282277663071 * GRP_Recency4 ;
1294776   +   H17  = H17  +    -0.06745892596619 * GRP_AcceptedCmp52
1294777   +          +    -0.09506194345469 * GRP_Frq2  +    -0.29707644715885 * GRP_Frq3
1294778   +          +    -0.06874693052001 * GRP_Frq4  +    -0.08949373241741 *
1294779   +        GRP_Income2  +     0.02965579603049 * GRP_Income3
1294780   +          +    -0.02192829727213 * GRP_Income4  +     0.30180973300088 *
1294781   +        GRP_Mnt2  +    -0.10648502526616 * GRP_Mnt3  +     0.07588844839465 *
1294782   +        GRP_Mnt4  +    -0.30524623655199 * GRP_MntFishProducts2
1294783   +          +    -0.20032703571491 * GRP_MntFishProducts3
1294784   +          +    -0.08348811352746 * GRP_MntFishProducts4
1294785   +          +    -0.00744131870881 * GRP_MntGoldProds2
1294786   +          +    -0.27347309859096 * GRP_MntGoldProds3
1294787   +          +    -0.04458870469416 * GRP_MntGoldProds4
1294788   +          +     0.17538261434498 * GRP_MntMeatProducts2
1294789   +          +    -0.08059547298843 * GRP_MntMeatProducts3
1294790   +          +     0.03113249898233 * GRP_MntMeatProducts4
1294791   +          +    -0.23690909413276 * GRP_MntWines2  +    -0.01511980231776 *
1294792   +        GRP_MntWines3  +     -0.2825327824317 * GRP_MntWines4
1294793   +          +     0.13919784888607 * GRP_NumCatalogPurchases3
1294794   +          +    -0.10871281978714 * GRP_NumCatalogPurchases4
1294795   +          +     0.20540014620209 * GRP_NumDistPurchases2
1294796   +          +     0.17744784873298 * GRP_NumDistPurchases3
1294797   +          +      -0.003486430833 * GRP_NumDistPurchases4
1294798   +          +    -0.04863967797645 * GRP_NumWebPurchases2
1294799   +          +     0.07245829152192 * GRP_NumWebPurchases3
1294800   +          +    -0.27395606297099 * GRP_NumWebPurchases4
1294801   +          +    -0.14496279180087 * GRP_RFMstat2  +     0.28224463929838 *
1294802   +        GRP_RFMstat3  +     0.26720059295202 * GRP_RFMstat4
1294803   +          +    -0.07120881723264 * GRP_RMntFrq2  +     0.16350065828319 *
1294804   +        GRP_RMntFrq3  +      0.3117297070285 * GRP_RMntFrq4
1294805   +          +    -0.52884474877094 * GRP_Recency2  +    -0.17937099376746 *
1294806   +        GRP_Recency3  +     -0.0157357289132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.06745892596619 * GRP_AcceptedCmp52 + -0.09506194345469 *
GRP_Frq2 + -0.29707644715885 * GRP_Frq3 + -0.06874693052001 * GRP_Frq4 + -0.08949373241741 *
GRP_Income2 + 0.02965579603049 * GRP_Income3 + -0.02192829727213 * GRP_Income4 +
0.30180973300088 * GRP_Mnt2 + -0.10648502526616 * GRP_Mnt3 + 0.07588844839465 * GRP_Mnt4 +
-0.30524623655199 * GRP_MntFishProducts2 + -0.20032703571491 * GRP_MntFishProducts3 +
-0.08348811352746 * GRP_MntFishProducts4 + -0.00744131870881 * GRP_MntGoldProds2 +
-0.27347309859096 * GRP_MntGoldProds3 + -0.04458870469416 * GRP_MntGoldProds4 +
0.17538261434498 * GRP_MntMeatProducts2 + -0.08059547298843 * GRP_MntMeatProducts3 +
0.03113249898233 * GRP_MntMeatProducts4 + -0.23690909413276 * GRP_MntWines2 +
-0.01511980231776 * GRP_MntWines3 + -0.2825327824317 * GRP_MntWines4 + 0.13919784888607 *
GRP_NumCatalogPurchases3 + -0.10871281978714 * GRP_NumCatalogPurchases4 + 0.20540014620209 *
GRP_NumDistPurchases2 + 0.17744784873298 * GRP_NumDistPurchases3 + -0.003486430833 *
GRP_NumDistPurchases4 + -0.04863967797645 * GRP_NumWebPurchases2 + 0.07245829152192 *
GRP_NumWebPurchases3 + -0.27395606297099 * GRP_NumWebPurchases4 + -0.14496279180087 *
GRP_RFMstat2 + 0.28224463929838 * GRP_RFMstat3 + 0.26720059295202 * GRP_RFMstat4 +
-0.07120881723264 * GRP_RMntFrq2 + 0.16350065828319 * GRP_RMntFrq3 + 0.3117297070285 *
GRP_RMntFrq4 + -0.52884474877094 * GRP_Recency2 + -0.17937099376746 * GRP_Recency3 +
-0.0157357289132 * GRP_Recency4 ;
1294807   +   H11  =    -0.76467628027618 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.76467628027618 + H11 ;
1294808   +   H12  =    -0.03405517571825 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03405517571825 + H12 ;
1294809   +   H13  =    -0.32845676351839 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.32845676351839 + H13 ;
1294810   +   H14  =     0.08379615404181 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.08379615404181 + H14 ;
1294811   +   H15  =    -0.77228291932436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.77228291932436 + H15 ;
1294812   +   H16  =    -0.77356855332279 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.77356855332279 + H16 ;
1294813   +   H17  =     0.45067845230796 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.45067845230796 + H17 ;
1294814   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1294815   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1294816   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1294817   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1294818   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1294819   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1294820   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1294821   +END;
MPRINT(EM_DIAGRAM):   END;
1294822   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1294823   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1294824   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1294825   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1294826   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1294827   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1294828   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1294829   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1294830   +END;
MPRINT(EM_DIAGRAM):   END;
1294831   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294832   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1294833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294834   +
1294835   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1294836   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1294837   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1294838   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1294839   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1294840   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1294841   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1294842   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1294843   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1294844   +end;
MPRINT(EM_DIAGRAM):   end;
1294845   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294846   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1294847   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1294848   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1294849   +   end;
MPRINT(EM_DIAGRAM):   end;
1294850   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1294851   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1294852   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1294853   +   end;
MPRINT(EM_DIAGRAM):   end;
1294854   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1294855   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1294856   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1294857   +   end;
MPRINT(EM_DIAGRAM):   end;
1294858   +end;
MPRINT(EM_DIAGRAM):   end;
1294859   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1294860   +   P_DepVar1  =    -0.15999450347654 * H11  +     1.35667407296837 * H12
1294861   +          +    -0.71419530867579 * H13  +     -1.0947746264744 * H14
1294862   +          +     0.98315214007209 * H15  +    -1.32163386678746 * H16
1294863   +          +    -0.29329090231091 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.15999450347654 * H11 + 1.35667407296837 * H12 +
-0.71419530867579 * H13 + -1.0947746264744 * H14 + 0.98315214007209 * H15 + -1.32163386678746
* H16 + -0.29329090231091 * H17 ;
1294864   +   P_DepVar1  =    -1.66210022161101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66210022161101 + P_DepVar1 ;
1294865   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1294866   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1294867   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1294868   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1294869   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1294870   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1294871   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1294872   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1294873   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1294874   +END;
MPRINT(EM_DIAGRAM):   END;
1294875   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1294876   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1294877   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1294878   +END;
MPRINT(EM_DIAGRAM):   END;
1294879   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1294880   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1294881   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1294882   +END;
MPRINT(EM_DIAGRAM):   END;
1294883   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1294884   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1294885   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1294886   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1294887   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1294888   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1294889   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1294890   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294891   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1294892   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1294893   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1294894   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1294895   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1294896   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1294897   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1294898   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1294899   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1294900   +END;
MPRINT(EM_DIAGRAM):   END;
1294901   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1294902   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1294903   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1294904   +drop
1294905   +H11
1294906   +H12
1294907   +H13
1294908   +H14
1294909   +H15
1294910   +H16
1294911   +H17
1294912   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1294913   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1294914   +* Renaming variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural18;
1294915   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294916   +* Renaming Posterior variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural18;
1294917   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294918   +drop Neural18_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar1;
1294919   +Neural18_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar1 = P_DepVar1;
1294920   +drop Neural18_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar0;
1294921   +Neural18_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar0 = P_DepVar0;
1294922   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294923   +* Renaming _WARN_ variable for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural18;
1294924   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294925   +length Neural18_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural18_WARN_ $4;
1294926   +drop Neural18_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural18_WARN_;
1294927   +Neural18_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural18_WARN_ = _WARN_;
1294928   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294929   +* Ensmbl7: Average Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Average Posteriors of 3 models;
1294930   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294931   +P_DepVar1 = (
1294932   +Neural21_P_DepVar1 +
1294933   +Neural22_P_DepVar1 +
1294934   +Neural18_P_DepVar1
1294935   +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural21_P_DepVar1 + Neural22_P_DepVar1 +
Neural18_P_DepVar1 )/3;
1294936   +P_DepVar0 = (
1294937   +Neural21_P_DepVar0 +
1294938   +Neural22_P_DepVar0 +
1294939   +Neural18_P_DepVar0
1294940   +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural21_P_DepVar0 + Neural22_P_DepVar0 +
Neural18_P_DepVar0 )/3;
1294941   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294942   +* Ensmbl7: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Computing Classification Vars;
1294943   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294944   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1294945   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1294946   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1294947   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1294948   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1294949   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1294950   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1294951   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1294952   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1294953   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1294954   +end;
MPRINT(EM_DIAGRAM):   end;
1294955   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1294956   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1294957   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1294958   +end;
MPRINT(EM_DIAGRAM):   end;
1294959   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1294960   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294961   +* Ensmbl7: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Producing Unformatted variable;
1294962   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294963   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1294964   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1294965   +else
1294966   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1294967   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294968   +* Ensmbl7: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Computing _WARN_ Variable;
1294969   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294970   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1294971   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1294972   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1294973   +if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1294973  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1294974   +if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1294974  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1294975   +if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1294975  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1294976   +if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1294976  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1294977   +if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1294977  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1294978   +if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1294978  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1294979   +if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1294979  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1294980   +if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1294980  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1294981   +if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1294981  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1294982   +if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1294982  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1294983   +if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1294983  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1294984   +if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1294984  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1294985   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294986   +* Ensmbl7: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Computing Residual Vars;
1294987   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1294988   +if
1294989   +F_DepVar NE '1'
1294990   +AND F_DepVar NE '0'
1294991   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1294992   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1294993   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1294994   +end;
MPRINT(EM_DIAGRAM):   end;
1294995   +else do;
MPRINT(EM_DIAGRAM):   else do;
1294996   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1294997   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1294998   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1294999   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1295000   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1295001   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1295002   +END;
MPRINT(EM_DIAGRAM):   END;
1295003   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1295004    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL7_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL21_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1295005    quit;
1295006    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1295007    filename emflow
1295007  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring NEURAL21_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295008    *------------------------------------------------------------*;
1295009    * Ensmbl7: Scoring NEURAL21_VALIDATE data;
1295010    *------------------------------------------------------------*;
1295011    data EMWS8.Ensmbl7_VALIDATE
1295012    / view=EMWS8.Ensmbl7_VALIDATE
1295013    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_VALIDATE / view=EMWS8.Ensmbl7_VALIDATE ;
1295014    set EMWS8.Neural21_VALIDATE
1295015    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural21_VALIDATE ;
1295016    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMFLOWSCORE.sas.
1295017   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295018   +* Ensmbl7: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Combine model for DepVar;
1295019   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295020   +* Ensmbl7: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring Code of model 1 of 3;
1295021   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295022   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295023   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1295024   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1295025   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1295026   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295027   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295028   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1295029   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1295030   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1295031   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295032   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295033   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1295034   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1295035   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1295036   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295037   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295038   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1295039   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1295040   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1295041   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295042   +
1295043   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1295044   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1295044  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1295045   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1295046   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1295047   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1295048   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1295049   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1295050   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295051   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1295052   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1295053   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1295054   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295055   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295056   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1295057   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295058   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1295059   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1295060   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1295061   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295062   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1295063   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1295064   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1295065   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295066   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295067   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1295068   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1295069   +* NODE: BINNING;
MPRINT(EM_DIAGRAM):   * NODE: BINNING;
1295070   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295071   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1295072   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1295073   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1295074   +
1295075   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295076   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1295077   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295078   +LABEL GRP_AcceptedCmp5 =
1295079   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1295080   +
1295081   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1295082   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1295083   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1295084   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1295085   +end;
MPRINT(EM_DIAGRAM):   end;
1295086   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1295087   +if (_UFORMAT eq '0'
1295088   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1295089   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1295090   +end;
MPRINT(EM_DIAGRAM):   end;
1295091   +else
1295092   +if (_UFORMAT eq '1'
1295093   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1295094   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1295095   +end;
MPRINT(EM_DIAGRAM):   end;
1295096   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295097   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1295098   +end;
MPRINT(EM_DIAGRAM):   end;
1295099   +end;
MPRINT(EM_DIAGRAM):   end;
1295100   +
1295101   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295102   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1295103   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295104   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1295105   +
1295106   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1295107   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1295108   +end;
MPRINT(EM_DIAGRAM):   end;
1295109   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1295110   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1295111   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1295112   +end;
MPRINT(EM_DIAGRAM):   end;
1295113   +else
1295114   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1295115   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1295116   +end;
MPRINT(EM_DIAGRAM):   end;
1295117   +else
1295118   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1295119   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1295120   +end;
MPRINT(EM_DIAGRAM):   end;
1295121   +else
1295122   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1295123   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1295124   +end;
MPRINT(EM_DIAGRAM):   end;
1295125   +end;
MPRINT(EM_DIAGRAM):   end;
1295126   +
1295127   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295128   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1295129   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295130   +LABEL GRP_Income =
1295131   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1295132   +
1295133   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1295134   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1295135   +end;
MPRINT(EM_DIAGRAM):   end;
1295136   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1295137   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1295138   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1295139   +end;
MPRINT(EM_DIAGRAM):   end;
1295140   +else
1295141   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1295142   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1295143   +end;
MPRINT(EM_DIAGRAM):   end;
1295144   +else
1295145   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1295146   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1295147   +end;
MPRINT(EM_DIAGRAM):   end;
1295148   +else
1295149   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1295150   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1295151   +end;
MPRINT(EM_DIAGRAM):   end;
1295152   +end;
MPRINT(EM_DIAGRAM):   end;
1295153   +
1295154   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295155   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1295156   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295157   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1295158   +
1295159   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1295160   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1295161   +end;
MPRINT(EM_DIAGRAM):   end;
1295162   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1295163   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1295164   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1295165   +end;
MPRINT(EM_DIAGRAM):   end;
1295166   +else
1295167   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1295168   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1295169   +end;
MPRINT(EM_DIAGRAM):   end;
1295170   +else
1295171   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1295172   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1295173   +end;
MPRINT(EM_DIAGRAM):   end;
1295174   +else
1295175   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1295176   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1295177   +end;
MPRINT(EM_DIAGRAM):   end;
1295178   +end;
MPRINT(EM_DIAGRAM):   end;
1295179   +
1295180   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295181   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1295182   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295183   +LABEL GRP_MntFishProducts =
1295184   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1295185   +
1295186   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1295187   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1295188   +end;
MPRINT(EM_DIAGRAM):   end;
1295189   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1295190   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1295191   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1295192   +end;
MPRINT(EM_DIAGRAM):   end;
1295193   +else
1295194   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1295195   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1295196   +end;
MPRINT(EM_DIAGRAM):   end;
1295197   +else
1295198   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1295199   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1295200   +end;
MPRINT(EM_DIAGRAM):   end;
1295201   +else
1295202   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1295203   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1295204   +end;
MPRINT(EM_DIAGRAM):   end;
1295205   +end;
MPRINT(EM_DIAGRAM):   end;
1295206   +
1295207   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295208   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1295209   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295210   +LABEL GRP_MntGoldProds =
1295211   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1295212   +
1295213   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1295214   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1295215   +end;
MPRINT(EM_DIAGRAM):   end;
1295216   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1295217   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1295218   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1295219   +end;
MPRINT(EM_DIAGRAM):   end;
1295220   +else
1295221   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1295222   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1295223   +end;
MPRINT(EM_DIAGRAM):   end;
1295224   +else
1295225   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1295226   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1295227   +end;
MPRINT(EM_DIAGRAM):   end;
1295228   +else
1295229   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1295230   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1295231   +end;
MPRINT(EM_DIAGRAM):   end;
1295232   +end;
MPRINT(EM_DIAGRAM):   end;
1295233   +
1295234   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295235   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1295236   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295237   +LABEL GRP_MntMeatProducts =
1295238   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1295239   +
1295240   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1295241   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1295242   +end;
MPRINT(EM_DIAGRAM):   end;
1295243   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1295244   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1295245   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1295246   +end;
MPRINT(EM_DIAGRAM):   end;
1295247   +else
1295248   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1295249   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1295250   +end;
MPRINT(EM_DIAGRAM):   end;
1295251   +else
1295252   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1295253   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1295254   +end;
MPRINT(EM_DIAGRAM):   end;
1295255   +else
1295256   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1295257   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1295258   +end;
MPRINT(EM_DIAGRAM):   end;
1295259   +end;
MPRINT(EM_DIAGRAM):   end;
1295260   +
1295261   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295262   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1295263   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295264   +LABEL GRP_MntWines =
1295265   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1295266   +
1295267   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1295268   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1295269   +end;
MPRINT(EM_DIAGRAM):   end;
1295270   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1295271   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1295272   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1295273   +end;
MPRINT(EM_DIAGRAM):   end;
1295274   +else
1295275   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1295276   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1295277   +end;
MPRINT(EM_DIAGRAM):   end;
1295278   +else
1295279   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1295280   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1295281   +end;
MPRINT(EM_DIAGRAM):   end;
1295282   +else
1295283   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1295284   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1295285   +end;
MPRINT(EM_DIAGRAM):   end;
1295286   +end;
MPRINT(EM_DIAGRAM):   end;
1295287   +
1295288   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295289   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1295290   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295291   +LABEL GRP_NumCatalogPurchases =
1295292   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1295293   +
1295294   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1295295   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1295296   +end;
MPRINT(EM_DIAGRAM):   end;
1295297   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1295298   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1295299   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1295300   +end;
MPRINT(EM_DIAGRAM):   end;
1295301   +else
1295302   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1295303   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1295304   +end;
MPRINT(EM_DIAGRAM):   end;
1295305   +else
1295306   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1295307   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1295308   +end;
MPRINT(EM_DIAGRAM):   end;
1295309   +else
1295310   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1295311   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1295312   +end;
MPRINT(EM_DIAGRAM):   end;
1295313   +end;
MPRINT(EM_DIAGRAM):   end;
1295314   +
1295315   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295316   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1295317   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295318   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1295319   +
1295320   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1295321   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1295322   +end;
MPRINT(EM_DIAGRAM):   end;
1295323   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1295324   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1295325   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1295326   +end;
MPRINT(EM_DIAGRAM):   end;
1295327   +else
1295328   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1295329   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1295330   +end;
MPRINT(EM_DIAGRAM):   end;
1295331   +else
1295332   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1295333   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1295334   +end;
MPRINT(EM_DIAGRAM):   end;
1295335   +else
1295336   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1295337   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1295338   +end;
MPRINT(EM_DIAGRAM):   end;
1295339   +end;
MPRINT(EM_DIAGRAM):   end;
1295340   +
1295341   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295342   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1295343   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295344   +LABEL GRP_NumWebPurchases =
1295345   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1295346   +
1295347   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1295348   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1295349   +end;
MPRINT(EM_DIAGRAM):   end;
1295350   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1295351   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1295352   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1295353   +end;
MPRINT(EM_DIAGRAM):   end;
1295354   +else
1295355   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1295356   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1295357   +end;
MPRINT(EM_DIAGRAM):   end;
1295358   +else
1295359   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1295360   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1295361   +end;
MPRINT(EM_DIAGRAM):   end;
1295362   +else
1295363   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1295364   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1295365   +end;
MPRINT(EM_DIAGRAM):   end;
1295366   +end;
MPRINT(EM_DIAGRAM):   end;
1295367   +
1295368   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295369   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1295370   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295371   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1295372   +
1295373   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1295374   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1295375   +end;
MPRINT(EM_DIAGRAM):   end;
1295376   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1295377   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1295378   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1295379   +end;
MPRINT(EM_DIAGRAM):   end;
1295380   +else
1295381   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1295382   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1295383   +end;
MPRINT(EM_DIAGRAM):   end;
1295384   +else
1295385   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1295386   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1295387   +end;
MPRINT(EM_DIAGRAM):   end;
1295388   +else
1295389   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1295390   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1295391   +end;
MPRINT(EM_DIAGRAM):   end;
1295392   +end;
MPRINT(EM_DIAGRAM):   end;
1295393   +
1295394   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295395   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1295396   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295397   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1295398   +
1295399   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1295400   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1295401   +end;
MPRINT(EM_DIAGRAM):   end;
1295402   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1295403   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1295404   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1295405   +end;
MPRINT(EM_DIAGRAM):   end;
1295406   +else
1295407   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1295408   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1295409   +end;
MPRINT(EM_DIAGRAM):   end;
1295410   +else
1295411   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1295412   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1295413   +end;
MPRINT(EM_DIAGRAM):   end;
1295414   +else
1295415   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1295416   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1295417   +end;
MPRINT(EM_DIAGRAM):   end;
1295418   +end;
MPRINT(EM_DIAGRAM):   end;
1295419   +
1295420   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295421   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1295422   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295423   +LABEL GRP_Recency =
1295424   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1295425   +
1295426   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1295427   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1295428   +end;
MPRINT(EM_DIAGRAM):   end;
1295429   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1295430   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1295431   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1295432   +end;
MPRINT(EM_DIAGRAM):   end;
1295433   +else
1295434   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1295435   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1295436   +end;
MPRINT(EM_DIAGRAM):   end;
1295437   +else
1295438   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1295439   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1295440   +end;
MPRINT(EM_DIAGRAM):   end;
1295441   +else
1295442   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1295443   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1295444   +end;
MPRINT(EM_DIAGRAM):   end;
1295445   +end;
MPRINT(EM_DIAGRAM):   end;
1295446   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295447   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1295448   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1295449   +* NODE: Neural21;
MPRINT(EM_DIAGRAM):   * NODE: Neural21;
1295450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1295451   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1295452   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1295453   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1295454   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1295455   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1295456   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1295457   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1295458   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1295459   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1295460   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1295461   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1295462   +LENGTH _WARN_ $4
1295463   +      F_DepVar  $ 12
1295464   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1295465   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1295466   +
1295467   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1295468   +
1295469   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1295470   +
1295471   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1295472   +
1295473   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1295474   +
1295475   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1295476   +
1295477   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1295478   +
1295479   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1295480   +
1295481   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1295482   +
1295483   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1295484   +
1295485   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1295486   +
1295487   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1295488   +
1295489   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1295490   +
1295491   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1295492   +
1295493   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1295494   +
1295495   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1295496   +
1295497   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1295498   +
1295499   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1295500   +
1295501   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1295502   +
1295503   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1295504   +
1295505   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1295506   +
1295507   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1295508   +
1295509   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1295510   +
1295511   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1295512   +
1295513   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1295514   +
1295515   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1295516   +
1295517   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1295518   +
1295519   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1295520   +
1295521   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1295522   +
1295523   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1295524   +
1295525   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1295526   +
1295527   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1295528   +
1295529   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1295530   +
1295531   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1295532   +
1295533   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1295534   +
1295535   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1295536   +
1295537   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1295538   +
1295539   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1295540   +
1295541   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1295542   +
1295543   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1295544   +
1295545   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1295546   +
1295547   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1295548   +
1295549   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1295550   +
1295551   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1295552   +
1295553   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1295554   +
1295555   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1295556   +
1295557   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1295558   +
1295559   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1295560   +
1295561   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1295562   +
1295563   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1295564   +
1295565   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1295566   +
1295567   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1295568   +
1295569   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1295570   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1295571   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1295572   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1295573   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295574   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295575   +end;
MPRINT(EM_DIAGRAM):   end;
1295576   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295577   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295578   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1295579   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295580   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1295581   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1295582   +   end;
MPRINT(EM_DIAGRAM):   end;
1295583   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1295584   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1295585   +   end;
MPRINT(EM_DIAGRAM):   end;
1295586   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295587   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1295588   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295589   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295590   +   end;
MPRINT(EM_DIAGRAM):   end;
1295591   +end;
MPRINT(EM_DIAGRAM):   end;
1295592   +
1295593   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1295594   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1295595   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1295596   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1295597   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1295598   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1295599   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295600   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295601   +end;
MPRINT(EM_DIAGRAM):   end;
1295602   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295603   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295604   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1295605   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295606   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1295607   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1295608   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1295609   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1295610   +   end;
MPRINT(EM_DIAGRAM):   end;
1295611   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1295612   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1295613   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1295614   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1295615   +   end;
MPRINT(EM_DIAGRAM):   end;
1295616   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1295617   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1295618   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1295619   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1295620   +   end;
MPRINT(EM_DIAGRAM):   end;
1295621   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1295622   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1295623   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1295624   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1295625   +   end;
MPRINT(EM_DIAGRAM):   end;
1295626   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295627   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1295628   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1295629   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1295630   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295631   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295632   +   end;
MPRINT(EM_DIAGRAM):   end;
1295633   +end;
MPRINT(EM_DIAGRAM):   end;
1295634   +
1295635   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1295636   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1295637   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1295638   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1295639   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1295640   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1295641   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295642   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295643   +end;
MPRINT(EM_DIAGRAM):   end;
1295644   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295645   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295646   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1295647   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295648   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1295649   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1295650   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1295651   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1295652   +   end;
MPRINT(EM_DIAGRAM):   end;
1295653   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1295654   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1295655   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1295656   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1295657   +   end;
MPRINT(EM_DIAGRAM):   end;
1295658   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1295659   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1295660   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1295661   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1295662   +   end;
MPRINT(EM_DIAGRAM):   end;
1295663   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1295664   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1295665   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1295666   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1295667   +   end;
MPRINT(EM_DIAGRAM):   end;
1295668   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295669   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1295670   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1295671   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1295672   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295673   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295674   +   end;
MPRINT(EM_DIAGRAM):   end;
1295675   +end;
MPRINT(EM_DIAGRAM):   end;
1295676   +
1295677   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1295678   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1295679   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1295680   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1295681   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1295682   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1295683   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295684   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295685   +end;
MPRINT(EM_DIAGRAM):   end;
1295686   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295687   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295688   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1295689   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295690   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1295691   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1295692   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1295693   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1295694   +   end;
MPRINT(EM_DIAGRAM):   end;
1295695   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1295696   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1295697   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1295698   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1295699   +   end;
MPRINT(EM_DIAGRAM):   end;
1295700   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1295701   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1295702   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1295703   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1295704   +   end;
MPRINT(EM_DIAGRAM):   end;
1295705   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1295706   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1295707   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1295708   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1295709   +   end;
MPRINT(EM_DIAGRAM):   end;
1295710   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295711   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1295712   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1295713   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1295714   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295715   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295716   +   end;
MPRINT(EM_DIAGRAM):   end;
1295717   +end;
MPRINT(EM_DIAGRAM):   end;
1295718   +
1295719   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1295720   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1295721   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1295722   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1295723   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1295724   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1295725   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295726   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295727   +end;
MPRINT(EM_DIAGRAM):   end;
1295728   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295729   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295730   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1295731   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295732   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1295733   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1295734   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1295735   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1295736   +   end;
MPRINT(EM_DIAGRAM):   end;
1295737   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1295738   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1295739   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1295740   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1295741   +   end;
MPRINT(EM_DIAGRAM):   end;
1295742   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1295743   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1295744   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1295745   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1295746   +   end;
MPRINT(EM_DIAGRAM):   end;
1295747   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1295748   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1295749   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1295750   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1295751   +   end;
MPRINT(EM_DIAGRAM):   end;
1295752   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295753   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1295754   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1295755   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1295756   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295757   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295758   +   end;
MPRINT(EM_DIAGRAM):   end;
1295759   +end;
MPRINT(EM_DIAGRAM):   end;
1295760   +
1295761   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1295762   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1295763   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1295764   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1295765   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1295766   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1295767   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295768   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295769   +end;
MPRINT(EM_DIAGRAM):   end;
1295770   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295771   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295772   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1295773   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295774   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1295775   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1295776   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1295777   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1295778   +   end;
MPRINT(EM_DIAGRAM):   end;
1295779   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1295780   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1295781   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1295782   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1295783   +   end;
MPRINT(EM_DIAGRAM):   end;
1295784   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1295785   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1295786   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1295787   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1295788   +   end;
MPRINT(EM_DIAGRAM):   end;
1295789   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1295790   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1295791   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1295792   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1295793   +   end;
MPRINT(EM_DIAGRAM):   end;
1295794   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295795   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1295796   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1295797   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1295798   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295799   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295800   +   end;
MPRINT(EM_DIAGRAM):   end;
1295801   +end;
MPRINT(EM_DIAGRAM):   end;
1295802   +
1295803   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1295804   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1295805   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1295806   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1295807   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1295808   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1295809   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295810   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295811   +end;
MPRINT(EM_DIAGRAM):   end;
1295812   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295813   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295814   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1295815   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295816   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1295817   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1295818   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1295819   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1295820   +   end;
MPRINT(EM_DIAGRAM):   end;
1295821   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1295822   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1295823   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1295824   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1295825   +   end;
MPRINT(EM_DIAGRAM):   end;
1295826   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1295827   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1295828   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1295829   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1295830   +   end;
MPRINT(EM_DIAGRAM):   end;
1295831   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1295832   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1295833   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1295834   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1295835   +   end;
MPRINT(EM_DIAGRAM):   end;
1295836   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295837   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1295838   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1295839   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1295840   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295841   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295842   +   end;
MPRINT(EM_DIAGRAM):   end;
1295843   +end;
MPRINT(EM_DIAGRAM):   end;
1295844   +
1295845   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1295846   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1295847   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1295848   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1295849   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1295850   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1295851   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295852   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295853   +end;
MPRINT(EM_DIAGRAM):   end;
1295854   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295855   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295856   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1295857   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295858   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1295859   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1295860   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1295861   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1295862   +   end;
MPRINT(EM_DIAGRAM):   end;
1295863   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1295864   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1295865   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1295866   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1295867   +   end;
MPRINT(EM_DIAGRAM):   end;
1295868   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1295869   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1295870   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1295871   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1295872   +   end;
MPRINT(EM_DIAGRAM):   end;
1295873   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1295874   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1295875   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1295876   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1295877   +   end;
MPRINT(EM_DIAGRAM):   end;
1295878   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295879   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1295880   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1295881   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1295882   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295883   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295884   +   end;
MPRINT(EM_DIAGRAM):   end;
1295885   +end;
MPRINT(EM_DIAGRAM):   end;
1295886   +
1295887   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1295888   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1295889   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1295890   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1295891   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1295892   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295893   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295894   +end;
MPRINT(EM_DIAGRAM):   end;
1295895   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295896   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295897   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1295898   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295899   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1295900   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1295901   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1295902   +   end;
MPRINT(EM_DIAGRAM):   end;
1295903   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1295904   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1295905   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1295906   +   end;
MPRINT(EM_DIAGRAM):   end;
1295907   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1295908   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1295909   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1295910   +   end;
MPRINT(EM_DIAGRAM):   end;
1295911   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295912   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1295913   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1295914   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295915   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295916   +   end;
MPRINT(EM_DIAGRAM):   end;
1295917   +end;
MPRINT(EM_DIAGRAM):   end;
1295918   +
1295919   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1295920   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1295921   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1295922   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1295923   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1295924   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1295925   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295926   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295927   +end;
MPRINT(EM_DIAGRAM):   end;
1295928   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295929   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295930   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1295931   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295932   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1295933   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1295934   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1295935   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1295936   +   end;
MPRINT(EM_DIAGRAM):   end;
1295937   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1295938   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1295939   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1295940   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1295941   +   end;
MPRINT(EM_DIAGRAM):   end;
1295942   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1295943   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1295944   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1295945   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1295946   +   end;
MPRINT(EM_DIAGRAM):   end;
1295947   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1295948   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1295949   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1295950   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1295951   +   end;
MPRINT(EM_DIAGRAM):   end;
1295952   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295953   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1295954   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1295955   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1295956   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295957   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295958   +   end;
MPRINT(EM_DIAGRAM):   end;
1295959   +end;
MPRINT(EM_DIAGRAM):   end;
1295960   +
1295961   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1295962   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1295963   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1295964   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1295965   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1295966   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1295967   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1295968   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1295969   +end;
MPRINT(EM_DIAGRAM):   end;
1295970   +else do;
MPRINT(EM_DIAGRAM):   else do;
1295971   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1295972   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1295973   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1295974   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1295975   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1295976   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1295977   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1295978   +   end;
MPRINT(EM_DIAGRAM):   end;
1295979   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1295980   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1295981   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1295982   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1295983   +   end;
MPRINT(EM_DIAGRAM):   end;
1295984   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1295985   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1295986   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1295987   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1295988   +   end;
MPRINT(EM_DIAGRAM):   end;
1295989   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1295990   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1295991   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1295992   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1295993   +   end;
MPRINT(EM_DIAGRAM):   end;
1295994   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1295995   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1295996   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1295997   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1295998   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1295999   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296000   +   end;
MPRINT(EM_DIAGRAM):   end;
1296001   +end;
MPRINT(EM_DIAGRAM):   end;
1296002   +
1296003   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1296004   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1296005   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1296006   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1296007   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1296008   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1296009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296011   +end;
MPRINT(EM_DIAGRAM):   end;
1296012   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296013   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296014   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1296015   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296016   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1296017   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1296018   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1296019   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1296020   +   end;
MPRINT(EM_DIAGRAM):   end;
1296021   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1296022   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1296023   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1296024   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1296025   +   end;
MPRINT(EM_DIAGRAM):   end;
1296026   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1296027   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1296028   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1296029   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1296030   +   end;
MPRINT(EM_DIAGRAM):   end;
1296031   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1296032   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1296033   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1296034   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1296035   +   end;
MPRINT(EM_DIAGRAM):   end;
1296036   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296037   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1296038   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1296039   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1296040   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296041   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296042   +   end;
MPRINT(EM_DIAGRAM):   end;
1296043   +end;
MPRINT(EM_DIAGRAM):   end;
1296044   +
1296045   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1296046   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1296047   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1296048   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1296049   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1296050   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1296051   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296052   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296053   +end;
MPRINT(EM_DIAGRAM):   end;
1296054   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296055   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296056   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1296057   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296058   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1296059   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1296060   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1296061   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1296062   +   end;
MPRINT(EM_DIAGRAM):   end;
1296063   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1296064   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1296065   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1296066   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1296067   +   end;
MPRINT(EM_DIAGRAM):   end;
1296068   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1296069   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1296070   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1296071   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1296072   +   end;
MPRINT(EM_DIAGRAM):   end;
1296073   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1296074   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1296075   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1296076   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1296077   +   end;
MPRINT(EM_DIAGRAM):   end;
1296078   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296079   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1296080   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1296081   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1296082   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296083   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296084   +   end;
MPRINT(EM_DIAGRAM):   end;
1296085   +end;
MPRINT(EM_DIAGRAM):   end;
1296086   +
1296087   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1296088   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1296089   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1296090   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1296091   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1296092   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1296093   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296094   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296095   +end;
MPRINT(EM_DIAGRAM):   end;
1296096   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296097   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296098   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1296099   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296100   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1296101   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1296102   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1296103   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1296104   +   end;
MPRINT(EM_DIAGRAM):   end;
1296105   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1296106   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1296107   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1296108   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1296109   +   end;
MPRINT(EM_DIAGRAM):   end;
1296110   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1296111   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1296112   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1296113   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1296114   +   end;
MPRINT(EM_DIAGRAM):   end;
1296115   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1296116   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1296117   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1296118   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1296119   +   end;
MPRINT(EM_DIAGRAM):   end;
1296120   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296121   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1296122   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1296123   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1296124   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296125   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296126   +   end;
MPRINT(EM_DIAGRAM):   end;
1296127   +end;
MPRINT(EM_DIAGRAM):   end;
1296128   +
1296129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296130   +*** Checking missing input Interval
1296131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1296132   +
1296133   +IF NMISS(
1296134   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1296135   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1296136   +
1296137   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296138   +END;
MPRINT(EM_DIAGRAM):   END;
1296139   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296140   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1296141   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296142   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1296143   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1296144   +END;
MPRINT(EM_DIAGRAM):   END;
1296145   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1296146   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1296147   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1296148   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1296149   +END;
MPRINT(EM_DIAGRAM):   END;
1296150   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296151   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1296152   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296153   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296154   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1296155   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296156   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1296157   +   H11  =      0.0668146440452 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.0668146440452 * S_Year_Birth ;
1296158   +   H12  =     0.02918236951724 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.02918236951724 * S_Year_Birth ;
1296159   +   H13  =     0.52122974180208 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.52122974180208 * S_Year_Birth ;
1296160   +   H14  =     -0.1823800721103 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.1823800721103 * S_Year_Birth ;
1296161   +   H11  = H11  +    -0.48347630033708 * GRP_AcceptedCmp52
1296162   +          +     0.37100635990339 * GRP_Frq2  +     0.04377799127913 * GRP_Frq3
1296163   +          +     -0.1974477050613 * GRP_Frq4  +     0.10700887225506 *
1296164   +        GRP_Income2  +      0.3291591268929 * GRP_Income3
1296165   +          +     0.00612929517663 * GRP_Income4  +    -0.23329153390557 *
1296166   +        GRP_Mnt2  +    -0.08800204437411 * GRP_Mnt3  +    -0.08445529701198 *
1296167   +        GRP_Mnt4  +     0.28673732624133 * GRP_MntFishProducts2
1296168   +          +    -0.14978605827752 * GRP_MntFishProducts3
1296169   +          +     0.22642470616542 * GRP_MntFishProducts4
1296170   +          +     0.07604404821672 * GRP_MntGoldProds2
1296171   +          +     0.04745212568332 * GRP_MntGoldProds3
1296172   +          +    -0.10028215217028 * GRP_MntGoldProds4
1296173   +          +    -0.07377682497053 * GRP_MntMeatProducts2
1296174   +          +    -0.09960214357487 * GRP_MntMeatProducts3
1296175   +          +    -0.25438120582859 * GRP_MntMeatProducts4
1296176   +          +     0.42639299324809 * GRP_MntWines2  +     0.31089292559786 *
1296177   +        GRP_MntWines3  +    -0.26826041457934 * GRP_MntWines4
1296178   +          +    -0.53742609478771 * GRP_NumCatalogPurchases3
1296179   +          +    -0.03023603128161 * GRP_NumCatalogPurchases4
1296180   +          +    -0.37743946252805 * GRP_NumDistPurchases2
1296181   +          +    -0.01872647257623 * GRP_NumDistPurchases3
1296182   +          +    -0.31993024737958 * GRP_NumDistPurchases4
1296183   +          +    -0.11078713164327 * GRP_NumWebPurchases2
1296184   +          +     0.24754701690398 * GRP_NumWebPurchases3
1296185   +          +     0.01530465573539 * GRP_NumWebPurchases4
1296186   +          +    -0.17630256491744 * GRP_RFMstat2  +    -0.47929093118323 *
1296187   +        GRP_RFMstat3  +     0.26729201021061 * GRP_RFMstat4
1296188   +          +    -0.20197995708067 * GRP_RMntFrq2  +    -0.07138949090838 *
1296189   +        GRP_RMntFrq3  +    -0.08653988697814 * GRP_RMntFrq4
1296190   +          +     1.10790516734526 * GRP_Recency2  +     0.22440369463671 *
1296191   +        GRP_Recency3  +    -0.44624012521308 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.48347630033708 * GRP_AcceptedCmp52 + 0.37100635990339 *
GRP_Frq2 + 0.04377799127913 * GRP_Frq3 + -0.1974477050613 * GRP_Frq4 + 0.10700887225506 *
GRP_Income2 + 0.3291591268929 * GRP_Income3 + 0.00612929517663 * GRP_Income4 +
-0.23329153390557 * GRP_Mnt2 + -0.08800204437411 * GRP_Mnt3 + -0.08445529701198 * GRP_Mnt4 +
0.28673732624133 * GRP_MntFishProducts2 + -0.14978605827752 * GRP_MntFishProducts3 +
0.22642470616542 * GRP_MntFishProducts4 + 0.07604404821672 * GRP_MntGoldProds2 +
0.04745212568332 * GRP_MntGoldProds3 + -0.10028215217028 * GRP_MntGoldProds4 +
-0.07377682497053 * GRP_MntMeatProducts2 + -0.09960214357487 * GRP_MntMeatProducts3 +
-0.25438120582859 * GRP_MntMeatProducts4 + 0.42639299324809 * GRP_MntWines2 + 0.31089292559786
* GRP_MntWines3 + -0.26826041457934 * GRP_MntWines4 + -0.53742609478771 *
GRP_NumCatalogPurchases3 + -0.03023603128161 * GRP_NumCatalogPurchases4 + -0.37743946252805 *
GRP_NumDistPurchases2 + -0.01872647257623 * GRP_NumDistPurchases3 + -0.31993024737958 *
GRP_NumDistPurchases4 + -0.11078713164327 * GRP_NumWebPurchases2 + 0.24754701690398 *
GRP_NumWebPurchases3 + 0.01530465573539 * GRP_NumWebPurchases4 + -0.17630256491744 *
GRP_RFMstat2 + -0.47929093118323 * GRP_RFMstat3 + 0.26729201021061 * GRP_RFMstat4 +
-0.20197995708067 * GRP_RMntFrq2 + -0.07138949090838 * GRP_RMntFrq3 + -0.08653988697814 *
GRP_RMntFrq4 + 1.10790516734526 * GRP_Recency2 + 0.22440369463671 * GRP_Recency3 +
-0.44624012521308 * GRP_Recency4 ;
1296192   +   H12  = H12  +    -0.39171353947494 * GRP_AcceptedCmp52
1296193   +          +     0.47539355981113 * GRP_Frq2  +     0.13865083322043 * GRP_Frq3
1296194   +          +     0.07826446095659 * GRP_Frq4  +     0.08299165408218 *
1296195   +        GRP_Income2  +     0.19385348399904 * GRP_Income3
1296196   +          +     -0.4686130167393 * GRP_Income4  +     0.07036992149948 *
1296197   +        GRP_Mnt2  +     0.03891677493503 * GRP_Mnt3  +     0.07820077346387 *
1296198   +        GRP_Mnt4  +     0.36400126236983 * GRP_MntFishProducts2
1296199   +          +    -0.12626287803422 * GRP_MntFishProducts3
1296200   +          +    -0.42885022606866 * GRP_MntFishProducts4
1296201   +          +    -0.08312331608509 * GRP_MntGoldProds2
1296202   +          +    -0.20061238652989 * GRP_MntGoldProds3
1296203   +          +      0.2540651659901 * GRP_MntGoldProds4
1296204   +          +    -0.05377938516186 * GRP_MntMeatProducts2
1296205   +          +    -0.20960578757846 * GRP_MntMeatProducts3
1296206   +          +     0.40616704937625 * GRP_MntMeatProducts4
1296207   +          +     0.10444770584156 * GRP_MntWines2  +     0.28632714955895 *
1296208   +        GRP_MntWines3  +     -0.0752487603973 * GRP_MntWines4
1296209   +          +    -0.34375303246386 * GRP_NumCatalogPurchases3
1296210   +          +     0.09580710843179 * GRP_NumCatalogPurchases4
1296211   +          +    -0.07273864038222 * GRP_NumDistPurchases2
1296212   +          +     0.10966715611059 * GRP_NumDistPurchases3
1296213   +          +      -0.043035493739 * GRP_NumDistPurchases4
1296214   +          +    -0.11780256604927 * GRP_NumWebPurchases2
1296215   +          +    -0.18165047164828 * GRP_NumWebPurchases3
1296216   +          +     0.26936545488609 * GRP_NumWebPurchases4
1296217   +          +    -0.06874165804548 * GRP_RFMstat2  +     0.09298117986488 *
1296218   +        GRP_RFMstat3  +    -0.24177720125931 * GRP_RFMstat4
1296219   +          +    -0.06280623207978 * GRP_RMntFrq2  +     0.01871815739589 *
1296220   +        GRP_RMntFrq3  +    -0.14308267957716 * GRP_RMntFrq4
1296221   +          +     0.34467425877566 * GRP_Recency2  +     0.05820913643645 *
1296222   +        GRP_Recency3  +     -0.0454148085012 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.39171353947494 * GRP_AcceptedCmp52 + 0.47539355981113 *
GRP_Frq2 + 0.13865083322043 * GRP_Frq3 + 0.07826446095659 * GRP_Frq4 + 0.08299165408218 *
GRP_Income2 + 0.19385348399904 * GRP_Income3 + -0.4686130167393 * GRP_Income4 +
0.07036992149948 * GRP_Mnt2 + 0.03891677493503 * GRP_Mnt3 + 0.07820077346387 * GRP_Mnt4 +
0.36400126236983 * GRP_MntFishProducts2 + -0.12626287803422 * GRP_MntFishProducts3 +
-0.42885022606866 * GRP_MntFishProducts4 + -0.08312331608509 * GRP_MntGoldProds2 +
-0.20061238652989 * GRP_MntGoldProds3 + 0.2540651659901 * GRP_MntGoldProds4 +
-0.05377938516186 * GRP_MntMeatProducts2 + -0.20960578757846 * GRP_MntMeatProducts3 +
0.40616704937625 * GRP_MntMeatProducts4 + 0.10444770584156 * GRP_MntWines2 + 0.28632714955895
* GRP_MntWines3 + -0.0752487603973 * GRP_MntWines4 + -0.34375303246386 *
GRP_NumCatalogPurchases3 + 0.09580710843179 * GRP_NumCatalogPurchases4 + -0.07273864038222 *
GRP_NumDistPurchases2 + 0.10966715611059 * GRP_NumDistPurchases3 + -0.043035493739 *
GRP_NumDistPurchases4 + -0.11780256604927 * GRP_NumWebPurchases2 + -0.18165047164828 *
GRP_NumWebPurchases3 + 0.26936545488609 * GRP_NumWebPurchases4 + -0.06874165804548 *
GRP_RFMstat2 + 0.09298117986488 * GRP_RFMstat3 + -0.24177720125931 * GRP_RFMstat4 +
-0.06280623207978 * GRP_RMntFrq2 + 0.01871815739589 * GRP_RMntFrq3 + -0.14308267957716 *
GRP_RMntFrq4 + 0.34467425877566 * GRP_Recency2 + 0.05820913643645 * GRP_Recency3 +
-0.0454148085012 * GRP_Recency4 ;
1296223   +   H13  = H13  +    -0.08768819217047 * GRP_AcceptedCmp52
1296224   +          +     0.44895652806962 * GRP_Frq2  +      0.3800586670059 * GRP_Frq3
1296225   +          +    -0.07849333722318 * GRP_Frq4  +     0.61398939980043 *
1296226   +        GRP_Income2  +     0.47732933105902 * GRP_Income3
1296227   +          +    -0.46767598050409 * GRP_Income4  +     0.00119742402812 *
1296228   +        GRP_Mnt2  +     0.28434487319801 * GRP_Mnt3  +    -0.16337373090226 *
1296229   +        GRP_Mnt4  +     0.24731982804653 * GRP_MntFishProducts2
1296230   +          +     0.07001619920815 * GRP_MntFishProducts3
1296231   +          +     0.07735498521359 * GRP_MntFishProducts4
1296232   +          +    -0.15884098938162 * GRP_MntGoldProds2
1296233   +          +    -0.27657428867783 * GRP_MntGoldProds3
1296234   +          +     -0.1812542301124 * GRP_MntGoldProds4
1296235   +          +    -0.05299867036647 * GRP_MntMeatProducts2
1296236   +          +     0.00010942539908 * GRP_MntMeatProducts3
1296237   +          +     0.03587382246671 * GRP_MntMeatProducts4
1296238   +          +      0.1756484217323 * GRP_MntWines2  +     0.00289944116976 *
1296239   +        GRP_MntWines3  +    -0.03752905583429 * GRP_MntWines4
1296240   +          +     0.14681010085531 * GRP_NumCatalogPurchases3
1296241   +          +    -0.23177792190553 * GRP_NumCatalogPurchases4
1296242   +          +      -0.481887498986 * GRP_NumDistPurchases2
1296243   +          +    -0.09943718589693 * GRP_NumDistPurchases3
1296244   +          +     0.21760620991618 * GRP_NumDistPurchases4
1296245   +          +    -0.09523799103665 * GRP_NumWebPurchases2
1296246   +          +     0.06245025753157 * GRP_NumWebPurchases3
1296247   +          +     0.11312469123111 * GRP_NumWebPurchases4
1296248   +          +     -0.0156924842698 * GRP_RFMstat2  +     0.04329307564553 *
1296249   +        GRP_RFMstat3  +    -0.06522539538042 * GRP_RFMstat4
1296250   +          +     0.03130432577469 * GRP_RMntFrq2  +     0.15385182155627 *
1296251   +        GRP_RMntFrq3  +    -0.05116322369837 * GRP_RMntFrq4
1296252   +          +     0.52385840277978 * GRP_Recency2  +     0.44348058106283 *
1296253   +        GRP_Recency3  +    -0.30003743891847 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08768819217047 * GRP_AcceptedCmp52 + 0.44895652806962 *
GRP_Frq2 + 0.3800586670059 * GRP_Frq3 + -0.07849333722318 * GRP_Frq4 + 0.61398939980043 *
GRP_Income2 + 0.47732933105902 * GRP_Income3 + -0.46767598050409 * GRP_Income4 +
0.00119742402812 * GRP_Mnt2 + 0.28434487319801 * GRP_Mnt3 + -0.16337373090226 * GRP_Mnt4 +
0.24731982804653 * GRP_MntFishProducts2 + 0.07001619920815 * GRP_MntFishProducts3 +
0.07735498521359 * GRP_MntFishProducts4 + -0.15884098938162 * GRP_MntGoldProds2 +
-0.27657428867783 * GRP_MntGoldProds3 + -0.1812542301124 * GRP_MntGoldProds4 +
-0.05299867036647 * GRP_MntMeatProducts2 + 0.00010942539908 * GRP_MntMeatProducts3 +
0.03587382246671 * GRP_MntMeatProducts4 + 0.1756484217323 * GRP_MntWines2 + 0.00289944116976 *
GRP_MntWines3 + -0.03752905583429 * GRP_MntWines4 + 0.14681010085531 *
GRP_NumCatalogPurchases3 + -0.23177792190553 * GRP_NumCatalogPurchases4 + -0.481887498986 *
GRP_NumDistPurchases2 + -0.09943718589693 * GRP_NumDistPurchases3 + 0.21760620991618 *
GRP_NumDistPurchases4 + -0.09523799103665 * GRP_NumWebPurchases2 + 0.06245025753157 *
GRP_NumWebPurchases3 + 0.11312469123111 * GRP_NumWebPurchases4 + -0.0156924842698 *
GRP_RFMstat2 + 0.04329307564553 * GRP_RFMstat3 + -0.06522539538042 * GRP_RFMstat4 +
0.03130432577469 * GRP_RMntFrq2 + 0.15385182155627 * GRP_RMntFrq3 + -0.05116322369837 *
GRP_RMntFrq4 + 0.52385840277978 * GRP_Recency2 + 0.44348058106283 * GRP_Recency3 +
-0.30003743891847 * GRP_Recency4 ;
1296254   +   H14  = H14  +    -0.30891588421078 * GRP_AcceptedCmp52
1296255   +          +     0.10101143238536 * GRP_Frq2  +    -0.03148220138998 * GRP_Frq3
1296256   +          +     0.09807803608029 * GRP_Frq4  +     0.11294471318052 *
1296257   +        GRP_Income2  +      0.0433560034099 * GRP_Income3
1296258   +          +    -0.35503487261838 * GRP_Income4  +     0.15199410100967 *
1296259   +        GRP_Mnt2  +    -0.15675008677561 * GRP_Mnt3  +    -0.06110606567063 *
1296260   +        GRP_Mnt4  +     0.10272197664106 * GRP_MntFishProducts2
1296261   +          +     0.33369645018356 * GRP_MntFishProducts3
1296262   +          +     0.08427214551103 * GRP_MntFishProducts4
1296263   +          +    -0.36187933889617 * GRP_MntGoldProds2
1296264   +          +      0.1522584097588 * GRP_MntGoldProds3
1296265   +          +    -0.18069803129722 * GRP_MntGoldProds4
1296266   +          +    -0.39829328143793 * GRP_MntMeatProducts2
1296267   +          +     0.00511939388608 * GRP_MntMeatProducts3
1296268   +          +      0.0518722466688 * GRP_MntMeatProducts4
1296269   +          +     0.10413724420858 * GRP_MntWines2  +    -0.30183392073068 *
1296270   +        GRP_MntWines3  +    -0.40546180997599 * GRP_MntWines4
1296271   +          +    -0.73564355192687 * GRP_NumCatalogPurchases3
1296272   +          +     0.04239157662699 * GRP_NumCatalogPurchases4
1296273   +          +    -0.61448773428482 * GRP_NumDistPurchases2
1296274   +          +    -0.10817170519054 * GRP_NumDistPurchases3
1296275   +          +    -0.00883878051452 * GRP_NumDistPurchases4
1296276   +          +      0.0024401108853 * GRP_NumWebPurchases2
1296277   +          +     -0.1066188825276 * GRP_NumWebPurchases3
1296278   +          +     -0.2845728776007 * GRP_NumWebPurchases4
1296279   +          +    -0.46846387193519 * GRP_RFMstat2  +     0.01548835288752 *
1296280   +        GRP_RFMstat3  +     0.29056719482503 * GRP_RFMstat4
1296281   +          +     0.13283388675843 * GRP_RMntFrq2  +    -0.01179035894062 *
1296282   +        GRP_RMntFrq3  +    -0.40979674551139 * GRP_RMntFrq4
1296283   +          +     0.39674687653317 * GRP_Recency2  +     0.48674783005161 *
1296284   +        GRP_Recency3  +     0.19384397786172 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30891588421078 * GRP_AcceptedCmp52 + 0.10101143238536 *
GRP_Frq2 + -0.03148220138998 * GRP_Frq3 + 0.09807803608029 * GRP_Frq4 + 0.11294471318052 *
GRP_Income2 + 0.0433560034099 * GRP_Income3 + -0.35503487261838 * GRP_Income4 +
0.15199410100967 * GRP_Mnt2 + -0.15675008677561 * GRP_Mnt3 + -0.06110606567063 * GRP_Mnt4 +
0.10272197664106 * GRP_MntFishProducts2 + 0.33369645018356 * GRP_MntFishProducts3 +
0.08427214551103 * GRP_MntFishProducts4 + -0.36187933889617 * GRP_MntGoldProds2 +
0.1522584097588 * GRP_MntGoldProds3 + -0.18069803129722 * GRP_MntGoldProds4 +
-0.39829328143793 * GRP_MntMeatProducts2 + 0.00511939388608 * GRP_MntMeatProducts3 +
0.0518722466688 * GRP_MntMeatProducts4 + 0.10413724420858 * GRP_MntWines2 + -0.30183392073068
* GRP_MntWines3 + -0.40546180997599 * GRP_MntWines4 + -0.73564355192687 *
GRP_NumCatalogPurchases3 + 0.04239157662699 * GRP_NumCatalogPurchases4 + -0.61448773428482 *
GRP_NumDistPurchases2 + -0.10817170519054 * GRP_NumDistPurchases3 + -0.00883878051452 *
GRP_NumDistPurchases4 + 0.0024401108853 * GRP_NumWebPurchases2 + -0.1066188825276 *
GRP_NumWebPurchases3 + -0.2845728776007 * GRP_NumWebPurchases4 + -0.46846387193519 *
GRP_RFMstat2 + 0.01548835288752 * GRP_RFMstat3 + 0.29056719482503 * GRP_RFMstat4 +
0.13283388675843 * GRP_RMntFrq2 + -0.01179035894062 * GRP_RMntFrq3 + -0.40979674551139 *
GRP_RMntFrq4 + 0.39674687653317 * GRP_Recency2 + 0.48674783005161 * GRP_Recency3 +
0.19384397786172 * GRP_Recency4 ;
1296285   +   H11  =    -1.18381596942405 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18381596942405 + H11 ;
1296286   +   H12  =     0.86336963287203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.86336963287203 + H12 ;
1296287   +   H13  =     -0.9724199391604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.9724199391604 + H13 ;
1296288   +   H14  =     1.35533016839911 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.35533016839911 + H14 ;
1296289   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1296290   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1296291   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1296292   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1296293   +END;
MPRINT(EM_DIAGRAM):   END;
1296294   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1296295   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1296296   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1296297   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1296298   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1296299   +END;
MPRINT(EM_DIAGRAM):   END;
1296300   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296301   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1296302   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296303   +
1296304   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1296305   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1296306   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1296307   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1296308   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1296309   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296310   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1296311   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1296312   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1296313   +end;
MPRINT(EM_DIAGRAM):   end;
1296314   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296315   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1296316   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1296317   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1296318   +   end;
MPRINT(EM_DIAGRAM):   end;
1296319   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1296320   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1296321   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1296322   +   end;
MPRINT(EM_DIAGRAM):   end;
1296323   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296324   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1296325   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1296326   +   end;
MPRINT(EM_DIAGRAM):   end;
1296327   +end;
MPRINT(EM_DIAGRAM):   end;
1296328   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1296329   +   P_DepVar1  =     2.12648206014408 * H11  +      1.4206902210932 * H12
1296330   +          +     1.21164854880393 * H13  +      1.5803543453738 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.12648206014408 * H11 + 1.4206902210932 * H12 +
1.21164854880393 * H13 + 1.5803543453738 * H14 ;
1296331   +   P_DepVar1  =    -1.66515506353131 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66515506353131 + P_DepVar1 ;
1296332   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1296333   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1296334   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1296335   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1296336   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1296337   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1296338   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1296339   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1296340   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1296341   +END;
MPRINT(EM_DIAGRAM):   END;
1296342   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1296343   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1296344   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1296345   +END;
MPRINT(EM_DIAGRAM):   END;
1296346   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1296347   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1296348   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1296349   +END;
MPRINT(EM_DIAGRAM):   END;
1296350   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1296351   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1296352   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1296353   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1296354   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1296355   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1296356   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1296357   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296358   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1296359   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1296360   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1296361   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1296362   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1296363   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1296364   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1296365   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1296366   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1296367   +END;
MPRINT(EM_DIAGRAM):   END;
1296368   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1296369   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1296370   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1296371   +drop
1296372   +H11
1296373   +H12
1296374   +H13
1296375   +H14
1296376   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1296377   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1296378   +* Renaming variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural21;
1296379   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296380   +* Renaming Posterior variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural21;
1296381   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296382   +drop Neural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar1;
1296383   +Neural21_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar1 = P_DepVar1;
1296384   +drop Neural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar0;
1296385   +Neural21_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar0 = P_DepVar0;
1296386   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296387   +* Renaming _WARN_ variable for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural21;
1296388   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296389   +length Neural21_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural21_WARN_ $4;
1296390   +drop Neural21_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural21_WARN_;
1296391   +Neural21_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural21_WARN_ = _WARN_;
1296392   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296393   +* Ensmbl7: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring Code of model 2 of 3;
1296394   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296395   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296396   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1296397   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1296398   +* NODE: Neural22;
MPRINT(EM_DIAGRAM):   * NODE: Neural22;
1296399   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1296400   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1296401   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1296402   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1296403   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1296404   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1296405   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1296406   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1296407   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1296408   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1296409   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1296410   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1296411   +LENGTH _WARN_ $4
1296412   +      F_DepVar  $ 12
1296413   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1296414   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1296415   +
1296416   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1296417   +
1296418   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1296419   +
1296420   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1296421   +
1296422   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1296423   +
1296424   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1296425   +
1296426   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1296427   +
1296428   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1296429   +
1296430   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1296431   +
1296432   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1296433   +
1296434   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1296435   +
1296436   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1296437   +
1296438   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1296439   +
1296440   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1296441   +
1296442   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1296443   +
1296444   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1296445   +
1296446   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1296447   +
1296448   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1296449   +
1296450   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1296451   +
1296452   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1296453   +
1296454   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1296455   +
1296456   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1296457   +
1296458   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1296459   +
1296460   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1296461   +
1296462   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1296463   +
1296464   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1296465   +
1296466   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1296467   +
1296468   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1296469   +
1296470   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1296471   +
1296472   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1296473   +
1296474   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1296475   +
1296476   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1296477   +
1296478   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1296479   +
1296480   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1296481   +
1296482   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1296483   +
1296484   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1296485   +
1296486   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1296487   +
1296488   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1296489   +
1296490   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1296491   +
1296492   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1296493   +
1296494   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1296495   +
1296496   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1296497   +
1296498   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1296499   +
1296500   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1296501   +
1296502   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1296503   +
1296504   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1296505   +
1296506   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1296507   +
1296508   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1296509   +
1296510   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1296511   +
1296512   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1296513   +
1296514   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1296515   +
1296516   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1296517   +
1296518   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1296519   +
1296520   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1296521   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1296522   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1296523   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1296524   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296525   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296526   +end;
MPRINT(EM_DIAGRAM):   end;
1296527   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296528   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296529   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1296530   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296531   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1296532   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1296533   +   end;
MPRINT(EM_DIAGRAM):   end;
1296534   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1296535   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1296536   +   end;
MPRINT(EM_DIAGRAM):   end;
1296537   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296538   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1296539   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296540   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296541   +   end;
MPRINT(EM_DIAGRAM):   end;
1296542   +end;
MPRINT(EM_DIAGRAM):   end;
1296543   +
1296544   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1296545   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1296546   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1296547   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1296548   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1296549   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1296550   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296551   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296552   +end;
MPRINT(EM_DIAGRAM):   end;
1296553   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296554   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296555   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1296556   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296557   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1296558   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1296559   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1296560   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1296561   +   end;
MPRINT(EM_DIAGRAM):   end;
1296562   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1296563   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1296564   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1296565   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1296566   +   end;
MPRINT(EM_DIAGRAM):   end;
1296567   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1296568   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1296569   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1296570   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1296571   +   end;
MPRINT(EM_DIAGRAM):   end;
1296572   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1296573   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1296574   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1296575   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1296576   +   end;
MPRINT(EM_DIAGRAM):   end;
1296577   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296578   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1296579   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1296580   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1296581   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296582   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296583   +   end;
MPRINT(EM_DIAGRAM):   end;
1296584   +end;
MPRINT(EM_DIAGRAM):   end;
1296585   +
1296586   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1296587   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1296588   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1296589   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1296590   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1296591   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1296592   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296593   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296594   +end;
MPRINT(EM_DIAGRAM):   end;
1296595   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296596   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296597   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1296598   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296599   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1296600   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1296601   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1296602   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1296603   +   end;
MPRINT(EM_DIAGRAM):   end;
1296604   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1296605   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1296606   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1296607   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1296608   +   end;
MPRINT(EM_DIAGRAM):   end;
1296609   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1296610   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1296611   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1296612   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1296613   +   end;
MPRINT(EM_DIAGRAM):   end;
1296614   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1296615   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1296616   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1296617   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1296618   +   end;
MPRINT(EM_DIAGRAM):   end;
1296619   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296620   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1296621   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1296622   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1296623   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296624   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296625   +   end;
MPRINT(EM_DIAGRAM):   end;
1296626   +end;
MPRINT(EM_DIAGRAM):   end;
1296627   +
1296628   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1296629   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1296630   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1296631   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1296632   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1296633   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1296634   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296635   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296636   +end;
MPRINT(EM_DIAGRAM):   end;
1296637   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296638   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296639   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1296640   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296641   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1296642   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1296643   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1296644   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1296645   +   end;
MPRINT(EM_DIAGRAM):   end;
1296646   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1296647   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1296648   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1296649   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1296650   +   end;
MPRINT(EM_DIAGRAM):   end;
1296651   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1296652   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1296653   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1296654   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1296655   +   end;
MPRINT(EM_DIAGRAM):   end;
1296656   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1296657   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1296658   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1296659   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1296660   +   end;
MPRINT(EM_DIAGRAM):   end;
1296661   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296662   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1296663   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1296664   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1296665   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296666   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296667   +   end;
MPRINT(EM_DIAGRAM):   end;
1296668   +end;
MPRINT(EM_DIAGRAM):   end;
1296669   +
1296670   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1296671   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1296672   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1296673   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1296674   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1296675   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1296676   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296677   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296678   +end;
MPRINT(EM_DIAGRAM):   end;
1296679   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296680   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296681   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1296682   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296683   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1296684   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1296685   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1296686   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1296687   +   end;
MPRINT(EM_DIAGRAM):   end;
1296688   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1296689   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1296690   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1296691   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1296692   +   end;
MPRINT(EM_DIAGRAM):   end;
1296693   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1296694   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1296695   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1296696   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1296697   +   end;
MPRINT(EM_DIAGRAM):   end;
1296698   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1296699   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1296700   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1296701   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1296702   +   end;
MPRINT(EM_DIAGRAM):   end;
1296703   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296704   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1296705   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1296706   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1296707   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296708   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296709   +   end;
MPRINT(EM_DIAGRAM):   end;
1296710   +end;
MPRINT(EM_DIAGRAM):   end;
1296711   +
1296712   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1296713   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1296714   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1296715   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1296716   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1296717   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1296718   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296719   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296720   +end;
MPRINT(EM_DIAGRAM):   end;
1296721   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296722   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296723   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1296724   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296725   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1296726   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1296727   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1296728   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1296729   +   end;
MPRINT(EM_DIAGRAM):   end;
1296730   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1296731   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1296732   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1296733   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1296734   +   end;
MPRINT(EM_DIAGRAM):   end;
1296735   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1296736   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1296737   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1296738   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1296739   +   end;
MPRINT(EM_DIAGRAM):   end;
1296740   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1296741   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1296742   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1296743   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1296744   +   end;
MPRINT(EM_DIAGRAM):   end;
1296745   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296746   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1296747   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1296748   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1296749   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296750   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296751   +   end;
MPRINT(EM_DIAGRAM):   end;
1296752   +end;
MPRINT(EM_DIAGRAM):   end;
1296753   +
1296754   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1296755   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1296756   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1296757   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1296758   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1296759   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1296760   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296761   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296762   +end;
MPRINT(EM_DIAGRAM):   end;
1296763   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296764   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296765   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1296766   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296767   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1296768   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1296769   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1296770   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1296771   +   end;
MPRINT(EM_DIAGRAM):   end;
1296772   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1296773   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1296774   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1296775   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1296776   +   end;
MPRINT(EM_DIAGRAM):   end;
1296777   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1296778   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1296779   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1296780   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1296781   +   end;
MPRINT(EM_DIAGRAM):   end;
1296782   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1296783   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1296784   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1296785   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1296786   +   end;
MPRINT(EM_DIAGRAM):   end;
1296787   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296788   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1296789   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1296790   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1296791   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296792   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296793   +   end;
MPRINT(EM_DIAGRAM):   end;
1296794   +end;
MPRINT(EM_DIAGRAM):   end;
1296795   +
1296796   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1296797   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1296798   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1296799   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1296800   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1296801   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1296802   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296803   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296804   +end;
MPRINT(EM_DIAGRAM):   end;
1296805   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296806   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296807   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1296808   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296809   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1296810   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1296811   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1296812   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1296813   +   end;
MPRINT(EM_DIAGRAM):   end;
1296814   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1296815   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1296816   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1296817   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1296818   +   end;
MPRINT(EM_DIAGRAM):   end;
1296819   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1296820   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1296821   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1296822   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1296823   +   end;
MPRINT(EM_DIAGRAM):   end;
1296824   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1296825   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1296826   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1296827   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1296828   +   end;
MPRINT(EM_DIAGRAM):   end;
1296829   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296830   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1296831   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1296832   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1296833   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296834   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296835   +   end;
MPRINT(EM_DIAGRAM):   end;
1296836   +end;
MPRINT(EM_DIAGRAM):   end;
1296837   +
1296838   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1296839   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1296840   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1296841   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1296842   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1296843   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296844   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296845   +end;
MPRINT(EM_DIAGRAM):   end;
1296846   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296847   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296848   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1296849   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296850   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1296851   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1296852   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1296853   +   end;
MPRINT(EM_DIAGRAM):   end;
1296854   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1296855   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1296856   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1296857   +   end;
MPRINT(EM_DIAGRAM):   end;
1296858   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1296859   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1296860   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1296861   +   end;
MPRINT(EM_DIAGRAM):   end;
1296862   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296863   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1296864   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1296865   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296866   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296867   +   end;
MPRINT(EM_DIAGRAM):   end;
1296868   +end;
MPRINT(EM_DIAGRAM):   end;
1296869   +
1296870   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1296871   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1296872   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1296873   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1296874   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1296875   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1296876   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296877   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296878   +end;
MPRINT(EM_DIAGRAM):   end;
1296879   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296880   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296881   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1296882   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296883   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1296884   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1296885   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1296886   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1296887   +   end;
MPRINT(EM_DIAGRAM):   end;
1296888   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1296889   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1296890   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1296891   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1296892   +   end;
MPRINT(EM_DIAGRAM):   end;
1296893   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1296894   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1296895   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1296896   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1296897   +   end;
MPRINT(EM_DIAGRAM):   end;
1296898   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1296899   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1296900   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1296901   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1296902   +   end;
MPRINT(EM_DIAGRAM):   end;
1296903   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296904   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1296905   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1296906   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1296907   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296908   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296909   +   end;
MPRINT(EM_DIAGRAM):   end;
1296910   +end;
MPRINT(EM_DIAGRAM):   end;
1296911   +
1296912   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1296913   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1296914   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1296915   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1296916   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1296917   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1296918   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296919   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296920   +end;
MPRINT(EM_DIAGRAM):   end;
1296921   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296922   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296923   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1296924   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296925   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1296926   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1296927   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1296928   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1296929   +   end;
MPRINT(EM_DIAGRAM):   end;
1296930   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1296931   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1296932   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1296933   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1296934   +   end;
MPRINT(EM_DIAGRAM):   end;
1296935   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1296936   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1296937   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1296938   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1296939   +   end;
MPRINT(EM_DIAGRAM):   end;
1296940   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1296941   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1296942   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1296943   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1296944   +   end;
MPRINT(EM_DIAGRAM):   end;
1296945   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296946   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1296947   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1296948   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1296949   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296950   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296951   +   end;
MPRINT(EM_DIAGRAM):   end;
1296952   +end;
MPRINT(EM_DIAGRAM):   end;
1296953   +
1296954   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1296955   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1296956   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1296957   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1296958   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1296959   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1296960   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1296961   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296962   +end;
MPRINT(EM_DIAGRAM):   end;
1296963   +else do;
MPRINT(EM_DIAGRAM):   else do;
1296964   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1296965   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1296966   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1296967   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1296968   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1296969   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1296970   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1296971   +   end;
MPRINT(EM_DIAGRAM):   end;
1296972   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1296973   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1296974   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1296975   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1296976   +   end;
MPRINT(EM_DIAGRAM):   end;
1296977   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1296978   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1296979   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1296980   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1296981   +   end;
MPRINT(EM_DIAGRAM):   end;
1296982   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1296983   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1296984   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1296985   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1296986   +   end;
MPRINT(EM_DIAGRAM):   end;
1296987   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1296988   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1296989   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1296990   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1296991   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1296992   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1296993   +   end;
MPRINT(EM_DIAGRAM):   end;
1296994   +end;
MPRINT(EM_DIAGRAM):   end;
1296995   +
1296996   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1296997   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1296998   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1296999   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1297000   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1297001   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1297002   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297003   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297004   +end;
MPRINT(EM_DIAGRAM):   end;
1297005   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297006   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297007   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1297008   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297009   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1297010   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1297011   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1297012   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1297013   +   end;
MPRINT(EM_DIAGRAM):   end;
1297014   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1297015   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1297016   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1297017   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1297018   +   end;
MPRINT(EM_DIAGRAM):   end;
1297019   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1297020   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1297021   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1297022   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1297023   +   end;
MPRINT(EM_DIAGRAM):   end;
1297024   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1297025   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1297026   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1297027   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1297028   +   end;
MPRINT(EM_DIAGRAM):   end;
1297029   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297030   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1297031   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1297032   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1297033   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297034   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297035   +   end;
MPRINT(EM_DIAGRAM):   end;
1297036   +end;
MPRINT(EM_DIAGRAM):   end;
1297037   +
1297038   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1297039   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1297040   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1297041   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1297042   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1297043   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1297044   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297045   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297046   +end;
MPRINT(EM_DIAGRAM):   end;
1297047   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297048   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297049   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1297050   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297051   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1297052   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1297053   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1297054   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1297055   +   end;
MPRINT(EM_DIAGRAM):   end;
1297056   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1297057   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1297058   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1297059   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1297060   +   end;
MPRINT(EM_DIAGRAM):   end;
1297061   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1297062   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1297063   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1297064   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1297065   +   end;
MPRINT(EM_DIAGRAM):   end;
1297066   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1297067   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1297068   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1297069   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1297070   +   end;
MPRINT(EM_DIAGRAM):   end;
1297071   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297072   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1297073   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1297074   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1297075   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297076   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297077   +   end;
MPRINT(EM_DIAGRAM):   end;
1297078   +end;
MPRINT(EM_DIAGRAM):   end;
1297079   +
1297080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297081   +*** Checking missing input Interval
1297082   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1297083   +
1297084   +IF NMISS(
1297085   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1297086   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1297087   +
1297088   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297089   +END;
MPRINT(EM_DIAGRAM):   END;
1297090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297091   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1297092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297093   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1297094   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1297095   +END;
MPRINT(EM_DIAGRAM):   END;
1297096   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1297097   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1297098   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1297099   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1297100   +END;
MPRINT(EM_DIAGRAM):   END;
1297101   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297102   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1297103   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297105   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1297106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297107   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1297108   +   H11  =     0.04727192845675 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.04727192845675 * S_Year_Birth ;
1297109   +   H12  =    -0.03499603197831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.03499603197831 * S_Year_Birth ;
1297110   +   H13  =      -0.249387333167 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.249387333167 * S_Year_Birth ;
1297111   +   H14  =    -0.18145230662582 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.18145230662582 * S_Year_Birth ;
1297112   +   H15  =    -0.07744416350216 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.07744416350216 * S_Year_Birth ;
1297113   +   H11  = H11  +    -0.25371698668168 * GRP_AcceptedCmp52
1297114   +          +     0.38185615945621 * GRP_Frq2  +     0.03545555759423 * GRP_Frq3
1297115   +          +    -0.00061660249238 * GRP_Frq4  +     0.41779261820045 *
1297116   +        GRP_Income2  +     0.51800912898069 * GRP_Income3
1297117   +          +    -0.36427548932695 * GRP_Income4  +    -0.06433979614617 *
1297118   +        GRP_Mnt2  +     0.00045120565293 * GRP_Mnt3  +    -0.13992317322759 *
1297119   +        GRP_Mnt4  +     0.34207391538024 * GRP_MntFishProducts2
1297120   +          +     0.03411739869638 * GRP_MntFishProducts3
1297121   +          +      -0.083693402353 * GRP_MntFishProducts4
1297122   +          +     -0.1318128730187 * GRP_MntGoldProds2
1297123   +          +     -0.0614737729382 * GRP_MntGoldProds3
1297124   +          +    -0.00372986687449 * GRP_MntGoldProds4
1297125   +          +     -0.3129171829017 * GRP_MntMeatProducts2
1297126   +          +     0.01519664718127 * GRP_MntMeatProducts3
1297127   +          +     0.29997111548812 * GRP_MntMeatProducts4
1297128   +          +       0.389673942682 * GRP_MntWines2  +     0.21159785789434 *
1297129   +        GRP_MntWines3  +    -0.26921349986988 * GRP_MntWines4
1297130   +          +    -0.47013218092095 * GRP_NumCatalogPurchases3
1297131   +          +     0.23943411636141 * GRP_NumCatalogPurchases4
1297132   +          +    -0.68715024477164 * GRP_NumDistPurchases2
1297133   +          +    -0.09178471992122 * GRP_NumDistPurchases3
1297134   +          +    -0.01170225640351 * GRP_NumDistPurchases4
1297135   +          +    -0.14760833919227 * GRP_NumWebPurchases2
1297136   +          +     0.02966820025811 * GRP_NumWebPurchases3
1297137   +          +    -0.04127892210576 * GRP_NumWebPurchases4
1297138   +          +    -0.45467119970502 * GRP_RFMstat2  +    -0.14644406995031 *
1297139   +        GRP_RFMstat3  +    -0.12660007404037 * GRP_RFMstat4
1297140   +          +     0.04829215694488 * GRP_RMntFrq2  +     0.10137738373353 *
1297141   +        GRP_RMntFrq3  +     -0.2873514159435 * GRP_RMntFrq4
1297142   +          +     0.61737333380878 * GRP_Recency2  +     0.16651370318087 *
1297143   +        GRP_Recency3  +    -0.15382569411658 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25371698668168 * GRP_AcceptedCmp52 + 0.38185615945621 *
GRP_Frq2 + 0.03545555759423 * GRP_Frq3 + -0.00061660249238 * GRP_Frq4 + 0.41779261820045 *
GRP_Income2 + 0.51800912898069 * GRP_Income3 + -0.36427548932695 * GRP_Income4 +
-0.06433979614617 * GRP_Mnt2 + 0.00045120565293 * GRP_Mnt3 + -0.13992317322759 * GRP_Mnt4 +
0.34207391538024 * GRP_MntFishProducts2 + 0.03411739869638 * GRP_MntFishProducts3 +
-0.083693402353 * GRP_MntFishProducts4 + -0.1318128730187 * GRP_MntGoldProds2 +
-0.0614737729382 * GRP_MntGoldProds3 + -0.00372986687449 * GRP_MntGoldProds4 +
-0.3129171829017 * GRP_MntMeatProducts2 + 0.01519664718127 * GRP_MntMeatProducts3 +
0.29997111548812 * GRP_MntMeatProducts4 + 0.389673942682 * GRP_MntWines2 + 0.21159785789434 *
GRP_MntWines3 + -0.26921349986988 * GRP_MntWines4 + -0.47013218092095 *
GRP_NumCatalogPurchases3 + 0.23943411636141 * GRP_NumCatalogPurchases4 + -0.68715024477164 *
GRP_NumDistPurchases2 + -0.09178471992122 * GRP_NumDistPurchases3 + -0.01170225640351 *
GRP_NumDistPurchases4 + -0.14760833919227 * GRP_NumWebPurchases2 + 0.02966820025811 *
GRP_NumWebPurchases3 + -0.04127892210576 * GRP_NumWebPurchases4 + -0.45467119970502 *
GRP_RFMstat2 + -0.14644406995031 * GRP_RFMstat3 + -0.12660007404037 * GRP_RFMstat4 +
0.04829215694488 * GRP_RMntFrq2 + 0.10137738373353 * GRP_RMntFrq3 + -0.2873514159435 *
GRP_RMntFrq4 + 0.61737333380878 * GRP_Recency2 + 0.16651370318087 * GRP_Recency3 +
-0.15382569411658 * GRP_Recency4 ;
1297144   +   H12  = H12  +    -0.00960598895677 * GRP_AcceptedCmp52
1297145   +          +    -0.13877780492855 * GRP_Frq2  +    -0.12078849771739 * GRP_Frq3
1297146   +          +     0.25058833013238 * GRP_Frq4  +     0.13932014454657 *
1297147   +        GRP_Income2  +    -0.11560599273748 * GRP_Income3
1297148   +          +    -0.36622829757109 * GRP_Income4  +     0.12796853065131 *
1297149   +        GRP_Mnt2  +    -0.15829126446209 * GRP_Mnt3  +    -0.35779207872654 *
1297150   +        GRP_Mnt4  +     0.06590491513415 * GRP_MntFishProducts2
1297151   +          +     0.00842475350903 * GRP_MntFishProducts3
1297152   +          +     -0.1623103908885 * GRP_MntFishProducts4
1297153   +          +    -0.23845524931139 * GRP_MntGoldProds2
1297154   +          +    -0.07128567155438 * GRP_MntGoldProds3
1297155   +          +     0.25778887379163 * GRP_MntGoldProds4
1297156   +          +    -0.12224351227219 * GRP_MntMeatProducts2
1297157   +          +     0.06269922653052 * GRP_MntMeatProducts3
1297158   +          +      0.2587215409794 * GRP_MntMeatProducts4
1297159   +          +     0.20096090232239 * GRP_MntWines2  +    -0.16858917844476 *
1297160   +        GRP_MntWines3  +     0.03815809499779 * GRP_MntWines4
1297161   +          +     0.05177526225067 * GRP_NumCatalogPurchases3
1297162   +          +    -0.18831777813313 * GRP_NumCatalogPurchases4
1297163   +          +     0.12374838743082 * GRP_NumDistPurchases2
1297164   +          +    -0.19910688422086 * GRP_NumDistPurchases3
1297165   +          +    -0.03804569737208 * GRP_NumDistPurchases4
1297166   +          +    -0.17179633678901 * GRP_NumWebPurchases2
1297167   +          +    -0.08560184232365 * GRP_NumWebPurchases3
1297168   +          +     0.09237237622553 * GRP_NumWebPurchases4
1297169   +          +     0.01544327143979 * GRP_RFMstat2  +      0.1127818122444 *
1297170   +        GRP_RFMstat3  +    -0.21371736650143 * GRP_RFMstat4
1297171   +          +    -0.14005478166078 * GRP_RMntFrq2  +     0.07954568858907 *
1297172   +        GRP_RMntFrq3  +    -0.02313269086836 * GRP_RMntFrq4
1297173   +          +     0.04358116545272 * GRP_Recency2  +    -0.02969695172962 *
1297174   +        GRP_Recency3  +     0.00206593904485 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00960598895677 * GRP_AcceptedCmp52 + -0.13877780492855 *
GRP_Frq2 + -0.12078849771739 * GRP_Frq3 + 0.25058833013238 * GRP_Frq4 + 0.13932014454657 *
GRP_Income2 + -0.11560599273748 * GRP_Income3 + -0.36622829757109 * GRP_Income4 +
0.12796853065131 * GRP_Mnt2 + -0.15829126446209 * GRP_Mnt3 + -0.35779207872654 * GRP_Mnt4 +
0.06590491513415 * GRP_MntFishProducts2 + 0.00842475350903 * GRP_MntFishProducts3 +
-0.1623103908885 * GRP_MntFishProducts4 + -0.23845524931139 * GRP_MntGoldProds2 +
-0.07128567155438 * GRP_MntGoldProds3 + 0.25778887379163 * GRP_MntGoldProds4 +
-0.12224351227219 * GRP_MntMeatProducts2 + 0.06269922653052 * GRP_MntMeatProducts3 +
0.2587215409794 * GRP_MntMeatProducts4 + 0.20096090232239 * GRP_MntWines2 + -0.16858917844476
* GRP_MntWines3 + 0.03815809499779 * GRP_MntWines4 + 0.05177526225067 *
GRP_NumCatalogPurchases3 + -0.18831777813313 * GRP_NumCatalogPurchases4 + 0.12374838743082 *
GRP_NumDistPurchases2 + -0.19910688422086 * GRP_NumDistPurchases3 + -0.03804569737208 *
GRP_NumDistPurchases4 + -0.17179633678901 * GRP_NumWebPurchases2 + -0.08560184232365 *
GRP_NumWebPurchases3 + 0.09237237622553 * GRP_NumWebPurchases4 + 0.01544327143979 *
GRP_RFMstat2 + 0.1127818122444 * GRP_RFMstat3 + -0.21371736650143 * GRP_RFMstat4 +
-0.14005478166078 * GRP_RMntFrq2 + 0.07954568858907 * GRP_RMntFrq3 + -0.02313269086836 *
GRP_RMntFrq4 + 0.04358116545272 * GRP_Recency2 + -0.02969695172962 * GRP_Recency3 +
0.00206593904485 * GRP_Recency4 ;
1297175   +   H13  = H13  +     0.11273135858209 * GRP_AcceptedCmp52
1297176   +          +    -0.15015665173608 * GRP_Frq2  +    -0.20454924588356 * GRP_Frq3
1297177   +          +    -0.04047998964496 * GRP_Frq4  +    -0.29897237144541 *
1297178   +        GRP_Income2  +      -0.028464296882 * GRP_Income3
1297179   +          +     0.24836294191696 * GRP_Income4  +     0.08738925553158 *
1297180   +        GRP_Mnt2  +     0.00962293230168 * GRP_Mnt3  +    -0.12661643514597 *
1297181   +        GRP_Mnt4  +    -0.03747719154948 * GRP_MntFishProducts2
1297182   +          +    -0.07078012229572 * GRP_MntFishProducts3
1297183   +          +    -0.14569186671189 * GRP_MntFishProducts4
1297184   +          +     0.14963390032413 * GRP_MntGoldProds2
1297185   +          +    -0.11869917970226 * GRP_MntGoldProds3
1297186   +          +     0.25943105626615 * GRP_MntGoldProds4
1297187   +          +     0.36609689271233 * GRP_MntMeatProducts2
1297188   +          +     0.10969864655073 * GRP_MntMeatProducts3
1297189   +          +    -0.03446779336952 * GRP_MntMeatProducts4
1297190   +          +    -0.16882321573662 * GRP_MntWines2  +     0.07914922328232 *
1297191   +        GRP_MntWines3  +     0.13243594484158 * GRP_MntWines4
1297192   +          +     0.39758714937962 * GRP_NumCatalogPurchases3
1297193   +          +     0.31434011051179 * GRP_NumCatalogPurchases4
1297194   +          +     0.08068432649382 * GRP_NumDistPurchases2
1297195   +          +    -0.08875599058351 * GRP_NumDistPurchases3
1297196   +          +     0.26738740475822 * GRP_NumDistPurchases4
1297197   +          +     -0.0916247468051 * GRP_NumWebPurchases2
1297198   +          +    -0.17267741073665 * GRP_NumWebPurchases3
1297199   +          +     0.01349113315351 * GRP_NumWebPurchases4
1297200   +          +    -0.19075973281592 * GRP_RFMstat2  +    -0.20146461162283 *
1297201   +        GRP_RFMstat3  +    -0.13097471458987 * GRP_RFMstat4
1297202   +          +     0.06761773631631 * GRP_RMntFrq2  +     0.27576244694442 *
1297203   +        GRP_RMntFrq3  +      0.1281788430307 * GRP_RMntFrq4
1297204   +          +    -0.15939599795679 * GRP_Recency2  +    -0.00210397286084 *
1297205   +        GRP_Recency3  +     0.28490847560375 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.11273135858209 * GRP_AcceptedCmp52 + -0.15015665173608 *
GRP_Frq2 + -0.20454924588356 * GRP_Frq3 + -0.04047998964496 * GRP_Frq4 + -0.29897237144541 *
GRP_Income2 + -0.028464296882 * GRP_Income3 + 0.24836294191696 * GRP_Income4 +
0.08738925553158 * GRP_Mnt2 + 0.00962293230168 * GRP_Mnt3 + -0.12661643514597 * GRP_Mnt4 +
-0.03747719154948 * GRP_MntFishProducts2 + -0.07078012229572 * GRP_MntFishProducts3 +
-0.14569186671189 * GRP_MntFishProducts4 + 0.14963390032413 * GRP_MntGoldProds2 +
-0.11869917970226 * GRP_MntGoldProds3 + 0.25943105626615 * GRP_MntGoldProds4 +
0.36609689271233 * GRP_MntMeatProducts2 + 0.10969864655073 * GRP_MntMeatProducts3 +
-0.03446779336952 * GRP_MntMeatProducts4 + -0.16882321573662 * GRP_MntWines2 +
0.07914922328232 * GRP_MntWines3 + 0.13243594484158 * GRP_MntWines4 + 0.39758714937962 *
GRP_NumCatalogPurchases3 + 0.31434011051179 * GRP_NumCatalogPurchases4 + 0.08068432649382 *
GRP_NumDistPurchases2 + -0.08875599058351 * GRP_NumDistPurchases3 + 0.26738740475822 *
GRP_NumDistPurchases4 + -0.0916247468051 * GRP_NumWebPurchases2 + -0.17267741073665 *
GRP_NumWebPurchases3 + 0.01349113315351 * GRP_NumWebPurchases4 + -0.19075973281592 *
GRP_RFMstat2 + -0.20146461162283 * GRP_RFMstat3 + -0.13097471458987 * GRP_RFMstat4 +
0.06761773631631 * GRP_RMntFrq2 + 0.27576244694442 * GRP_RMntFrq3 + 0.1281788430307 *
GRP_RMntFrq4 + -0.15939599795679 * GRP_Recency2 + -0.00210397286084 * GRP_Recency3 +
0.28490847560375 * GRP_Recency4 ;
1297206   +   H14  = H14  +     0.27713596853764 * GRP_AcceptedCmp52
1297207   +          +    -0.11480256849934 * GRP_Frq2  +      0.0285240312455 * GRP_Frq3
1297208   +          +     0.09416065239682 * GRP_Frq4  +     -0.1229961422993 *
1297209   +        GRP_Income2  +     0.01867364051002 * GRP_Income3
1297210   +          +     0.05820105400306 * GRP_Income4  +    -0.16873429334819 *
1297211   +        GRP_Mnt2  +    -0.01221085891741 * GRP_Mnt3  +    -0.10225236565235 *
1297212   +        GRP_Mnt4  +    -0.09613387975858 * GRP_MntFishProducts2
1297213   +          +    -0.18334484867808 * GRP_MntFishProducts3
1297214   +          +     0.13484477561766 * GRP_MntFishProducts4
1297215   +          +    -0.05145913380692 * GRP_MntGoldProds2
1297216   +          +     0.04459987080173 * GRP_MntGoldProds3
1297217   +          +     0.01539767655772 * GRP_MntGoldProds4
1297218   +          +     0.26537148543352 * GRP_MntMeatProducts2
1297219   +          +     0.22913678530176 * GRP_MntMeatProducts3
1297220   +          +     0.21262490658374 * GRP_MntMeatProducts4
1297221   +          +    -0.11513521401249 * GRP_MntWines2  +    -0.14420673462527 *
1297222   +        GRP_MntWines3  +     0.11949691312637 * GRP_MntWines4
1297223   +          +    -0.02289734111038 * GRP_NumCatalogPurchases3
1297224   +          +    -0.12014539185275 * GRP_NumCatalogPurchases4
1297225   +          +     0.09224372228857 * GRP_NumDistPurchases2
1297226   +          +    -0.14205094961773 * GRP_NumDistPurchases3
1297227   +          +    -0.27160467877541 * GRP_NumDistPurchases4
1297228   +          +    -0.15428446875019 * GRP_NumWebPurchases2
1297229   +          +    -0.36914157795453 * GRP_NumWebPurchases3
1297230   +          +    -0.41610537355059 * GRP_NumWebPurchases4
1297231   +          +    -0.29442656678388 * GRP_RFMstat2  +     0.03961235509827 *
1297232   +        GRP_RFMstat3  +    -0.18322878380243 * GRP_RFMstat4
1297233   +          +     0.06857495854453 * GRP_RMntFrq2  +     0.08325769999442 *
1297234   +        GRP_RMntFrq3  +     0.24334424933749 * GRP_RMntFrq4
1297235   +          +    -0.50963259840069 * GRP_Recency2  +    -0.24163634485458 *
1297236   +        GRP_Recency3  +     -0.1023689653207 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.27713596853764 * GRP_AcceptedCmp52 + -0.11480256849934 *
GRP_Frq2 + 0.0285240312455 * GRP_Frq3 + 0.09416065239682 * GRP_Frq4 + -0.1229961422993 *
GRP_Income2 + 0.01867364051002 * GRP_Income3 + 0.05820105400306 * GRP_Income4 +
-0.16873429334819 * GRP_Mnt2 + -0.01221085891741 * GRP_Mnt3 + -0.10225236565235 * GRP_Mnt4 +
-0.09613387975858 * GRP_MntFishProducts2 + -0.18334484867808 * GRP_MntFishProducts3 +
0.13484477561766 * GRP_MntFishProducts4 + -0.05145913380692 * GRP_MntGoldProds2 +
0.04459987080173 * GRP_MntGoldProds3 + 0.01539767655772 * GRP_MntGoldProds4 + 0.26537148543352
* GRP_MntMeatProducts2 + 0.22913678530176 * GRP_MntMeatProducts3 + 0.21262490658374 *
GRP_MntMeatProducts4 + -0.11513521401249 * GRP_MntWines2 + -0.14420673462527 * GRP_MntWines3 +
0.11949691312637 * GRP_MntWines4 + -0.02289734111038 * GRP_NumCatalogPurchases3 +
-0.12014539185275 * GRP_NumCatalogPurchases4 + 0.09224372228857 * GRP_NumDistPurchases2 +
-0.14205094961773 * GRP_NumDistPurchases3 + -0.27160467877541 * GRP_NumDistPurchases4 +
-0.15428446875019 * GRP_NumWebPurchases2 + -0.36914157795453 * GRP_NumWebPurchases3 +
-0.41610537355059 * GRP_NumWebPurchases4 + -0.29442656678388 * GRP_RFMstat2 + 0.03961235509827
* GRP_RFMstat3 + -0.18322878380243 * GRP_RFMstat4 + 0.06857495854453 * GRP_RMntFrq2 +
0.08325769999442 * GRP_RMntFrq3 + 0.24334424933749 * GRP_RMntFrq4 + -0.50963259840069 *
GRP_Recency2 + -0.24163634485458 * GRP_Recency3 + -0.1023689653207 * GRP_Recency4 ;
1297237   +   H15  = H15  +    -0.58071728739803 * GRP_AcceptedCmp52
1297238   +          +    -0.33803120859672 * GRP_Frq2  +    -0.08690701614481 * GRP_Frq3
1297239   +          +     0.06107334775294 * GRP_Frq4  +     0.00751374071999 *
1297240   +        GRP_Income2  +     0.20911873861779 * GRP_Income3
1297241   +          +    -0.14977199160976 * GRP_Income4  +     0.15427447371686 *
1297242   +        GRP_Mnt2  +    -0.24298277669059 * GRP_Mnt3  +    -0.02935492111499 *
1297243   +        GRP_Mnt4  +     0.04923982061963 * GRP_MntFishProducts2
1297244   +          +    -0.08952948139975 * GRP_MntFishProducts3
1297245   +          +     0.15338133379465 * GRP_MntFishProducts4
1297246   +          +     0.04821845492824 * GRP_MntGoldProds2
1297247   +          +     0.20117781904284 * GRP_MntGoldProds3
1297248   +          +     0.13013396690778 * GRP_MntGoldProds4
1297249   +          +    -0.03940841472157 * GRP_MntMeatProducts2
1297250   +          +     0.03161017721112 * GRP_MntMeatProducts3
1297251   +          +    -0.21938330779867 * GRP_MntMeatProducts4
1297252   +          +      0.3039864690076 * GRP_MntWines2  +     0.33038690291786 *
1297253   +        GRP_MntWines3  +     0.03314465135063 * GRP_MntWines4
1297254   +          +    -0.07655889365033 * GRP_NumCatalogPurchases3
1297255   +          +    -0.17353955777897 * GRP_NumCatalogPurchases4
1297256   +          +    -0.16058154480995 * GRP_NumDistPurchases2
1297257   +          +    -0.30101518928361 * GRP_NumDistPurchases3
1297258   +          +      0.0473480026433 * GRP_NumDistPurchases4
1297259   +          +     0.03132883547053 * GRP_NumWebPurchases2
1297260   +          +    -0.29425936985479 * GRP_NumWebPurchases3
1297261   +          +    -0.12527625315403 * GRP_NumWebPurchases4
1297262   +          +     0.30683805591766 * GRP_RFMstat2  +    -0.21275334469197 *
1297263   +        GRP_RFMstat3  +     0.32474239840607 * GRP_RFMstat4
1297264   +          +     0.09289841520091 * GRP_RMntFrq2  +     0.22137778862379 *
1297265   +        GRP_RMntFrq3  +     0.12254524703503 * GRP_RMntFrq4
1297266   +          +     0.46836624272095 * GRP_Recency2  +     0.01747843890017 *
1297267   +        GRP_Recency3  +    -0.28363324780869 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.58071728739803 * GRP_AcceptedCmp52 + -0.33803120859672 *
GRP_Frq2 + -0.08690701614481 * GRP_Frq3 + 0.06107334775294 * GRP_Frq4 + 0.00751374071999 *
GRP_Income2 + 0.20911873861779 * GRP_Income3 + -0.14977199160976 * GRP_Income4 +
0.15427447371686 * GRP_Mnt2 + -0.24298277669059 * GRP_Mnt3 + -0.02935492111499 * GRP_Mnt4 +
0.04923982061963 * GRP_MntFishProducts2 + -0.08952948139975 * GRP_MntFishProducts3 +
0.15338133379465 * GRP_MntFishProducts4 + 0.04821845492824 * GRP_MntGoldProds2 +
0.20117781904284 * GRP_MntGoldProds3 + 0.13013396690778 * GRP_MntGoldProds4 +
-0.03940841472157 * GRP_MntMeatProducts2 + 0.03161017721112 * GRP_MntMeatProducts3 +
-0.21938330779867 * GRP_MntMeatProducts4 + 0.3039864690076 * GRP_MntWines2 + 0.33038690291786
* GRP_MntWines3 + 0.03314465135063 * GRP_MntWines4 + -0.07655889365033 *
GRP_NumCatalogPurchases3 + -0.17353955777897 * GRP_NumCatalogPurchases4 + -0.16058154480995 *
GRP_NumDistPurchases2 + -0.30101518928361 * GRP_NumDistPurchases3 + 0.0473480026433 *
GRP_NumDistPurchases4 + 0.03132883547053 * GRP_NumWebPurchases2 + -0.29425936985479 *
GRP_NumWebPurchases3 + -0.12527625315403 * GRP_NumWebPurchases4 + 0.30683805591766 *
GRP_RFMstat2 + -0.21275334469197 * GRP_RFMstat3 + 0.32474239840607 * GRP_RFMstat4 +
0.09289841520091 * GRP_RMntFrq2 + 0.22137778862379 * GRP_RMntFrq3 + 0.12254524703503 *
GRP_RMntFrq4 + 0.46836624272095 * GRP_Recency2 + 0.01747843890017 * GRP_Recency3 +
-0.28363324780869 * GRP_Recency4 ;
1297268   +   H11  =    -0.09329902916762 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.09329902916762 + H11 ;
1297269   +   H12  =     0.21894996952826 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.21894996952826 + H12 ;
1297270   +   H13  =    -0.97210428395662 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.97210428395662 + H13 ;
1297271   +   H14  =    -0.47241372860242 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.47241372860242 + H14 ;
1297272   +   H15  =    -0.89551869986721 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.89551869986721 + H15 ;
1297273   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1297274   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1297275   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1297276   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1297277   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1297278   +END;
MPRINT(EM_DIAGRAM):   END;
1297279   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1297280   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1297281   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1297282   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1297283   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1297284   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1297285   +END;
MPRINT(EM_DIAGRAM):   END;
1297286   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297287   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1297288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297289   +
1297290   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1297291   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1297292   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1297293   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1297294   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1297295   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297296   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1297297   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1297298   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1297299   +end;
MPRINT(EM_DIAGRAM):   end;
1297300   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297301   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1297302   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1297303   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1297304   +   end;
MPRINT(EM_DIAGRAM):   end;
1297305   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1297306   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1297307   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1297308   +   end;
MPRINT(EM_DIAGRAM):   end;
1297309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297310   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1297311   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1297312   +   end;
MPRINT(EM_DIAGRAM):   end;
1297313   +end;
MPRINT(EM_DIAGRAM):   end;
1297314   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1297315   +   P_DepVar1  =     2.68876927057109 * H11  +     0.34381275178608 * H12
1297316   +          +    -1.13153750790029 * H13  +    -0.93563986714952 * H14
1297317   +          +     1.84382077322412 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.68876927057109 * H11 + 0.34381275178608 * H12 +
-1.13153750790029 * H13 + -0.93563986714952 * H14 + 1.84382077322412 * H15 ;
1297318   +   P_DepVar1  =    -1.53169022796223 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53169022796223 + P_DepVar1 ;
1297319   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1297320   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1297321   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1297322   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1297323   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1297324   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1297325   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1297326   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1297327   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1297328   +END;
MPRINT(EM_DIAGRAM):   END;
1297329   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1297330   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1297331   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1297332   +END;
MPRINT(EM_DIAGRAM):   END;
1297333   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1297334   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1297335   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1297336   +END;
MPRINT(EM_DIAGRAM):   END;
1297337   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1297338   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1297339   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1297340   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1297341   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1297342   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1297343   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1297344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297345   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1297346   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1297347   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1297348   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1297349   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1297350   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1297351   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1297352   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1297353   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1297354   +END;
MPRINT(EM_DIAGRAM):   END;
1297355   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1297356   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1297357   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1297358   +drop
1297359   +H11
1297360   +H12
1297361   +H13
1297362   +H14
1297363   +H15
1297364   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1297365   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1297366   +* Renaming variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural22;
1297367   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1297368   +* Renaming Posterior variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural22;
1297369   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1297370   +drop Neural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar1;
1297371   +Neural22_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar1 = P_DepVar1;
1297372   +drop Neural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar0;
1297373   +Neural22_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar0 = P_DepVar0;
1297374   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1297375   +* Renaming _WARN_ variable for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural22;
1297376   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1297377   +length Neural22_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural22_WARN_ $4;
1297378   +drop Neural22_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural22_WARN_;
1297379   +Neural22_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural22_WARN_ = _WARN_;
1297380   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1297381   +* Ensmbl7: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Scoring Code of model 3 of 3;
1297382   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1297383   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1297384   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1297385   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1297386   +* NODE: Neural18;
MPRINT(EM_DIAGRAM):   * NODE: Neural18;
1297387   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1297388   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1297389   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1297390   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1297391   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1297392   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1297393   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1297394   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1297395   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1297396   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1297397   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1297398   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1297399   +LENGTH _WARN_ $4
1297400   +      F_DepVar  $ 12
1297401   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1297402   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1297403   +
1297404   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1297405   +
1297406   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1297407   +
1297408   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1297409   +
1297410   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1297411   +
1297412   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1297413   +
1297414   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1297415   +
1297416   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1297417   +
1297418   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1297419   +
1297420   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1297421   +
1297422   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1297423   +
1297424   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1297425   +
1297426   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1297427   +
1297428   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1297429   +
1297430   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1297431   +
1297432   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1297433   +
1297434   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1297435   +
1297436   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1297437   +
1297438   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1297439   +
1297440   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1297441   +
1297442   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1297443   +
1297444   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1297445   +
1297446   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1297447   +
1297448   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1297449   +
1297450   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1297451   +
1297452   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1297453   +
1297454   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1297455   +
1297456   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1297457   +
1297458   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1297459   +
1297460   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1297461   +
1297462   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1297463   +
1297464   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1297465   +
1297466   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1297467   +
1297468   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1297469   +
1297470   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1297471   +
1297472   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1297473   +
1297474   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1297475   +
1297476   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1297477   +
1297478   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1297479   +
1297480   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1297481   +
1297482   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1297483   +
1297484   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1297485   +
1297486   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1297487   +
1297488   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1297489   +
1297490   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1297491   +
1297492   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1297493   +
1297494   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1297495   +
1297496   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1297497   +
1297498   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1297499   +
1297500   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1297501   +
1297502   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1297503   +
1297504   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1297505   +
1297506   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1297507   +
1297508   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1297509   +
1297510   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1297511   +
1297512   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1297513   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1297514   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1297515   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1297516   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297517   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297518   +end;
MPRINT(EM_DIAGRAM):   end;
1297519   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297520   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297521   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1297522   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297523   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1297524   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1297525   +   end;
MPRINT(EM_DIAGRAM):   end;
1297526   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1297527   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1297528   +   end;
MPRINT(EM_DIAGRAM):   end;
1297529   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297530   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1297531   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297532   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297533   +   end;
MPRINT(EM_DIAGRAM):   end;
1297534   +end;
MPRINT(EM_DIAGRAM):   end;
1297535   +
1297536   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1297537   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1297538   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1297539   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1297540   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1297541   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1297542   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297543   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297544   +end;
MPRINT(EM_DIAGRAM):   end;
1297545   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297546   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297547   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1297548   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297549   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1297550   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1297551   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1297552   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1297553   +   end;
MPRINT(EM_DIAGRAM):   end;
1297554   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1297555   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1297556   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1297557   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1297558   +   end;
MPRINT(EM_DIAGRAM):   end;
1297559   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1297560   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1297561   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1297562   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1297563   +   end;
MPRINT(EM_DIAGRAM):   end;
1297564   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1297565   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1297566   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1297567   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1297568   +   end;
MPRINT(EM_DIAGRAM):   end;
1297569   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297570   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1297571   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1297572   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1297573   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297574   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297575   +   end;
MPRINT(EM_DIAGRAM):   end;
1297576   +end;
MPRINT(EM_DIAGRAM):   end;
1297577   +
1297578   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1297579   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1297580   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1297581   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1297582   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1297583   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1297584   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297585   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297586   +end;
MPRINT(EM_DIAGRAM):   end;
1297587   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297588   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297589   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1297590   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297591   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1297592   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1297593   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1297594   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1297595   +   end;
MPRINT(EM_DIAGRAM):   end;
1297596   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1297597   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1297598   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1297599   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1297600   +   end;
MPRINT(EM_DIAGRAM):   end;
1297601   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1297602   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1297603   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1297604   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1297605   +   end;
MPRINT(EM_DIAGRAM):   end;
1297606   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1297607   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1297608   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1297609   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1297610   +   end;
MPRINT(EM_DIAGRAM):   end;
1297611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297612   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1297613   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1297614   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1297615   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297616   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297617   +   end;
MPRINT(EM_DIAGRAM):   end;
1297618   +end;
MPRINT(EM_DIAGRAM):   end;
1297619   +
1297620   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1297621   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1297622   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1297623   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1297624   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1297625   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1297626   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297627   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297628   +end;
MPRINT(EM_DIAGRAM):   end;
1297629   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297630   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297631   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1297632   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297633   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1297634   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1297635   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1297636   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1297637   +   end;
MPRINT(EM_DIAGRAM):   end;
1297638   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1297639   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1297640   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1297641   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1297642   +   end;
MPRINT(EM_DIAGRAM):   end;
1297643   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1297644   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1297645   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1297646   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1297647   +   end;
MPRINT(EM_DIAGRAM):   end;
1297648   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1297649   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1297650   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1297651   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1297652   +   end;
MPRINT(EM_DIAGRAM):   end;
1297653   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297654   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1297655   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1297656   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1297657   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297658   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297659   +   end;
MPRINT(EM_DIAGRAM):   end;
1297660   +end;
MPRINT(EM_DIAGRAM):   end;
1297661   +
1297662   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1297663   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1297664   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1297665   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1297666   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1297667   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1297668   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297669   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297670   +end;
MPRINT(EM_DIAGRAM):   end;
1297671   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297672   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297673   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1297674   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297675   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1297676   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1297677   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1297678   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1297679   +   end;
MPRINT(EM_DIAGRAM):   end;
1297680   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1297681   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1297682   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1297683   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1297684   +   end;
MPRINT(EM_DIAGRAM):   end;
1297685   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1297686   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1297687   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1297688   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1297689   +   end;
MPRINT(EM_DIAGRAM):   end;
1297690   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1297691   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1297692   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1297693   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1297694   +   end;
MPRINT(EM_DIAGRAM):   end;
1297695   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297696   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1297697   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1297698   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1297699   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297700   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297701   +   end;
MPRINT(EM_DIAGRAM):   end;
1297702   +end;
MPRINT(EM_DIAGRAM):   end;
1297703   +
1297704   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1297705   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1297706   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1297707   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1297708   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1297709   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1297710   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297711   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297712   +end;
MPRINT(EM_DIAGRAM):   end;
1297713   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297714   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297715   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1297716   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297717   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1297718   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1297719   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1297720   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1297721   +   end;
MPRINT(EM_DIAGRAM):   end;
1297722   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1297723   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1297724   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1297725   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1297726   +   end;
MPRINT(EM_DIAGRAM):   end;
1297727   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1297728   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1297729   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1297730   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1297731   +   end;
MPRINT(EM_DIAGRAM):   end;
1297732   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1297733   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1297734   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1297735   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1297736   +   end;
MPRINT(EM_DIAGRAM):   end;
1297737   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297738   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1297739   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1297740   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1297741   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297742   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297743   +   end;
MPRINT(EM_DIAGRAM):   end;
1297744   +end;
MPRINT(EM_DIAGRAM):   end;
1297745   +
1297746   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1297747   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1297748   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1297749   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1297750   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1297751   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1297752   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297753   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297754   +end;
MPRINT(EM_DIAGRAM):   end;
1297755   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297756   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297757   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1297758   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297759   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1297760   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1297761   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1297762   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1297763   +   end;
MPRINT(EM_DIAGRAM):   end;
1297764   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1297765   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1297766   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1297767   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1297768   +   end;
MPRINT(EM_DIAGRAM):   end;
1297769   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1297770   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1297771   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1297772   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1297773   +   end;
MPRINT(EM_DIAGRAM):   end;
1297774   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1297775   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1297776   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1297777   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1297778   +   end;
MPRINT(EM_DIAGRAM):   end;
1297779   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297780   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1297781   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1297782   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1297783   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297784   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297785   +   end;
MPRINT(EM_DIAGRAM):   end;
1297786   +end;
MPRINT(EM_DIAGRAM):   end;
1297787   +
1297788   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1297789   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1297790   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1297791   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1297792   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1297793   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1297794   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297795   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297796   +end;
MPRINT(EM_DIAGRAM):   end;
1297797   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297798   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297799   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1297800   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297801   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1297802   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1297803   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1297804   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1297805   +   end;
MPRINT(EM_DIAGRAM):   end;
1297806   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1297807   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1297808   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1297809   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1297810   +   end;
MPRINT(EM_DIAGRAM):   end;
1297811   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1297812   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1297813   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1297814   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1297815   +   end;
MPRINT(EM_DIAGRAM):   end;
1297816   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1297817   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1297818   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1297819   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1297820   +   end;
MPRINT(EM_DIAGRAM):   end;
1297821   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297822   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1297823   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1297824   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1297825   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297826   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297827   +   end;
MPRINT(EM_DIAGRAM):   end;
1297828   +end;
MPRINT(EM_DIAGRAM):   end;
1297829   +
1297830   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1297831   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1297832   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1297833   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1297834   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1297835   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297836   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297837   +end;
MPRINT(EM_DIAGRAM):   end;
1297838   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297839   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297840   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1297841   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297842   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1297843   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1297844   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1297845   +   end;
MPRINT(EM_DIAGRAM):   end;
1297846   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1297847   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1297848   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1297849   +   end;
MPRINT(EM_DIAGRAM):   end;
1297850   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1297851   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1297852   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1297853   +   end;
MPRINT(EM_DIAGRAM):   end;
1297854   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297855   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1297856   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1297857   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297858   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297859   +   end;
MPRINT(EM_DIAGRAM):   end;
1297860   +end;
MPRINT(EM_DIAGRAM):   end;
1297861   +
1297862   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1297863   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1297864   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1297865   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1297866   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1297867   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1297868   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297869   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297870   +end;
MPRINT(EM_DIAGRAM):   end;
1297871   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297872   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297873   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1297874   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297875   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1297876   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1297877   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1297878   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1297879   +   end;
MPRINT(EM_DIAGRAM):   end;
1297880   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1297881   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1297882   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1297883   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1297884   +   end;
MPRINT(EM_DIAGRAM):   end;
1297885   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1297886   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1297887   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1297888   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1297889   +   end;
MPRINT(EM_DIAGRAM):   end;
1297890   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1297891   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1297892   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1297893   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1297894   +   end;
MPRINT(EM_DIAGRAM):   end;
1297895   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297896   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1297897   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1297898   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1297899   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297900   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297901   +   end;
MPRINT(EM_DIAGRAM):   end;
1297902   +end;
MPRINT(EM_DIAGRAM):   end;
1297903   +
1297904   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1297905   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1297906   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1297907   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1297908   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1297909   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1297910   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297911   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297912   +end;
MPRINT(EM_DIAGRAM):   end;
1297913   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297914   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297915   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1297916   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297917   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1297918   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1297919   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1297920   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1297921   +   end;
MPRINT(EM_DIAGRAM):   end;
1297922   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1297923   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1297924   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1297925   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1297926   +   end;
MPRINT(EM_DIAGRAM):   end;
1297927   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1297928   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1297929   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1297930   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1297931   +   end;
MPRINT(EM_DIAGRAM):   end;
1297932   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1297933   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1297934   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1297935   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1297936   +   end;
MPRINT(EM_DIAGRAM):   end;
1297937   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297938   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1297939   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1297940   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1297941   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297942   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297943   +   end;
MPRINT(EM_DIAGRAM):   end;
1297944   +end;
MPRINT(EM_DIAGRAM):   end;
1297945   +
1297946   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1297947   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1297948   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1297949   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1297950   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1297951   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1297952   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297953   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297954   +end;
MPRINT(EM_DIAGRAM):   end;
1297955   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297956   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297957   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1297958   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1297959   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1297960   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1297961   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1297962   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1297963   +   end;
MPRINT(EM_DIAGRAM):   end;
1297964   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1297965   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1297966   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1297967   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1297968   +   end;
MPRINT(EM_DIAGRAM):   end;
1297969   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1297970   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1297971   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1297972   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1297973   +   end;
MPRINT(EM_DIAGRAM):   end;
1297974   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1297975   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1297976   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1297977   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1297978   +   end;
MPRINT(EM_DIAGRAM):   end;
1297979   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1297980   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1297981   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1297982   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1297983   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1297984   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297985   +   end;
MPRINT(EM_DIAGRAM):   end;
1297986   +end;
MPRINT(EM_DIAGRAM):   end;
1297987   +
1297988   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1297989   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1297990   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1297991   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1297992   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1297993   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1297994   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1297995   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1297996   +end;
MPRINT(EM_DIAGRAM):   end;
1297997   +else do;
MPRINT(EM_DIAGRAM):   else do;
1297998   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1297999   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1298000   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298001   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1298002   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1298003   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1298004   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1298005   +   end;
MPRINT(EM_DIAGRAM):   end;
1298006   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1298007   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1298008   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1298009   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1298010   +   end;
MPRINT(EM_DIAGRAM):   end;
1298011   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1298012   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1298013   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1298014   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1298015   +   end;
MPRINT(EM_DIAGRAM):   end;
1298016   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1298017   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1298018   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1298019   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1298020   +   end;
MPRINT(EM_DIAGRAM):   end;
1298021   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298022   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1298023   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1298024   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1298025   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1298026   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298027   +   end;
MPRINT(EM_DIAGRAM):   end;
1298028   +end;
MPRINT(EM_DIAGRAM):   end;
1298029   +
1298030   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1298031   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1298032   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1298033   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1298034   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1298035   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1298036   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1298037   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298038   +end;
MPRINT(EM_DIAGRAM):   end;
1298039   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298040   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1298041   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1298042   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298043   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1298044   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1298045   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1298046   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1298047   +   end;
MPRINT(EM_DIAGRAM):   end;
1298048   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1298049   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1298050   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1298051   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1298052   +   end;
MPRINT(EM_DIAGRAM):   end;
1298053   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1298054   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1298055   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1298056   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1298057   +   end;
MPRINT(EM_DIAGRAM):   end;
1298058   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1298059   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1298060   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1298061   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1298062   +   end;
MPRINT(EM_DIAGRAM):   end;
1298063   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298064   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1298065   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1298066   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1298067   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1298068   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298069   +   end;
MPRINT(EM_DIAGRAM):   end;
1298070   +end;
MPRINT(EM_DIAGRAM):   end;
1298071   +
1298072   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298073   +*** Checking missing input Interval
1298074   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1298075   +
1298076   +IF NMISS(
1298077   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1298078   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1298079   +
1298080   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298081   +END;
MPRINT(EM_DIAGRAM):   END;
1298082   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298083   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1298084   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298085   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1298086   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1298087   +END;
MPRINT(EM_DIAGRAM):   END;
1298088   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1298089   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1298090   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1298091   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1298092   +END;
MPRINT(EM_DIAGRAM):   END;
1298093   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298094   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1298095   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298097   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1298098   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298099   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1298100   +   H11  =     0.03855897145156 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.03855897145156 * S_Year_Birth ;
1298101   +   H12  =      0.4940754340088 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.4940754340088 * S_Year_Birth ;
1298102   +   H13  =     0.17524137660647 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.17524137660647 * S_Year_Birth ;
1298103   +   H14  =     0.27270757044038 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.27270757044038 * S_Year_Birth ;
1298104   +   H15  =    -0.02127353119313 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.02127353119313 * S_Year_Birth ;
1298105   +   H16  =    -0.10595973365564 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.10595973365564 * S_Year_Birth ;
1298106   +   H17  =    -0.11271332681901 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.11271332681901 * S_Year_Birth ;
1298107   +   H11  = H11  +     0.21558790598329 * GRP_AcceptedCmp52
1298108   +          +    -0.07145572032882 * GRP_Frq2  +     0.09268595548153 * GRP_Frq3
1298109   +          +    -0.20765463263399 * GRP_Frq4  +    -0.00887637988838 *
1298110   +        GRP_Income2  +    -0.34198008097003 * GRP_Income3
1298111   +          +     0.00518173450113 * GRP_Income4  +     0.17153998784849 *
1298112   +        GRP_Mnt2  +    -0.03282863464194 * GRP_Mnt3  +     0.15479242768387 *
1298113   +        GRP_Mnt4  +    -0.14566682947772 * GRP_MntFishProducts2
1298114   +          +    -0.04697385312971 * GRP_MntFishProducts3
1298115   +          +     0.05477300056491 * GRP_MntFishProducts4
1298116   +          +    -0.21182877070793 * GRP_MntGoldProds2
1298117   +          +    -0.06202001203906 * GRP_MntGoldProds3
1298118   +          +    -0.23297283739715 * GRP_MntGoldProds4
1298119   +          +    -0.27072080481215 * GRP_MntMeatProducts2
1298120   +          +     -0.0879595975531 * GRP_MntMeatProducts3
1298121   +          +     0.01711044358319 * GRP_MntMeatProducts4
1298122   +          +     0.01568057691806 * GRP_MntWines2  +    -0.14454572309741 *
1298123   +        GRP_MntWines3  +      0.1665968837033 * GRP_MntWines4
1298124   +          +    -0.24980039994544 * GRP_NumCatalogPurchases3
1298125   +          +    -0.00199030871063 * GRP_NumCatalogPurchases4
1298126   +          +     0.11565917560156 * GRP_NumDistPurchases2
1298127   +          +      0.1678532898895 * GRP_NumDistPurchases3
1298128   +          +     -0.0338568889009 * GRP_NumDistPurchases4
1298129   +          +     0.09970745707934 * GRP_NumWebPurchases2
1298130   +          +     0.02961221360107 * GRP_NumWebPurchases3
1298131   +          +     0.02261054892411 * GRP_NumWebPurchases4
1298132   +          +     0.22891892518291 * GRP_RFMstat2  +     0.30720492174411 *
1298133   +        GRP_RFMstat3  +     0.02558392907316 * GRP_RFMstat4
1298134   +          +    -0.22752513596954 * GRP_RMntFrq2  +    -0.11010023712096 *
1298135   +        GRP_RMntFrq3  +    -0.29294961809478 * GRP_RMntFrq4
1298136   +          +     0.17323450297234 * GRP_Recency2  +    -0.02999008104866 *
1298137   +        GRP_Recency3  +    -0.07522056103469 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21558790598329 * GRP_AcceptedCmp52 + -0.07145572032882 *
GRP_Frq2 + 0.09268595548153 * GRP_Frq3 + -0.20765463263399 * GRP_Frq4 + -0.00887637988838 *
GRP_Income2 + -0.34198008097003 * GRP_Income3 + 0.00518173450113 * GRP_Income4 +
0.17153998784849 * GRP_Mnt2 + -0.03282863464194 * GRP_Mnt3 + 0.15479242768387 * GRP_Mnt4 +
-0.14566682947772 * GRP_MntFishProducts2 + -0.04697385312971 * GRP_MntFishProducts3 +
0.05477300056491 * GRP_MntFishProducts4 + -0.21182877070793 * GRP_MntGoldProds2 +
-0.06202001203906 * GRP_MntGoldProds3 + -0.23297283739715 * GRP_MntGoldProds4 +
-0.27072080481215 * GRP_MntMeatProducts2 + -0.0879595975531 * GRP_MntMeatProducts3 +
0.01711044358319 * GRP_MntMeatProducts4 + 0.01568057691806 * GRP_MntWines2 + -0.14454572309741
* GRP_MntWines3 + 0.1665968837033 * GRP_MntWines4 + -0.24980039994544 *
GRP_NumCatalogPurchases3 + -0.00199030871063 * GRP_NumCatalogPurchases4 + 0.11565917560156 *
GRP_NumDistPurchases2 + 0.1678532898895 * GRP_NumDistPurchases3 + -0.0338568889009 *
GRP_NumDistPurchases4 + 0.09970745707934 * GRP_NumWebPurchases2 + 0.02961221360107 *
GRP_NumWebPurchases3 + 0.02261054892411 * GRP_NumWebPurchases4 + 0.22891892518291 *
GRP_RFMstat2 + 0.30720492174411 * GRP_RFMstat3 + 0.02558392907316 * GRP_RFMstat4 +
-0.22752513596954 * GRP_RMntFrq2 + -0.11010023712096 * GRP_RMntFrq3 + -0.29294961809478 *
GRP_RMntFrq4 + 0.17323450297234 * GRP_Recency2 + -0.02999008104866 * GRP_Recency3 +
-0.07522056103469 * GRP_Recency4 ;
1298138   +   H12  = H12  +    -0.17475665685155 * GRP_AcceptedCmp52
1298139   +          +     0.39850686717751 * GRP_Frq2  +     0.21273190324396 * GRP_Frq3
1298140   +          +    -0.04292229763335 * GRP_Frq4  +     0.48189221687125 *
1298141   +        GRP_Income2  +       0.757675062227 * GRP_Income3
1298142   +          +    -0.31438345261512 * GRP_Income4  +     0.08884755999997 *
1298143   +        GRP_Mnt2  +     0.02891204793625 * GRP_Mnt3  +    -0.11500381143203 *
1298144   +        GRP_Mnt4  +     0.47755891441547 * GRP_MntFishProducts2
1298145   +          +     0.26645530981311 * GRP_MntFishProducts3
1298146   +          +    -0.17631072283513 * GRP_MntFishProducts4
1298147   +          +    -0.35439521021691 * GRP_MntGoldProds2
1298148   +          +     0.11419663880206 * GRP_MntGoldProds3
1298149   +          +     0.07288749113866 * GRP_MntGoldProds4
1298150   +          +    -0.52191822126159 * GRP_MntMeatProducts2
1298151   +          +    -0.08421627788812 * GRP_MntMeatProducts3
1298152   +          +    -0.15930642038763 * GRP_MntMeatProducts4
1298153   +          +     0.17420985773045 * GRP_MntWines2  +     0.21257483876123 *
1298154   +        GRP_MntWines3  +    -0.13198840161443 * GRP_MntWines4
1298155   +          +    -0.24725403471973 * GRP_NumCatalogPurchases3
1298156   +          +     0.28574938745998 * GRP_NumCatalogPurchases4
1298157   +          +     -0.4878996299474 * GRP_NumDistPurchases2
1298158   +          +     0.10139595392447 * GRP_NumDistPurchases3
1298159   +          +     0.05251891244468 * GRP_NumDistPurchases4
1298160   +          +    -0.18486003226007 * GRP_NumWebPurchases2
1298161   +          +      0.0263831646971 * GRP_NumWebPurchases3
1298162   +          +     0.26495059708503 * GRP_NumWebPurchases4
1298163   +          +    -0.16580006605432 * GRP_RFMstat2  +    -0.12537703875848 *
1298164   +        GRP_RFMstat3  +      -0.100652416931 * GRP_RFMstat4
1298165   +          +    -0.00913931308958 * GRP_RMntFrq2  +    -0.15758837200974 *
1298166   +        GRP_RMntFrq3  +     -0.1198225533702 * GRP_RMntFrq4
1298167   +          +       1.075902392162 * GRP_Recency2  +     0.44926983542925 *
1298168   +        GRP_Recency3  +     -0.4970729472837 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17475665685155 * GRP_AcceptedCmp52 + 0.39850686717751 *
GRP_Frq2 + 0.21273190324396 * GRP_Frq3 + -0.04292229763335 * GRP_Frq4 + 0.48189221687125 *
GRP_Income2 + 0.757675062227 * GRP_Income3 + -0.31438345261512 * GRP_Income4 +
0.08884755999997 * GRP_Mnt2 + 0.02891204793625 * GRP_Mnt3 + -0.11500381143203 * GRP_Mnt4 +
0.47755891441547 * GRP_MntFishProducts2 + 0.26645530981311 * GRP_MntFishProducts3 +
-0.17631072283513 * GRP_MntFishProducts4 + -0.35439521021691 * GRP_MntGoldProds2 +
0.11419663880206 * GRP_MntGoldProds3 + 0.07288749113866 * GRP_MntGoldProds4 +
-0.52191822126159 * GRP_MntMeatProducts2 + -0.08421627788812 * GRP_MntMeatProducts3 +
-0.15930642038763 * GRP_MntMeatProducts4 + 0.17420985773045 * GRP_MntWines2 + 0.21257483876123
* GRP_MntWines3 + -0.13198840161443 * GRP_MntWines4 + -0.24725403471973 *
GRP_NumCatalogPurchases3 + 0.28574938745998 * GRP_NumCatalogPurchases4 + -0.4878996299474 *
GRP_NumDistPurchases2 + 0.10139595392447 * GRP_NumDistPurchases3 + 0.05251891244468 *
GRP_NumDistPurchases4 + -0.18486003226007 * GRP_NumWebPurchases2 + 0.0263831646971 *
GRP_NumWebPurchases3 + 0.26495059708503 * GRP_NumWebPurchases4 + -0.16580006605432 *
GRP_RFMstat2 + -0.12537703875848 * GRP_RFMstat3 + -0.100652416931 * GRP_RFMstat4 +
-0.00913931308958 * GRP_RMntFrq2 + -0.15758837200974 * GRP_RMntFrq3 + -0.1198225533702 *
GRP_RMntFrq4 + 1.075902392162 * GRP_Recency2 + 0.44926983542925 * GRP_Recency3 +
-0.4970729472837 * GRP_Recency4 ;
1298169   +   H13  = H13  +     0.00215688122529 * GRP_AcceptedCmp52
1298170   +          +    -0.01427589791379 * GRP_Frq2  +    -0.13098496868755 * GRP_Frq3
1298171   +          +    -0.30502313457201 * GRP_Frq4  +    -0.37973462663051 *
1298172   +        GRP_Income2  +     0.00732780844057 * GRP_Income3
1298173   +          +     0.53278328894406 * GRP_Income4  +     0.29819966041309 *
1298174   +        GRP_Mnt2  +     0.25349727466129 * GRP_Mnt3  +     0.10579488290769 *
1298175   +        GRP_Mnt4  +    -0.09288921771048 * GRP_MntFishProducts2
1298176   +          +     0.02714802509094 * GRP_MntFishProducts3
1298177   +          +     0.27119078554613 * GRP_MntFishProducts4
1298178   +          +     0.19322428614339 * GRP_MntGoldProds2
1298179   +          +     0.34778546410632 * GRP_MntGoldProds3
1298180   +          +    -0.06570146779096 * GRP_MntGoldProds4
1298181   +          +     0.44935275650977 * GRP_MntMeatProducts2
1298182   +          +     0.00805794344265 * GRP_MntMeatProducts3
1298183   +          +     0.02445782833023 * GRP_MntMeatProducts4
1298184   +          +    -0.12082391878766 * GRP_MntWines2  +    -0.28739181733976 *
1298185   +        GRP_MntWines3  +    -0.12417307544408 * GRP_MntWines4
1298186   +          +     0.33901531634752 * GRP_NumCatalogPurchases3
1298187   +          +     -0.0519425405532 * GRP_NumCatalogPurchases4
1298188   +          +     0.03481806823908 * GRP_NumDistPurchases2
1298189   +          +      0.0546202479864 * GRP_NumDistPurchases3
1298190   +          +    -0.05240296080421 * GRP_NumDistPurchases4
1298191   +          +     0.28307550964921 * GRP_NumWebPurchases2
1298192   +          +     0.31503543231591 * GRP_NumWebPurchases3
1298193   +          +     0.24817135719308 * GRP_NumWebPurchases4
1298194   +          +    -0.05017370187238 * GRP_RFMstat2  +     0.08161239885611 *
1298195   +        GRP_RFMstat3  +    -0.14085507706312 * GRP_RFMstat4
1298196   +          +     0.11738278568714 * GRP_RMntFrq2  +     0.28471680928269 *
1298197   +        GRP_RMntFrq3  +     0.46590886050772 * GRP_RMntFrq4
1298198   +          +     -0.2318556486679 * GRP_Recency2  +    -0.37508297533514 *
1298199   +        GRP_Recency3  +     0.05823801065489 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00215688122529 * GRP_AcceptedCmp52 + -0.01427589791379 *
GRP_Frq2 + -0.13098496868755 * GRP_Frq3 + -0.30502313457201 * GRP_Frq4 + -0.37973462663051 *
GRP_Income2 + 0.00732780844057 * GRP_Income3 + 0.53278328894406 * GRP_Income4 +
0.29819966041309 * GRP_Mnt2 + 0.25349727466129 * GRP_Mnt3 + 0.10579488290769 * GRP_Mnt4 +
-0.09288921771048 * GRP_MntFishProducts2 + 0.02714802509094 * GRP_MntFishProducts3 +
0.27119078554613 * GRP_MntFishProducts4 + 0.19322428614339 * GRP_MntGoldProds2 +
0.34778546410632 * GRP_MntGoldProds3 + -0.06570146779096 * GRP_MntGoldProds4 +
0.44935275650977 * GRP_MntMeatProducts2 + 0.00805794344265 * GRP_MntMeatProducts3 +
0.02445782833023 * GRP_MntMeatProducts4 + -0.12082391878766 * GRP_MntWines2 +
-0.28739181733976 * GRP_MntWines3 + -0.12417307544408 * GRP_MntWines4 + 0.33901531634752 *
GRP_NumCatalogPurchases3 + -0.0519425405532 * GRP_NumCatalogPurchases4 + 0.03481806823908 *
GRP_NumDistPurchases2 + 0.0546202479864 * GRP_NumDistPurchases3 + -0.05240296080421 *
GRP_NumDistPurchases4 + 0.28307550964921 * GRP_NumWebPurchases2 + 0.31503543231591 *
GRP_NumWebPurchases3 + 0.24817135719308 * GRP_NumWebPurchases4 + -0.05017370187238 *
GRP_RFMstat2 + 0.08161239885611 * GRP_RFMstat3 + -0.14085507706312 * GRP_RFMstat4 +
0.11738278568714 * GRP_RMntFrq2 + 0.28471680928269 * GRP_RMntFrq3 + 0.46590886050772 *
GRP_RMntFrq4 + -0.2318556486679 * GRP_Recency2 + -0.37508297533514 * GRP_Recency3 +
0.05823801065489 * GRP_Recency4 ;
1298200   +   H14  = H14  +      0.4684617848987 * GRP_AcceptedCmp52
1298201   +          +    -0.10078363733095 * GRP_Frq2  +     0.12187262992305 * GRP_Frq3
1298202   +          +     0.06615581853287 * GRP_Frq4  +    -0.37438533196327 *
1298203   +        GRP_Income2  +    -0.54951239852844 * GRP_Income3
1298204   +          +     0.42517426076684 * GRP_Income4  +     0.01160451666213 *
1298205   +        GRP_Mnt2  +    -0.19046851266656 * GRP_Mnt3  +    -0.22599863084471 *
1298206   +        GRP_Mnt4  +     0.02252915755857 * GRP_MntFishProducts2
1298207   +          +    -0.08997232581072 * GRP_MntFishProducts3
1298208   +          +    -0.05669599356928 * GRP_MntFishProducts4
1298209   +          +      0.2199150131909 * GRP_MntGoldProds2
1298210   +          +     0.05584571259838 * GRP_MntGoldProds3
1298211   +          +    -0.13160142309505 * GRP_MntGoldProds4
1298212   +          +      0.2539849640816 * GRP_MntMeatProducts2
1298213   +          +     0.29448191059312 * GRP_MntMeatProducts3
1298214   +          +    -0.33946200154351 * GRP_MntMeatProducts4
1298215   +          +    -0.47231816370111 * GRP_MntWines2  +    -0.35916844796743 *
1298216   +        GRP_MntWines3  +     0.15578356288597 * GRP_MntWines4
1298217   +          +     0.35913140014848 * GRP_NumCatalogPurchases3
1298218   +          +    -0.07798422379681 * GRP_NumCatalogPurchases4
1298219   +          +     0.38206153529506 * GRP_NumDistPurchases2
1298220   +          +     0.08642998303162 * GRP_NumDistPurchases3
1298221   +          +    -0.00375635377885 * GRP_NumDistPurchases4
1298222   +          +    -0.04352529411419 * GRP_NumWebPurchases2
1298223   +          +    -0.17285172586868 * GRP_NumWebPurchases3
1298224   +          +     0.23030028338396 * GRP_NumWebPurchases4
1298225   +          +     0.16194254582104 * GRP_RFMstat2  +    -0.03413270353062 *
1298226   +        GRP_RFMstat3  +    -0.32516629559317 * GRP_RFMstat4
1298227   +          +    -0.16070809362515 * GRP_RMntFrq2  +    -0.17716471899416 *
1298228   +        GRP_RMntFrq3  +     0.09335047904411 * GRP_RMntFrq4
1298229   +          +    -0.92875393407697 * GRP_Recency2  +     0.16068827585896 *
1298230   +        GRP_Recency3  +     0.41807637211453 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.4684617848987 * GRP_AcceptedCmp52 + -0.10078363733095 *
GRP_Frq2 + 0.12187262992305 * GRP_Frq3 + 0.06615581853287 * GRP_Frq4 + -0.37438533196327 *
GRP_Income2 + -0.54951239852844 * GRP_Income3 + 0.42517426076684 * GRP_Income4 +
0.01160451666213 * GRP_Mnt2 + -0.19046851266656 * GRP_Mnt3 + -0.22599863084471 * GRP_Mnt4 +
0.02252915755857 * GRP_MntFishProducts2 + -0.08997232581072 * GRP_MntFishProducts3 +
-0.05669599356928 * GRP_MntFishProducts4 + 0.2199150131909 * GRP_MntGoldProds2 +
0.05584571259838 * GRP_MntGoldProds3 + -0.13160142309505 * GRP_MntGoldProds4 + 0.2539849640816
* GRP_MntMeatProducts2 + 0.29448191059312 * GRP_MntMeatProducts3 + -0.33946200154351 *
GRP_MntMeatProducts4 + -0.47231816370111 * GRP_MntWines2 + -0.35916844796743 * GRP_MntWines3 +
0.15578356288597 * GRP_MntWines4 + 0.35913140014848 * GRP_NumCatalogPurchases3 +
-0.07798422379681 * GRP_NumCatalogPurchases4 + 0.38206153529506 * GRP_NumDistPurchases2 +
0.08642998303162 * GRP_NumDistPurchases3 + -0.00375635377885 * GRP_NumDistPurchases4 +
-0.04352529411419 * GRP_NumWebPurchases2 + -0.17285172586868 * GRP_NumWebPurchases3 +
0.23030028338396 * GRP_NumWebPurchases4 + 0.16194254582104 * GRP_RFMstat2 + -0.03413270353062
* GRP_RFMstat3 + -0.32516629559317 * GRP_RFMstat4 + -0.16070809362515 * GRP_RMntFrq2 +
-0.17716471899416 * GRP_RMntFrq3 + 0.09335047904411 * GRP_RMntFrq4 + -0.92875393407697 *
GRP_Recency2 + 0.16068827585896 * GRP_Recency3 + 0.41807637211453 * GRP_Recency4 ;
1298231   +   H15  = H15  +    -0.78481953865912 * GRP_AcceptedCmp52
1298232   +          +     0.05211963408638 * GRP_Frq2  +     0.24938737986681 * GRP_Frq3
1298233   +          +    -0.07347952562846 * GRP_Frq4  +    -0.15741135518664 *
1298234   +        GRP_Income2  +     0.01909378686442 * GRP_Income3
1298235   +          +    -0.15898085757789 * GRP_Income4  +     0.09202012507046 *
1298236   +        GRP_Mnt2  +    -0.39641738573024 * GRP_Mnt3  +     0.02885484069701 *
1298237   +        GRP_Mnt4  +     0.29554161293423 * GRP_MntFishProducts2
1298238   +          +    -0.04439366722112 * GRP_MntFishProducts3
1298239   +          +    -0.22939355735301 * GRP_MntFishProducts4
1298240   +          +    -0.00367144103801 * GRP_MntGoldProds2
1298241   +          +      -0.033315128385 * GRP_MntGoldProds3
1298242   +          +     0.10655545066126 * GRP_MntGoldProds4
1298243   +          +     0.04927093675686 * GRP_MntMeatProducts2
1298244   +          +    -0.20156680946257 * GRP_MntMeatProducts3
1298245   +          +     0.29394273234417 * GRP_MntMeatProducts4
1298246   +          +     0.27324472738231 * GRP_MntWines2  +       0.398830803883 *
1298247   +        GRP_MntWines3  +    -0.16588038849208 * GRP_MntWines4
1298248   +          +     -0.3438340194477 * GRP_NumCatalogPurchases3
1298249   +          +    -0.37438590488645 * GRP_NumCatalogPurchases4
1298250   +          +    -0.42285816542086 * GRP_NumDistPurchases2
1298251   +          +     -0.1008716650505 * GRP_NumDistPurchases3
1298252   +          +    -0.42793112700917 * GRP_NumDistPurchases4
1298253   +          +    -0.06792665579186 * GRP_NumWebPurchases2
1298254   +          +     0.37113277513001 * GRP_NumWebPurchases3
1298255   +          +     0.05720653023952 * GRP_NumWebPurchases4
1298256   +          +    -0.30997814005221 * GRP_RFMstat2  +     0.06219993861842 *
1298257   +        GRP_RFMstat3  +    -0.22600753085668 * GRP_RFMstat4
1298258   +          +    -0.31041957734532 * GRP_RMntFrq2  +     0.25053172234721 *
1298259   +        GRP_RMntFrq3  +     0.15983683107051 * GRP_RMntFrq4
1298260   +          +     0.52797823019932 * GRP_Recency2  +     0.11382874879823 *
1298261   +        GRP_Recency3  +    -0.22166533511817 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.78481953865912 * GRP_AcceptedCmp52 + 0.05211963408638 *
GRP_Frq2 + 0.24938737986681 * GRP_Frq3 + -0.07347952562846 * GRP_Frq4 + -0.15741135518664 *
GRP_Income2 + 0.01909378686442 * GRP_Income3 + -0.15898085757789 * GRP_Income4 +
0.09202012507046 * GRP_Mnt2 + -0.39641738573024 * GRP_Mnt3 + 0.02885484069701 * GRP_Mnt4 +
0.29554161293423 * GRP_MntFishProducts2 + -0.04439366722112 * GRP_MntFishProducts3 +
-0.22939355735301 * GRP_MntFishProducts4 + -0.00367144103801 * GRP_MntGoldProds2 +
-0.033315128385 * GRP_MntGoldProds3 + 0.10655545066126 * GRP_MntGoldProds4 + 0.04927093675686
* GRP_MntMeatProducts2 + -0.20156680946257 * GRP_MntMeatProducts3 + 0.29394273234417 *
GRP_MntMeatProducts4 + 0.27324472738231 * GRP_MntWines2 + 0.398830803883 * GRP_MntWines3 +
-0.16588038849208 * GRP_MntWines4 + -0.3438340194477 * GRP_NumCatalogPurchases3 +
-0.37438590488645 * GRP_NumCatalogPurchases4 + -0.42285816542086 * GRP_NumDistPurchases2 +
-0.1008716650505 * GRP_NumDistPurchases3 + -0.42793112700917 * GRP_NumDistPurchases4 +
-0.06792665579186 * GRP_NumWebPurchases2 + 0.37113277513001 * GRP_NumWebPurchases3 +
0.05720653023952 * GRP_NumWebPurchases4 + -0.30997814005221 * GRP_RFMstat2 + 0.06219993861842
* GRP_RFMstat3 + -0.22600753085668 * GRP_RFMstat4 + -0.31041957734532 * GRP_RMntFrq2 +
0.25053172234721 * GRP_RMntFrq3 + 0.15983683107051 * GRP_RMntFrq4 + 0.52797823019932 *
GRP_Recency2 + 0.11382874879823 * GRP_Recency3 + -0.22166533511817 * GRP_Recency4 ;
1298262   +   H16  = H16  +      0.7107136456569 * GRP_AcceptedCmp52
1298263   +          +     -0.4751898387651 * GRP_Frq2  +    -0.11277060686411 * GRP_Frq3
1298264   +          +     0.15821547082299 * GRP_Frq4  +    -0.45945049231995 *
1298265   +        GRP_Income2  +    -0.18413512635176 * GRP_Income3
1298266   +          +     0.39594738835509 * GRP_Income4  +    -0.15472205523822 *
1298267   +        GRP_Mnt2  +     0.02844181224363 * GRP_Mnt3  +     0.45435843401555 *
1298268   +        GRP_Mnt4  +    -0.29220588593813 * GRP_MntFishProducts2
1298269   +          +     0.04340555393469 * GRP_MntFishProducts3
1298270   +          +    -0.20048219926361 * GRP_MntFishProducts4
1298271   +          +     0.16101452165456 * GRP_MntGoldProds2
1298272   +          +    -0.04467647211336 * GRP_MntGoldProds3
1298273   +          +     0.32142013598241 * GRP_MntGoldProds4
1298274   +          +     0.29741565154233 * GRP_MntMeatProducts2
1298275   +          +    -0.00264678222241 * GRP_MntMeatProducts3
1298276   +          +    -0.11596499325048 * GRP_MntMeatProducts4
1298277   +          +    -0.29849043995136 * GRP_MntWines2  +     0.14756452272338 *
1298278   +        GRP_MntWines3  +     0.48995265672675 * GRP_MntWines4
1298279   +          +     0.80854583627117 * GRP_NumCatalogPurchases3
1298280   +          +     0.14001888431357 * GRP_NumCatalogPurchases4
1298281   +          +     0.36107050137299 * GRP_NumDistPurchases2
The SAS System
 
1298282   +          +    -0.10375572120121 * GRP_NumDistPurchases3
1298283   +          +     0.10557004956787 * GRP_NumDistPurchases4
1298284   +          +     0.04608069099876 * GRP_NumWebPurchases2
1298285   +          +     0.15561947954396 * GRP_NumWebPurchases3
1298286   +          +    -0.01081470092004 * GRP_NumWebPurchases4
1298287   +          +     0.21994454623245 * GRP_RFMstat2  +    -0.08858421895818 *
1298288   +        GRP_RFMstat3  +    -0.13608887793525 * GRP_RFMstat4
1298289   +          +     0.07482010458977 * GRP_RMntFrq2  +    -0.11874760292742 *
1298290   +        GRP_RMntFrq3  +     0.56887215594366 * GRP_RMntFrq4
1298291   +          +    -0.13548983954455 * GRP_Recency2  +    -0.25036935235639 *
1298292   +        GRP_Recency3  +     -0.0282277663071 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.7107136456569 * GRP_AcceptedCmp52 + -0.4751898387651 *
GRP_Frq2 + -0.11277060686411 * GRP_Frq3 + 0.15821547082299 * GRP_Frq4 + -0.45945049231995 *
GRP_Income2 + -0.18413512635176 * GRP_Income3 + 0.39594738835509 * GRP_Income4 +
-0.15472205523822 * GRP_Mnt2 + 0.02844181224363 * GRP_Mnt3 + 0.45435843401555 * GRP_Mnt4 +
-0.29220588593813 * GRP_MntFishProducts2 + 0.04340555393469 * GRP_MntFishProducts3 +
-0.20048219926361 * GRP_MntFishProducts4 + 0.16101452165456 * GRP_MntGoldProds2 +
-0.04467647211336 * GRP_MntGoldProds3 + 0.32142013598241 * GRP_MntGoldProds4 +
0.29741565154233 * GRP_MntMeatProducts2 + -0.00264678222241 * GRP_MntMeatProducts3 +
-0.11596499325048 * GRP_MntMeatProducts4 + -0.29849043995136 * GRP_MntWines2 +
0.14756452272338 * GRP_MntWines3 + 0.48995265672675 * GRP_MntWines4 + 0.80854583627117 *
GRP_NumCatalogPurchases3 + 0.14001888431357 * GRP_NumCatalogPurchases4 + 0.36107050137299 *
GRP_NumDistPurchases2 + -0.10375572120121 * GRP_NumDistPurchases3 + 0.10557004956787 *
GRP_NumDistPurchases4 + 0.04608069099876 * GRP_NumWebPurchases2 + 0.15561947954396 *
GRP_NumWebPurchases3 + -0.01081470092004 * GRP_NumWebPurchases4 + 0.21994454623245 *
GRP_RFMstat2 + -0.08858421895818 * GRP_RFMstat3 + -0.13608887793525 * GRP_RFMstat4 +
0.07482010458977 * GRP_RMntFrq2 + -0.11874760292742 * GRP_RMntFrq3 + 0.56887215594366 *
GRP_RMntFrq4 + -0.13548983954455 * GRP_Recency2 + -0.25036935235639 * GRP_Recency3 +
-0.0282277663071 * GRP_Recency4 ;
1298293   +   H17  = H17  +    -0.06745892596619 * GRP_AcceptedCmp52
1298294   +          +    -0.09506194345469 * GRP_Frq2  +    -0.29707644715885 * GRP_Frq3
1298295   +          +    -0.06874693052001 * GRP_Frq4  +    -0.08949373241741 *
1298296   +        GRP_Income2  +     0.02965579603049 * GRP_Income3
1298297   +          +    -0.02192829727213 * GRP_Income4  +     0.30180973300088 *
1298298   +        GRP_Mnt2  +    -0.10648502526616 * GRP_Mnt3  +     0.07588844839465 *
1298299   +        GRP_Mnt4  +    -0.30524623655199 * GRP_MntFishProducts2
1298300   +          +    -0.20032703571491 * GRP_MntFishProducts3
1298301   +          +    -0.08348811352746 * GRP_MntFishProducts4
1298302   +          +    -0.00744131870881 * GRP_MntGoldProds2
1298303   +          +    -0.27347309859096 * GRP_MntGoldProds3
1298304   +          +    -0.04458870469416 * GRP_MntGoldProds4
1298305   +          +     0.17538261434498 * GRP_MntMeatProducts2
1298306   +          +    -0.08059547298843 * GRP_MntMeatProducts3
1298307   +          +     0.03113249898233 * GRP_MntMeatProducts4
1298308   +          +    -0.23690909413276 * GRP_MntWines2  +    -0.01511980231776 *
1298309   +        GRP_MntWines3  +     -0.2825327824317 * GRP_MntWines4
1298310   +          +     0.13919784888607 * GRP_NumCatalogPurchases3
1298311   +          +    -0.10871281978714 * GRP_NumCatalogPurchases4
1298312   +          +     0.20540014620209 * GRP_NumDistPurchases2
1298313   +          +     0.17744784873298 * GRP_NumDistPurchases3
1298314   +          +      -0.003486430833 * GRP_NumDistPurchases4
1298315   +          +    -0.04863967797645 * GRP_NumWebPurchases2
1298316   +          +     0.07245829152192 * GRP_NumWebPurchases3
1298317   +          +    -0.27395606297099 * GRP_NumWebPurchases4
1298318   +          +    -0.14496279180087 * GRP_RFMstat2  +     0.28224463929838 *
1298319   +        GRP_RFMstat3  +     0.26720059295202 * GRP_RFMstat4
1298320   +          +    -0.07120881723264 * GRP_RMntFrq2  +     0.16350065828319 *
1298321   +        GRP_RMntFrq3  +      0.3117297070285 * GRP_RMntFrq4
1298322   +          +    -0.52884474877094 * GRP_Recency2  +    -0.17937099376746 *
1298323   +        GRP_Recency3  +     -0.0157357289132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.06745892596619 * GRP_AcceptedCmp52 + -0.09506194345469 *
GRP_Frq2 + -0.29707644715885 * GRP_Frq3 + -0.06874693052001 * GRP_Frq4 + -0.08949373241741 *
GRP_Income2 + 0.02965579603049 * GRP_Income3 + -0.02192829727213 * GRP_Income4 +
0.30180973300088 * GRP_Mnt2 + -0.10648502526616 * GRP_Mnt3 + 0.07588844839465 * GRP_Mnt4 +
-0.30524623655199 * GRP_MntFishProducts2 + -0.20032703571491 * GRP_MntFishProducts3 +
-0.08348811352746 * GRP_MntFishProducts4 + -0.00744131870881 * GRP_MntGoldProds2 +
-0.27347309859096 * GRP_MntGoldProds3 + -0.04458870469416 * GRP_MntGoldProds4 +
0.17538261434498 * GRP_MntMeatProducts2 + -0.08059547298843 * GRP_MntMeatProducts3 +
0.03113249898233 * GRP_MntMeatProducts4 + -0.23690909413276 * GRP_MntWines2 +
-0.01511980231776 * GRP_MntWines3 + -0.2825327824317 * GRP_MntWines4 + 0.13919784888607 *
GRP_NumCatalogPurchases3 + -0.10871281978714 * GRP_NumCatalogPurchases4 + 0.20540014620209 *
GRP_NumDistPurchases2 + 0.17744784873298 * GRP_NumDistPurchases3 + -0.003486430833 *
GRP_NumDistPurchases4 + -0.04863967797645 * GRP_NumWebPurchases2 + 0.07245829152192 *
GRP_NumWebPurchases3 + -0.27395606297099 * GRP_NumWebPurchases4 + -0.14496279180087 *
GRP_RFMstat2 + 0.28224463929838 * GRP_RFMstat3 + 0.26720059295202 * GRP_RFMstat4 +
-0.07120881723264 * GRP_RMntFrq2 + 0.16350065828319 * GRP_RMntFrq3 + 0.3117297070285 *
GRP_RMntFrq4 + -0.52884474877094 * GRP_Recency2 + -0.17937099376746 * GRP_Recency3 +
-0.0157357289132 * GRP_Recency4 ;
1298324   +   H11  =    -0.76467628027618 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.76467628027618 + H11 ;
1298325   +   H12  =    -0.03405517571825 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03405517571825 + H12 ;
1298326   +   H13  =    -0.32845676351839 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.32845676351839 + H13 ;
1298327   +   H14  =     0.08379615404181 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.08379615404181 + H14 ;
1298328   +   H15  =    -0.77228291932436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.77228291932436 + H15 ;
1298329   +   H16  =    -0.77356855332279 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.77356855332279 + H16 ;
1298330   +   H17  =     0.45067845230796 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.45067845230796 + H17 ;
1298331   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1298332   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1298333   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1298334   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1298335   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1298336   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1298337   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1298338   +END;
MPRINT(EM_DIAGRAM):   END;
1298339   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1298340   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1298341   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1298342   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1298343   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1298344   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1298345   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1298346   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1298347   +END;
MPRINT(EM_DIAGRAM):   END;
1298348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298349   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1298350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298351   +
1298352   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1298353   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1298354   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1298355   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1298356   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1298357   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298358   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1298359   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1298360   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1298361   +end;
MPRINT(EM_DIAGRAM):   end;
1298362   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298363   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1298364   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1298365   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1298366   +   end;
MPRINT(EM_DIAGRAM):   end;
1298367   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1298368   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1298369   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1298370   +   end;
MPRINT(EM_DIAGRAM):   end;
1298371   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298372   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1298373   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1298374   +   end;
MPRINT(EM_DIAGRAM):   end;
1298375   +end;
MPRINT(EM_DIAGRAM):   end;
1298376   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1298377   +   P_DepVar1  =    -0.15999450347654 * H11  +     1.35667407296837 * H12
1298378   +          +    -0.71419530867579 * H13  +     -1.0947746264744 * H14
1298379   +          +     0.98315214007209 * H15  +    -1.32163386678746 * H16
1298380   +          +    -0.29329090231091 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.15999450347654 * H11 + 1.35667407296837 * H12 +
-0.71419530867579 * H13 + -1.0947746264744 * H14 + 0.98315214007209 * H15 + -1.32163386678746
* H16 + -0.29329090231091 * H17 ;
1298381   +   P_DepVar1  =    -1.66210022161101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66210022161101 + P_DepVar1 ;
1298382   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1298383   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1298384   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1298385   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1298386   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1298387   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1298388   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1298389   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1298390   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1298391   +END;
MPRINT(EM_DIAGRAM):   END;
1298392   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1298393   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1298394   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1298395   +END;
MPRINT(EM_DIAGRAM):   END;
1298396   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1298397   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1298398   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1298399   +END;
MPRINT(EM_DIAGRAM):   END;
1298400   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1298401   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1298402   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1298403   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1298404   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1298405   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1298406   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1298407   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298408   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1298409   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1298410   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1298411   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1298412   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1298413   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1298414   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1298415   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1298416   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1298417   +END;
MPRINT(EM_DIAGRAM):   END;
1298418   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1298419   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1298420   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1298421   +drop
1298422   +H11
1298423   +H12
1298424   +H13
1298425   +H14
1298426   +H15
1298427   +H16
1298428   +H17
1298429   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1298430   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1298431   +* Renaming variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural18;
1298432   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298433   +* Renaming Posterior variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural18;
1298434   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298435   +drop Neural18_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar1;
1298436   +Neural18_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar1 = P_DepVar1;
1298437   +drop Neural18_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar0;
1298438   +Neural18_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar0 = P_DepVar0;
1298439   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298440   +* Renaming _WARN_ variable for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural18;
1298441   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298442   +length Neural18_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural18_WARN_ $4;
1298443   +drop Neural18_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural18_WARN_;
1298444   +Neural18_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural18_WARN_ = _WARN_;
1298445   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298446   +* Ensmbl7: Average Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Average Posteriors of 3 models;
1298447   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298448   +P_DepVar1 = (
1298449   +Neural21_P_DepVar1 +
1298450   +Neural22_P_DepVar1 +
1298451   +Neural18_P_DepVar1
1298452   +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural21_P_DepVar1 + Neural22_P_DepVar1 +
Neural18_P_DepVar1 )/3;
1298453   +P_DepVar0 = (
1298454   +Neural21_P_DepVar0 +
1298455   +Neural22_P_DepVar0 +
1298456   +Neural18_P_DepVar0
1298457   +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural21_P_DepVar0 + Neural22_P_DepVar0 +
Neural18_P_DepVar0 )/3;
1298458   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298459   +* Ensmbl7: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Computing Classification Vars;
1298460   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298461   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1298462   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1298463   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1298464   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1298465   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1298466   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1298467   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1298468   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1298469   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1298470   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1298471   +end;
MPRINT(EM_DIAGRAM):   end;
1298472   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1298473   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1298474   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1298475   +end;
MPRINT(EM_DIAGRAM):   end;
1298476   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1298477   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298478   +* Ensmbl7: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Producing Unformatted variable;
1298479   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298480   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1298481   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1298482   +else
1298483   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1298484   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298485   +* Ensmbl7: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Computing _WARN_ Variable;
1298486   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298487   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1298488   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1298489   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1298490   +if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1298490  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1298491   +if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1298491  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1298492   +if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1298492  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1298493   +if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1298493  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1298494   +if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1298494  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1298495   +if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1298495  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1298496   +if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1298496  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1298497   +if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1298497  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1298498   +if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1298498  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1298499   +if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1298499  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1298500   +if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1298500  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1298501   +if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1298501  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1298502   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298503   +* Ensmbl7: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Computing Residual Vars;
1298504   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1298505   +if
1298506   +F_DepVar NE '1'
1298507   +AND F_DepVar NE '0'
1298508   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1298509   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1298510   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1298511   +end;
MPRINT(EM_DIAGRAM):   end;
1298512   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298513   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1298514   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1298515   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1298516   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1298517   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1298518   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1298519   +END;
MPRINT(EM_DIAGRAM):   END;
1298520   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1298521    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL7_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL21_VALIDATE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1298522    quit;
1298523    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl7_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl7_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl7_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1298583    filename _pref
1298583  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMPUBLISHSCORE.sas";
1298584    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1298585    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMPUBLISHSCORE.sas.
1298586   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1298587   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1298588   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1298589   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1298590   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1298591   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1298592   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1298593   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1298594   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1298595   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1298596   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1298597   +LENGTH _WARN_ $4
1298598   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1298599   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1298600   +
1298601   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1298602   +
1298603   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1298604   +
1298605   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1298606   +
1298607   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1298608   +
1298609   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1298610   +
1298611   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1298612   +
1298613   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1298614   +
1298615   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1298616   +
1298617   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1298618   +
1298619   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1298620   +
1298621   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1298622   +
1298623   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1298624   +
1298625   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1298626   +
1298627   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1298628   +
1298629   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1298630   +
1298631   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1298632   +
1298633   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1298634   +
1298635   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1298636   +
1298637   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1298638   +
1298639   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1298640   +
1298641   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1298642   +
1298643   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1298644   +
1298645   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1298646   +
1298647   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1298648   +
1298649   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1298650   +
1298651   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1298652   +
1298653   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1298654   +
1298655   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1298656   +
1298657   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1298658   +
1298659   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1298660   +
1298661   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1298662   +
1298663   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1298664   +
1298665   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1298666   +
1298667   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1298668   +
1298669   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1298670   +
1298671   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1298672   +
1298673   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1298674   +
1298675   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1298676   +
1298677   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1298678   +
1298679   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1298680   +
1298681   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1298682   +
1298683   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1298684   +
1298685   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1298686   +
1298687   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1298688   +
1298689   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1298690   +
1298691   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1298692   +
1298693   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1298694   +
1298695   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1298696   +
1298697   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1298698   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1298699   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1298700   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1298701   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1298702   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298703   +end;
MPRINT(EM_DIAGRAM):   end;
1298704   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298705   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1298706   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1298707   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298708   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1298709   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1298710   +   end;
MPRINT(EM_DIAGRAM):   end;
1298711   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1298712   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1298713   +   end;
MPRINT(EM_DIAGRAM):   end;
1298714   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298715   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1298716   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1298717   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298718   +   end;
MPRINT(EM_DIAGRAM):   end;
1298719   +end;
MPRINT(EM_DIAGRAM):   end;
1298720   +
1298721   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1298722   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1298723   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1298724   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1298725   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1298726   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1298727   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1298728   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298729   +end;
MPRINT(EM_DIAGRAM):   end;
1298730   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298731   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1298732   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1298733   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298734   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1298735   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1298736   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1298737   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1298738   +   end;
MPRINT(EM_DIAGRAM):   end;
1298739   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1298740   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1298741   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1298742   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1298743   +   end;
MPRINT(EM_DIAGRAM):   end;
1298744   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1298745   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1298746   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1298747   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1298748   +   end;
MPRINT(EM_DIAGRAM):   end;
1298749   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1298750   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1298751   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1298752   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1298753   +   end;
MPRINT(EM_DIAGRAM):   end;
1298754   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298755   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1298756   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1298757   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1298758   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1298759   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298760   +   end;
MPRINT(EM_DIAGRAM):   end;
1298761   +end;
MPRINT(EM_DIAGRAM):   end;
1298762   +
1298763   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1298764   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1298765   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1298766   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1298767   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1298768   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1298769   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1298770   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298771   +end;
MPRINT(EM_DIAGRAM):   end;
1298772   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298773   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1298774   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1298775   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298776   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1298777   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1298778   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1298779   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1298780   +   end;
MPRINT(EM_DIAGRAM):   end;
1298781   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1298782   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1298783   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1298784   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1298785   +   end;
MPRINT(EM_DIAGRAM):   end;
1298786   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1298787   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1298788   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1298789   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1298790   +   end;
MPRINT(EM_DIAGRAM):   end;
1298791   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1298792   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1298793   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1298794   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1298795   +   end;
MPRINT(EM_DIAGRAM):   end;
1298796   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298797   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1298798   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1298799   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1298800   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1298801   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298802   +   end;
MPRINT(EM_DIAGRAM):   end;
1298803   +end;
MPRINT(EM_DIAGRAM):   end;
1298804   +
1298805   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1298806   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1298807   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1298808   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1298809   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1298810   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1298811   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1298812   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298813   +end;
MPRINT(EM_DIAGRAM):   end;
1298814   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298815   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1298816   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1298817   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298818   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1298819   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1298820   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1298821   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1298822   +   end;
MPRINT(EM_DIAGRAM):   end;
1298823   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1298824   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1298825   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1298826   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1298827   +   end;
MPRINT(EM_DIAGRAM):   end;
1298828   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1298829   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1298830   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1298831   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1298832   +   end;
MPRINT(EM_DIAGRAM):   end;
1298833   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1298834   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1298835   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1298836   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1298837   +   end;
MPRINT(EM_DIAGRAM):   end;
1298838   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298839   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1298840   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1298841   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1298842   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1298843   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298844   +   end;
MPRINT(EM_DIAGRAM):   end;
1298845   +end;
MPRINT(EM_DIAGRAM):   end;
1298846   +
1298847   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1298848   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1298849   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1298850   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1298851   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1298852   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1298853   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1298854   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298855   +end;
MPRINT(EM_DIAGRAM):   end;
1298856   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298857   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1298858   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1298859   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298860   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1298861   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1298862   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1298863   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1298864   +   end;
MPRINT(EM_DIAGRAM):   end;
1298865   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1298866   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1298867   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1298868   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1298869   +   end;
MPRINT(EM_DIAGRAM):   end;
1298870   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1298871   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1298872   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1298873   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1298874   +   end;
MPRINT(EM_DIAGRAM):   end;
1298875   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1298876   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1298877   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1298878   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1298879   +   end;
MPRINT(EM_DIAGRAM):   end;
1298880   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298881   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1298882   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1298883   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1298884   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1298885   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298886   +   end;
MPRINT(EM_DIAGRAM):   end;
1298887   +end;
MPRINT(EM_DIAGRAM):   end;
1298888   +
1298889   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1298890   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1298891   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1298892   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1298893   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1298894   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1298895   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1298896   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298897   +end;
MPRINT(EM_DIAGRAM):   end;
1298898   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298899   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1298900   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1298901   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298902   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1298903   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1298904   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1298905   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1298906   +   end;
MPRINT(EM_DIAGRAM):   end;
1298907   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1298908   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1298909   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1298910   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1298911   +   end;
MPRINT(EM_DIAGRAM):   end;
1298912   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1298913   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1298914   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1298915   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1298916   +   end;
MPRINT(EM_DIAGRAM):   end;
1298917   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1298918   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1298919   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1298920   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1298921   +   end;
MPRINT(EM_DIAGRAM):   end;
1298922   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298923   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1298924   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1298925   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1298926   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1298927   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298928   +   end;
MPRINT(EM_DIAGRAM):   end;
1298929   +end;
MPRINT(EM_DIAGRAM):   end;
1298930   +
1298931   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1298932   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1298933   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1298934   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1298935   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1298936   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1298937   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1298938   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298939   +end;
MPRINT(EM_DIAGRAM):   end;
1298940   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298941   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1298942   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1298943   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298944   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1298945   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1298946   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1298947   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1298948   +   end;
MPRINT(EM_DIAGRAM):   end;
1298949   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1298950   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1298951   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1298952   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1298953   +   end;
MPRINT(EM_DIAGRAM):   end;
1298954   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1298955   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1298956   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1298957   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1298958   +   end;
MPRINT(EM_DIAGRAM):   end;
1298959   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1298960   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1298961   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1298962   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1298963   +   end;
MPRINT(EM_DIAGRAM):   end;
1298964   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1298965   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1298966   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1298967   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1298968   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1298969   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298970   +   end;
MPRINT(EM_DIAGRAM):   end;
1298971   +end;
MPRINT(EM_DIAGRAM):   end;
1298972   +
1298973   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1298974   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1298975   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1298976   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1298977   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1298978   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1298979   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1298980   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1298981   +end;
MPRINT(EM_DIAGRAM):   end;
1298982   +else do;
MPRINT(EM_DIAGRAM):   else do;
1298983   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1298984   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1298985   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1298986   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1298987   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1298988   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1298989   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1298990   +   end;
MPRINT(EM_DIAGRAM):   end;
1298991   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1298992   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1298993   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1298994   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1298995   +   end;
MPRINT(EM_DIAGRAM):   end;
1298996   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1298997   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1298998   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1298999   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1299000   +   end;
MPRINT(EM_DIAGRAM):   end;
1299001   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1299002   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1299003   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1299004   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1299005   +   end;
MPRINT(EM_DIAGRAM):   end;
1299006   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1299007   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1299008   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1299009   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1299010   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1299011   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299012   +   end;
MPRINT(EM_DIAGRAM):   end;
1299013   +end;
MPRINT(EM_DIAGRAM):   end;
1299014   +
1299015   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1299016   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1299017   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1299018   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1299019   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1299020   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1299021   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299022   +end;
MPRINT(EM_DIAGRAM):   end;
1299023   +else do;
MPRINT(EM_DIAGRAM):   else do;
1299024   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1299025   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1299026   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1299027   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1299028   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1299029   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1299030   +   end;
MPRINT(EM_DIAGRAM):   end;
1299031   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1299032   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1299033   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1299034   +   end;
MPRINT(EM_DIAGRAM):   end;
1299035   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1299036   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1299037   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1299038   +   end;
MPRINT(EM_DIAGRAM):   end;
1299039   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1299040   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1299041   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1299042   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1299043   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299044   +   end;
MPRINT(EM_DIAGRAM):   end;
1299045   +end;
MPRINT(EM_DIAGRAM):   end;
1299046   +
1299047   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1299048   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1299049   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1299050   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1299051   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1299052   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1299053   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1299054   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299055   +end;
MPRINT(EM_DIAGRAM):   end;
1299056   +else do;
MPRINT(EM_DIAGRAM):   else do;
1299057   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1299058   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1299059   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1299060   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1299061   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1299062   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1299063   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1299064   +   end;
MPRINT(EM_DIAGRAM):   end;
1299065   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1299066   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1299067   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1299068   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1299069   +   end;
MPRINT(EM_DIAGRAM):   end;
1299070   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1299071   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1299072   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1299073   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1299074   +   end;
MPRINT(EM_DIAGRAM):   end;
1299075   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1299076   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1299077   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1299078   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1299079   +   end;
MPRINT(EM_DIAGRAM):   end;
1299080   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1299081   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1299082   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1299083   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1299084   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1299085   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299086   +   end;
MPRINT(EM_DIAGRAM):   end;
1299087   +end;
MPRINT(EM_DIAGRAM):   end;
1299088   +
1299089   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1299090   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1299091   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1299092   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1299093   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1299094   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1299095   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1299096   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299097   +end;
MPRINT(EM_DIAGRAM):   end;
1299098   +else do;
MPRINT(EM_DIAGRAM):   else do;
1299099   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1299100   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1299101   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1299102   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1299103   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1299104   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1299105   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1299106   +   end;
MPRINT(EM_DIAGRAM):   end;
1299107   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1299108   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1299109   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1299110   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1299111   +   end;
MPRINT(EM_DIAGRAM):   end;
1299112   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1299113   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1299114   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1299115   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1299116   +   end;
MPRINT(EM_DIAGRAM):   end;
1299117   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1299118   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1299119   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1299120   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1299121   +   end;
MPRINT(EM_DIAGRAM):   end;
1299122   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1299123   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1299124   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1299125   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1299126   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1299127   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299128   +   end;
MPRINT(EM_DIAGRAM):   end;
1299129   +end;
MPRINT(EM_DIAGRAM):   end;
1299130   +
1299131   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1299132   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1299133   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1299134   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1299135   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1299136   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1299137   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1299138   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299139   +end;
MPRINT(EM_DIAGRAM):   end;
1299140   +else do;
MPRINT(EM_DIAGRAM):   else do;
1299141   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1299142   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1299143   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1299144   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1299145   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1299146   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1299147   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1299148   +   end;
MPRINT(EM_DIAGRAM):   end;
1299149   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1299150   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1299151   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1299152   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1299153   +   end;
MPRINT(EM_DIAGRAM):   end;
1299154   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1299155   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1299156   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1299157   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1299158   +   end;
MPRINT(EM_DIAGRAM):   end;
1299159   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1299160   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1299161   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1299162   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1299163   +   end;
MPRINT(EM_DIAGRAM):   end;
1299164   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1299165   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1299166   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1299167   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1299168   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1299169   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299170   +   end;
MPRINT(EM_DIAGRAM):   end;
1299171   +end;
MPRINT(EM_DIAGRAM):   end;
1299172   +
1299173   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1299174   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1299175   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1299176   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1299177   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1299178   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1299179   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1299180   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299181   +end;
MPRINT(EM_DIAGRAM):   end;
1299182   +else do;
MPRINT(EM_DIAGRAM):   else do;
1299183   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1299184   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1299185   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1299186   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1299187   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1299188   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1299189   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1299190   +   end;
MPRINT(EM_DIAGRAM):   end;
1299191   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1299192   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1299193   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1299194   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1299195   +   end;
MPRINT(EM_DIAGRAM):   end;
1299196   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1299197   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1299198   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1299199   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1299200   +   end;
MPRINT(EM_DIAGRAM):   end;
1299201   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1299202   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1299203   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1299204   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1299205   +   end;
MPRINT(EM_DIAGRAM):   end;
1299206   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1299207   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1299208   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1299209   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1299210   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1299211   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299212   +   end;
MPRINT(EM_DIAGRAM):   end;
1299213   +end;
MPRINT(EM_DIAGRAM):   end;
1299214   +
1299215   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1299216   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1299217   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1299218   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1299219   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1299220   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1299221   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1299222   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299223   +end;
MPRINT(EM_DIAGRAM):   end;
1299224   +else do;
MPRINT(EM_DIAGRAM):   else do;
1299225   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1299226   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1299227   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1299228   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1299229   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1299230   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1299231   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1299232   +   end;
MPRINT(EM_DIAGRAM):   end;
1299233   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1299234   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1299235   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1299236   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1299237   +   end;
MPRINT(EM_DIAGRAM):   end;
1299238   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1299239   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1299240   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1299241   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1299242   +   end;
MPRINT(EM_DIAGRAM):   end;
1299243   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1299244   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1299245   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1299246   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1299247   +   end;
MPRINT(EM_DIAGRAM):   end;
1299248   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1299249   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1299250   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1299251   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1299252   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1299253   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299254   +   end;
MPRINT(EM_DIAGRAM):   end;
1299255   +end;
MPRINT(EM_DIAGRAM):   end;
1299256   +
1299257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299258   +*** Checking missing input Interval
1299259   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1299260   +
1299261   +IF NMISS(
1299262   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1299263   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1299264   +
1299265   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1299266   +END;
MPRINT(EM_DIAGRAM):   END;
1299267   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299268   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1299269   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299270   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1299271   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1299272   +END;
MPRINT(EM_DIAGRAM):   END;
1299273   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1299274   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1299275   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1299276   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1299277   +END;
MPRINT(EM_DIAGRAM):   END;
1299278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299279   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1299280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299282   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1299283   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299284   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1299285   +   H11  =      0.0668146440452 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.0668146440452 * S_Year_Birth ;
1299286   +   H12  =     0.02918236951724 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.02918236951724 * S_Year_Birth ;
1299287   +   H13  =     0.52122974180208 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.52122974180208 * S_Year_Birth ;
1299288   +   H14  =     -0.1823800721103 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.1823800721103 * S_Year_Birth ;
1299289   +   H11  = H11  +    -0.48347630033708 * GRP_AcceptedCmp52
1299290   +          +     0.37100635990339 * GRP_Frq2  +     0.04377799127913 * GRP_Frq3
1299291   +          +     -0.1974477050613 * GRP_Frq4  +     0.10700887225506 *
1299292   +        GRP_Income2  +      0.3291591268929 * GRP_Income3
1299293   +          +     0.00612929517663 * GRP_Income4  +    -0.23329153390557 *
1299294   +        GRP_Mnt2  +    -0.08800204437411 * GRP_Mnt3  +    -0.08445529701198 *
1299295   +        GRP_Mnt4  +     0.28673732624133 * GRP_MntFishProducts2
1299296   +          +    -0.14978605827752 * GRP_MntFishProducts3
1299297   +          +     0.22642470616542 * GRP_MntFishProducts4
1299298   +          +     0.07604404821672 * GRP_MntGoldProds2
1299299   +          +     0.04745212568332 * GRP_MntGoldProds3
1299300   +          +    -0.10028215217028 * GRP_MntGoldProds4
1299301   +          +    -0.07377682497053 * GRP_MntMeatProducts2
1299302   +          +    -0.09960214357487 * GRP_MntMeatProducts3
1299303   +          +    -0.25438120582859 * GRP_MntMeatProducts4
1299304   +          +     0.42639299324809 * GRP_MntWines2  +     0.31089292559786 *
1299305   +        GRP_MntWines3  +    -0.26826041457934 * GRP_MntWines4
1299306   +          +    -0.53742609478771 * GRP_NumCatalogPurchases3
1299307   +          +    -0.03023603128161 * GRP_NumCatalogPurchases4
1299308   +          +    -0.37743946252805 * GRP_NumDistPurchases2
1299309   +          +    -0.01872647257623 * GRP_NumDistPurchases3
1299310   +          +    -0.31993024737958 * GRP_NumDistPurchases4
1299311   +          +    -0.11078713164327 * GRP_NumWebPurchases2
1299312   +          +     0.24754701690398 * GRP_NumWebPurchases3
1299313   +          +     0.01530465573539 * GRP_NumWebPurchases4
1299314   +          +    -0.17630256491744 * GRP_RFMstat2  +    -0.47929093118323 *
1299315   +        GRP_RFMstat3  +     0.26729201021061 * GRP_RFMstat4
1299316   +          +    -0.20197995708067 * GRP_RMntFrq2  +    -0.07138949090838 *
1299317   +        GRP_RMntFrq3  +    -0.08653988697814 * GRP_RMntFrq4
1299318   +          +     1.10790516734526 * GRP_Recency2  +     0.22440369463671 *
1299319   +        GRP_Recency3  +    -0.44624012521308 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.48347630033708 * GRP_AcceptedCmp52 + 0.37100635990339 *
GRP_Frq2 + 0.04377799127913 * GRP_Frq3 + -0.1974477050613 * GRP_Frq4 + 0.10700887225506 *
GRP_Income2 + 0.3291591268929 * GRP_Income3 + 0.00612929517663 * GRP_Income4 +
-0.23329153390557 * GRP_Mnt2 + -0.08800204437411 * GRP_Mnt3 + -0.08445529701198 * GRP_Mnt4 +
0.28673732624133 * GRP_MntFishProducts2 + -0.14978605827752 * GRP_MntFishProducts3 +
0.22642470616542 * GRP_MntFishProducts4 + 0.07604404821672 * GRP_MntGoldProds2 +
0.04745212568332 * GRP_MntGoldProds3 + -0.10028215217028 * GRP_MntGoldProds4 +
-0.07377682497053 * GRP_MntMeatProducts2 + -0.09960214357487 * GRP_MntMeatProducts3 +
-0.25438120582859 * GRP_MntMeatProducts4 + 0.42639299324809 * GRP_MntWines2 + 0.31089292559786
* GRP_MntWines3 + -0.26826041457934 * GRP_MntWines4 + -0.53742609478771 *
GRP_NumCatalogPurchases3 + -0.03023603128161 * GRP_NumCatalogPurchases4 + -0.37743946252805 *
GRP_NumDistPurchases2 + -0.01872647257623 * GRP_NumDistPurchases3 + -0.31993024737958 *
GRP_NumDistPurchases4 + -0.11078713164327 * GRP_NumWebPurchases2 + 0.24754701690398 *
GRP_NumWebPurchases3 + 0.01530465573539 * GRP_NumWebPurchases4 + -0.17630256491744 *
GRP_RFMstat2 + -0.47929093118323 * GRP_RFMstat3 + 0.26729201021061 * GRP_RFMstat4 +
-0.20197995708067 * GRP_RMntFrq2 + -0.07138949090838 * GRP_RMntFrq3 + -0.08653988697814 *
GRP_RMntFrq4 + 1.10790516734526 * GRP_Recency2 + 0.22440369463671 * GRP_Recency3 +
-0.44624012521308 * GRP_Recency4 ;
1299320   +   H12  = H12  +    -0.39171353947494 * GRP_AcceptedCmp52
1299321   +          +     0.47539355981113 * GRP_Frq2  +     0.13865083322043 * GRP_Frq3
1299322   +          +     0.07826446095659 * GRP_Frq4  +     0.08299165408218 *
1299323   +        GRP_Income2  +     0.19385348399904 * GRP_Income3
1299324   +          +     -0.4686130167393 * GRP_Income4  +     0.07036992149948 *
1299325   +        GRP_Mnt2  +     0.03891677493503 * GRP_Mnt3  +     0.07820077346387 *
1299326   +        GRP_Mnt4  +     0.36400126236983 * GRP_MntFishProducts2
1299327   +          +    -0.12626287803422 * GRP_MntFishProducts3
1299328   +          +    -0.42885022606866 * GRP_MntFishProducts4
1299329   +          +    -0.08312331608509 * GRP_MntGoldProds2
1299330   +          +    -0.20061238652989 * GRP_MntGoldProds3
1299331   +          +      0.2540651659901 * GRP_MntGoldProds4
1299332   +          +    -0.05377938516186 * GRP_MntMeatProducts2
1299333   +          +    -0.20960578757846 * GRP_MntMeatProducts3
1299334   +          +     0.40616704937625 * GRP_MntMeatProducts4
1299335   +          +     0.10444770584156 * GRP_MntWines2  +     0.28632714955895 *
1299336   +        GRP_MntWines3  +     -0.0752487603973 * GRP_MntWines4
1299337   +          +    -0.34375303246386 * GRP_NumCatalogPurchases3
1299338   +          +     0.09580710843179 * GRP_NumCatalogPurchases4
1299339   +          +    -0.07273864038222 * GRP_NumDistPurchases2
1299340   +          +     0.10966715611059 * GRP_NumDistPurchases3
1299341   +          +      -0.043035493739 * GRP_NumDistPurchases4
1299342   +          +    -0.11780256604927 * GRP_NumWebPurchases2
1299343   +          +    -0.18165047164828 * GRP_NumWebPurchases3
1299344   +          +     0.26936545488609 * GRP_NumWebPurchases4
1299345   +          +    -0.06874165804548 * GRP_RFMstat2  +     0.09298117986488 *
1299346   +        GRP_RFMstat3  +    -0.24177720125931 * GRP_RFMstat4
1299347   +          +    -0.06280623207978 * GRP_RMntFrq2  +     0.01871815739589 *
1299348   +        GRP_RMntFrq3  +    -0.14308267957716 * GRP_RMntFrq4
1299349   +          +     0.34467425877566 * GRP_Recency2  +     0.05820913643645 *
1299350   +        GRP_Recency3  +     -0.0454148085012 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.39171353947494 * GRP_AcceptedCmp52 + 0.47539355981113 *
GRP_Frq2 + 0.13865083322043 * GRP_Frq3 + 0.07826446095659 * GRP_Frq4 + 0.08299165408218 *
GRP_Income2 + 0.19385348399904 * GRP_Income3 + -0.4686130167393 * GRP_Income4 +
0.07036992149948 * GRP_Mnt2 + 0.03891677493503 * GRP_Mnt3 + 0.07820077346387 * GRP_Mnt4 +
0.36400126236983 * GRP_MntFishProducts2 + -0.12626287803422 * GRP_MntFishProducts3 +
-0.42885022606866 * GRP_MntFishProducts4 + -0.08312331608509 * GRP_MntGoldProds2 +
-0.20061238652989 * GRP_MntGoldProds3 + 0.2540651659901 * GRP_MntGoldProds4 +
-0.05377938516186 * GRP_MntMeatProducts2 + -0.20960578757846 * GRP_MntMeatProducts3 +
0.40616704937625 * GRP_MntMeatProducts4 + 0.10444770584156 * GRP_MntWines2 + 0.28632714955895
* GRP_MntWines3 + -0.0752487603973 * GRP_MntWines4 + -0.34375303246386 *
GRP_NumCatalogPurchases3 + 0.09580710843179 * GRP_NumCatalogPurchases4 + -0.07273864038222 *
GRP_NumDistPurchases2 + 0.10966715611059 * GRP_NumDistPurchases3 + -0.043035493739 *
GRP_NumDistPurchases4 + -0.11780256604927 * GRP_NumWebPurchases2 + -0.18165047164828 *
GRP_NumWebPurchases3 + 0.26936545488609 * GRP_NumWebPurchases4 + -0.06874165804548 *
GRP_RFMstat2 + 0.09298117986488 * GRP_RFMstat3 + -0.24177720125931 * GRP_RFMstat4 +
-0.06280623207978 * GRP_RMntFrq2 + 0.01871815739589 * GRP_RMntFrq3 + -0.14308267957716 *
GRP_RMntFrq4 + 0.34467425877566 * GRP_Recency2 + 0.05820913643645 * GRP_Recency3 +
-0.0454148085012 * GRP_Recency4 ;
1299351   +   H13  = H13  +    -0.08768819217047 * GRP_AcceptedCmp52
1299352   +          +     0.44895652806962 * GRP_Frq2  +      0.3800586670059 * GRP_Frq3
1299353   +          +    -0.07849333722318 * GRP_Frq4  +     0.61398939980043 *
1299354   +        GRP_Income2  +     0.47732933105902 * GRP_Income3
1299355   +          +    -0.46767598050409 * GRP_Income4  +     0.00119742402812 *
1299356   +        GRP_Mnt2  +     0.28434487319801 * GRP_Mnt3  +    -0.16337373090226 *
1299357   +        GRP_Mnt4  +     0.24731982804653 * GRP_MntFishProducts2
1299358   +          +     0.07001619920815 * GRP_MntFishProducts3
1299359   +          +     0.07735498521359 * GRP_MntFishProducts4
1299360   +          +    -0.15884098938162 * GRP_MntGoldProds2
1299361   +          +    -0.27657428867783 * GRP_MntGoldProds3
1299362   +          +     -0.1812542301124 * GRP_MntGoldProds4
1299363   +          +    -0.05299867036647 * GRP_MntMeatProducts2
1299364   +          +     0.00010942539908 * GRP_MntMeatProducts3
1299365   +          +     0.03587382246671 * GRP_MntMeatProducts4
1299366   +          +      0.1756484217323 * GRP_MntWines2  +     0.00289944116976 *
1299367   +        GRP_MntWines3  +    -0.03752905583429 * GRP_MntWines4
1299368   +          +     0.14681010085531 * GRP_NumCatalogPurchases3
1299369   +          +    -0.23177792190553 * GRP_NumCatalogPurchases4
1299370   +          +      -0.481887498986 * GRP_NumDistPurchases2
1299371   +          +    -0.09943718589693 * GRP_NumDistPurchases3
1299372   +          +     0.21760620991618 * GRP_NumDistPurchases4
1299373   +          +    -0.09523799103665 * GRP_NumWebPurchases2
1299374   +          +     0.06245025753157 * GRP_NumWebPurchases3
1299375   +          +     0.11312469123111 * GRP_NumWebPurchases4
1299376   +          +     -0.0156924842698 * GRP_RFMstat2  +     0.04329307564553 *
1299377   +        GRP_RFMstat3  +    -0.06522539538042 * GRP_RFMstat4
1299378   +          +     0.03130432577469 * GRP_RMntFrq2  +     0.15385182155627 *
1299379   +        GRP_RMntFrq3  +    -0.05116322369837 * GRP_RMntFrq4
1299380   +          +     0.52385840277978 * GRP_Recency2  +     0.44348058106283 *
1299381   +        GRP_Recency3  +    -0.30003743891847 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08768819217047 * GRP_AcceptedCmp52 + 0.44895652806962 *
GRP_Frq2 + 0.3800586670059 * GRP_Frq3 + -0.07849333722318 * GRP_Frq4 + 0.61398939980043 *
GRP_Income2 + 0.47732933105902 * GRP_Income3 + -0.46767598050409 * GRP_Income4 +
0.00119742402812 * GRP_Mnt2 + 0.28434487319801 * GRP_Mnt3 + -0.16337373090226 * GRP_Mnt4 +
0.24731982804653 * GRP_MntFishProducts2 + 0.07001619920815 * GRP_MntFishProducts3 +
0.07735498521359 * GRP_MntFishProducts4 + -0.15884098938162 * GRP_MntGoldProds2 +
-0.27657428867783 * GRP_MntGoldProds3 + -0.1812542301124 * GRP_MntGoldProds4 +
-0.05299867036647 * GRP_MntMeatProducts2 + 0.00010942539908 * GRP_MntMeatProducts3 +
0.03587382246671 * GRP_MntMeatProducts4 + 0.1756484217323 * GRP_MntWines2 + 0.00289944116976 *
GRP_MntWines3 + -0.03752905583429 * GRP_MntWines4 + 0.14681010085531 *
GRP_NumCatalogPurchases3 + -0.23177792190553 * GRP_NumCatalogPurchases4 + -0.481887498986 *
GRP_NumDistPurchases2 + -0.09943718589693 * GRP_NumDistPurchases3 + 0.21760620991618 *
GRP_NumDistPurchases4 + -0.09523799103665 * GRP_NumWebPurchases2 + 0.06245025753157 *
GRP_NumWebPurchases3 + 0.11312469123111 * GRP_NumWebPurchases4 + -0.0156924842698 *
GRP_RFMstat2 + 0.04329307564553 * GRP_RFMstat3 + -0.06522539538042 * GRP_RFMstat4 +
0.03130432577469 * GRP_RMntFrq2 + 0.15385182155627 * GRP_RMntFrq3 + -0.05116322369837 *
GRP_RMntFrq4 + 0.52385840277978 * GRP_Recency2 + 0.44348058106283 * GRP_Recency3 +
-0.30003743891847 * GRP_Recency4 ;
1299382   +   H14  = H14  +    -0.30891588421078 * GRP_AcceptedCmp52
1299383   +          +     0.10101143238536 * GRP_Frq2  +    -0.03148220138998 * GRP_Frq3
1299384   +          +     0.09807803608029 * GRP_Frq4  +     0.11294471318052 *
1299385   +        GRP_Income2  +      0.0433560034099 * GRP_Income3
1299386   +          +    -0.35503487261838 * GRP_Income4  +     0.15199410100967 *
1299387   +        GRP_Mnt2  +    -0.15675008677561 * GRP_Mnt3  +    -0.06110606567063 *
1299388   +        GRP_Mnt4  +     0.10272197664106 * GRP_MntFishProducts2
1299389   +          +     0.33369645018356 * GRP_MntFishProducts3
1299390   +          +     0.08427214551103 * GRP_MntFishProducts4
1299391   +          +    -0.36187933889617 * GRP_MntGoldProds2
1299392   +          +      0.1522584097588 * GRP_MntGoldProds3
1299393   +          +    -0.18069803129722 * GRP_MntGoldProds4
1299394   +          +    -0.39829328143793 * GRP_MntMeatProducts2
1299395   +          +     0.00511939388608 * GRP_MntMeatProducts3
1299396   +          +      0.0518722466688 * GRP_MntMeatProducts4
1299397   +          +     0.10413724420858 * GRP_MntWines2  +    -0.30183392073068 *
1299398   +        GRP_MntWines3  +    -0.40546180997599 * GRP_MntWines4
1299399   +          +    -0.73564355192687 * GRP_NumCatalogPurchases3
1299400   +          +     0.04239157662699 * GRP_NumCatalogPurchases4
1299401   +          +    -0.61448773428482 * GRP_NumDistPurchases2
1299402   +          +    -0.10817170519054 * GRP_NumDistPurchases3
1299403   +          +    -0.00883878051452 * GRP_NumDistPurchases4
1299404   +          +      0.0024401108853 * GRP_NumWebPurchases2
1299405   +          +     -0.1066188825276 * GRP_NumWebPurchases3
1299406   +          +     -0.2845728776007 * GRP_NumWebPurchases4
1299407   +          +    -0.46846387193519 * GRP_RFMstat2  +     0.01548835288752 *
1299408   +        GRP_RFMstat3  +     0.29056719482503 * GRP_RFMstat4
1299409   +          +     0.13283388675843 * GRP_RMntFrq2  +    -0.01179035894062 *
1299410   +        GRP_RMntFrq3  +    -0.40979674551139 * GRP_RMntFrq4
1299411   +          +     0.39674687653317 * GRP_Recency2  +     0.48674783005161 *
1299412   +        GRP_Recency3  +     0.19384397786172 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30891588421078 * GRP_AcceptedCmp52 + 0.10101143238536 *
GRP_Frq2 + -0.03148220138998 * GRP_Frq3 + 0.09807803608029 * GRP_Frq4 + 0.11294471318052 *
GRP_Income2 + 0.0433560034099 * GRP_Income3 + -0.35503487261838 * GRP_Income4 +
0.15199410100967 * GRP_Mnt2 + -0.15675008677561 * GRP_Mnt3 + -0.06110606567063 * GRP_Mnt4 +
0.10272197664106 * GRP_MntFishProducts2 + 0.33369645018356 * GRP_MntFishProducts3 +
0.08427214551103 * GRP_MntFishProducts4 + -0.36187933889617 * GRP_MntGoldProds2 +
0.1522584097588 * GRP_MntGoldProds3 + -0.18069803129722 * GRP_MntGoldProds4 +
-0.39829328143793 * GRP_MntMeatProducts2 + 0.00511939388608 * GRP_MntMeatProducts3 +
0.0518722466688 * GRP_MntMeatProducts4 + 0.10413724420858 * GRP_MntWines2 + -0.30183392073068
* GRP_MntWines3 + -0.40546180997599 * GRP_MntWines4 + -0.73564355192687 *
GRP_NumCatalogPurchases3 + 0.04239157662699 * GRP_NumCatalogPurchases4 + -0.61448773428482 *
GRP_NumDistPurchases2 + -0.10817170519054 * GRP_NumDistPurchases3 + -0.00883878051452 *
GRP_NumDistPurchases4 + 0.0024401108853 * GRP_NumWebPurchases2 + -0.1066188825276 *
GRP_NumWebPurchases3 + -0.2845728776007 * GRP_NumWebPurchases4 + -0.46846387193519 *
GRP_RFMstat2 + 0.01548835288752 * GRP_RFMstat3 + 0.29056719482503 * GRP_RFMstat4 +
0.13283388675843 * GRP_RMntFrq2 + -0.01179035894062 * GRP_RMntFrq3 + -0.40979674551139 *
GRP_RMntFrq4 + 0.39674687653317 * GRP_Recency2 + 0.48674783005161 * GRP_Recency3 +
0.19384397786172 * GRP_Recency4 ;
1299413   +   H11  =    -1.18381596942405 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18381596942405 + H11 ;
1299414   +   H12  =     0.86336963287203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.86336963287203 + H12 ;
1299415   +   H13  =     -0.9724199391604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.9724199391604 + H13 ;
1299416   +   H14  =     1.35533016839911 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.35533016839911 + H14 ;
1299417   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1299418   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1299419   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1299420   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1299421   +END;
MPRINT(EM_DIAGRAM):   END;
1299422   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1299423   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1299424   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1299425   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1299426   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1299427   +END;
MPRINT(EM_DIAGRAM):   END;
1299428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299429   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1299430   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299431   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1299432   +   P_DepVar1  =     2.12648206014408 * H11  +      1.4206902210932 * H12
1299433   +          +     1.21164854880393 * H13  +      1.5803543453738 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.12648206014408 * H11 + 1.4206902210932 * H12 +
1.21164854880393 * H13 + 1.5803543453738 * H14 ;
1299434   +   P_DepVar1  =    -1.66515506353131 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66515506353131 + P_DepVar1 ;
1299435   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1299436   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1299437   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1299438   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1299439   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1299440   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1299441   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1299442   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1299443   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1299444   +END;
MPRINT(EM_DIAGRAM):   END;
1299445   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1299446   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1299447   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1299448   +END;
MPRINT(EM_DIAGRAM):   END;
1299449   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1299450   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1299451   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1299452   +END;
MPRINT(EM_DIAGRAM):   END;
1299453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299454   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1299455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1299456   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1299457   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1299458   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1299459   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1299460   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1299461   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1299462   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1299463   +END;
MPRINT(EM_DIAGRAM):   END;
1299464   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1299465   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1299466   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1299467   +drop
1299468   +H11
1299469   +H12
1299470   +H13
1299471   +H14
1299472   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1299473   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1299474    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1299475    quit;
1299476    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1299477    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1299478    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1299479    retain ID 2 Node "Neural21";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural21";
1299480    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1299481    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1842 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1842 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1299482    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1299483    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299484    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1842 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1842 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299485    proc sort data=EMWS8.Neural21_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural21_variableset out=_temp2(keep=NAME CREATOR);
1299486    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299487    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.NEURAL21_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299488    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1299489    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1299490    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1299491    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1299492    proc contents data=EMWS8.Neural21_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural21_train out=_meta(keep=NAME) noprint;
1299493    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1299494    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1299495    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299496    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299497    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1299498    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1299499    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299500    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299501    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1299502    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1299502  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 895 rows and 5 columns.
 
1299503    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299504    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1299505    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 895 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 895 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1299506    filename _pref
1299506  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1299507    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1299508    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1299509   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1299510   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1299511   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1299512   +
1299513   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299514   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1299515   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299516   +LABEL GRP_AcceptedCmp5 =
1299517   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1299518   +
1299519   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1299520   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1299521   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1299522   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1299523   +end;
MPRINT(EM_DIAGRAM):   end;
1299524   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1299525   +if (_UFORMAT eq '0'
1299526   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1299527   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1299528   +end;
MPRINT(EM_DIAGRAM):   end;
1299529   +else
1299530   +if (_UFORMAT eq '1'
1299531   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1299532   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1299533   +end;
MPRINT(EM_DIAGRAM):   end;
1299534   +else do;
MPRINT(EM_DIAGRAM):   else do;
1299535   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1299536   +end;
MPRINT(EM_DIAGRAM):   end;
1299537   +end;
MPRINT(EM_DIAGRAM):   end;
1299538   +
1299539   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299540   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1299541   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299542   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1299543   +
1299544   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1299545   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1299546   +end;
MPRINT(EM_DIAGRAM):   end;
1299547   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1299548   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1299549   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1299550   +end;
MPRINT(EM_DIAGRAM):   end;
1299551   +else
1299552   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1299553   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1299554   +end;
MPRINT(EM_DIAGRAM):   end;
1299555   +else
1299556   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1299557   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1299558   +end;
MPRINT(EM_DIAGRAM):   end;
1299559   +else
1299560   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1299561   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1299562   +end;
MPRINT(EM_DIAGRAM):   end;
1299563   +end;
MPRINT(EM_DIAGRAM):   end;
1299564   +
1299565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299566   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1299567   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299568   +LABEL GRP_Income =
1299569   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1299570   +
1299571   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1299572   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1299573   +end;
MPRINT(EM_DIAGRAM):   end;
1299574   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1299575   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1299576   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1299577   +end;
MPRINT(EM_DIAGRAM):   end;
1299578   +else
1299579   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1299580   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1299581   +end;
MPRINT(EM_DIAGRAM):   end;
1299582   +else
1299583   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1299584   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1299585   +end;
MPRINT(EM_DIAGRAM):   end;
1299586   +else
1299587   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1299588   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1299589   +end;
MPRINT(EM_DIAGRAM):   end;
1299590   +end;
MPRINT(EM_DIAGRAM):   end;
1299591   +
1299592   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299593   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1299594   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299595   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1299596   +
1299597   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1299598   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1299599   +end;
MPRINT(EM_DIAGRAM):   end;
1299600   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1299601   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1299602   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1299603   +end;
MPRINT(EM_DIAGRAM):   end;
1299604   +else
1299605   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1299606   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1299607   +end;
MPRINT(EM_DIAGRAM):   end;
1299608   +else
1299609   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1299610   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1299611   +end;
MPRINT(EM_DIAGRAM):   end;
1299612   +else
1299613   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1299614   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1299615   +end;
MPRINT(EM_DIAGRAM):   end;
1299616   +end;
MPRINT(EM_DIAGRAM):   end;
1299617   +
1299618   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299619   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1299620   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299621   +LABEL GRP_MntFishProducts =
1299622   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1299623   +
1299624   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1299625   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1299626   +end;
MPRINT(EM_DIAGRAM):   end;
1299627   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1299628   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1299629   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1299630   +end;
MPRINT(EM_DIAGRAM):   end;
1299631   +else
1299632   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1299633   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1299634   +end;
MPRINT(EM_DIAGRAM):   end;
1299635   +else
1299636   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1299637   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1299638   +end;
MPRINT(EM_DIAGRAM):   end;
1299639   +else
1299640   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1299641   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1299642   +end;
MPRINT(EM_DIAGRAM):   end;
1299643   +end;
MPRINT(EM_DIAGRAM):   end;
1299644   +
1299645   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299646   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1299647   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299648   +LABEL GRP_MntGoldProds =
1299649   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1299650   +
1299651   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1299652   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1299653   +end;
MPRINT(EM_DIAGRAM):   end;
1299654   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1299655   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1299656   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1299657   +end;
MPRINT(EM_DIAGRAM):   end;
1299658   +else
1299659   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1299660   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1299661   +end;
MPRINT(EM_DIAGRAM):   end;
1299662   +else
1299663   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1299664   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1299665   +end;
MPRINT(EM_DIAGRAM):   end;
1299666   +else
1299667   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1299668   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1299669   +end;
MPRINT(EM_DIAGRAM):   end;
1299670   +end;
MPRINT(EM_DIAGRAM):   end;
1299671   +
1299672   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299673   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1299674   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299675   +LABEL GRP_MntMeatProducts =
1299676   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1299677   +
1299678   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1299679   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1299680   +end;
MPRINT(EM_DIAGRAM):   end;
1299681   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1299682   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1299683   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1299684   +end;
MPRINT(EM_DIAGRAM):   end;
1299685   +else
1299686   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1299687   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1299688   +end;
MPRINT(EM_DIAGRAM):   end;
1299689   +else
1299690   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1299691   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1299692   +end;
MPRINT(EM_DIAGRAM):   end;
1299693   +else
1299694   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1299695   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1299696   +end;
MPRINT(EM_DIAGRAM):   end;
1299697   +end;
MPRINT(EM_DIAGRAM):   end;
1299698   +
1299699   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299700   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1299701   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299702   +LABEL GRP_MntWines =
1299703   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1299704   +
1299705   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1299706   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1299707   +end;
MPRINT(EM_DIAGRAM):   end;
1299708   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1299709   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1299710   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1299711   +end;
MPRINT(EM_DIAGRAM):   end;
1299712   +else
1299713   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1299714   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1299715   +end;
MPRINT(EM_DIAGRAM):   end;
1299716   +else
1299717   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1299718   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1299719   +end;
MPRINT(EM_DIAGRAM):   end;
1299720   +else
1299721   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1299722   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1299723   +end;
MPRINT(EM_DIAGRAM):   end;
1299724   +end;
MPRINT(EM_DIAGRAM):   end;
1299725   +
1299726   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299727   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1299728   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299729   +LABEL GRP_NumCatalogPurchases =
1299730   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1299731   +
1299732   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1299733   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1299734   +end;
MPRINT(EM_DIAGRAM):   end;
1299735   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1299736   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1299737   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1299738   +end;
MPRINT(EM_DIAGRAM):   end;
1299739   +else
1299740   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1299741   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1299742   +end;
MPRINT(EM_DIAGRAM):   end;
1299743   +else
1299744   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1299745   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1299746   +end;
MPRINT(EM_DIAGRAM):   end;
1299747   +else
1299748   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1299749   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1299750   +end;
MPRINT(EM_DIAGRAM):   end;
1299751   +end;
MPRINT(EM_DIAGRAM):   end;
1299752   +
1299753   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299754   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1299755   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299756   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1299757   +
1299758   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1299759   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1299760   +end;
MPRINT(EM_DIAGRAM):   end;
1299761   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1299762   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1299763   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1299764   +end;
MPRINT(EM_DIAGRAM):   end;
1299765   +else
1299766   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1299767   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1299768   +end;
MPRINT(EM_DIAGRAM):   end;
1299769   +else
1299770   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1299771   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1299772   +end;
MPRINT(EM_DIAGRAM):   end;
1299773   +else
1299774   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1299775   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1299776   +end;
MPRINT(EM_DIAGRAM):   end;
1299777   +end;
MPRINT(EM_DIAGRAM):   end;
1299778   +
1299779   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299780   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1299781   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299782   +LABEL GRP_NumWebPurchases =
1299783   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1299784   +
1299785   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1299786   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1299787   +end;
MPRINT(EM_DIAGRAM):   end;
1299788   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1299789   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1299790   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1299791   +end;
MPRINT(EM_DIAGRAM):   end;
1299792   +else
1299793   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1299794   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1299795   +end;
MPRINT(EM_DIAGRAM):   end;
1299796   +else
1299797   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1299798   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1299799   +end;
MPRINT(EM_DIAGRAM):   end;
1299800   +else
1299801   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1299802   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1299803   +end;
MPRINT(EM_DIAGRAM):   end;
1299804   +end;
MPRINT(EM_DIAGRAM):   end;
1299805   +
1299806   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299807   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1299808   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299809   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1299810   +
1299811   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1299812   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1299813   +end;
MPRINT(EM_DIAGRAM):   end;
1299814   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1299815   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1299816   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1299817   +end;
MPRINT(EM_DIAGRAM):   end;
1299818   +else
1299819   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1299820   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1299821   +end;
MPRINT(EM_DIAGRAM):   end;
1299822   +else
1299823   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1299824   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1299825   +end;
MPRINT(EM_DIAGRAM):   end;
1299826   +else
1299827   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1299828   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1299829   +end;
MPRINT(EM_DIAGRAM):   end;
1299830   +end;
MPRINT(EM_DIAGRAM):   end;
1299831   +
1299832   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299833   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1299834   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299835   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1299836   +
1299837   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1299838   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1299839   +end;
MPRINT(EM_DIAGRAM):   end;
1299840   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1299841   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1299842   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1299843   +end;
MPRINT(EM_DIAGRAM):   end;
1299844   +else
1299845   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1299846   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1299847   +end;
MPRINT(EM_DIAGRAM):   end;
1299848   +else
1299849   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1299850   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1299851   +end;
MPRINT(EM_DIAGRAM):   end;
1299852   +else
1299853   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1299854   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1299855   +end;
MPRINT(EM_DIAGRAM):   end;
1299856   +end;
MPRINT(EM_DIAGRAM):   end;
1299857   +
1299858   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299859   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1299860   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299861   +LABEL GRP_Recency =
1299862   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1299863   +
1299864   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1299865   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1299866   +end;
MPRINT(EM_DIAGRAM):   end;
1299867   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1299868   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1299869   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1299870   +end;
MPRINT(EM_DIAGRAM):   end;
1299871   +else
1299872   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1299873   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1299874   +end;
MPRINT(EM_DIAGRAM):   end;
1299875   +else
1299876   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1299877   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1299878   +end;
MPRINT(EM_DIAGRAM):   end;
1299879   +else
1299880   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1299881   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1299882   +end;
MPRINT(EM_DIAGRAM):   end;
1299883   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1299884    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1299885    quit;
1299886    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1299887    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1299888    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1299889    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1299890    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1299891    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299892    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1299893    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299894    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299895    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1299896    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299897    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299898    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1299899    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1299900    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1299901    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1299902    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1299903    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1299904    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1299905    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299906    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1299907    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1299908    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1299909    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299910    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299911    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1299912    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1299912  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.
 
1299913    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299914    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1299915    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 910 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1299916    filename _pref
1299916  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1299917    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1299918    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1299919   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299920   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1299921   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1299922   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1299923   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1299924   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1299925    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1299926    quit;
1299927    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1299928    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1299929    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1299930    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1299931    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1299932    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1299933    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1299934    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299935    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299936    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1299937    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299938    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299939    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1299940    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1299941    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1299942    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1299943    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1299944    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1299945    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1299946    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299947    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1299948    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1299949    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1299950    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299951    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299952    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1299953    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1299953  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1299954    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299955    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1299956    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 914 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299957    filename _pref
1299957  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1299958    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1299959    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1299960   +
1299961   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1299962   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1299962  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1299963   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1299964   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1299965   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1299966   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1299967   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1299968    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1299969    quit;
1299970    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1299971    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1299972    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1299973    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1299974    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1299975    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1299976    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1299977    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299978    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299979    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1299980    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299981    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299982    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1299983    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1299984    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1299985    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1299986    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1299987    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299988    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1299989    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299990    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299991    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1299992    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1299993    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1299994    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299995    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1299996    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1299996  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1299997    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1299998    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1299999    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 953 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1300000    filename _pref
1300000  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1300001    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1300002    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1300003   +
1300004   +
1300005   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1300006   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1300007   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1300008   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1300009   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1300010   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300011   +
1300012   +
1300013   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1300014   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1300015   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1300016   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1300017   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1300018   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300019   +
1300020   +
1300021   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1300022   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1300023   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1300024   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1300025   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1300026   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300027   +
1300028   +
1300029   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1300030   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1300031   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1300032   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1300033   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1300034   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300035   +
1300036   +
1300037   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1300038   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1300039   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1300040   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1300041   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1300042   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300043   +
1300044   +
1300045   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1300046   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1300047   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1300048   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1300049   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1300050   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300051   +
1300052   +
1300053   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1300054   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1300055   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1300056   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1300057   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1300058   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300059   +
1300060   +
1300061   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1300062   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1300063   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1300064   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1300065   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1300066   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1300067   +if
1300068   +_FILTERNORM1 not in ( '.')
1300069   + and
1300070   +_FILTERNORM2 not in ( '.')
1300071   + and
1300072   +_FILTERNORM3 not in ( '.')
1300073   + and
1300074   +_FILTERNORM4 not in ( '.')
1300075   + and
1300076   +_FILTERNORM5 not in ( '.')
1300077   + and
1300078   +_FILTERNORM6 not in ( '.')
1300079   + and
1300080   +_FILTERNORM7 not in ( ' ')
1300081   + and
1300082   +_FILTERNORM8 not in ( ' ')
1300083   +and
1300084   +( Dt_Customer ne .)
1300085   +and ( Income ne . and (Income<=107000))
1300086   +and ( Kidhome ne .)
1300087   +and ( MntFishProducts ne .)
1300088   +and ( MntFruits ne .)
1300089   +and ( MntGoldProds ne .)
1300090   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1300091   +and ( MntSweetProducts ne .)
1300092   +and ( MntWines ne .)
1300093   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1300094   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1300095   +and ( NumStorePurchases ne .)
1300096   +and ( NumWebPurchases ne .)
1300097   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1300098   +and ( Recency ne .)
1300099   +and ( Teenhome ne .)
1300100   +and ( Year_Birth ne .)
1300101   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1300102   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1300103   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1300104   +end;
MPRINT(EM_DIAGRAM):   end;
1300105   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1300106   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1300107    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1300108    quit;
1300109    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1300110    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1300111    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1300112    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1300113    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1300114    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1300115    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1300116    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300117    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1300118    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1300119    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300120    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1300121    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1300122    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1300123    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1300124    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1300125    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1300126    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1300127    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1300128    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300129    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1300130    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1300131    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1300132    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1300133    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1300134    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1300135    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1300135  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1300136    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1300137    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1300138    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 1019 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1300139    %macro varDept(fcmpdata=,id=);
1300140    %global nobs&id scoreFlag&id;
1300141    %let scoreFlag&id = 0;
1300142    %if &id=1 or ^&fcmpStart %then %do;
1300143    proc sort data=&fcmpdata out=_temp&id nodupkey;
1300144    by NAME;
1300145    where id=&id and LHS in( %let j=1;
1300146    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1300147    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1300148    "&var" %let j = %eval(&j+1);
1300149    %end;
1300150    );
1300151    run;
1300152    %let dsid = %sysfunc(open(_temp&id));
1300153    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1300154    %let dsid = %sysfunc(close(&dsid));
1300155    %if &&nobs&id %then %do;
1300156    %let scoreFlag&id = 1;
1300157    %let fcmpStart = 1;
1300158    %end;
1300159    %else %let fcmpStart = 0;
1300160    %end;
1300161    %else %do;
1300162    proc sort data=&fcmpdata out=_tempid;
1300163    where id=&id;
1300164    by LHS;
1300165    run;
1300166    %let dsid = %sysfunc(open(_tempid));
1300167    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1300168    %let dsid = %sysfunc(close(&dsid));
1300169    %if ^&&nobs&id %then %do;
1300170    proc datasets lib=work nolist;
1300171    delete _tempid;
1300172    run;
1300173    quit;
1300174    %end;
1300175    %else %do;
1300176    data _tempAll;
1300177    set %let j=%eval(&id-1);
1300178    %do x=1 %to &j;
1300179    %if &&nobs&x %then %do;
1300180    _temp&x %end;
1300181    %end;
1300182    ;
1300183    run;
1300184    proc sql;
1300185    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1300185  ! work._tempid p2 where p.name=p2.lhs;
1300186    quit;
1300187    data _temp&id;
1300188    set _temp&id;
1300189    where LHS ne '' and NAME ne '' and Node ne '';
1300190    run;
1300191    proc datasets lib=work nolist;
1300192    delete _tempAll;
1300193    run;
1300194    %let dsid = %sysfunc(open(_temp&id));
1300195    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1300196    %let dsid = %sysfunc(close(&dsid));
1300197    %if ^&&nobs&id %then %do;
1300198    proc datasets lib=work nolist;
1300199    delete _temp&id;
1300200    run;
1300201    quit;
1300202    %end;
1300203    %else %do;
1300204    %let scoreFlag&id = 1;
1300205    data _temp&id;
1300206    set _temp&id;
1300207    where LHS ne NAME and node ne '';
1300208    run;
1300209    %let dsid = %sysfunc(open(_temp&id));
1300210    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1300211    %let dsid = %sysfunc(close(&dsid));
1300212    %if ^&&nobs&id %then %do;
1300213    proc datasets lib=work nolist;
1300214    delete _temp&id;
1300215    run;
1300216    quit;
1300217    %end;
1300218    %else %do;
1300219    proc sort data=_temp&id nodupkey;
1300220    by LHS NAME;
1300221    run;
1300222    %end;
1300223    %end;
1300224    %end;
1300225    %end;
1300226    %mend varDept;
1300227    %macro optCode(outdata=fcmpdata);
1300228    %global fcmpStart;
1300229    %let fcmpStart = 0;
1300230    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1300231    %let NumNodes=9;
1300232    %do k=1 %to &NumNodes;
1300233    %vardept(fcmpdata=&outdata, id=&k);
1300234    %end;
1300235    %mend optCode;
1300236    %optcode(outData=EMWS8.Ensmbl7_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1300237    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1300238    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1300239    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1300240    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1300241    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1300242    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1300243    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1300244    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1300245    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1300246    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1300246  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1300247    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1300248    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1300249    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1300250    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1300251    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1300252    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1300253    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1300254    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1300255    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1300256    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1300257    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1300258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1300259    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1300260    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1300260  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.
 
1300261    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1300262    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1300263    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1300264    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1300265    filename _pref
1300265  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMPUBLISHSCORE.sas";
1300266    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1300267    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMPUBLISHSCORE.sas.
1300268   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1300269   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1300270   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1300271   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1300272   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1300273   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1300274   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1300275   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1300276   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1300277   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1300278   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1300279   +LENGTH _WARN_ $4
1300280   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1300281   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1300282   +
1300283   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1300284   +
1300285   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1300286   +
1300287   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1300288   +
1300289   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1300290   +
1300291   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1300292   +
1300293   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1300294   +
1300295   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1300296   +
1300297   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1300298   +
1300299   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1300300   +
1300301   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1300302   +
1300303   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1300304   +
1300305   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1300306   +
1300307   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1300308   +
1300309   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1300310   +
1300311   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1300312   +
1300313   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1300314   +
1300315   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1300316   +
1300317   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1300318   +
1300319   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1300320   +
1300321   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1300322   +
1300323   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1300324   +
1300325   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1300326   +
1300327   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1300328   +
1300329   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1300330   +
1300331   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1300332   +
1300333   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1300334   +
1300335   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1300336   +
1300337   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1300338   +
1300339   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1300340   +
1300341   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1300342   +
1300343   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1300344   +
1300345   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1300346   +
1300347   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1300348   +
1300349   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1300350   +
1300351   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1300352   +
1300353   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1300354   +
1300355   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1300356   +
1300357   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1300358   +
1300359   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1300360   +
1300361   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1300362   +
1300363   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1300364   +
1300365   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1300366   +
1300367   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1300368   +
1300369   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1300370   +
1300371   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1300372   +
1300373   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1300374   +
1300375   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1300376   +
1300377   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1300378   +
1300379   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1300380   +
1300381   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1300382   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1300383   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1300384   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1300385   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300386   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300387   +end;
MPRINT(EM_DIAGRAM):   end;
1300388   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300389   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300390   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1300391   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300392   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1300393   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1300394   +   end;
MPRINT(EM_DIAGRAM):   end;
1300395   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1300396   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1300397   +   end;
MPRINT(EM_DIAGRAM):   end;
1300398   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300399   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1300400   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300401   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300402   +   end;
MPRINT(EM_DIAGRAM):   end;
1300403   +end;
MPRINT(EM_DIAGRAM):   end;
1300404   +
1300405   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1300406   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1300407   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1300408   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1300409   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1300410   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1300411   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300412   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300413   +end;
MPRINT(EM_DIAGRAM):   end;
1300414   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300415   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300416   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1300417   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300418   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1300419   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1300420   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1300421   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1300422   +   end;
MPRINT(EM_DIAGRAM):   end;
1300423   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1300424   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1300425   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1300426   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1300427   +   end;
MPRINT(EM_DIAGRAM):   end;
1300428   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1300429   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1300430   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1300431   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1300432   +   end;
MPRINT(EM_DIAGRAM):   end;
1300433   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1300434   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1300435   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1300436   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1300437   +   end;
MPRINT(EM_DIAGRAM):   end;
1300438   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300439   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1300440   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1300441   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1300442   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300443   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300444   +   end;
MPRINT(EM_DIAGRAM):   end;
1300445   +end;
MPRINT(EM_DIAGRAM):   end;
1300446   +
1300447   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1300448   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1300449   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1300450   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1300451   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1300452   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1300453   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300454   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300455   +end;
MPRINT(EM_DIAGRAM):   end;
1300456   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300457   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300458   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1300459   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300460   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1300461   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1300462   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1300463   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1300464   +   end;
MPRINT(EM_DIAGRAM):   end;
1300465   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1300466   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1300467   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1300468   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1300469   +   end;
MPRINT(EM_DIAGRAM):   end;
1300470   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1300471   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1300472   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1300473   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1300474   +   end;
MPRINT(EM_DIAGRAM):   end;
1300475   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1300476   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1300477   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1300478   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1300479   +   end;
MPRINT(EM_DIAGRAM):   end;
1300480   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300481   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1300482   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1300483   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1300484   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300485   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300486   +   end;
MPRINT(EM_DIAGRAM):   end;
1300487   +end;
MPRINT(EM_DIAGRAM):   end;
1300488   +
1300489   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1300490   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1300491   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1300492   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1300493   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1300494   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1300495   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300496   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300497   +end;
MPRINT(EM_DIAGRAM):   end;
1300498   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300499   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300500   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1300501   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300502   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1300503   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1300504   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1300505   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1300506   +   end;
MPRINT(EM_DIAGRAM):   end;
1300507   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1300508   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1300509   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1300510   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1300511   +   end;
MPRINT(EM_DIAGRAM):   end;
1300512   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1300513   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1300514   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1300515   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1300516   +   end;
MPRINT(EM_DIAGRAM):   end;
1300517   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1300518   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1300519   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1300520   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1300521   +   end;
MPRINT(EM_DIAGRAM):   end;
1300522   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300523   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1300524   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1300525   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1300526   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300527   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300528   +   end;
MPRINT(EM_DIAGRAM):   end;
1300529   +end;
MPRINT(EM_DIAGRAM):   end;
1300530   +
1300531   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1300532   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1300533   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1300534   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1300535   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1300536   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1300537   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300538   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300539   +end;
MPRINT(EM_DIAGRAM):   end;
1300540   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300541   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300542   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1300543   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300544   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1300545   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1300546   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1300547   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1300548   +   end;
MPRINT(EM_DIAGRAM):   end;
1300549   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1300550   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1300551   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1300552   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1300553   +   end;
MPRINT(EM_DIAGRAM):   end;
1300554   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1300555   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1300556   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1300557   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1300558   +   end;
MPRINT(EM_DIAGRAM):   end;
1300559   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1300560   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1300561   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1300562   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1300563   +   end;
MPRINT(EM_DIAGRAM):   end;
1300564   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300565   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1300566   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1300567   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1300568   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300569   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300570   +   end;
MPRINT(EM_DIAGRAM):   end;
1300571   +end;
MPRINT(EM_DIAGRAM):   end;
1300572   +
1300573   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1300574   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1300575   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1300576   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1300577   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1300578   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1300579   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300580   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300581   +end;
MPRINT(EM_DIAGRAM):   end;
1300582   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300583   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300584   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1300585   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300586   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1300587   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1300588   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1300589   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1300590   +   end;
MPRINT(EM_DIAGRAM):   end;
1300591   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1300592   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1300593   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1300594   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1300595   +   end;
MPRINT(EM_DIAGRAM):   end;
1300596   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1300597   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1300598   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1300599   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1300600   +   end;
MPRINT(EM_DIAGRAM):   end;
1300601   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1300602   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1300603   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1300604   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1300605   +   end;
MPRINT(EM_DIAGRAM):   end;
1300606   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300607   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1300608   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1300609   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1300610   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300611   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300612   +   end;
MPRINT(EM_DIAGRAM):   end;
1300613   +end;
MPRINT(EM_DIAGRAM):   end;
1300614   +
1300615   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1300616   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1300617   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1300618   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1300619   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1300620   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1300621   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300622   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300623   +end;
MPRINT(EM_DIAGRAM):   end;
1300624   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300625   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300626   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1300627   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300628   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1300629   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1300630   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1300631   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1300632   +   end;
MPRINT(EM_DIAGRAM):   end;
1300633   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1300634   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1300635   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1300636   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1300637   +   end;
MPRINT(EM_DIAGRAM):   end;
1300638   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1300639   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1300640   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1300641   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1300642   +   end;
MPRINT(EM_DIAGRAM):   end;
1300643   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1300644   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1300645   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1300646   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1300647   +   end;
MPRINT(EM_DIAGRAM):   end;
1300648   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300649   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1300650   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1300651   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1300652   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300653   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300654   +   end;
MPRINT(EM_DIAGRAM):   end;
1300655   +end;
MPRINT(EM_DIAGRAM):   end;
1300656   +
1300657   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1300658   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1300659   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1300660   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1300661   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1300662   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1300663   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300664   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300665   +end;
MPRINT(EM_DIAGRAM):   end;
1300666   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300667   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300668   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1300669   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300670   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1300671   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1300672   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1300673   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1300674   +   end;
MPRINT(EM_DIAGRAM):   end;
1300675   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1300676   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1300677   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1300678   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1300679   +   end;
MPRINT(EM_DIAGRAM):   end;
1300680   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1300681   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1300682   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1300683   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1300684   +   end;
MPRINT(EM_DIAGRAM):   end;
1300685   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1300686   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1300687   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1300688   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1300689   +   end;
MPRINT(EM_DIAGRAM):   end;
1300690   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300691   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1300692   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1300693   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1300694   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300695   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300696   +   end;
MPRINT(EM_DIAGRAM):   end;
1300697   +end;
MPRINT(EM_DIAGRAM):   end;
1300698   +
1300699   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1300700   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1300701   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1300702   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1300703   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1300704   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300705   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300706   +end;
MPRINT(EM_DIAGRAM):   end;
1300707   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300708   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300709   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1300710   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300711   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1300712   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1300713   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1300714   +   end;
MPRINT(EM_DIAGRAM):   end;
1300715   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1300716   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1300717   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1300718   +   end;
MPRINT(EM_DIAGRAM):   end;
1300719   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1300720   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1300721   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1300722   +   end;
MPRINT(EM_DIAGRAM):   end;
1300723   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300724   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1300725   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1300726   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300727   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300728   +   end;
MPRINT(EM_DIAGRAM):   end;
1300729   +end;
MPRINT(EM_DIAGRAM):   end;
1300730   +
1300731   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1300732   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1300733   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1300734   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1300735   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1300736   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1300737   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300738   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300739   +end;
MPRINT(EM_DIAGRAM):   end;
1300740   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300741   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300742   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1300743   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300744   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1300745   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1300746   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1300747   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1300748   +   end;
MPRINT(EM_DIAGRAM):   end;
1300749   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1300750   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1300751   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1300752   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1300753   +   end;
MPRINT(EM_DIAGRAM):   end;
1300754   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1300755   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1300756   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1300757   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1300758   +   end;
MPRINT(EM_DIAGRAM):   end;
1300759   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1300760   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1300761   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1300762   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1300763   +   end;
MPRINT(EM_DIAGRAM):   end;
1300764   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300765   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1300766   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1300767   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1300768   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300769   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300770   +   end;
MPRINT(EM_DIAGRAM):   end;
1300771   +end;
MPRINT(EM_DIAGRAM):   end;
1300772   +
1300773   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1300774   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1300775   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1300776   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1300777   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1300778   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1300779   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300780   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300781   +end;
MPRINT(EM_DIAGRAM):   end;
1300782   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300783   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300784   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1300785   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300786   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1300787   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1300788   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1300789   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1300790   +   end;
MPRINT(EM_DIAGRAM):   end;
1300791   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1300792   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1300793   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1300794   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1300795   +   end;
MPRINT(EM_DIAGRAM):   end;
1300796   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1300797   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1300798   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1300799   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1300800   +   end;
MPRINT(EM_DIAGRAM):   end;
1300801   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1300802   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1300803   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1300804   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1300805   +   end;
MPRINT(EM_DIAGRAM):   end;
1300806   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300807   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1300808   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1300809   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1300810   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300811   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300812   +   end;
MPRINT(EM_DIAGRAM):   end;
1300813   +end;
MPRINT(EM_DIAGRAM):   end;
1300814   +
1300815   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1300816   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1300817   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1300818   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1300819   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1300820   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1300821   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300822   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300823   +end;
MPRINT(EM_DIAGRAM):   end;
1300824   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300825   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300826   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1300827   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300828   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1300829   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1300830   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1300831   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1300832   +   end;
MPRINT(EM_DIAGRAM):   end;
1300833   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1300834   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1300835   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1300836   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1300837   +   end;
MPRINT(EM_DIAGRAM):   end;
1300838   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1300839   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1300840   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1300841   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1300842   +   end;
MPRINT(EM_DIAGRAM):   end;
1300843   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1300844   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1300845   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1300846   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1300847   +   end;
MPRINT(EM_DIAGRAM):   end;
1300848   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300849   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1300850   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1300851   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1300852   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300853   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300854   +   end;
MPRINT(EM_DIAGRAM):   end;
1300855   +end;
MPRINT(EM_DIAGRAM):   end;
1300856   +
1300857   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1300858   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1300859   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1300860   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1300861   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1300862   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1300863   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300864   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300865   +end;
MPRINT(EM_DIAGRAM):   end;
1300866   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300867   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300868   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1300869   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300870   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1300871   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1300872   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1300873   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1300874   +   end;
MPRINT(EM_DIAGRAM):   end;
1300875   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1300876   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1300877   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1300878   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1300879   +   end;
MPRINT(EM_DIAGRAM):   end;
1300880   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1300881   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1300882   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1300883   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1300884   +   end;
MPRINT(EM_DIAGRAM):   end;
1300885   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1300886   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1300887   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1300888   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1300889   +   end;
MPRINT(EM_DIAGRAM):   end;
1300890   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300891   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1300892   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1300893   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1300894   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300895   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300896   +   end;
MPRINT(EM_DIAGRAM):   end;
1300897   +end;
MPRINT(EM_DIAGRAM):   end;
1300898   +
1300899   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1300900   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1300901   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1300902   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1300903   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1300904   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1300905   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1300906   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300907   +end;
MPRINT(EM_DIAGRAM):   end;
1300908   +else do;
MPRINT(EM_DIAGRAM):   else do;
1300909   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1300910   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1300911   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1300912   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1300913   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1300914   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1300915   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1300916   +   end;
MPRINT(EM_DIAGRAM):   end;
1300917   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1300918   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1300919   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1300920   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1300921   +   end;
MPRINT(EM_DIAGRAM):   end;
1300922   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1300923   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1300924   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1300925   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1300926   +   end;
MPRINT(EM_DIAGRAM):   end;
1300927   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1300928   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1300929   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1300930   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1300931   +   end;
MPRINT(EM_DIAGRAM):   end;
1300932   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1300933   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1300934   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1300935   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1300936   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1300937   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300938   +   end;
MPRINT(EM_DIAGRAM):   end;
1300939   +end;
MPRINT(EM_DIAGRAM):   end;
1300940   +
1300941   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300942   +*** Checking missing input Interval
1300943   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1300944   +
1300945   +IF NMISS(
1300946   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1300947   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1300948   +
1300949   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1300950   +END;
MPRINT(EM_DIAGRAM):   END;
1300951   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300952   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1300953   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300954   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1300955   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1300956   +END;
MPRINT(EM_DIAGRAM):   END;
1300957   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1300958   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1300959   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1300960   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1300961   +END;
MPRINT(EM_DIAGRAM):   END;
1300962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300963   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1300964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300965   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300966   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1300967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1300968   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1300969   +   H11  =     0.04727192845675 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.04727192845675 * S_Year_Birth ;
1300970   +   H12  =    -0.03499603197831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.03499603197831 * S_Year_Birth ;
1300971   +   H13  =      -0.249387333167 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.249387333167 * S_Year_Birth ;
1300972   +   H14  =    -0.18145230662582 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.18145230662582 * S_Year_Birth ;
1300973   +   H15  =    -0.07744416350216 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.07744416350216 * S_Year_Birth ;
1300974   +   H11  = H11  +    -0.25371698668168 * GRP_AcceptedCmp52
1300975   +          +     0.38185615945621 * GRP_Frq2  +     0.03545555759423 * GRP_Frq3
1300976   +          +    -0.00061660249238 * GRP_Frq4  +     0.41779261820045 *
1300977   +        GRP_Income2  +     0.51800912898069 * GRP_Income3
1300978   +          +    -0.36427548932695 * GRP_Income4  +    -0.06433979614617 *
1300979   +        GRP_Mnt2  +     0.00045120565293 * GRP_Mnt3  +    -0.13992317322759 *
1300980   +        GRP_Mnt4  +     0.34207391538024 * GRP_MntFishProducts2
1300981   +          +     0.03411739869638 * GRP_MntFishProducts3
1300982   +          +      -0.083693402353 * GRP_MntFishProducts4
1300983   +          +     -0.1318128730187 * GRP_MntGoldProds2
1300984   +          +     -0.0614737729382 * GRP_MntGoldProds3
1300985   +          +    -0.00372986687449 * GRP_MntGoldProds4
1300986   +          +     -0.3129171829017 * GRP_MntMeatProducts2
1300987   +          +     0.01519664718127 * GRP_MntMeatProducts3
1300988   +          +     0.29997111548812 * GRP_MntMeatProducts4
1300989   +          +       0.389673942682 * GRP_MntWines2  +     0.21159785789434 *
1300990   +        GRP_MntWines3  +    -0.26921349986988 * GRP_MntWines4
1300991   +          +    -0.47013218092095 * GRP_NumCatalogPurchases3
1300992   +          +     0.23943411636141 * GRP_NumCatalogPurchases4
1300993   +          +    -0.68715024477164 * GRP_NumDistPurchases2
1300994   +          +    -0.09178471992122 * GRP_NumDistPurchases3
1300995   +          +    -0.01170225640351 * GRP_NumDistPurchases4
1300996   +          +    -0.14760833919227 * GRP_NumWebPurchases2
1300997   +          +     0.02966820025811 * GRP_NumWebPurchases3
1300998   +          +    -0.04127892210576 * GRP_NumWebPurchases4
1300999   +          +    -0.45467119970502 * GRP_RFMstat2  +    -0.14644406995031 *
1301000   +        GRP_RFMstat3  +    -0.12660007404037 * GRP_RFMstat4
1301001   +          +     0.04829215694488 * GRP_RMntFrq2  +     0.10137738373353 *
1301002   +        GRP_RMntFrq3  +     -0.2873514159435 * GRP_RMntFrq4
1301003   +          +     0.61737333380878 * GRP_Recency2  +     0.16651370318087 *
1301004   +        GRP_Recency3  +    -0.15382569411658 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25371698668168 * GRP_AcceptedCmp52 + 0.38185615945621 *
GRP_Frq2 + 0.03545555759423 * GRP_Frq3 + -0.00061660249238 * GRP_Frq4 + 0.41779261820045 *
GRP_Income2 + 0.51800912898069 * GRP_Income3 + -0.36427548932695 * GRP_Income4 +
-0.06433979614617 * GRP_Mnt2 + 0.00045120565293 * GRP_Mnt3 + -0.13992317322759 * GRP_Mnt4 +
0.34207391538024 * GRP_MntFishProducts2 + 0.03411739869638 * GRP_MntFishProducts3 +
-0.083693402353 * GRP_MntFishProducts4 + -0.1318128730187 * GRP_MntGoldProds2 +
-0.0614737729382 * GRP_MntGoldProds3 + -0.00372986687449 * GRP_MntGoldProds4 +
-0.3129171829017 * GRP_MntMeatProducts2 + 0.01519664718127 * GRP_MntMeatProducts3 +
0.29997111548812 * GRP_MntMeatProducts4 + 0.389673942682 * GRP_MntWines2 + 0.21159785789434 *
GRP_MntWines3 + -0.26921349986988 * GRP_MntWines4 + -0.47013218092095 *
GRP_NumCatalogPurchases3 + 0.23943411636141 * GRP_NumCatalogPurchases4 + -0.68715024477164 *
GRP_NumDistPurchases2 + -0.09178471992122 * GRP_NumDistPurchases3 + -0.01170225640351 *
GRP_NumDistPurchases4 + -0.14760833919227 * GRP_NumWebPurchases2 + 0.02966820025811 *
GRP_NumWebPurchases3 + -0.04127892210576 * GRP_NumWebPurchases4 + -0.45467119970502 *
GRP_RFMstat2 + -0.14644406995031 * GRP_RFMstat3 + -0.12660007404037 * GRP_RFMstat4 +
0.04829215694488 * GRP_RMntFrq2 + 0.10137738373353 * GRP_RMntFrq3 + -0.2873514159435 *
GRP_RMntFrq4 + 0.61737333380878 * GRP_Recency2 + 0.16651370318087 * GRP_Recency3 +
-0.15382569411658 * GRP_Recency4 ;
1301005   +   H12  = H12  +    -0.00960598895677 * GRP_AcceptedCmp52
1301006   +          +    -0.13877780492855 * GRP_Frq2  +    -0.12078849771739 * GRP_Frq3
1301007   +          +     0.25058833013238 * GRP_Frq4  +     0.13932014454657 *
1301008   +        GRP_Income2  +    -0.11560599273748 * GRP_Income3
1301009   +          +    -0.36622829757109 * GRP_Income4  +     0.12796853065131 *
1301010   +        GRP_Mnt2  +    -0.15829126446209 * GRP_Mnt3  +    -0.35779207872654 *
1301011   +        GRP_Mnt4  +     0.06590491513415 * GRP_MntFishProducts2
1301012   +          +     0.00842475350903 * GRP_MntFishProducts3
1301013   +          +     -0.1623103908885 * GRP_MntFishProducts4
1301014   +          +    -0.23845524931139 * GRP_MntGoldProds2
1301015   +          +    -0.07128567155438 * GRP_MntGoldProds3
1301016   +          +     0.25778887379163 * GRP_MntGoldProds4
1301017   +          +    -0.12224351227219 * GRP_MntMeatProducts2
1301018   +          +     0.06269922653052 * GRP_MntMeatProducts3
1301019   +          +      0.2587215409794 * GRP_MntMeatProducts4
1301020   +          +     0.20096090232239 * GRP_MntWines2  +    -0.16858917844476 *
1301021   +        GRP_MntWines3  +     0.03815809499779 * GRP_MntWines4
1301022   +          +     0.05177526225067 * GRP_NumCatalogPurchases3
1301023   +          +    -0.18831777813313 * GRP_NumCatalogPurchases4
1301024   +          +     0.12374838743082 * GRP_NumDistPurchases2
1301025   +          +    -0.19910688422086 * GRP_NumDistPurchases3
1301026   +          +    -0.03804569737208 * GRP_NumDistPurchases4
1301027   +          +    -0.17179633678901 * GRP_NumWebPurchases2
1301028   +          +    -0.08560184232365 * GRP_NumWebPurchases3
1301029   +          +     0.09237237622553 * GRP_NumWebPurchases4
1301030   +          +     0.01544327143979 * GRP_RFMstat2  +      0.1127818122444 *
1301031   +        GRP_RFMstat3  +    -0.21371736650143 * GRP_RFMstat4
1301032   +          +    -0.14005478166078 * GRP_RMntFrq2  +     0.07954568858907 *
1301033   +        GRP_RMntFrq3  +    -0.02313269086836 * GRP_RMntFrq4
1301034   +          +     0.04358116545272 * GRP_Recency2  +    -0.02969695172962 *
1301035   +        GRP_Recency3  +     0.00206593904485 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00960598895677 * GRP_AcceptedCmp52 + -0.13877780492855 *
GRP_Frq2 + -0.12078849771739 * GRP_Frq3 + 0.25058833013238 * GRP_Frq4 + 0.13932014454657 *
GRP_Income2 + -0.11560599273748 * GRP_Income3 + -0.36622829757109 * GRP_Income4 +
0.12796853065131 * GRP_Mnt2 + -0.15829126446209 * GRP_Mnt3 + -0.35779207872654 * GRP_Mnt4 +
0.06590491513415 * GRP_MntFishProducts2 + 0.00842475350903 * GRP_MntFishProducts3 +
-0.1623103908885 * GRP_MntFishProducts4 + -0.23845524931139 * GRP_MntGoldProds2 +
-0.07128567155438 * GRP_MntGoldProds3 + 0.25778887379163 * GRP_MntGoldProds4 +
-0.12224351227219 * GRP_MntMeatProducts2 + 0.06269922653052 * GRP_MntMeatProducts3 +
0.2587215409794 * GRP_MntMeatProducts4 + 0.20096090232239 * GRP_MntWines2 + -0.16858917844476
* GRP_MntWines3 + 0.03815809499779 * GRP_MntWines4 + 0.05177526225067 *
GRP_NumCatalogPurchases3 + -0.18831777813313 * GRP_NumCatalogPurchases4 + 0.12374838743082 *
GRP_NumDistPurchases2 + -0.19910688422086 * GRP_NumDistPurchases3 + -0.03804569737208 *
GRP_NumDistPurchases4 + -0.17179633678901 * GRP_NumWebPurchases2 + -0.08560184232365 *
GRP_NumWebPurchases3 + 0.09237237622553 * GRP_NumWebPurchases4 + 0.01544327143979 *
GRP_RFMstat2 + 0.1127818122444 * GRP_RFMstat3 + -0.21371736650143 * GRP_RFMstat4 +
-0.14005478166078 * GRP_RMntFrq2 + 0.07954568858907 * GRP_RMntFrq3 + -0.02313269086836 *
GRP_RMntFrq4 + 0.04358116545272 * GRP_Recency2 + -0.02969695172962 * GRP_Recency3 +
0.00206593904485 * GRP_Recency4 ;
1301036   +   H13  = H13  +     0.11273135858209 * GRP_AcceptedCmp52
1301037   +          +    -0.15015665173608 * GRP_Frq2  +    -0.20454924588356 * GRP_Frq3
1301038   +          +    -0.04047998964496 * GRP_Frq4  +    -0.29897237144541 *
1301039   +        GRP_Income2  +      -0.028464296882 * GRP_Income3
1301040   +          +     0.24836294191696 * GRP_Income4  +     0.08738925553158 *
1301041   +        GRP_Mnt2  +     0.00962293230168 * GRP_Mnt3  +    -0.12661643514597 *
1301042   +        GRP_Mnt4  +    -0.03747719154948 * GRP_MntFishProducts2
1301043   +          +    -0.07078012229572 * GRP_MntFishProducts3
1301044   +          +    -0.14569186671189 * GRP_MntFishProducts4
1301045   +          +     0.14963390032413 * GRP_MntGoldProds2
1301046   +          +    -0.11869917970226 * GRP_MntGoldProds3
1301047   +          +     0.25943105626615 * GRP_MntGoldProds4
1301048   +          +     0.36609689271233 * GRP_MntMeatProducts2
1301049   +          +     0.10969864655073 * GRP_MntMeatProducts3
1301050   +          +    -0.03446779336952 * GRP_MntMeatProducts4
1301051   +          +    -0.16882321573662 * GRP_MntWines2  +     0.07914922328232 *
1301052   +        GRP_MntWines3  +     0.13243594484158 * GRP_MntWines4
1301053   +          +     0.39758714937962 * GRP_NumCatalogPurchases3
1301054   +          +     0.31434011051179 * GRP_NumCatalogPurchases4
1301055   +          +     0.08068432649382 * GRP_NumDistPurchases2
1301056   +          +    -0.08875599058351 * GRP_NumDistPurchases3
1301057   +          +     0.26738740475822 * GRP_NumDistPurchases4
1301058   +          +     -0.0916247468051 * GRP_NumWebPurchases2
1301059   +          +    -0.17267741073665 * GRP_NumWebPurchases3
1301060   +          +     0.01349113315351 * GRP_NumWebPurchases4
1301061   +          +    -0.19075973281592 * GRP_RFMstat2  +    -0.20146461162283 *
1301062   +        GRP_RFMstat3  +    -0.13097471458987 * GRP_RFMstat4
1301063   +          +     0.06761773631631 * GRP_RMntFrq2  +     0.27576244694442 *
1301064   +        GRP_RMntFrq3  +      0.1281788430307 * GRP_RMntFrq4
1301065   +          +    -0.15939599795679 * GRP_Recency2  +    -0.00210397286084 *
1301066   +        GRP_Recency3  +     0.28490847560375 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.11273135858209 * GRP_AcceptedCmp52 + -0.15015665173608 *
GRP_Frq2 + -0.20454924588356 * GRP_Frq3 + -0.04047998964496 * GRP_Frq4 + -0.29897237144541 *
GRP_Income2 + -0.028464296882 * GRP_Income3 + 0.24836294191696 * GRP_Income4 +
0.08738925553158 * GRP_Mnt2 + 0.00962293230168 * GRP_Mnt3 + -0.12661643514597 * GRP_Mnt4 +
-0.03747719154948 * GRP_MntFishProducts2 + -0.07078012229572 * GRP_MntFishProducts3 +
-0.14569186671189 * GRP_MntFishProducts4 + 0.14963390032413 * GRP_MntGoldProds2 +
-0.11869917970226 * GRP_MntGoldProds3 + 0.25943105626615 * GRP_MntGoldProds4 +
0.36609689271233 * GRP_MntMeatProducts2 + 0.10969864655073 * GRP_MntMeatProducts3 +
-0.03446779336952 * GRP_MntMeatProducts4 + -0.16882321573662 * GRP_MntWines2 +
0.07914922328232 * GRP_MntWines3 + 0.13243594484158 * GRP_MntWines4 + 0.39758714937962 *
GRP_NumCatalogPurchases3 + 0.31434011051179 * GRP_NumCatalogPurchases4 + 0.08068432649382 *
GRP_NumDistPurchases2 + -0.08875599058351 * GRP_NumDistPurchases3 + 0.26738740475822 *
GRP_NumDistPurchases4 + -0.0916247468051 * GRP_NumWebPurchases2 + -0.17267741073665 *
GRP_NumWebPurchases3 + 0.01349113315351 * GRP_NumWebPurchases4 + -0.19075973281592 *
GRP_RFMstat2 + -0.20146461162283 * GRP_RFMstat3 + -0.13097471458987 * GRP_RFMstat4 +
0.06761773631631 * GRP_RMntFrq2 + 0.27576244694442 * GRP_RMntFrq3 + 0.1281788430307 *
GRP_RMntFrq4 + -0.15939599795679 * GRP_Recency2 + -0.00210397286084 * GRP_Recency3 +
0.28490847560375 * GRP_Recency4 ;
1301067   +   H14  = H14  +     0.27713596853764 * GRP_AcceptedCmp52
1301068   +          +    -0.11480256849934 * GRP_Frq2  +      0.0285240312455 * GRP_Frq3
1301069   +          +     0.09416065239682 * GRP_Frq4  +     -0.1229961422993 *
1301070   +        GRP_Income2  +     0.01867364051002 * GRP_Income3
1301071   +          +     0.05820105400306 * GRP_Income4  +    -0.16873429334819 *
1301072   +        GRP_Mnt2  +    -0.01221085891741 * GRP_Mnt3  +    -0.10225236565235 *
1301073   +        GRP_Mnt4  +    -0.09613387975858 * GRP_MntFishProducts2
1301074   +          +    -0.18334484867808 * GRP_MntFishProducts3
1301075   +          +     0.13484477561766 * GRP_MntFishProducts4
1301076   +          +    -0.05145913380692 * GRP_MntGoldProds2
1301077   +          +     0.04459987080173 * GRP_MntGoldProds3
1301078   +          +     0.01539767655772 * GRP_MntGoldProds4
1301079   +          +     0.26537148543352 * GRP_MntMeatProducts2
1301080   +          +     0.22913678530176 * GRP_MntMeatProducts3
1301081   +          +     0.21262490658374 * GRP_MntMeatProducts4
1301082   +          +    -0.11513521401249 * GRP_MntWines2  +    -0.14420673462527 *
1301083   +        GRP_MntWines3  +     0.11949691312637 * GRP_MntWines4
1301084   +          +    -0.02289734111038 * GRP_NumCatalogPurchases3
1301085   +          +    -0.12014539185275 * GRP_NumCatalogPurchases4
1301086   +          +     0.09224372228857 * GRP_NumDistPurchases2
1301087   +          +    -0.14205094961773 * GRP_NumDistPurchases3
1301088   +          +    -0.27160467877541 * GRP_NumDistPurchases4
1301089   +          +    -0.15428446875019 * GRP_NumWebPurchases2
1301090   +          +    -0.36914157795453 * GRP_NumWebPurchases3
1301091   +          +    -0.41610537355059 * GRP_NumWebPurchases4
1301092   +          +    -0.29442656678388 * GRP_RFMstat2  +     0.03961235509827 *
1301093   +        GRP_RFMstat3  +    -0.18322878380243 * GRP_RFMstat4
1301094   +          +     0.06857495854453 * GRP_RMntFrq2  +     0.08325769999442 *
1301095   +        GRP_RMntFrq3  +     0.24334424933749 * GRP_RMntFrq4
1301096   +          +    -0.50963259840069 * GRP_Recency2  +    -0.24163634485458 *
1301097   +        GRP_Recency3  +     -0.1023689653207 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.27713596853764 * GRP_AcceptedCmp52 + -0.11480256849934 *
GRP_Frq2 + 0.0285240312455 * GRP_Frq3 + 0.09416065239682 * GRP_Frq4 + -0.1229961422993 *
GRP_Income2 + 0.01867364051002 * GRP_Income3 + 0.05820105400306 * GRP_Income4 +
-0.16873429334819 * GRP_Mnt2 + -0.01221085891741 * GRP_Mnt3 + -0.10225236565235 * GRP_Mnt4 +
-0.09613387975858 * GRP_MntFishProducts2 + -0.18334484867808 * GRP_MntFishProducts3 +
0.13484477561766 * GRP_MntFishProducts4 + -0.05145913380692 * GRP_MntGoldProds2 +
0.04459987080173 * GRP_MntGoldProds3 + 0.01539767655772 * GRP_MntGoldProds4 + 0.26537148543352
* GRP_MntMeatProducts2 + 0.22913678530176 * GRP_MntMeatProducts3 + 0.21262490658374 *
GRP_MntMeatProducts4 + -0.11513521401249 * GRP_MntWines2 + -0.14420673462527 * GRP_MntWines3 +
0.11949691312637 * GRP_MntWines4 + -0.02289734111038 * GRP_NumCatalogPurchases3 +
-0.12014539185275 * GRP_NumCatalogPurchases4 + 0.09224372228857 * GRP_NumDistPurchases2 +
-0.14205094961773 * GRP_NumDistPurchases3 + -0.27160467877541 * GRP_NumDistPurchases4 +
-0.15428446875019 * GRP_NumWebPurchases2 + -0.36914157795453 * GRP_NumWebPurchases3 +
-0.41610537355059 * GRP_NumWebPurchases4 + -0.29442656678388 * GRP_RFMstat2 + 0.03961235509827
* GRP_RFMstat3 + -0.18322878380243 * GRP_RFMstat4 + 0.06857495854453 * GRP_RMntFrq2 +
0.08325769999442 * GRP_RMntFrq3 + 0.24334424933749 * GRP_RMntFrq4 + -0.50963259840069 *
GRP_Recency2 + -0.24163634485458 * GRP_Recency3 + -0.1023689653207 * GRP_Recency4 ;
1301098   +   H15  = H15  +    -0.58071728739803 * GRP_AcceptedCmp52
1301099   +          +    -0.33803120859672 * GRP_Frq2  +    -0.08690701614481 * GRP_Frq3
1301100   +          +     0.06107334775294 * GRP_Frq4  +     0.00751374071999 *
1301101   +        GRP_Income2  +     0.20911873861779 * GRP_Income3
1301102   +          +    -0.14977199160976 * GRP_Income4  +     0.15427447371686 *
1301103   +        GRP_Mnt2  +    -0.24298277669059 * GRP_Mnt3  +    -0.02935492111499 *
1301104   +        GRP_Mnt4  +     0.04923982061963 * GRP_MntFishProducts2
1301105   +          +    -0.08952948139975 * GRP_MntFishProducts3
1301106   +          +     0.15338133379465 * GRP_MntFishProducts4
1301107   +          +     0.04821845492824 * GRP_MntGoldProds2
1301108   +          +     0.20117781904284 * GRP_MntGoldProds3
1301109   +          +     0.13013396690778 * GRP_MntGoldProds4
1301110   +          +    -0.03940841472157 * GRP_MntMeatProducts2
1301111   +          +     0.03161017721112 * GRP_MntMeatProducts3
1301112   +          +    -0.21938330779867 * GRP_MntMeatProducts4
1301113   +          +      0.3039864690076 * GRP_MntWines2  +     0.33038690291786 *
1301114   +        GRP_MntWines3  +     0.03314465135063 * GRP_MntWines4
1301115   +          +    -0.07655889365033 * GRP_NumCatalogPurchases3
1301116   +          +    -0.17353955777897 * GRP_NumCatalogPurchases4
1301117   +          +    -0.16058154480995 * GRP_NumDistPurchases2
1301118   +          +    -0.30101518928361 * GRP_NumDistPurchases3
1301119   +          +      0.0473480026433 * GRP_NumDistPurchases4
1301120   +          +     0.03132883547053 * GRP_NumWebPurchases2
1301121   +          +    -0.29425936985479 * GRP_NumWebPurchases3
1301122   +          +    -0.12527625315403 * GRP_NumWebPurchases4
1301123   +          +     0.30683805591766 * GRP_RFMstat2  +    -0.21275334469197 *
1301124   +        GRP_RFMstat3  +     0.32474239840607 * GRP_RFMstat4
1301125   +          +     0.09289841520091 * GRP_RMntFrq2  +     0.22137778862379 *
1301126   +        GRP_RMntFrq3  +     0.12254524703503 * GRP_RMntFrq4
1301127   +          +     0.46836624272095 * GRP_Recency2  +     0.01747843890017 *
1301128   +        GRP_Recency3  +    -0.28363324780869 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.58071728739803 * GRP_AcceptedCmp52 + -0.33803120859672 *
GRP_Frq2 + -0.08690701614481 * GRP_Frq3 + 0.06107334775294 * GRP_Frq4 + 0.00751374071999 *
GRP_Income2 + 0.20911873861779 * GRP_Income3 + -0.14977199160976 * GRP_Income4 +
0.15427447371686 * GRP_Mnt2 + -0.24298277669059 * GRP_Mnt3 + -0.02935492111499 * GRP_Mnt4 +
0.04923982061963 * GRP_MntFishProducts2 + -0.08952948139975 * GRP_MntFishProducts3 +
0.15338133379465 * GRP_MntFishProducts4 + 0.04821845492824 * GRP_MntGoldProds2 +
0.20117781904284 * GRP_MntGoldProds3 + 0.13013396690778 * GRP_MntGoldProds4 +
-0.03940841472157 * GRP_MntMeatProducts2 + 0.03161017721112 * GRP_MntMeatProducts3 +
-0.21938330779867 * GRP_MntMeatProducts4 + 0.3039864690076 * GRP_MntWines2 + 0.33038690291786
* GRP_MntWines3 + 0.03314465135063 * GRP_MntWines4 + -0.07655889365033 *
GRP_NumCatalogPurchases3 + -0.17353955777897 * GRP_NumCatalogPurchases4 + -0.16058154480995 *
GRP_NumDistPurchases2 + -0.30101518928361 * GRP_NumDistPurchases3 + 0.0473480026433 *
GRP_NumDistPurchases4 + 0.03132883547053 * GRP_NumWebPurchases2 + -0.29425936985479 *
GRP_NumWebPurchases3 + -0.12527625315403 * GRP_NumWebPurchases4 + 0.30683805591766 *
GRP_RFMstat2 + -0.21275334469197 * GRP_RFMstat3 + 0.32474239840607 * GRP_RFMstat4 +
0.09289841520091 * GRP_RMntFrq2 + 0.22137778862379 * GRP_RMntFrq3 + 0.12254524703503 *
GRP_RMntFrq4 + 0.46836624272095 * GRP_Recency2 + 0.01747843890017 * GRP_Recency3 +
-0.28363324780869 * GRP_Recency4 ;
1301129   +   H11  =    -0.09329902916762 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.09329902916762 + H11 ;
1301130   +   H12  =     0.21894996952826 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.21894996952826 + H12 ;
1301131   +   H13  =    -0.97210428395662 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.97210428395662 + H13 ;
1301132   +   H14  =    -0.47241372860242 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.47241372860242 + H14 ;
1301133   +   H15  =    -0.89551869986721 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.89551869986721 + H15 ;
1301134   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1301135   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1301136   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1301137   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1301138   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1301139   +END;
MPRINT(EM_DIAGRAM):   END;
1301140   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1301141   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1301142   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1301143   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1301144   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1301145   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1301146   +END;
MPRINT(EM_DIAGRAM):   END;
1301147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1301148   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1301149   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1301150   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1301151   +   P_DepVar1  =     2.68876927057109 * H11  +     0.34381275178608 * H12
1301152   +          +    -1.13153750790029 * H13  +    -0.93563986714952 * H14
1301153   +          +     1.84382077322412 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.68876927057109 * H11 + 0.34381275178608 * H12 +
-1.13153750790029 * H13 + -0.93563986714952 * H14 + 1.84382077322412 * H15 ;
1301154   +   P_DepVar1  =    -1.53169022796223 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53169022796223 + P_DepVar1 ;
1301155   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1301156   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1301157   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1301158   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1301159   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1301160   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1301161   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1301162   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1301163   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1301164   +END;
MPRINT(EM_DIAGRAM):   END;
1301165   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1301166   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1301167   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1301168   +END;
MPRINT(EM_DIAGRAM):   END;
1301169   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1301170   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1301171   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1301172   +END;
MPRINT(EM_DIAGRAM):   END;
1301173   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1301174   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1301175   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1301176   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1301177   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1301178   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1301179   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1301180   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1301181   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1301182   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1301183   +END;
MPRINT(EM_DIAGRAM):   END;
1301184   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1301185   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1301186   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1301187   +drop
1301188   +H11
1301189   +H12
1301190   +H13
1301191   +H14
1301192   +H15
1301193   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1301194   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1301195    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1301196    quit;
1301197    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1301198    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1301199    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1301200    retain ID 2 Node "Neural22";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural22";
1301201    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1301202    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1980 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1980 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1301203    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1301204    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301205    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1980 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1980 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301206    proc sort data=EMWS8.Neural22_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural22_variableset out=_temp2(keep=NAME CREATOR);
1301207    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301208    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.NEURAL22_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1301209    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1301210    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1301211    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1301212    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301213    proc contents data=EMWS8.Neural22_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural22_train out=_meta(keep=NAME) noprint;
1301214    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1301215    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1301216    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301217    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1301218    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1301219    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1301220    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301221    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301222    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1301223    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1301223  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 925 rows and 5 columns.
 
1301224    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301225    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1301226    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 925 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 925 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1301227    filename _pref
1301227  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1301228    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1301229    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1301230   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1301231   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1301232   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1301233   +
1301234   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301235   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1301236   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301237   +LABEL GRP_AcceptedCmp5 =
1301238   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1301239   +
1301240   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1301241   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1301242   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1301243   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1301244   +end;
MPRINT(EM_DIAGRAM):   end;
1301245   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1301246   +if (_UFORMAT eq '0'
1301247   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1301248   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1301249   +end;
MPRINT(EM_DIAGRAM):   end;
1301250   +else
1301251   +if (_UFORMAT eq '1'
1301252   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1301253   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1301254   +end;
MPRINT(EM_DIAGRAM):   end;
1301255   +else do;
MPRINT(EM_DIAGRAM):   else do;
1301256   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1301257   +end;
MPRINT(EM_DIAGRAM):   end;
1301258   +end;
MPRINT(EM_DIAGRAM):   end;
1301259   +
1301260   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301261   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1301262   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301263   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1301264   +
1301265   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1301266   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1301267   +end;
MPRINT(EM_DIAGRAM):   end;
1301268   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1301269   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1301270   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1301271   +end;
MPRINT(EM_DIAGRAM):   end;
1301272   +else
1301273   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1301274   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1301275   +end;
MPRINT(EM_DIAGRAM):   end;
1301276   +else
1301277   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1301278   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1301279   +end;
MPRINT(EM_DIAGRAM):   end;
1301280   +else
1301281   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1301282   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1301283   +end;
MPRINT(EM_DIAGRAM):   end;
1301284   +end;
MPRINT(EM_DIAGRAM):   end;
1301285   +
1301286   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301287   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1301288   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301289   +LABEL GRP_Income =
1301290   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1301291   +
1301292   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1301293   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1301294   +end;
MPRINT(EM_DIAGRAM):   end;
1301295   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1301296   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1301297   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1301298   +end;
MPRINT(EM_DIAGRAM):   end;
1301299   +else
1301300   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1301301   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1301302   +end;
MPRINT(EM_DIAGRAM):   end;
1301303   +else
1301304   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1301305   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1301306   +end;
MPRINT(EM_DIAGRAM):   end;
1301307   +else
1301308   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1301309   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1301310   +end;
MPRINT(EM_DIAGRAM):   end;
1301311   +end;
MPRINT(EM_DIAGRAM):   end;
1301312   +
1301313   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301314   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1301315   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301316   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1301317   +
1301318   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1301319   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1301320   +end;
MPRINT(EM_DIAGRAM):   end;
1301321   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1301322   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1301323   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1301324   +end;
MPRINT(EM_DIAGRAM):   end;
1301325   +else
1301326   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1301327   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1301328   +end;
MPRINT(EM_DIAGRAM):   end;
1301329   +else
1301330   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1301331   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1301332   +end;
MPRINT(EM_DIAGRAM):   end;
1301333   +else
1301334   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1301335   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1301336   +end;
MPRINT(EM_DIAGRAM):   end;
1301337   +end;
MPRINT(EM_DIAGRAM):   end;
1301338   +
1301339   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301340   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1301341   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301342   +LABEL GRP_MntFishProducts =
1301343   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1301344   +
1301345   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1301346   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1301347   +end;
MPRINT(EM_DIAGRAM):   end;
1301348   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1301349   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1301350   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1301351   +end;
MPRINT(EM_DIAGRAM):   end;
1301352   +else
1301353   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1301354   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1301355   +end;
MPRINT(EM_DIAGRAM):   end;
1301356   +else
1301357   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1301358   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1301359   +end;
MPRINT(EM_DIAGRAM):   end;
1301360   +else
1301361   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1301362   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1301363   +end;
MPRINT(EM_DIAGRAM):   end;
1301364   +end;
MPRINT(EM_DIAGRAM):   end;
1301365   +
1301366   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301367   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1301368   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301369   +LABEL GRP_MntGoldProds =
1301370   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1301371   +
1301372   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1301373   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1301374   +end;
MPRINT(EM_DIAGRAM):   end;
1301375   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1301376   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1301377   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1301378   +end;
MPRINT(EM_DIAGRAM):   end;
1301379   +else
1301380   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1301381   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1301382   +end;
MPRINT(EM_DIAGRAM):   end;
1301383   +else
1301384   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1301385   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1301386   +end;
MPRINT(EM_DIAGRAM):   end;
1301387   +else
1301388   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1301389   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1301390   +end;
MPRINT(EM_DIAGRAM):   end;
1301391   +end;
MPRINT(EM_DIAGRAM):   end;
1301392   +
1301393   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301394   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1301395   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301396   +LABEL GRP_MntMeatProducts =
1301397   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1301398   +
1301399   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1301400   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1301401   +end;
MPRINT(EM_DIAGRAM):   end;
1301402   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1301403   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1301404   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1301405   +end;
MPRINT(EM_DIAGRAM):   end;
1301406   +else
1301407   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1301408   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1301409   +end;
MPRINT(EM_DIAGRAM):   end;
1301410   +else
1301411   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1301412   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1301413   +end;
MPRINT(EM_DIAGRAM):   end;
1301414   +else
1301415   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1301416   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1301417   +end;
MPRINT(EM_DIAGRAM):   end;
1301418   +end;
MPRINT(EM_DIAGRAM):   end;
1301419   +
1301420   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301421   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1301422   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301423   +LABEL GRP_MntWines =
1301424   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1301425   +
1301426   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1301427   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1301428   +end;
MPRINT(EM_DIAGRAM):   end;
1301429   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1301430   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1301431   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1301432   +end;
MPRINT(EM_DIAGRAM):   end;
1301433   +else
1301434   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1301435   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1301436   +end;
MPRINT(EM_DIAGRAM):   end;
1301437   +else
1301438   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1301439   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1301440   +end;
MPRINT(EM_DIAGRAM):   end;
1301441   +else
1301442   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1301443   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1301444   +end;
MPRINT(EM_DIAGRAM):   end;
1301445   +end;
MPRINT(EM_DIAGRAM):   end;
1301446   +
1301447   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301448   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1301449   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301450   +LABEL GRP_NumCatalogPurchases =
1301451   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1301452   +
1301453   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1301454   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1301455   +end;
MPRINT(EM_DIAGRAM):   end;
1301456   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1301457   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1301458   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1301459   +end;
MPRINT(EM_DIAGRAM):   end;
1301460   +else
1301461   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1301462   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1301463   +end;
MPRINT(EM_DIAGRAM):   end;
1301464   +else
1301465   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1301466   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1301467   +end;
MPRINT(EM_DIAGRAM):   end;
1301468   +else
1301469   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1301470   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1301471   +end;
MPRINT(EM_DIAGRAM):   end;
1301472   +end;
MPRINT(EM_DIAGRAM):   end;
1301473   +
1301474   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301475   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1301476   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301477   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1301478   +
1301479   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1301480   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1301481   +end;
MPRINT(EM_DIAGRAM):   end;
1301482   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1301483   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1301484   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1301485   +end;
MPRINT(EM_DIAGRAM):   end;
1301486   +else
1301487   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1301488   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1301489   +end;
MPRINT(EM_DIAGRAM):   end;
1301490   +else
1301491   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1301492   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1301493   +end;
MPRINT(EM_DIAGRAM):   end;
1301494   +else
1301495   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1301496   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1301497   +end;
MPRINT(EM_DIAGRAM):   end;
1301498   +end;
MPRINT(EM_DIAGRAM):   end;
1301499   +
1301500   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301501   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1301502   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301503   +LABEL GRP_NumWebPurchases =
1301504   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1301505   +
1301506   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1301507   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1301508   +end;
MPRINT(EM_DIAGRAM):   end;
1301509   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1301510   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1301511   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1301512   +end;
MPRINT(EM_DIAGRAM):   end;
1301513   +else
1301514   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1301515   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1301516   +end;
MPRINT(EM_DIAGRAM):   end;
1301517   +else
1301518   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1301519   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1301520   +end;
MPRINT(EM_DIAGRAM):   end;
1301521   +else
1301522   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1301523   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1301524   +end;
MPRINT(EM_DIAGRAM):   end;
1301525   +end;
MPRINT(EM_DIAGRAM):   end;
1301526   +
1301527   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301528   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1301529   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301530   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1301531   +
1301532   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1301533   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1301534   +end;
MPRINT(EM_DIAGRAM):   end;
1301535   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1301536   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1301537   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1301538   +end;
MPRINT(EM_DIAGRAM):   end;
1301539   +else
1301540   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1301541   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1301542   +end;
MPRINT(EM_DIAGRAM):   end;
1301543   +else
1301544   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1301545   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1301546   +end;
MPRINT(EM_DIAGRAM):   end;
1301547   +else
1301548   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1301549   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1301550   +end;
MPRINT(EM_DIAGRAM):   end;
1301551   +end;
MPRINT(EM_DIAGRAM):   end;
1301552   +
1301553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301554   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1301555   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301556   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1301557   +
1301558   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1301559   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1301560   +end;
MPRINT(EM_DIAGRAM):   end;
1301561   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1301562   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1301563   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1301564   +end;
MPRINT(EM_DIAGRAM):   end;
1301565   +else
1301566   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1301567   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1301568   +end;
MPRINT(EM_DIAGRAM):   end;
1301569   +else
1301570   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1301571   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1301572   +end;
MPRINT(EM_DIAGRAM):   end;
1301573   +else
1301574   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1301575   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1301576   +end;
MPRINT(EM_DIAGRAM):   end;
1301577   +end;
MPRINT(EM_DIAGRAM):   end;
1301578   +
1301579   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301580   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1301581   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301582   +LABEL GRP_Recency =
1301583   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1301584   +
1301585   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1301586   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1301587   +end;
MPRINT(EM_DIAGRAM):   end;
1301588   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1301589   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1301590   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1301591   +end;
MPRINT(EM_DIAGRAM):   end;
1301592   +else
1301593   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1301594   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1301595   +end;
MPRINT(EM_DIAGRAM):   end;
1301596   +else
1301597   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1301598   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1301599   +end;
MPRINT(EM_DIAGRAM):   end;
1301600   +else
1301601   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1301602   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1301603   +end;
MPRINT(EM_DIAGRAM):   end;
1301604   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1301605    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1301606    quit;
1301607    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1301608    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1301609    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1301610    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1301611    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1301612    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1301613    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1301614    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301615    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301616    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1301617    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301618    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301619    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1301620    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1301621    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1301622    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1301623    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1301624    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1301625    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1301626    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301627    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1301628    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1301629    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1301630    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301631    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301632    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1301633    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1301633  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.
 
1301634    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1301635    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1301636    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 940 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301637    filename _pref
1301637  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1301638    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1301639    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1301640   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301641   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1301642   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1301643   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1301644   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1301645   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1301646    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1301647    quit;
1301648    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1301649    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1301650    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1301651    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1301652    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1301653    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301654    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1301655    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301656    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301657    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1301658    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301659    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1301660    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1301661    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1301662    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1301663    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301664    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1301665    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1301666    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1301667    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301668    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301669    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1301670    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1301671    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301672    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301673    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1301674    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1301674  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1301675    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301676    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1301677    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 944 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301678    filename _pref
1301678  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1301679    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1301680    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1301681   +
1301682   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1301683   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1301683  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1301684   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1301685   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1301686   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1301687   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1301688   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1301689    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1301690    quit;
1301691    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1301692    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1301693    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1301694    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1301695    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1301696    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301697    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1301698    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301699    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301700    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1301701    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301702    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301703    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1301704    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1301705    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1301706    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301707    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1301708    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301709    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1301710    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301711    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301712    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1301713    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1301714    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301715    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301716    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1301717    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1301717  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1301718    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301719    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1301720    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 983 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1301721    filename _pref
1301721  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1301722    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1301723    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1301724   +
1301725   +
1301726   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1301727   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1301728   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1301729   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1301730   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1301731   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1301732   +
1301733   +
1301734   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1301735   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1301736   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1301737   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1301738   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1301739   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1301740   +
1301741   +
1301742   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1301743   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1301744   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1301745   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1301746   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1301747   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1301748   +
1301749   +
1301750   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1301751   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1301752   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1301753   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1301754   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1301755   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1301756   +
1301757   +
1301758   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1301759   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1301760   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1301761   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1301762   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1301763   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1301764   +
1301765   +
1301766   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1301767   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1301768   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1301769   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1301770   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1301771   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1301772   +
1301773   +
1301774   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1301775   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1301776   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1301777   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1301778   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1301779   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1301780   +
1301781   +
1301782   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1301783   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1301784   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1301785   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1301786   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1301787   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1301788   +if
1301789   +_FILTERNORM1 not in ( '.')
1301790   + and
1301791   +_FILTERNORM2 not in ( '.')
1301792   + and
1301793   +_FILTERNORM3 not in ( '.')
1301794   + and
1301795   +_FILTERNORM4 not in ( '.')
1301796   + and
1301797   +_FILTERNORM5 not in ( '.')
1301798   + and
1301799   +_FILTERNORM6 not in ( '.')
1301800   + and
1301801   +_FILTERNORM7 not in ( ' ')
1301802   + and
1301803   +_FILTERNORM8 not in ( ' ')
1301804   +and
1301805   +( Dt_Customer ne .)
1301806   +and ( Income ne . and (Income<=107000))
1301807   +and ( Kidhome ne .)
1301808   +and ( MntFishProducts ne .)
1301809   +and ( MntFruits ne .)
1301810   +and ( MntGoldProds ne .)
1301811   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1301812   +and ( MntSweetProducts ne .)
1301813   +and ( MntWines ne .)
1301814   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1301815   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1301816   +and ( NumStorePurchases ne .)
1301817   +and ( NumWebPurchases ne .)
1301818   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1301819   +and ( Recency ne .)
1301820   +and ( Teenhome ne .)
1301821   +and ( Year_Birth ne .)
1301822   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1301823   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1301824   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1301825   +end;
MPRINT(EM_DIAGRAM):   end;
1301826   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1301827   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1301828    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1301829    quit;
1301830    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1301831    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1301832    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1301833    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1301834    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1301835    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301836    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1301837    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301838    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301839    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1301840    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301841    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1301842    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1301843    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1301844    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1301845    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301846    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1301847    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1301848    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1301849    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301850    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301851    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1301852    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1301853    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1301854    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301855    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1301856    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1301856  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1301857    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1301858    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1301859    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 1049 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301860    %macro varDept(fcmpdata=,id=);
1301861    %global nobs&id scoreFlag&id;
1301862    %let scoreFlag&id = 0;
1301863    %if &id=1 or ^&fcmpStart %then %do;
1301864    proc sort data=&fcmpdata out=_temp&id nodupkey;
1301865    by NAME;
1301866    where id=&id and LHS in( %let j=1;
1301867    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1301868    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1301869    "&var" %let j = %eval(&j+1);
1301870    %end;
1301871    );
1301872    run;
1301873    %let dsid = %sysfunc(open(_temp&id));
1301874    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1301875    %let dsid = %sysfunc(close(&dsid));
1301876    %if &&nobs&id %then %do;
1301877    %let scoreFlag&id = 1;
1301878    %let fcmpStart = 1;
1301879    %end;
1301880    %else %let fcmpStart = 0;
1301881    %end;
1301882    %else %do;
1301883    proc sort data=&fcmpdata out=_tempid;
1301884    where id=&id;
1301885    by LHS;
1301886    run;
1301887    %let dsid = %sysfunc(open(_tempid));
1301888    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1301889    %let dsid = %sysfunc(close(&dsid));
1301890    %if ^&&nobs&id %then %do;
1301891    proc datasets lib=work nolist;
1301892    delete _tempid;
1301893    run;
1301894    quit;
1301895    %end;
1301896    %else %do;
1301897    data _tempAll;
1301898    set %let j=%eval(&id-1);
1301899    %do x=1 %to &j;
1301900    %if &&nobs&x %then %do;
1301901    _temp&x %end;
1301902    %end;
1301903    ;
1301904    run;
1301905    proc sql;
1301906    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1301906  ! work._tempid p2 where p.name=p2.lhs;
1301907    quit;
1301908    data _temp&id;
1301909    set _temp&id;
1301910    where LHS ne '' and NAME ne '' and Node ne '';
1301911    run;
1301912    proc datasets lib=work nolist;
1301913    delete _tempAll;
1301914    run;
1301915    %let dsid = %sysfunc(open(_temp&id));
1301916    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1301917    %let dsid = %sysfunc(close(&dsid));
1301918    %if ^&&nobs&id %then %do;
1301919    proc datasets lib=work nolist;
1301920    delete _temp&id;
1301921    run;
1301922    quit;
1301923    %end;
1301924    %else %do;
1301925    %let scoreFlag&id = 1;
1301926    data _temp&id;
1301927    set _temp&id;
1301928    where LHS ne NAME and node ne '';
1301929    run;
1301930    %let dsid = %sysfunc(open(_temp&id));
1301931    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1301932    %let dsid = %sysfunc(close(&dsid));
1301933    %if ^&&nobs&id %then %do;
1301934    proc datasets lib=work nolist;
1301935    delete _temp&id;
1301936    run;
1301937    quit;
1301938    %end;
1301939    %else %do;
1301940    proc sort data=_temp&id nodupkey;
1301941    by LHS NAME;
1301942    run;
1301943    %end;
1301944    %end;
1301945    %end;
1301946    %end;
1301947    %mend varDept;
1301948    %macro optCode(outdata=fcmpdata);
1301949    %global fcmpStart;
1301950    %let fcmpStart = 0;
1301951    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1301952    %let NumNodes=9;
1301953    %do k=1 %to &NumNodes;
1301954    %vardept(fcmpdata=&outdata, id=&k);
1301955    %end;
1301956    %mend optCode;
1301957    %optcode(outData=EMWS8.Ensmbl7_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1301958    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1301959    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1301960    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1301961    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301962    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1301963    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1301964    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1301965    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301966    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1301967    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1301967  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1301968    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301969    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1301970    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1301971    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301972    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1301973    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1301974    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1301975    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301976    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1301977    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1301978    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1301979    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301980    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1301981    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1301981  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.
 
1301982    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1301983    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1301984    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1301985    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1301986    filename _pref
1301986  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMPUBLISHSCORE.sas";
1301987    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1301988    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMPUBLISHSCORE.sas.
1301989   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1301990   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1301991   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1301992   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1301993   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1301994   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1301995   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1301996   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1301997   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1301998   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1301999   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1302000   +LENGTH _WARN_ $4
1302001   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1302002   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1302003   +
1302004   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1302005   +
1302006   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1302007   +
1302008   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1302009   +
1302010   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1302011   +
1302012   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1302013   +
1302014   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1302015   +
1302016   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1302017   +
1302018   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1302019   +
1302020   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1302021   +
1302022   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1302023   +
1302024   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1302025   +
1302026   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1302027   +
1302028   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1302029   +
1302030   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1302031   +
1302032   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1302033   +
1302034   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1302035   +
1302036   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1302037   +
1302038   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1302039   +
1302040   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1302041   +
1302042   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1302043   +
1302044   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1302045   +
1302046   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1302047   +
1302048   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1302049   +
1302050   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1302051   +
1302052   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1302053   +
1302054   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1302055   +
1302056   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1302057   +
1302058   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1302059   +
1302060   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1302061   +
1302062   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1302063   +
1302064   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1302065   +
1302066   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1302067   +
1302068   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1302069   +
1302070   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1302071   +
1302072   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1302073   +
1302074   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1302075   +
1302076   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1302077   +
1302078   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1302079   +
1302080   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1302081   +
1302082   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1302083   +
1302084   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1302085   +
1302086   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1302087   +
1302088   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1302089   +
1302090   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1302091   +
1302092   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1302093   +
1302094   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1302095   +
1302096   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1302097   +
1302098   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1302099   +
1302100   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1302101   +
1302102   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1302103   +
1302104   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1302105   +
1302106   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1302107   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1302108   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1302109   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1302110   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302111   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302112   +end;
MPRINT(EM_DIAGRAM):   end;
1302113   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302114   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302115   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1302116   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302117   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1302118   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1302119   +   end;
MPRINT(EM_DIAGRAM):   end;
1302120   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1302121   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1302122   +   end;
MPRINT(EM_DIAGRAM):   end;
1302123   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302124   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1302125   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302126   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302127   +   end;
MPRINT(EM_DIAGRAM):   end;
1302128   +end;
MPRINT(EM_DIAGRAM):   end;
1302129   +
1302130   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1302131   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1302132   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1302133   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1302134   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1302135   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1302136   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302137   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302138   +end;
MPRINT(EM_DIAGRAM):   end;
1302139   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302140   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302141   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1302142   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302143   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1302144   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1302145   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1302146   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1302147   +   end;
MPRINT(EM_DIAGRAM):   end;
1302148   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1302149   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1302150   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1302151   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1302152   +   end;
MPRINT(EM_DIAGRAM):   end;
1302153   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1302154   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1302155   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1302156   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1302157   +   end;
MPRINT(EM_DIAGRAM):   end;
1302158   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1302159   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1302160   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1302161   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1302162   +   end;
MPRINT(EM_DIAGRAM):   end;
1302163   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302164   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1302165   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1302166   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1302167   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302168   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302169   +   end;
MPRINT(EM_DIAGRAM):   end;
1302170   +end;
MPRINT(EM_DIAGRAM):   end;
1302171   +
1302172   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1302173   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1302174   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1302175   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1302176   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1302177   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1302178   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302179   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302180   +end;
MPRINT(EM_DIAGRAM):   end;
1302181   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302182   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302183   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1302184   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302185   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1302186   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1302187   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1302188   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1302189   +   end;
MPRINT(EM_DIAGRAM):   end;
1302190   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1302191   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1302192   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1302193   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1302194   +   end;
MPRINT(EM_DIAGRAM):   end;
1302195   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1302196   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1302197   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1302198   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1302199   +   end;
MPRINT(EM_DIAGRAM):   end;
1302200   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1302201   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1302202   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1302203   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1302204   +   end;
MPRINT(EM_DIAGRAM):   end;
1302205   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302206   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1302207   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1302208   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1302209   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302210   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302211   +   end;
MPRINT(EM_DIAGRAM):   end;
1302212   +end;
MPRINT(EM_DIAGRAM):   end;
1302213   +
1302214   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1302215   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1302216   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1302217   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1302218   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1302219   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1302220   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302221   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302222   +end;
MPRINT(EM_DIAGRAM):   end;
1302223   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302224   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302225   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1302226   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302227   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1302228   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1302229   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1302230   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1302231   +   end;
MPRINT(EM_DIAGRAM):   end;
1302232   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1302233   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1302234   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1302235   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1302236   +   end;
MPRINT(EM_DIAGRAM):   end;
1302237   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1302238   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1302239   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1302240   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1302241   +   end;
MPRINT(EM_DIAGRAM):   end;
1302242   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1302243   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1302244   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1302245   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1302246   +   end;
MPRINT(EM_DIAGRAM):   end;
1302247   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302248   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1302249   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1302250   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1302251   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302252   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302253   +   end;
MPRINT(EM_DIAGRAM):   end;
1302254   +end;
MPRINT(EM_DIAGRAM):   end;
1302255   +
1302256   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1302257   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1302258   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1302259   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1302260   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1302261   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1302262   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302263   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302264   +end;
MPRINT(EM_DIAGRAM):   end;
1302265   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302266   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302267   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1302268   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302269   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1302270   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1302271   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1302272   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1302273   +   end;
MPRINT(EM_DIAGRAM):   end;
1302274   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1302275   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1302276   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1302277   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1302278   +   end;
MPRINT(EM_DIAGRAM):   end;
1302279   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1302280   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1302281   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1302282   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1302283   +   end;
MPRINT(EM_DIAGRAM):   end;
1302284   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1302285   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1302286   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1302287   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1302288   +   end;
MPRINT(EM_DIAGRAM):   end;
1302289   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302290   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1302291   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1302292   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1302293   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302294   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302295   +   end;
MPRINT(EM_DIAGRAM):   end;
1302296   +end;
MPRINT(EM_DIAGRAM):   end;
1302297   +
1302298   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1302299   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1302300   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1302301   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1302302   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1302303   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1302304   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302305   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302306   +end;
MPRINT(EM_DIAGRAM):   end;
1302307   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302308   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302309   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1302310   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302311   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1302312   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1302313   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1302314   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1302315   +   end;
MPRINT(EM_DIAGRAM):   end;
1302316   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1302317   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1302318   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1302319   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1302320   +   end;
MPRINT(EM_DIAGRAM):   end;
1302321   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1302322   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1302323   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1302324   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1302325   +   end;
MPRINT(EM_DIAGRAM):   end;
1302326   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1302327   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1302328   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1302329   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1302330   +   end;
MPRINT(EM_DIAGRAM):   end;
1302331   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302332   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1302333   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1302334   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1302335   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302336   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302337   +   end;
MPRINT(EM_DIAGRAM):   end;
1302338   +end;
MPRINT(EM_DIAGRAM):   end;
1302339   +
1302340   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1302341   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1302342   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1302343   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1302344   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1302345   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1302346   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302347   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302348   +end;
MPRINT(EM_DIAGRAM):   end;
1302349   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302350   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302351   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1302352   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302353   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1302354   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1302355   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1302356   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1302357   +   end;
MPRINT(EM_DIAGRAM):   end;
1302358   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1302359   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1302360   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1302361   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1302362   +   end;
MPRINT(EM_DIAGRAM):   end;
1302363   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1302364   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1302365   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1302366   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1302367   +   end;
MPRINT(EM_DIAGRAM):   end;
1302368   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1302369   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1302370   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1302371   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1302372   +   end;
MPRINT(EM_DIAGRAM):   end;
1302373   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302374   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1302375   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1302376   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1302377   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302378   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302379   +   end;
MPRINT(EM_DIAGRAM):   end;
1302380   +end;
MPRINT(EM_DIAGRAM):   end;
1302381   +
1302382   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1302383   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1302384   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1302385   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1302386   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1302387   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1302388   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302389   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302390   +end;
MPRINT(EM_DIAGRAM):   end;
1302391   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302392   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302393   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1302394   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302395   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1302396   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1302397   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1302398   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1302399   +   end;
MPRINT(EM_DIAGRAM):   end;
1302400   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1302401   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1302402   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1302403   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1302404   +   end;
MPRINT(EM_DIAGRAM):   end;
1302405   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1302406   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1302407   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1302408   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1302409   +   end;
MPRINT(EM_DIAGRAM):   end;
1302410   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1302411   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1302412   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1302413   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1302414   +   end;
MPRINT(EM_DIAGRAM):   end;
1302415   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302416   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1302417   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1302418   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1302419   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302420   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302421   +   end;
MPRINT(EM_DIAGRAM):   end;
1302422   +end;
MPRINT(EM_DIAGRAM):   end;
1302423   +
1302424   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1302425   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1302426   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1302427   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1302428   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1302429   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302430   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302431   +end;
MPRINT(EM_DIAGRAM):   end;
1302432   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302433   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302434   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1302435   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302436   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1302437   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1302438   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1302439   +   end;
MPRINT(EM_DIAGRAM):   end;
1302440   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1302441   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1302442   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1302443   +   end;
MPRINT(EM_DIAGRAM):   end;
1302444   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1302445   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1302446   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1302447   +   end;
MPRINT(EM_DIAGRAM):   end;
1302448   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302449   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1302450   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1302451   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302452   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302453   +   end;
MPRINT(EM_DIAGRAM):   end;
1302454   +end;
MPRINT(EM_DIAGRAM):   end;
1302455   +
1302456   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1302457   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1302458   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1302459   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1302460   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1302461   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1302462   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302463   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302464   +end;
MPRINT(EM_DIAGRAM):   end;
1302465   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302466   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302467   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1302468   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302469   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1302470   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1302471   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1302472   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1302473   +   end;
MPRINT(EM_DIAGRAM):   end;
1302474   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1302475   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1302476   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1302477   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1302478   +   end;
MPRINT(EM_DIAGRAM):   end;
1302479   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1302480   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1302481   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1302482   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1302483   +   end;
MPRINT(EM_DIAGRAM):   end;
1302484   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1302485   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1302486   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1302487   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1302488   +   end;
MPRINT(EM_DIAGRAM):   end;
1302489   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302490   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1302491   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1302492   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1302493   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302494   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302495   +   end;
MPRINT(EM_DIAGRAM):   end;
1302496   +end;
MPRINT(EM_DIAGRAM):   end;
1302497   +
1302498   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1302499   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1302500   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1302501   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1302502   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1302503   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1302504   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302505   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302506   +end;
MPRINT(EM_DIAGRAM):   end;
1302507   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302508   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302509   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1302510   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302511   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1302512   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1302513   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1302514   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1302515   +   end;
MPRINT(EM_DIAGRAM):   end;
1302516   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1302517   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1302518   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1302519   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1302520   +   end;
MPRINT(EM_DIAGRAM):   end;
1302521   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1302522   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1302523   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1302524   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1302525   +   end;
MPRINT(EM_DIAGRAM):   end;
1302526   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1302527   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1302528   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1302529   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1302530   +   end;
MPRINT(EM_DIAGRAM):   end;
1302531   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302532   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1302533   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1302534   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1302535   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302536   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302537   +   end;
MPRINT(EM_DIAGRAM):   end;
1302538   +end;
MPRINT(EM_DIAGRAM):   end;
1302539   +
1302540   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1302541   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1302542   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1302543   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1302544   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1302545   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1302546   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302547   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302548   +end;
MPRINT(EM_DIAGRAM):   end;
1302549   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302550   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302551   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1302552   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302553   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1302554   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1302555   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1302556   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1302557   +   end;
MPRINT(EM_DIAGRAM):   end;
1302558   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1302559   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1302560   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1302561   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1302562   +   end;
MPRINT(EM_DIAGRAM):   end;
1302563   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1302564   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1302565   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1302566   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1302567   +   end;
MPRINT(EM_DIAGRAM):   end;
1302568   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1302569   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1302570   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1302571   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1302572   +   end;
MPRINT(EM_DIAGRAM):   end;
1302573   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302574   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1302575   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1302576   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1302577   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302578   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302579   +   end;
MPRINT(EM_DIAGRAM):   end;
1302580   +end;
MPRINT(EM_DIAGRAM):   end;
1302581   +
1302582   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1302583   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1302584   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1302585   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1302586   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1302587   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1302588   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302589   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302590   +end;
MPRINT(EM_DIAGRAM):   end;
1302591   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302592   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302593   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1302594   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302595   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1302596   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1302597   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1302598   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1302599   +   end;
MPRINT(EM_DIAGRAM):   end;
1302600   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1302601   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1302602   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1302603   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
The SAS System
 
1302604   +   end;
MPRINT(EM_DIAGRAM):   end;
1302605   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1302606   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1302607   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1302608   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1302609   +   end;
MPRINT(EM_DIAGRAM):   end;
1302610   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1302611   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1302612   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1302613   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1302614   +   end;
MPRINT(EM_DIAGRAM):   end;
1302615   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302616   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1302617   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1302618   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1302619   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302620   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302621   +   end;
MPRINT(EM_DIAGRAM):   end;
1302622   +end;
MPRINT(EM_DIAGRAM):   end;
1302623   +
1302624   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1302625   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1302626   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1302627   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1302628   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1302629   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1302630   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1302631   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302632   +end;
MPRINT(EM_DIAGRAM):   end;
1302633   +else do;
MPRINT(EM_DIAGRAM):   else do;
1302634   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1302635   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1302636   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1302637   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1302638   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1302639   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1302640   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1302641   +   end;
MPRINT(EM_DIAGRAM):   end;
1302642   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1302643   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1302644   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1302645   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1302646   +   end;
MPRINT(EM_DIAGRAM):   end;
1302647   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1302648   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1302649   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1302650   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1302651   +   end;
MPRINT(EM_DIAGRAM):   end;
1302652   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1302653   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1302654   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1302655   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1302656   +   end;
MPRINT(EM_DIAGRAM):   end;
1302657   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1302658   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1302659   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1302660   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1302661   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1302662   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302663   +   end;
MPRINT(EM_DIAGRAM):   end;
1302664   +end;
MPRINT(EM_DIAGRAM):   end;
1302665   +
1302666   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302667   +*** Checking missing input Interval
1302668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1302669   +
1302670   +IF NMISS(
1302671   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1302672   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1302673   +
1302674   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1302675   +END;
MPRINT(EM_DIAGRAM):   END;
1302676   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302677   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1302678   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302679   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1302680   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1302681   +END;
MPRINT(EM_DIAGRAM):   END;
1302682   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1302683   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1302684   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1302685   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1302686   +END;
MPRINT(EM_DIAGRAM):   END;
1302687   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302688   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1302689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302690   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302691   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1302692   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302693   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1302694   +   H11  =     0.03855897145156 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.03855897145156 * S_Year_Birth ;
1302695   +   H12  =      0.4940754340088 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.4940754340088 * S_Year_Birth ;
1302696   +   H13  =     0.17524137660647 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.17524137660647 * S_Year_Birth ;
1302697   +   H14  =     0.27270757044038 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.27270757044038 * S_Year_Birth ;
1302698   +   H15  =    -0.02127353119313 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.02127353119313 * S_Year_Birth ;
1302699   +   H16  =    -0.10595973365564 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.10595973365564 * S_Year_Birth ;
1302700   +   H17  =    -0.11271332681901 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.11271332681901 * S_Year_Birth ;
1302701   +   H11  = H11  +     0.21558790598329 * GRP_AcceptedCmp52
1302702   +          +    -0.07145572032882 * GRP_Frq2  +     0.09268595548153 * GRP_Frq3
1302703   +          +    -0.20765463263399 * GRP_Frq4  +    -0.00887637988838 *
1302704   +        GRP_Income2  +    -0.34198008097003 * GRP_Income3
1302705   +          +     0.00518173450113 * GRP_Income4  +     0.17153998784849 *
1302706   +        GRP_Mnt2  +    -0.03282863464194 * GRP_Mnt3  +     0.15479242768387 *
1302707   +        GRP_Mnt4  +    -0.14566682947772 * GRP_MntFishProducts2
1302708   +          +    -0.04697385312971 * GRP_MntFishProducts3
1302709   +          +     0.05477300056491 * GRP_MntFishProducts4
1302710   +          +    -0.21182877070793 * GRP_MntGoldProds2
1302711   +          +    -0.06202001203906 * GRP_MntGoldProds3
1302712   +          +    -0.23297283739715 * GRP_MntGoldProds4
1302713   +          +    -0.27072080481215 * GRP_MntMeatProducts2
1302714   +          +     -0.0879595975531 * GRP_MntMeatProducts3
1302715   +          +     0.01711044358319 * GRP_MntMeatProducts4
1302716   +          +     0.01568057691806 * GRP_MntWines2  +    -0.14454572309741 *
1302717   +        GRP_MntWines3  +      0.1665968837033 * GRP_MntWines4
1302718   +          +    -0.24980039994544 * GRP_NumCatalogPurchases3
1302719   +          +    -0.00199030871063 * GRP_NumCatalogPurchases4
1302720   +          +     0.11565917560156 * GRP_NumDistPurchases2
1302721   +          +      0.1678532898895 * GRP_NumDistPurchases3
1302722   +          +     -0.0338568889009 * GRP_NumDistPurchases4
1302723   +          +     0.09970745707934 * GRP_NumWebPurchases2
1302724   +          +     0.02961221360107 * GRP_NumWebPurchases3
1302725   +          +     0.02261054892411 * GRP_NumWebPurchases4
1302726   +          +     0.22891892518291 * GRP_RFMstat2  +     0.30720492174411 *
1302727   +        GRP_RFMstat3  +     0.02558392907316 * GRP_RFMstat4
1302728   +          +    -0.22752513596954 * GRP_RMntFrq2  +    -0.11010023712096 *
1302729   +        GRP_RMntFrq3  +    -0.29294961809478 * GRP_RMntFrq4
1302730   +          +     0.17323450297234 * GRP_Recency2  +    -0.02999008104866 *
1302731   +        GRP_Recency3  +    -0.07522056103469 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21558790598329 * GRP_AcceptedCmp52 + -0.07145572032882 *
GRP_Frq2 + 0.09268595548153 * GRP_Frq3 + -0.20765463263399 * GRP_Frq4 + -0.00887637988838 *
GRP_Income2 + -0.34198008097003 * GRP_Income3 + 0.00518173450113 * GRP_Income4 +
0.17153998784849 * GRP_Mnt2 + -0.03282863464194 * GRP_Mnt3 + 0.15479242768387 * GRP_Mnt4 +
-0.14566682947772 * GRP_MntFishProducts2 + -0.04697385312971 * GRP_MntFishProducts3 +
0.05477300056491 * GRP_MntFishProducts4 + -0.21182877070793 * GRP_MntGoldProds2 +
-0.06202001203906 * GRP_MntGoldProds3 + -0.23297283739715 * GRP_MntGoldProds4 +
-0.27072080481215 * GRP_MntMeatProducts2 + -0.0879595975531 * GRP_MntMeatProducts3 +
0.01711044358319 * GRP_MntMeatProducts4 + 0.01568057691806 * GRP_MntWines2 + -0.14454572309741
* GRP_MntWines3 + 0.1665968837033 * GRP_MntWines4 + -0.24980039994544 *
GRP_NumCatalogPurchases3 + -0.00199030871063 * GRP_NumCatalogPurchases4 + 0.11565917560156 *
GRP_NumDistPurchases2 + 0.1678532898895 * GRP_NumDistPurchases3 + -0.0338568889009 *
GRP_NumDistPurchases4 + 0.09970745707934 * GRP_NumWebPurchases2 + 0.02961221360107 *
GRP_NumWebPurchases3 + 0.02261054892411 * GRP_NumWebPurchases4 + 0.22891892518291 *
GRP_RFMstat2 + 0.30720492174411 * GRP_RFMstat3 + 0.02558392907316 * GRP_RFMstat4 +
-0.22752513596954 * GRP_RMntFrq2 + -0.11010023712096 * GRP_RMntFrq3 + -0.29294961809478 *
GRP_RMntFrq4 + 0.17323450297234 * GRP_Recency2 + -0.02999008104866 * GRP_Recency3 +
-0.07522056103469 * GRP_Recency4 ;
1302732   +   H12  = H12  +    -0.17475665685155 * GRP_AcceptedCmp52
1302733   +          +     0.39850686717751 * GRP_Frq2  +     0.21273190324396 * GRP_Frq3
1302734   +          +    -0.04292229763335 * GRP_Frq4  +     0.48189221687125 *
1302735   +        GRP_Income2  +       0.757675062227 * GRP_Income3
1302736   +          +    -0.31438345261512 * GRP_Income4  +     0.08884755999997 *
1302737   +        GRP_Mnt2  +     0.02891204793625 * GRP_Mnt3  +    -0.11500381143203 *
1302738   +        GRP_Mnt4  +     0.47755891441547 * GRP_MntFishProducts2
1302739   +          +     0.26645530981311 * GRP_MntFishProducts3
1302740   +          +    -0.17631072283513 * GRP_MntFishProducts4
1302741   +          +    -0.35439521021691 * GRP_MntGoldProds2
1302742   +          +     0.11419663880206 * GRP_MntGoldProds3
1302743   +          +     0.07288749113866 * GRP_MntGoldProds4
1302744   +          +    -0.52191822126159 * GRP_MntMeatProducts2
1302745   +          +    -0.08421627788812 * GRP_MntMeatProducts3
1302746   +          +    -0.15930642038763 * GRP_MntMeatProducts4
1302747   +          +     0.17420985773045 * GRP_MntWines2  +     0.21257483876123 *
1302748   +        GRP_MntWines3  +    -0.13198840161443 * GRP_MntWines4
1302749   +          +    -0.24725403471973 * GRP_NumCatalogPurchases3
1302750   +          +     0.28574938745998 * GRP_NumCatalogPurchases4
1302751   +          +     -0.4878996299474 * GRP_NumDistPurchases2
1302752   +          +     0.10139595392447 * GRP_NumDistPurchases3
1302753   +          +     0.05251891244468 * GRP_NumDistPurchases4
1302754   +          +    -0.18486003226007 * GRP_NumWebPurchases2
1302755   +          +      0.0263831646971 * GRP_NumWebPurchases3
1302756   +          +     0.26495059708503 * GRP_NumWebPurchases4
1302757   +          +    -0.16580006605432 * GRP_RFMstat2  +    -0.12537703875848 *
1302758   +        GRP_RFMstat3  +      -0.100652416931 * GRP_RFMstat4
1302759   +          +    -0.00913931308958 * GRP_RMntFrq2  +    -0.15758837200974 *
1302760   +        GRP_RMntFrq3  +     -0.1198225533702 * GRP_RMntFrq4
1302761   +          +       1.075902392162 * GRP_Recency2  +     0.44926983542925 *
1302762   +        GRP_Recency3  +     -0.4970729472837 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17475665685155 * GRP_AcceptedCmp52 + 0.39850686717751 *
GRP_Frq2 + 0.21273190324396 * GRP_Frq3 + -0.04292229763335 * GRP_Frq4 + 0.48189221687125 *
GRP_Income2 + 0.757675062227 * GRP_Income3 + -0.31438345261512 * GRP_Income4 +
0.08884755999997 * GRP_Mnt2 + 0.02891204793625 * GRP_Mnt3 + -0.11500381143203 * GRP_Mnt4 +
0.47755891441547 * GRP_MntFishProducts2 + 0.26645530981311 * GRP_MntFishProducts3 +
-0.17631072283513 * GRP_MntFishProducts4 + -0.35439521021691 * GRP_MntGoldProds2 +
0.11419663880206 * GRP_MntGoldProds3 + 0.07288749113866 * GRP_MntGoldProds4 +
-0.52191822126159 * GRP_MntMeatProducts2 + -0.08421627788812 * GRP_MntMeatProducts3 +
-0.15930642038763 * GRP_MntMeatProducts4 + 0.17420985773045 * GRP_MntWines2 + 0.21257483876123
* GRP_MntWines3 + -0.13198840161443 * GRP_MntWines4 + -0.24725403471973 *
GRP_NumCatalogPurchases3 + 0.28574938745998 * GRP_NumCatalogPurchases4 + -0.4878996299474 *
GRP_NumDistPurchases2 + 0.10139595392447 * GRP_NumDistPurchases3 + 0.05251891244468 *
GRP_NumDistPurchases4 + -0.18486003226007 * GRP_NumWebPurchases2 + 0.0263831646971 *
GRP_NumWebPurchases3 + 0.26495059708503 * GRP_NumWebPurchases4 + -0.16580006605432 *
GRP_RFMstat2 + -0.12537703875848 * GRP_RFMstat3 + -0.100652416931 * GRP_RFMstat4 +
-0.00913931308958 * GRP_RMntFrq2 + -0.15758837200974 * GRP_RMntFrq3 + -0.1198225533702 *
GRP_RMntFrq4 + 1.075902392162 * GRP_Recency2 + 0.44926983542925 * GRP_Recency3 +
-0.4970729472837 * GRP_Recency4 ;
1302763   +   H13  = H13  +     0.00215688122529 * GRP_AcceptedCmp52
1302764   +          +    -0.01427589791379 * GRP_Frq2  +    -0.13098496868755 * GRP_Frq3
1302765   +          +    -0.30502313457201 * GRP_Frq4  +    -0.37973462663051 *
1302766   +        GRP_Income2  +     0.00732780844057 * GRP_Income3
1302767   +          +     0.53278328894406 * GRP_Income4  +     0.29819966041309 *
1302768   +        GRP_Mnt2  +     0.25349727466129 * GRP_Mnt3  +     0.10579488290769 *
1302769   +        GRP_Mnt4  +    -0.09288921771048 * GRP_MntFishProducts2
1302770   +          +     0.02714802509094 * GRP_MntFishProducts3
1302771   +          +     0.27119078554613 * GRP_MntFishProducts4
1302772   +          +     0.19322428614339 * GRP_MntGoldProds2
1302773   +          +     0.34778546410632 * GRP_MntGoldProds3
1302774   +          +    -0.06570146779096 * GRP_MntGoldProds4
1302775   +          +     0.44935275650977 * GRP_MntMeatProducts2
1302776   +          +     0.00805794344265 * GRP_MntMeatProducts3
1302777   +          +     0.02445782833023 * GRP_MntMeatProducts4
1302778   +          +    -0.12082391878766 * GRP_MntWines2  +    -0.28739181733976 *
1302779   +        GRP_MntWines3  +    -0.12417307544408 * GRP_MntWines4
1302780   +          +     0.33901531634752 * GRP_NumCatalogPurchases3
1302781   +          +     -0.0519425405532 * GRP_NumCatalogPurchases4
1302782   +          +     0.03481806823908 * GRP_NumDistPurchases2
1302783   +          +      0.0546202479864 * GRP_NumDistPurchases3
1302784   +          +    -0.05240296080421 * GRP_NumDistPurchases4
1302785   +          +     0.28307550964921 * GRP_NumWebPurchases2
1302786   +          +     0.31503543231591 * GRP_NumWebPurchases3
1302787   +          +     0.24817135719308 * GRP_NumWebPurchases4
1302788   +          +    -0.05017370187238 * GRP_RFMstat2  +     0.08161239885611 *
1302789   +        GRP_RFMstat3  +    -0.14085507706312 * GRP_RFMstat4
1302790   +          +     0.11738278568714 * GRP_RMntFrq2  +     0.28471680928269 *
1302791   +        GRP_RMntFrq3  +     0.46590886050772 * GRP_RMntFrq4
1302792   +          +     -0.2318556486679 * GRP_Recency2  +    -0.37508297533514 *
1302793   +        GRP_Recency3  +     0.05823801065489 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00215688122529 * GRP_AcceptedCmp52 + -0.01427589791379 *
GRP_Frq2 + -0.13098496868755 * GRP_Frq3 + -0.30502313457201 * GRP_Frq4 + -0.37973462663051 *
GRP_Income2 + 0.00732780844057 * GRP_Income3 + 0.53278328894406 * GRP_Income4 +
0.29819966041309 * GRP_Mnt2 + 0.25349727466129 * GRP_Mnt3 + 0.10579488290769 * GRP_Mnt4 +
-0.09288921771048 * GRP_MntFishProducts2 + 0.02714802509094 * GRP_MntFishProducts3 +
0.27119078554613 * GRP_MntFishProducts4 + 0.19322428614339 * GRP_MntGoldProds2 +
0.34778546410632 * GRP_MntGoldProds3 + -0.06570146779096 * GRP_MntGoldProds4 +
0.44935275650977 * GRP_MntMeatProducts2 + 0.00805794344265 * GRP_MntMeatProducts3 +
0.02445782833023 * GRP_MntMeatProducts4 + -0.12082391878766 * GRP_MntWines2 +
-0.28739181733976 * GRP_MntWines3 + -0.12417307544408 * GRP_MntWines4 + 0.33901531634752 *
GRP_NumCatalogPurchases3 + -0.0519425405532 * GRP_NumCatalogPurchases4 + 0.03481806823908 *
GRP_NumDistPurchases2 + 0.0546202479864 * GRP_NumDistPurchases3 + -0.05240296080421 *
GRP_NumDistPurchases4 + 0.28307550964921 * GRP_NumWebPurchases2 + 0.31503543231591 *
GRP_NumWebPurchases3 + 0.24817135719308 * GRP_NumWebPurchases4 + -0.05017370187238 *
GRP_RFMstat2 + 0.08161239885611 * GRP_RFMstat3 + -0.14085507706312 * GRP_RFMstat4 +
0.11738278568714 * GRP_RMntFrq2 + 0.28471680928269 * GRP_RMntFrq3 + 0.46590886050772 *
GRP_RMntFrq4 + -0.2318556486679 * GRP_Recency2 + -0.37508297533514 * GRP_Recency3 +
0.05823801065489 * GRP_Recency4 ;
1302794   +   H14  = H14  +      0.4684617848987 * GRP_AcceptedCmp52
1302795   +          +    -0.10078363733095 * GRP_Frq2  +     0.12187262992305 * GRP_Frq3
1302796   +          +     0.06615581853287 * GRP_Frq4  +    -0.37438533196327 *
1302797   +        GRP_Income2  +    -0.54951239852844 * GRP_Income3
1302798   +          +     0.42517426076684 * GRP_Income4  +     0.01160451666213 *
1302799   +        GRP_Mnt2  +    -0.19046851266656 * GRP_Mnt3  +    -0.22599863084471 *
1302800   +        GRP_Mnt4  +     0.02252915755857 * GRP_MntFishProducts2
1302801   +          +    -0.08997232581072 * GRP_MntFishProducts3
1302802   +          +    -0.05669599356928 * GRP_MntFishProducts4
1302803   +          +      0.2199150131909 * GRP_MntGoldProds2
1302804   +          +     0.05584571259838 * GRP_MntGoldProds3
1302805   +          +    -0.13160142309505 * GRP_MntGoldProds4
1302806   +          +      0.2539849640816 * GRP_MntMeatProducts2
1302807   +          +     0.29448191059312 * GRP_MntMeatProducts3
1302808   +          +    -0.33946200154351 * GRP_MntMeatProducts4
1302809   +          +    -0.47231816370111 * GRP_MntWines2  +    -0.35916844796743 *
1302810   +        GRP_MntWines3  +     0.15578356288597 * GRP_MntWines4
1302811   +          +     0.35913140014848 * GRP_NumCatalogPurchases3
1302812   +          +    -0.07798422379681 * GRP_NumCatalogPurchases4
1302813   +          +     0.38206153529506 * GRP_NumDistPurchases2
1302814   +          +     0.08642998303162 * GRP_NumDistPurchases3
1302815   +          +    -0.00375635377885 * GRP_NumDistPurchases4
1302816   +          +    -0.04352529411419 * GRP_NumWebPurchases2
1302817   +          +    -0.17285172586868 * GRP_NumWebPurchases3
1302818   +          +     0.23030028338396 * GRP_NumWebPurchases4
1302819   +          +     0.16194254582104 * GRP_RFMstat2  +    -0.03413270353062 *
1302820   +        GRP_RFMstat3  +    -0.32516629559317 * GRP_RFMstat4
1302821   +          +    -0.16070809362515 * GRP_RMntFrq2  +    -0.17716471899416 *
1302822   +        GRP_RMntFrq3  +     0.09335047904411 * GRP_RMntFrq4
1302823   +          +    -0.92875393407697 * GRP_Recency2  +     0.16068827585896 *
1302824   +        GRP_Recency3  +     0.41807637211453 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.4684617848987 * GRP_AcceptedCmp52 + -0.10078363733095 *
GRP_Frq2 + 0.12187262992305 * GRP_Frq3 + 0.06615581853287 * GRP_Frq4 + -0.37438533196327 *
GRP_Income2 + -0.54951239852844 * GRP_Income3 + 0.42517426076684 * GRP_Income4 +
0.01160451666213 * GRP_Mnt2 + -0.19046851266656 * GRP_Mnt3 + -0.22599863084471 * GRP_Mnt4 +
0.02252915755857 * GRP_MntFishProducts2 + -0.08997232581072 * GRP_MntFishProducts3 +
-0.05669599356928 * GRP_MntFishProducts4 + 0.2199150131909 * GRP_MntGoldProds2 +
0.05584571259838 * GRP_MntGoldProds3 + -0.13160142309505 * GRP_MntGoldProds4 + 0.2539849640816
* GRP_MntMeatProducts2 + 0.29448191059312 * GRP_MntMeatProducts3 + -0.33946200154351 *
GRP_MntMeatProducts4 + -0.47231816370111 * GRP_MntWines2 + -0.35916844796743 * GRP_MntWines3 +
0.15578356288597 * GRP_MntWines4 + 0.35913140014848 * GRP_NumCatalogPurchases3 +
-0.07798422379681 * GRP_NumCatalogPurchases4 + 0.38206153529506 * GRP_NumDistPurchases2 +
0.08642998303162 * GRP_NumDistPurchases3 + -0.00375635377885 * GRP_NumDistPurchases4 +
-0.04352529411419 * GRP_NumWebPurchases2 + -0.17285172586868 * GRP_NumWebPurchases3 +
0.23030028338396 * GRP_NumWebPurchases4 + 0.16194254582104 * GRP_RFMstat2 + -0.03413270353062
* GRP_RFMstat3 + -0.32516629559317 * GRP_RFMstat4 + -0.16070809362515 * GRP_RMntFrq2 +
-0.17716471899416 * GRP_RMntFrq3 + 0.09335047904411 * GRP_RMntFrq4 + -0.92875393407697 *
GRP_Recency2 + 0.16068827585896 * GRP_Recency3 + 0.41807637211453 * GRP_Recency4 ;
1302825   +   H15  = H15  +    -0.78481953865912 * GRP_AcceptedCmp52
1302826   +          +     0.05211963408638 * GRP_Frq2  +     0.24938737986681 * GRP_Frq3
1302827   +          +    -0.07347952562846 * GRP_Frq4  +    -0.15741135518664 *
1302828   +        GRP_Income2  +     0.01909378686442 * GRP_Income3
1302829   +          +    -0.15898085757789 * GRP_Income4  +     0.09202012507046 *
1302830   +        GRP_Mnt2  +    -0.39641738573024 * GRP_Mnt3  +     0.02885484069701 *
1302831   +        GRP_Mnt4  +     0.29554161293423 * GRP_MntFishProducts2
1302832   +          +    -0.04439366722112 * GRP_MntFishProducts3
1302833   +          +    -0.22939355735301 * GRP_MntFishProducts4
1302834   +          +    -0.00367144103801 * GRP_MntGoldProds2
1302835   +          +      -0.033315128385 * GRP_MntGoldProds3
1302836   +          +     0.10655545066126 * GRP_MntGoldProds4
1302837   +          +     0.04927093675686 * GRP_MntMeatProducts2
1302838   +          +    -0.20156680946257 * GRP_MntMeatProducts3
1302839   +          +     0.29394273234417 * GRP_MntMeatProducts4
1302840   +          +     0.27324472738231 * GRP_MntWines2  +       0.398830803883 *
1302841   +        GRP_MntWines3  +    -0.16588038849208 * GRP_MntWines4
1302842   +          +     -0.3438340194477 * GRP_NumCatalogPurchases3
1302843   +          +    -0.37438590488645 * GRP_NumCatalogPurchases4
1302844   +          +    -0.42285816542086 * GRP_NumDistPurchases2
1302845   +          +     -0.1008716650505 * GRP_NumDistPurchases3
1302846   +          +    -0.42793112700917 * GRP_NumDistPurchases4
1302847   +          +    -0.06792665579186 * GRP_NumWebPurchases2
1302848   +          +     0.37113277513001 * GRP_NumWebPurchases3
1302849   +          +     0.05720653023952 * GRP_NumWebPurchases4
1302850   +          +    -0.30997814005221 * GRP_RFMstat2  +     0.06219993861842 *
1302851   +        GRP_RFMstat3  +    -0.22600753085668 * GRP_RFMstat4
1302852   +          +    -0.31041957734532 * GRP_RMntFrq2  +     0.25053172234721 *
1302853   +        GRP_RMntFrq3  +     0.15983683107051 * GRP_RMntFrq4
1302854   +          +     0.52797823019932 * GRP_Recency2  +     0.11382874879823 *
1302855   +        GRP_Recency3  +    -0.22166533511817 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.78481953865912 * GRP_AcceptedCmp52 + 0.05211963408638 *
GRP_Frq2 + 0.24938737986681 * GRP_Frq3 + -0.07347952562846 * GRP_Frq4 + -0.15741135518664 *
GRP_Income2 + 0.01909378686442 * GRP_Income3 + -0.15898085757789 * GRP_Income4 +
0.09202012507046 * GRP_Mnt2 + -0.39641738573024 * GRP_Mnt3 + 0.02885484069701 * GRP_Mnt4 +
0.29554161293423 * GRP_MntFishProducts2 + -0.04439366722112 * GRP_MntFishProducts3 +
-0.22939355735301 * GRP_MntFishProducts4 + -0.00367144103801 * GRP_MntGoldProds2 +
-0.033315128385 * GRP_MntGoldProds3 + 0.10655545066126 * GRP_MntGoldProds4 + 0.04927093675686
* GRP_MntMeatProducts2 + -0.20156680946257 * GRP_MntMeatProducts3 + 0.29394273234417 *
GRP_MntMeatProducts4 + 0.27324472738231 * GRP_MntWines2 + 0.398830803883 * GRP_MntWines3 +
-0.16588038849208 * GRP_MntWines4 + -0.3438340194477 * GRP_NumCatalogPurchases3 +
-0.37438590488645 * GRP_NumCatalogPurchases4 + -0.42285816542086 * GRP_NumDistPurchases2 +
-0.1008716650505 * GRP_NumDistPurchases3 + -0.42793112700917 * GRP_NumDistPurchases4 +
-0.06792665579186 * GRP_NumWebPurchases2 + 0.37113277513001 * GRP_NumWebPurchases3 +
0.05720653023952 * GRP_NumWebPurchases4 + -0.30997814005221 * GRP_RFMstat2 + 0.06219993861842
* GRP_RFMstat3 + -0.22600753085668 * GRP_RFMstat4 + -0.31041957734532 * GRP_RMntFrq2 +
0.25053172234721 * GRP_RMntFrq3 + 0.15983683107051 * GRP_RMntFrq4 + 0.52797823019932 *
GRP_Recency2 + 0.11382874879823 * GRP_Recency3 + -0.22166533511817 * GRP_Recency4 ;
1302856   +   H16  = H16  +      0.7107136456569 * GRP_AcceptedCmp52
1302857   +          +     -0.4751898387651 * GRP_Frq2  +    -0.11277060686411 * GRP_Frq3
1302858   +          +     0.15821547082299 * GRP_Frq4  +    -0.45945049231995 *
1302859   +        GRP_Income2  +    -0.18413512635176 * GRP_Income3
1302860   +          +     0.39594738835509 * GRP_Income4  +    -0.15472205523822 *
1302861   +        GRP_Mnt2  +     0.02844181224363 * GRP_Mnt3  +     0.45435843401555 *
1302862   +        GRP_Mnt4  +    -0.29220588593813 * GRP_MntFishProducts2
1302863   +          +     0.04340555393469 * GRP_MntFishProducts3
1302864   +          +    -0.20048219926361 * GRP_MntFishProducts4
1302865   +          +     0.16101452165456 * GRP_MntGoldProds2
1302866   +          +    -0.04467647211336 * GRP_MntGoldProds3
1302867   +          +     0.32142013598241 * GRP_MntGoldProds4
1302868   +          +     0.29741565154233 * GRP_MntMeatProducts2
1302869   +          +    -0.00264678222241 * GRP_MntMeatProducts3
1302870   +          +    -0.11596499325048 * GRP_MntMeatProducts4
1302871   +          +    -0.29849043995136 * GRP_MntWines2  +     0.14756452272338 *
1302872   +        GRP_MntWines3  +     0.48995265672675 * GRP_MntWines4
1302873   +          +     0.80854583627117 * GRP_NumCatalogPurchases3
1302874   +          +     0.14001888431357 * GRP_NumCatalogPurchases4
1302875   +          +     0.36107050137299 * GRP_NumDistPurchases2
1302876   +          +    -0.10375572120121 * GRP_NumDistPurchases3
1302877   +          +     0.10557004956787 * GRP_NumDistPurchases4
1302878   +          +     0.04608069099876 * GRP_NumWebPurchases2
1302879   +          +     0.15561947954396 * GRP_NumWebPurchases3
1302880   +          +    -0.01081470092004 * GRP_NumWebPurchases4
1302881   +          +     0.21994454623245 * GRP_RFMstat2  +    -0.08858421895818 *
1302882   +        GRP_RFMstat3  +    -0.13608887793525 * GRP_RFMstat4
1302883   +          +     0.07482010458977 * GRP_RMntFrq2  +    -0.11874760292742 *
1302884   +        GRP_RMntFrq3  +     0.56887215594366 * GRP_RMntFrq4
1302885   +          +    -0.13548983954455 * GRP_Recency2  +    -0.25036935235639 *
1302886   +        GRP_Recency3  +     -0.0282277663071 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.7107136456569 * GRP_AcceptedCmp52 + -0.4751898387651 *
GRP_Frq2 + -0.11277060686411 * GRP_Frq3 + 0.15821547082299 * GRP_Frq4 + -0.45945049231995 *
GRP_Income2 + -0.18413512635176 * GRP_Income3 + 0.39594738835509 * GRP_Income4 +
-0.15472205523822 * GRP_Mnt2 + 0.02844181224363 * GRP_Mnt3 + 0.45435843401555 * GRP_Mnt4 +
-0.29220588593813 * GRP_MntFishProducts2 + 0.04340555393469 * GRP_MntFishProducts3 +
-0.20048219926361 * GRP_MntFishProducts4 + 0.16101452165456 * GRP_MntGoldProds2 +
-0.04467647211336 * GRP_MntGoldProds3 + 0.32142013598241 * GRP_MntGoldProds4 +
0.29741565154233 * GRP_MntMeatProducts2 + -0.00264678222241 * GRP_MntMeatProducts3 +
-0.11596499325048 * GRP_MntMeatProducts4 + -0.29849043995136 * GRP_MntWines2 +
0.14756452272338 * GRP_MntWines3 + 0.48995265672675 * GRP_MntWines4 + 0.80854583627117 *
GRP_NumCatalogPurchases3 + 0.14001888431357 * GRP_NumCatalogPurchases4 + 0.36107050137299 *
GRP_NumDistPurchases2 + -0.10375572120121 * GRP_NumDistPurchases3 + 0.10557004956787 *
GRP_NumDistPurchases4 + 0.04608069099876 * GRP_NumWebPurchases2 + 0.15561947954396 *
GRP_NumWebPurchases3 + -0.01081470092004 * GRP_NumWebPurchases4 + 0.21994454623245 *
GRP_RFMstat2 + -0.08858421895818 * GRP_RFMstat3 + -0.13608887793525 * GRP_RFMstat4 +
0.07482010458977 * GRP_RMntFrq2 + -0.11874760292742 * GRP_RMntFrq3 + 0.56887215594366 *
GRP_RMntFrq4 + -0.13548983954455 * GRP_Recency2 + -0.25036935235639 * GRP_Recency3 +
-0.0282277663071 * GRP_Recency4 ;
1302887   +   H17  = H17  +    -0.06745892596619 * GRP_AcceptedCmp52
1302888   +          +    -0.09506194345469 * GRP_Frq2  +    -0.29707644715885 * GRP_Frq3
1302889   +          +    -0.06874693052001 * GRP_Frq4  +    -0.08949373241741 *
1302890   +        GRP_Income2  +     0.02965579603049 * GRP_Income3
1302891   +          +    -0.02192829727213 * GRP_Income4  +     0.30180973300088 *
1302892   +        GRP_Mnt2  +    -0.10648502526616 * GRP_Mnt3  +     0.07588844839465 *
1302893   +        GRP_Mnt4  +    -0.30524623655199 * GRP_MntFishProducts2
1302894   +          +    -0.20032703571491 * GRP_MntFishProducts3
1302895   +          +    -0.08348811352746 * GRP_MntFishProducts4
1302896   +          +    -0.00744131870881 * GRP_MntGoldProds2
1302897   +          +    -0.27347309859096 * GRP_MntGoldProds3
1302898   +          +    -0.04458870469416 * GRP_MntGoldProds4
1302899   +          +     0.17538261434498 * GRP_MntMeatProducts2
1302900   +          +    -0.08059547298843 * GRP_MntMeatProducts3
1302901   +          +     0.03113249898233 * GRP_MntMeatProducts4
1302902   +          +    -0.23690909413276 * GRP_MntWines2  +    -0.01511980231776 *
1302903   +        GRP_MntWines3  +     -0.2825327824317 * GRP_MntWines4
1302904   +          +     0.13919784888607 * GRP_NumCatalogPurchases3
1302905   +          +    -0.10871281978714 * GRP_NumCatalogPurchases4
1302906   +          +     0.20540014620209 * GRP_NumDistPurchases2
1302907   +          +     0.17744784873298 * GRP_NumDistPurchases3
1302908   +          +      -0.003486430833 * GRP_NumDistPurchases4
1302909   +          +    -0.04863967797645 * GRP_NumWebPurchases2
1302910   +          +     0.07245829152192 * GRP_NumWebPurchases3
1302911   +          +    -0.27395606297099 * GRP_NumWebPurchases4
1302912   +          +    -0.14496279180087 * GRP_RFMstat2  +     0.28224463929838 *
1302913   +        GRP_RFMstat3  +     0.26720059295202 * GRP_RFMstat4
1302914   +          +    -0.07120881723264 * GRP_RMntFrq2  +     0.16350065828319 *
1302915   +        GRP_RMntFrq3  +      0.3117297070285 * GRP_RMntFrq4
1302916   +          +    -0.52884474877094 * GRP_Recency2  +    -0.17937099376746 *
1302917   +        GRP_Recency3  +     -0.0157357289132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.06745892596619 * GRP_AcceptedCmp52 + -0.09506194345469 *
GRP_Frq2 + -0.29707644715885 * GRP_Frq3 + -0.06874693052001 * GRP_Frq4 + -0.08949373241741 *
GRP_Income2 + 0.02965579603049 * GRP_Income3 + -0.02192829727213 * GRP_Income4 +
0.30180973300088 * GRP_Mnt2 + -0.10648502526616 * GRP_Mnt3 + 0.07588844839465 * GRP_Mnt4 +
-0.30524623655199 * GRP_MntFishProducts2 + -0.20032703571491 * GRP_MntFishProducts3 +
-0.08348811352746 * GRP_MntFishProducts4 + -0.00744131870881 * GRP_MntGoldProds2 +
-0.27347309859096 * GRP_MntGoldProds3 + -0.04458870469416 * GRP_MntGoldProds4 +
0.17538261434498 * GRP_MntMeatProducts2 + -0.08059547298843 * GRP_MntMeatProducts3 +
0.03113249898233 * GRP_MntMeatProducts4 + -0.23690909413276 * GRP_MntWines2 +
-0.01511980231776 * GRP_MntWines3 + -0.2825327824317 * GRP_MntWines4 + 0.13919784888607 *
GRP_NumCatalogPurchases3 + -0.10871281978714 * GRP_NumCatalogPurchases4 + 0.20540014620209 *
GRP_NumDistPurchases2 + 0.17744784873298 * GRP_NumDistPurchases3 + -0.003486430833 *
GRP_NumDistPurchases4 + -0.04863967797645 * GRP_NumWebPurchases2 + 0.07245829152192 *
GRP_NumWebPurchases3 + -0.27395606297099 * GRP_NumWebPurchases4 + -0.14496279180087 *
GRP_RFMstat2 + 0.28224463929838 * GRP_RFMstat3 + 0.26720059295202 * GRP_RFMstat4 +
-0.07120881723264 * GRP_RMntFrq2 + 0.16350065828319 * GRP_RMntFrq3 + 0.3117297070285 *
GRP_RMntFrq4 + -0.52884474877094 * GRP_Recency2 + -0.17937099376746 * GRP_Recency3 +
-0.0157357289132 * GRP_Recency4 ;
1302918   +   H11  =    -0.76467628027618 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.76467628027618 + H11 ;
1302919   +   H12  =    -0.03405517571825 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03405517571825 + H12 ;
1302920   +   H13  =    -0.32845676351839 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.32845676351839 + H13 ;
1302921   +   H14  =     0.08379615404181 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.08379615404181 + H14 ;
1302922   +   H15  =    -0.77228291932436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.77228291932436 + H15 ;
1302923   +   H16  =    -0.77356855332279 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.77356855332279 + H16 ;
1302924   +   H17  =     0.45067845230796 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.45067845230796 + H17 ;
1302925   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1302926   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1302927   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1302928   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1302929   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1302930   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1302931   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1302932   +END;
MPRINT(EM_DIAGRAM):   END;
1302933   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1302934   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1302935   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1302936   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1302937   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1302938   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1302939   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1302940   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1302941   +END;
MPRINT(EM_DIAGRAM):   END;
1302942   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302943   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1302944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302945   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1302946   +   P_DepVar1  =    -0.15999450347654 * H11  +     1.35667407296837 * H12
1302947   +          +    -0.71419530867579 * H13  +     -1.0947746264744 * H14
1302948   +          +     0.98315214007209 * H15  +    -1.32163386678746 * H16
1302949   +          +    -0.29329090231091 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.15999450347654 * H11 + 1.35667407296837 * H12 +
-0.71419530867579 * H13 + -1.0947746264744 * H14 + 0.98315214007209 * H15 + -1.32163386678746
* H16 + -0.29329090231091 * H17 ;
1302950   +   P_DepVar1  =    -1.66210022161101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66210022161101 + P_DepVar1 ;
1302951   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1302952   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1302953   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1302954   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1302955   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1302956   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1302957   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1302958   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1302959   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1302960   +END;
MPRINT(EM_DIAGRAM):   END;
1302961   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1302962   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1302963   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1302964   +END;
MPRINT(EM_DIAGRAM):   END;
1302965   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1302966   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1302967   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1302968   +END;
MPRINT(EM_DIAGRAM):   END;
1302969   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302970   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1302971   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1302972   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1302973   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1302974   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1302975   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1302976   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1302977   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1302978   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1302979   +END;
MPRINT(EM_DIAGRAM):   END;
1302980   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1302981   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1302982   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1302983   +drop
1302984   +H11
1302985   +H12
1302986   +H13
1302987   +H14
1302988   +H15
1302989   +H16
1302990   +H17
1302991   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1302992   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1302993    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1302994    quit;
1302995    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1302996    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1302997    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1302998    retain ID 2 Node "Neural18";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural18";
1302999    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1303000    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2256 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2256 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1303001    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1303002    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303003    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2256 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2256 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303004    proc sort data=EMWS8.Neural18_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural18_variableset out=_temp2(keep=NAME CREATOR);
1303005    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303006    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.NEURAL18_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303007    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1303008    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1303009    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1303010    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303011    proc contents data=EMWS8.Neural18_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural18_train out=_meta(keep=NAME) noprint;
1303012    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1303013    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1303014    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303015    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303016    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1303017    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1303018    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303019    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303020    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1303021    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1303021  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 985 rows and 5 columns.
 
1303022    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303023    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1303024    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 985 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 985 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303025    filename _pref
1303025  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1303026    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1303027    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1303028   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1303029   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1303030   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1303031   +
1303032   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303033   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1303034   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303035   +LABEL GRP_AcceptedCmp5 =
1303036   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1303037   +
1303038   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1303039   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1303040   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1303041   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1303042   +end;
MPRINT(EM_DIAGRAM):   end;
1303043   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1303044   +if (_UFORMAT eq '0'
1303045   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1303046   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1303047   +end;
MPRINT(EM_DIAGRAM):   end;
1303048   +else
1303049   +if (_UFORMAT eq '1'
1303050   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1303051   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1303052   +end;
MPRINT(EM_DIAGRAM):   end;
1303053   +else do;
MPRINT(EM_DIAGRAM):   else do;
1303054   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1303055   +end;
MPRINT(EM_DIAGRAM):   end;
1303056   +end;
MPRINT(EM_DIAGRAM):   end;
1303057   +
1303058   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303059   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1303060   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303061   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1303062   +
1303063   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1303064   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1303065   +end;
MPRINT(EM_DIAGRAM):   end;
1303066   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1303067   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1303068   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1303069   +end;
MPRINT(EM_DIAGRAM):   end;
1303070   +else
1303071   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1303072   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1303073   +end;
MPRINT(EM_DIAGRAM):   end;
1303074   +else
1303075   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1303076   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1303077   +end;
MPRINT(EM_DIAGRAM):   end;
1303078   +else
1303079   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1303080   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1303081   +end;
MPRINT(EM_DIAGRAM):   end;
1303082   +end;
MPRINT(EM_DIAGRAM):   end;
1303083   +
1303084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303085   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1303086   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303087   +LABEL GRP_Income =
1303088   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1303089   +
1303090   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1303091   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1303092   +end;
MPRINT(EM_DIAGRAM):   end;
1303093   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1303094   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1303095   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1303096   +end;
MPRINT(EM_DIAGRAM):   end;
1303097   +else
1303098   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1303099   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1303100   +end;
MPRINT(EM_DIAGRAM):   end;
1303101   +else
1303102   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1303103   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1303104   +end;
MPRINT(EM_DIAGRAM):   end;
1303105   +else
1303106   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1303107   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1303108   +end;
MPRINT(EM_DIAGRAM):   end;
1303109   +end;
MPRINT(EM_DIAGRAM):   end;
1303110   +
1303111   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303112   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1303113   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303114   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1303115   +
1303116   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1303117   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1303118   +end;
MPRINT(EM_DIAGRAM):   end;
1303119   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1303120   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1303121   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1303122   +end;
MPRINT(EM_DIAGRAM):   end;
1303123   +else
1303124   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1303125   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1303126   +end;
MPRINT(EM_DIAGRAM):   end;
1303127   +else
1303128   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1303129   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1303130   +end;
MPRINT(EM_DIAGRAM):   end;
1303131   +else
1303132   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1303133   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1303134   +end;
MPRINT(EM_DIAGRAM):   end;
1303135   +end;
MPRINT(EM_DIAGRAM):   end;
1303136   +
1303137   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303138   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1303139   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303140   +LABEL GRP_MntFishProducts =
1303141   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1303142   +
1303143   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1303144   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1303145   +end;
MPRINT(EM_DIAGRAM):   end;
1303146   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1303147   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1303148   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1303149   +end;
MPRINT(EM_DIAGRAM):   end;
1303150   +else
1303151   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1303152   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1303153   +end;
MPRINT(EM_DIAGRAM):   end;
1303154   +else
1303155   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1303156   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1303157   +end;
MPRINT(EM_DIAGRAM):   end;
1303158   +else
1303159   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1303160   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1303161   +end;
MPRINT(EM_DIAGRAM):   end;
1303162   +end;
MPRINT(EM_DIAGRAM):   end;
1303163   +
1303164   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303165   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1303166   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303167   +LABEL GRP_MntGoldProds =
1303168   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1303169   +
1303170   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1303171   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1303172   +end;
MPRINT(EM_DIAGRAM):   end;
1303173   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1303174   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1303175   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1303176   +end;
MPRINT(EM_DIAGRAM):   end;
1303177   +else
1303178   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1303179   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1303180   +end;
MPRINT(EM_DIAGRAM):   end;
1303181   +else
1303182   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1303183   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1303184   +end;
MPRINT(EM_DIAGRAM):   end;
1303185   +else
1303186   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1303187   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1303188   +end;
MPRINT(EM_DIAGRAM):   end;
1303189   +end;
MPRINT(EM_DIAGRAM):   end;
1303190   +
1303191   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303192   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1303193   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303194   +LABEL GRP_MntMeatProducts =
1303195   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1303196   +
1303197   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1303198   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1303199   +end;
MPRINT(EM_DIAGRAM):   end;
1303200   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1303201   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1303202   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1303203   +end;
MPRINT(EM_DIAGRAM):   end;
1303204   +else
1303205   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1303206   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1303207   +end;
MPRINT(EM_DIAGRAM):   end;
1303208   +else
1303209   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1303210   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1303211   +end;
MPRINT(EM_DIAGRAM):   end;
1303212   +else
1303213   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1303214   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1303215   +end;
MPRINT(EM_DIAGRAM):   end;
1303216   +end;
MPRINT(EM_DIAGRAM):   end;
1303217   +
1303218   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303219   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1303220   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303221   +LABEL GRP_MntWines =
1303222   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1303223   +
1303224   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1303225   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1303226   +end;
MPRINT(EM_DIAGRAM):   end;
1303227   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1303228   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1303229   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1303230   +end;
MPRINT(EM_DIAGRAM):   end;
1303231   +else
1303232   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1303233   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1303234   +end;
MPRINT(EM_DIAGRAM):   end;
1303235   +else
1303236   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1303237   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1303238   +end;
MPRINT(EM_DIAGRAM):   end;
1303239   +else
1303240   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1303241   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1303242   +end;
MPRINT(EM_DIAGRAM):   end;
1303243   +end;
MPRINT(EM_DIAGRAM):   end;
1303244   +
1303245   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303246   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1303247   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303248   +LABEL GRP_NumCatalogPurchases =
1303249   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1303250   +
1303251   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1303252   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1303253   +end;
MPRINT(EM_DIAGRAM):   end;
1303254   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1303255   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1303256   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1303257   +end;
MPRINT(EM_DIAGRAM):   end;
1303258   +else
1303259   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1303260   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1303261   +end;
MPRINT(EM_DIAGRAM):   end;
1303262   +else
1303263   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1303264   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1303265   +end;
MPRINT(EM_DIAGRAM):   end;
1303266   +else
1303267   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1303268   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1303269   +end;
MPRINT(EM_DIAGRAM):   end;
1303270   +end;
MPRINT(EM_DIAGRAM):   end;
1303271   +
1303272   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303273   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1303274   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303275   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1303276   +
1303277   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1303278   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1303279   +end;
MPRINT(EM_DIAGRAM):   end;
1303280   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1303281   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1303282   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1303283   +end;
MPRINT(EM_DIAGRAM):   end;
1303284   +else
1303285   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1303286   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1303287   +end;
MPRINT(EM_DIAGRAM):   end;
1303288   +else
1303289   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1303290   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1303291   +end;
MPRINT(EM_DIAGRAM):   end;
1303292   +else
1303293   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1303294   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1303295   +end;
MPRINT(EM_DIAGRAM):   end;
1303296   +end;
MPRINT(EM_DIAGRAM):   end;
1303297   +
1303298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303299   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1303300   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303301   +LABEL GRP_NumWebPurchases =
1303302   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1303303   +
1303304   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1303305   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1303306   +end;
MPRINT(EM_DIAGRAM):   end;
1303307   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1303308   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1303309   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1303310   +end;
MPRINT(EM_DIAGRAM):   end;
1303311   +else
1303312   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1303313   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1303314   +end;
MPRINT(EM_DIAGRAM):   end;
1303315   +else
1303316   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1303317   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1303318   +end;
MPRINT(EM_DIAGRAM):   end;
1303319   +else
1303320   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1303321   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1303322   +end;
MPRINT(EM_DIAGRAM):   end;
1303323   +end;
MPRINT(EM_DIAGRAM):   end;
1303324   +
1303325   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303326   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1303327   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303328   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1303329   +
1303330   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1303331   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1303332   +end;
MPRINT(EM_DIAGRAM):   end;
1303333   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1303334   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1303335   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1303336   +end;
MPRINT(EM_DIAGRAM):   end;
1303337   +else
1303338   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1303339   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1303340   +end;
MPRINT(EM_DIAGRAM):   end;
1303341   +else
1303342   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1303343   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1303344   +end;
MPRINT(EM_DIAGRAM):   end;
1303345   +else
1303346   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1303347   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1303348   +end;
MPRINT(EM_DIAGRAM):   end;
1303349   +end;
MPRINT(EM_DIAGRAM):   end;
1303350   +
1303351   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303352   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1303353   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303354   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1303355   +
1303356   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1303357   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1303358   +end;
MPRINT(EM_DIAGRAM):   end;
1303359   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1303360   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1303361   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1303362   +end;
MPRINT(EM_DIAGRAM):   end;
1303363   +else
1303364   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1303365   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1303366   +end;
MPRINT(EM_DIAGRAM):   end;
1303367   +else
1303368   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1303369   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1303370   +end;
MPRINT(EM_DIAGRAM):   end;
1303371   +else
1303372   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1303373   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1303374   +end;
MPRINT(EM_DIAGRAM):   end;
1303375   +end;
MPRINT(EM_DIAGRAM):   end;
1303376   +
1303377   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303378   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1303379   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303380   +LABEL GRP_Recency =
1303381   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1303382   +
1303383   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1303384   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1303385   +end;
MPRINT(EM_DIAGRAM):   end;
1303386   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1303387   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1303388   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1303389   +end;
MPRINT(EM_DIAGRAM):   end;
1303390   +else
1303391   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1303392   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1303393   +end;
MPRINT(EM_DIAGRAM):   end;
1303394   +else
1303395   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1303396   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1303397   +end;
MPRINT(EM_DIAGRAM):   end;
1303398   +else
1303399   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1303400   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1303401   +end;
MPRINT(EM_DIAGRAM):   end;
1303402   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1303403    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1303404    quit;
1303405    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1303406    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1303407    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1303408    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1303409    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1303410    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303411    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1303412    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303413    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303414    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1303415    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303416    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1303417    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1303418    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1303419    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1303420    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303421    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1303422    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1303423    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1303424    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303425    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1303426    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1303427    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1303428    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303429    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303430    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1303431    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1303431  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.
 
1303432    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303433    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1303434    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 1000 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1303435    filename _pref
1303435  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1303436    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1303437    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1303438   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303439   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1303440   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1303441   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1303442   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1303443   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1303444    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1303445    quit;
1303446    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1303447    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1303448    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1303449    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1303450    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1303451    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303452    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1303453    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303454    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303455    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1303456    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303457    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303458    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1303459    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1303460    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1303461    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303462    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1303463    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1303464    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1303465    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303466    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303467    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1303468    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1303469    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303470    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303471    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1303472    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1303472  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1303473    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1303474    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1303475    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 1004 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303476    filename _pref
1303476  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1303477    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1303478    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1303479   +
1303480   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1303481   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1303481  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1303482   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1303483   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1303484   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1303485   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1303486   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1303487    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1303488    quit;
1303489    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1303490    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1303491    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1303492    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1303493    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1303494    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303495    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1303496    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303497    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303498    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1303499    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303500    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303501    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1303502    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1303503    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1303504    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303505    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1303506    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303507    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1303508    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303509    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303510    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1303511    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1303512    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303513    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303514    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1303515    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1303515  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1303516    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303517    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1303518    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 1043 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303519    filename _pref
1303519  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1303520    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1303521    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1303522   +
1303523   +
1303524   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1303525   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1303526   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1303527   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1303528   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1303529   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1303530   +
1303531   +
1303532   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1303533   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1303534   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1303535   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1303536   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1303537   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1303538   +
1303539   +
1303540   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1303541   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1303542   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1303543   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1303544   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1303545   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1303546   +
1303547   +
1303548   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1303549   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1303550   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1303551   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1303552   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1303553   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1303554   +
1303555   +
1303556   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1303557   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1303558   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1303559   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1303560   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1303561   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1303562   +
1303563   +
1303564   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1303565   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1303566   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1303567   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1303568   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1303569   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1303570   +
1303571   +
1303572   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1303573   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1303574   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1303575   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1303576   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1303577   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1303578   +
1303579   +
1303580   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1303581   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1303582   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1303583   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1303584   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1303585   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1303586   +if
1303587   +_FILTERNORM1 not in ( '.')
1303588   + and
1303589   +_FILTERNORM2 not in ( '.')
1303590   + and
1303591   +_FILTERNORM3 not in ( '.')
1303592   + and
1303593   +_FILTERNORM4 not in ( '.')
1303594   + and
1303595   +_FILTERNORM5 not in ( '.')
1303596   + and
1303597   +_FILTERNORM6 not in ( '.')
1303598   + and
1303599   +_FILTERNORM7 not in ( ' ')
1303600   + and
1303601   +_FILTERNORM8 not in ( ' ')
1303602   +and
1303603   +( Dt_Customer ne .)
1303604   +and ( Income ne . and (Income<=107000))
1303605   +and ( Kidhome ne .)
1303606   +and ( MntFishProducts ne .)
1303607   +and ( MntFruits ne .)
1303608   +and ( MntGoldProds ne .)
1303609   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1303610   +and ( MntSweetProducts ne .)
1303611   +and ( MntWines ne .)
1303612   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1303613   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1303614   +and ( NumStorePurchases ne .)
1303615   +and ( NumWebPurchases ne .)
1303616   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1303617   +and ( Recency ne .)
1303618   +and ( Teenhome ne .)
1303619   +and ( Year_Birth ne .)
1303620   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1303621   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1303622   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1303623   +end;
MPRINT(EM_DIAGRAM):   end;
1303624   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1303625   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1303626    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1303627    quit;
1303628    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1303629    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1303630    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1303631    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1303632    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1303633    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303634    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1303635    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303636    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303637    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1303638    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303639    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1303640    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1303641    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1303642    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1303643    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303644    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1303645    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1303646    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1303647    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303648    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303649    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1303650    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1303651    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1303652    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303653    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1303654    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1303654  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1303655    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1303656    proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl7_FCMP data=_tempx;
1303657    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL7_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL7_FCMP has 1109 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303658    %macro varDept(fcmpdata=,id=);
1303659    %global nobs&id scoreFlag&id;
1303660    %let scoreFlag&id = 0;
1303661    %if &id=1 or ^&fcmpStart %then %do;
1303662    proc sort data=&fcmpdata out=_temp&id nodupkey;
1303663    by NAME;
1303664    where id=&id and LHS in( %let j=1;
1303665    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1303666    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1303667    "&var" %let j = %eval(&j+1);
1303668    %end;
1303669    );
1303670    run;
1303671    %let dsid = %sysfunc(open(_temp&id));
1303672    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1303673    %let dsid = %sysfunc(close(&dsid));
1303674    %if &&nobs&id %then %do;
1303675    %let scoreFlag&id = 1;
1303676    %let fcmpStart = 1;
1303677    %end;
1303678    %else %let fcmpStart = 0;
1303679    %end;
1303680    %else %do;
1303681    proc sort data=&fcmpdata out=_tempid;
1303682    where id=&id;
1303683    by LHS;
1303684    run;
1303685    %let dsid = %sysfunc(open(_tempid));
1303686    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1303687    %let dsid = %sysfunc(close(&dsid));
1303688    %if ^&&nobs&id %then %do;
1303689    proc datasets lib=work nolist;
1303690    delete _tempid;
1303691    run;
1303692    quit;
1303693    %end;
1303694    %else %do;
1303695    data _tempAll;
1303696    set %let j=%eval(&id-1);
1303697    %do x=1 %to &j;
1303698    %if &&nobs&x %then %do;
1303699    _temp&x %end;
1303700    %end;
1303701    ;
1303702    run;
1303703    proc sql;
1303704    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1303704  ! work._tempid p2 where p.name=p2.lhs;
1303705    quit;
1303706    data _temp&id;
1303707    set _temp&id;
1303708    where LHS ne '' and NAME ne '' and Node ne '';
1303709    run;
1303710    proc datasets lib=work nolist;
1303711    delete _tempAll;
1303712    run;
1303713    %let dsid = %sysfunc(open(_temp&id));
1303714    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1303715    %let dsid = %sysfunc(close(&dsid));
1303716    %if ^&&nobs&id %then %do;
1303717    proc datasets lib=work nolist;
1303718    delete _temp&id;
1303719    run;
1303720    quit;
1303721    %end;
1303722    %else %do;
1303723    %let scoreFlag&id = 1;
1303724    data _temp&id;
1303725    set _temp&id;
1303726    where LHS ne NAME and node ne '';
1303727    run;
1303728    %let dsid = %sysfunc(open(_temp&id));
1303729    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1303730    %let dsid = %sysfunc(close(&dsid));
1303731    %if ^&&nobs&id %then %do;
1303732    proc datasets lib=work nolist;
1303733    delete _temp&id;
1303734    run;
1303735    quit;
1303736    %end;
1303737    %else %do;
1303738    proc sort data=_temp&id nodupkey;
1303739    by LHS NAME;
1303740    run;
1303741    %end;
1303742    %end;
1303743    %end;
1303744    %end;
1303745    %mend varDept;
1303746    %macro optCode(outdata=fcmpdata);
1303747    %global fcmpStart;
1303748    %let fcmpStart = 0;
1303749    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1303750    %let NumNodes=9;
1303751    %do k=1 %to &NumNodes;
1303752    %vardept(fcmpdata=&outdata, id=&k);
1303753    %end;
1303754    %mend optCode;
1303755    %optcode(outData=EMWS8.Ensmbl7_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl7_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1303756    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1303757    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1303758    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1303759    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303760    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1303761    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1303762    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1303763    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1303764    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1303765    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1303765  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1303766    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1303767    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1303768    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1303769    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303770    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1303771    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1303772    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1303773    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303774    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1303775    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1303776    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1303777    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303778    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1303779    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1303779  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.
 
1303780    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1303781    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1303782    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1303783    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1303784    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1303785    * Ensmbl7: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Computing metadata for TRAIN data;
1303786    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL7_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl7_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl7_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl7_TRAIN out=WORK.M1VW0MQK noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1VW0MQK;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1VW0MQK(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1VW0MQK;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1VW0MQK;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2BBA5BV NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2BBA5BV;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2BBA5BV;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M059ZNHY(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2BBA5BV;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2BBA5BV;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2BBA5BV;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2BBA5BV;
MPRINT(EMADVISECOLUMNS):   set WORK.M2BBA5BV;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural21_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural21_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl7";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl7";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl7";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl7";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl7";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl7";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl7";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl7";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl7";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl7";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl7: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl7";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1304106    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1304107    set EMWS8.Ensmbl7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_EMINFO;
1304108    where DATA='Ensmbl7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
1304109    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL7_EMINFO.
      WHERE (DATA='Ensmbl7') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1304110    data EMWS8.Ensmbl7_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl7_EMINFO;
1304111    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1304112    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1304113    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1304117    run;
1304118    data EMWS8.Ensmbl7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_EMINFO;
1304119    set EMWS8.Ensmbl7_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_EMINFO WORK.MODELTEMP_INFO;
1304120    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL7_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1304121    proc sort data = EMWS8.Ensmbl7_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl7_EMINFO NOTHREADS;
1304122    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1304123    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL7_EMINFO.
NOTE: The data set EMWS8.ENSMBL7_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1304124    proc sort data = EMWS8.Neural21_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural21_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1304125    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1304126    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.NEURAL21_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1304127    proc sort data = EMWS8.Ensmbl7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1304128    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1304129    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL7_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1304130    data EMWS8.Ensmbl7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_EMINFO;
1304131    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1304132    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1304133    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL7_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1304134    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1304135    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1304136    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1304137    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS8.ENSMBL7_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.ENSMBL7_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.34 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                19. April 2016
Time:                12.34 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O11GLOR_
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl7\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O11GLOR_ new;
MPRINT(EM_DIAGRAM):   run;
1304161    data EMWS8.Ensmbl7_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl7_EMOUTFIT;
1304162    set EMWS8.Ensmbl7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_EMOUTFIT;
1304163    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1304164    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1304164  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1304165    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1304166    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL7_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL7_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1304167    proc sort data=EMWS8.Ensmbl7_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl7_EMREPORTFIT nothreads;
1304168    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1304169    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL7_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL7_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1304170    %let _EMwarndup = 0;
1304171    %let _EMtargetdup =;
1304172    %let _EMASEtargetdup =;
1304173    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1304174    set EMWS8.Ensmbl7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_EMOUTFIT;
1304175    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1304176    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1304177    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1304178    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1304179    end;
MPRINT(EM_DIAGRAM):   end;
1304180    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL7_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1304181    proc sort data=EMWS8.Neural21_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural21_CMeta_TRAIN out=WORK.SUBSETINMETA;
1304182    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304183    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 58 observations read from the data set EMWS8.NEURAL21_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 58 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1304184    proc sort data=EMWS8.Ensmbl7_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl7_VariableSet out=WORK.SUBSETVARSET(keep=NAME
REPORT);
1304185    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304186    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.ENSMBL7_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1304187    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1304188    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1304189    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1304190    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 58 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 48 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 58 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1304191    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1304192    set EMWS8.Ensmbl7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_CMeta_TRAIN;
1304193    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1304193  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1304194    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL7_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1304195    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1304196    set EMWS8.Ensmbl7_TRAIN(keep=
1304197    F_DepVar
1304198    I_DepVar
1304199    P_DepVar0
1304200    P_DepVar1
1304201    R_DepVar0
1304202    R_DepVar1
1304203    U_DepVar
1304204    _WARN_
1304205    DepVar
1304206    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1304207    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: View EMWS8.ENSMBL7_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL21_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL7_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl7_06VBXXK nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl7_06VBXXK;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl7_06VBXXK(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl7_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl7_06VBXXK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl7_06VBXXK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl7_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural21_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0008277187 OVLMAX 0.9675956906 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1308473    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1308474    set EMWS8.Ensmbl7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_CMeta_TRAIN;
1308475    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1308475  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1308476    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL7_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1308477    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1308478    set EMWS8.Ensmbl7_VALIDATE(keep=
1308479    F_DepVar
1308480    I_DepVar
1308481    P_DepVar0
1308482    P_DepVar1
1308483    R_DepVar0
1308484    R_DepVar1
1308485    U_DepVar
1308486    _WARN_
1308487    DepVar
1308488    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1308489    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.BINNING_VALIDATE.
NOTE: View EMWS8.ENSMBL7_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.NEURAL21_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL7_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl7_0XTBEVJ nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl7_0XTBEVJ;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl7_0XTBEVJ(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl7_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_EMCLASSIFICATION WORK.Ensmbl7_0XTBEVJ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl7_0XTBEVJ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl7_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural21_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0008907606 OVLMAX 0.9356278783 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1312764    %let _cn = %sysfunc(getoption(CENTER));
1312765    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1312766    proc print data=EMWS8.Ensmbl7_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl7_EMREPORTFIT noobs label;
1312767    var STAT LABEL TRAIN
1312768    VALIDATE
1312769    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1312770    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1312771    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1312772    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1312773    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL7_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 999.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1312774    title10;
MPRINT(EM_DIAGRAM):   title10;
1312775    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1312776    proc sort data=EMWS8.Ensmbl7_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl7_EMCLASSIFICATION nothreads;
1312777    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1312778    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL7_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL7_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1312779    %let _cn = %sysfunc(getoption(CENTER));
1312780    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1312781    proc print data=EMWS8.Ensmbl7_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl7_EMCLASSIFICATION noobs label;
1312782    var from into pct_row pct_col count percent
1312783    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1312784    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1312785    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1312786    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1312787    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1312788    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1312789    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1312790    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1312791    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1312792    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1312793    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1312794    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL7_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1000.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1312795    title9;
MPRINT(EM_DIAGRAM):   title9;
1312796    title10;
MPRINT(EM_DIAGRAM):   title10;
1312797    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1312798    %let _cn = %sysfunc(getoption(CENTER));
1312799    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1312800    data EMWS8.Ensmbl7_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl7_EMEVENTREPORT;
1312801    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1312801  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1312802    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1312802  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1312802  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1312802  ! FALSEEVENT
1312803    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1312803  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1312803  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1312804       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1312805    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1312806    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1312807    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1312808    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1312809    set EMWS8.Ensmbl7_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl7_EMEVENTREPORT;
1312810    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL7_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL7_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1312811    proc print data=EMWS8.Ensmbl7_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl7_EMEVENTREPORT noobs label;
1312812    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1312813    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1312814    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1312815    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL7_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 1001.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1312816    title10;
MPRINT(EM_DIAGRAM):   title10;
1312817    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1312818    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1312819    modify Ensmbl7_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl7_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1312820    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1312821    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1312821  ! ;
MPRINT(EM_DIAGRAM):   run;
1312822    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL7_EMRANK.DATA.
1312823    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
1312824    %let _cn = %sysfunc(getoption(CENTER));
1312825    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1312826    proc print data=EMWS8.Ensmbl7_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl7_EMRANK label noobs;
1312827    var
1312828    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1312829    by
1312830    notsorted DATAROLE
1312831    notsorted TARGET
1312832    notsorted TARGETLABEL
1312833    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1312834    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1312835    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1312836    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL7_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1002.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1312837    title10;
MPRINT(EM_DIAGRAM):   title10;
1312838    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1312839    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1312840    modify Ensmbl7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1312841    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1312841  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1312842    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1312842  ! ;
MPRINT(EM_DIAGRAM):   run;
1312843    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL7_EMSCOREDIST.DATA.
1312844    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl7_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
