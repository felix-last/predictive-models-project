MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "10 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12H19m" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                10 de Março de 2016
Time:                12H19m
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0K8Z3C2 "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0K8Z3C2 new;
MPRINT(EM_DIAGRAM):   run;
46023      data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
46024      set EMWS8.Neural2_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_OUTKEY;
46025      if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
46026      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.NEURAL2_OUTKEY.
NOTE: The data set WORK.OUTKEY has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

46027      filename emflow "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46028      *------------------------------------------------------------*;
46029      * Neural2: Scoring DATA data;
46030      *------------------------------------------------------------*;
46031      data EMWS8.Neural2_TRAIN
46032      / view=EMWS8.Neural2_TRAIN
46033      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural2_TRAIN / view=EMWS8.Neural2_TRAIN ;
46034      set EMWS8.Meta_TRAIN
46035      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
46036      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural2\EMFLOWSCORE.sas.
46037     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
46038     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
46039     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
46040     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
46041     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
46042     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
46043     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
46044     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
46045     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
46046     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
46047     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
46048     +LENGTH _WARN_ $4
46049     +      F_DepVar  $ 12
46050     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
46051     +      label S_CatPurchase = 'Standard: CatPurchase' ;
MPRINT(EM_DIAGRAM):   label S_CatPurchase = 'Standard: CatPurchase' ;
46052     +
46053     +      label S_Clothes = 'Standard: Clothes' ;
MPRINT(EM_DIAGRAM):   label S_Clothes = 'Standard: Clothes' ;
46054     +
46055     +      label S_HouseKeeping = 'Standard: HouseKeeping' ;
MPRINT(EM_DIAGRAM):   label S_HouseKeeping = 'Standard: HouseKeeping' ;
46056     +
46057     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
46058     +
46059     +      label S_Rcn = 'Standard: Rcn' ;
MPRINT(EM_DIAGRAM):   label S_Rcn = 'Standard: Rcn' ;
46060     +
46061     +      label S_Recomendation = 'Standard: Recomendation' ;
MPRINT(EM_DIAGRAM):   label S_Recomendation = 'Standard: Recomendation' ;
46062     +
46063     +      label S_SmallAppliances = 'Standard: SmallAppliances' ;
MPRINT(EM_DIAGRAM):   label S_SmallAppliances = 'Standard: SmallAppliances' ;
46064     +
46065     +      label S_Toys = 'Standard: Toys' ;
MPRINT(EM_DIAGRAM):   label S_Toys = 'Standard: Toys' ;
46066     +
46067     +      label Dependents0 = 'Dummy: Dependents=0' ;
MPRINT(EM_DIAGRAM):   label Dependents0 = 'Dummy: Dependents=0' ;
46068     +
46069     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
46070     +
46071     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
46072     +
46073     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
46074     +
46075     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
46076     +
46077     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
46078     +
46079     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
46080     +
46081     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
46082     +
46083     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
46084     +
46085     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
46086     +
46087     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
46088     +
46089     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
46090     +
46091     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
46092     +
46093     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
46094     +
46095     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
46096     +
46097     +*** Generate dummy variables for Dependents ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Dependents ;
46098     +drop Dependents0 ;
MPRINT(EM_DIAGRAM):   drop Dependents0 ;
46099     +if missing( Dependents ) then do;
MPRINT(EM_DIAGRAM):   if missing( Dependents ) then do;
46100     +   Dependents0 = .;
MPRINT(EM_DIAGRAM):   Dependents0 = .;
46101     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
46102     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
46103     +end;
MPRINT(EM_DIAGRAM):   end;
46104     +else do;
MPRINT(EM_DIAGRAM):   else do;
46105     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
46106     +   _dm12 = put( Dependents , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Dependents , BEST. );
46107     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Dependents0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
46108     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   Dependents0 = 1;
46109     +      Dependents0 = -1;
MPRINT(EM_DIAGRAM):   end;
46110     +   end;
46111     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Dependents0 = .;
46112     +      Dependents0 = 1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
46113     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
46114     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
46115     +      Dependents0 = .;
46116     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
46117     +      _DM_BAD = 1;
46118     +   end;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
46119     +end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
46120     +
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
46121     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
46122     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
46123     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
46124     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
46125     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
46126     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
46127     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
46128     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
46129     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
46130     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
46131     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
46132     +   Marital_StatusSingle = .;
46133     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   else do;
46134     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
46135     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
46136     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( Marital_Status , $12. );
46137     +else do;
46138     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
46139     +   _dm12 = put( Marital_Status , $12. );
46140     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
46141     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46142     +   if _dm12 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
46143     +      if _dm12 <= 'MARRIED'  then do;
46144     +         if _dm12 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   else do;
46145     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   if _dm12 = 'MARRIED' then do;
46146     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
46147     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46148     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
46149     +            if _dm12 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   end;
46150     +               Marital_StatusMarried = 1;
46151     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
46152     +            end;
MPRINT(EM_DIAGRAM):   if _dm12 = 'SINGLE' then do;
46153     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
46154     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46155     +      else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
46156     +         if _dm12 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
46157     +            Marital_StatusSingle = 1;
46158     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
46159     +         end;
MPRINT(EM_DIAGRAM):   if _dm12 = 'TOGETHER' then do;
46160     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
46161     +   end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46162     +   else do;
MPRINT(EM_DIAGRAM):   end;
46163     +      if _dm12 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   else do;
46164     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   if _dm12 = 'WIDOW' then do;
46165     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
46166     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
46167     +      else do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
46168     +         if _dm12 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46169     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   end;
46170     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   end;
46171     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   end;
46172     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
46173     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
46174     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
46175     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
46176     +   end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
46177     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
46178     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
46179     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
46180     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   end;
46181     +      Marital_StatusTogether = .;
46182     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** *************************;
46183     +      _DM_BAD = 1;
46184     +   end;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
46185     +end;
46186     +
46187     +*** *************************;
46188     +*** Checking missing input Interval
46189     +*** *************************;
46190     +
46191     +IF NMISS(
46192     +   CatPurchase ,
46193     +   Clothes ,
46194     +   HouseKeeping ,
MPRINT(EM_DIAGRAM):   IF NMISS( CatPurchase , Clothes , HouseKeeping , Mnt , Rcn , Recomendation , SmallAppliances , Toys ) THEN DO;
46195     +   Mnt ,
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
46196     +   Rcn ,
46197     +   Recomendation ,
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
46198     +   SmallAppliances ,
MPRINT(EM_DIAGRAM):   END;
46199     +   Toys   ) THEN DO;
MPRINT(EM_DIAGRAM):   *** *************************;
46200     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
46201     +
MPRINT(EM_DIAGRAM):   *** *************************;
46202     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
46203     +END;
46204     +*** *************************;
MPRINT(EM_DIAGRAM):   S_CatPurchase = -3.17624192684474 + 0.05492769453828 * CatPurchase ;
46205     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   S_Clothes = -2.3113689693832 + 0.04437092805094 * Clothes ;
46206     +*** *************************;
46207     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_HouseKeeping = -0.93443662367683 + 0.14435178378641 * HouseKeeping ;
46208     +   S_CatPurchase  =    -3.17624192684474 +     0.05492769453828 * CatPurchase
MPRINT(EM_DIAGRAM):   S_Mnt = -0.9789629518701 + 0.00146441725342 * Mnt ;
46209     +         ;
MPRINT(EM_DIAGRAM):   S_Rcn = -0.88409352592792 + 0.0137435215813 * Rcn ;
46210     +   S_Clothes  =     -2.3113689693832 +     0.04437092805094 * Clothes ;
46211     +   S_HouseKeeping  =    -0.93443662367683 +     0.14435178378641 *
MPRINT(EM_DIAGRAM):   S_Recomendation = -3.46611377322712 + 0.87281636006383 * Recomendation ;
46212     +        HouseKeeping ;
46213     +   S_Mnt  =     -0.9789629518701 +     0.00146441725342 * Mnt ;
MPRINT(EM_DIAGRAM):   S_SmallAppliances = -2.26667909624218 + 0.07979093963203 * SmallAppliances ;
46214     +   S_Rcn  =    -0.88409352592792 +      0.0137435215813 * Rcn ;
MPRINT(EM_DIAGRAM):   S_Toys = -0.95465683239199 + 0.14741955061838 * Toys ;
46215     +   S_Recomendation  =    -3.46611377322712 +     0.87281636006383 *
MPRINT(EM_DIAGRAM):   END;
46216     +        Recomendation ;
46217     +   S_SmallAppliances  =    -2.26667909624218 +     0.07979093963203 *
MPRINT(EM_DIAGRAM):   ELSE DO;
46218     +        SmallAppliances ;
MPRINT(EM_DIAGRAM):   IF MISSING( CatPurchase ) THEN S_CatPurchase = . ;
46219     +   S_Toys  =    -0.95465683239199 +     0.14741955061838 * Toys ;
46220     +END;
46221     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE S_CatPurchase = -3.17624192684474 + 0.05492769453828 * CatPurchase ;
MPRINT(EM_DIAGRAM):   IF MISSING( Clothes ) THEN S_Clothes = . ;
46222     +   IF MISSING( CatPurchase ) THEN S_CatPurchase  = . ;
46223     +   ELSE S_CatPurchase  =    -3.17624192684474 +     0.05492769453828 *
MPRINT(EM_DIAGRAM):   ELSE S_Clothes = -2.3113689693832 + 0.04437092805094 * Clothes ;
MPRINT(EM_DIAGRAM):   IF MISSING( HouseKeeping ) THEN S_HouseKeeping = . ;
46224     +        CatPurchase ;
46225     +   IF MISSING( Clothes ) THEN S_Clothes  = . ;
46226     +   ELSE S_Clothes  =     -2.3113689693832 +     0.04437092805094 * Clothes ;
MPRINT(EM_DIAGRAM):   ELSE S_HouseKeeping = -0.93443662367683 + 0.14435178378641 * HouseKeeping ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
46227     +   IF MISSING( HouseKeeping ) THEN S_HouseKeeping  = . ;
46228     +   ELSE S_HouseKeeping  =    -0.93443662367683 +     0.14435178378641 *
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -0.9789629518701 + 0.00146441725342 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( Rcn ) THEN S_Rcn = . ;
46229     +        HouseKeeping ;
46230     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Rcn = -0.88409352592792 + 0.0137435215813 * Rcn ;
46231     +   ELSE S_Mnt  =     -0.9789629518701 +     0.00146441725342 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recomendation ) THEN S_Recomendation = . ;
46232     +   IF MISSING( Rcn ) THEN S_Rcn  = . ;
46233     +   ELSE S_Rcn  =    -0.88409352592792 +      0.0137435215813 * Rcn ;
MPRINT(EM_DIAGRAM):   ELSE S_Recomendation = -3.46611377322712 + 0.87281636006383 * Recomendation ;
MPRINT(EM_DIAGRAM):   IF MISSING( SmallAppliances ) THEN S_SmallAppliances = . ;
46234     +   IF MISSING( Recomendation ) THEN S_Recomendation  = . ;
46235     +   ELSE S_Recomendation  =    -3.46611377322712 +     0.87281636006383 *
MPRINT(EM_DIAGRAM):   ELSE S_SmallAppliances = -2.26667909624218 + 0.07979093963203 * SmallAppliances ;
46236     +        Recomendation ;
MPRINT(EM_DIAGRAM):   IF MISSING( Toys ) THEN S_Toys = . ;
46237     +   IF MISSING( SmallAppliances ) THEN S_SmallAppliances  = . ;
46238     +   ELSE S_SmallAppliances  =    -2.26667909624218 +     0.07979093963203 *
MPRINT(EM_DIAGRAM):   ELSE S_Toys = -0.95465683239199 + 0.14741955061838 * Toys ;
MPRINT(EM_DIAGRAM):   END;
46239     +        SmallAppliances ;
MPRINT(EM_DIAGRAM):   *** *************************;
46240     +   IF MISSING( Toys ) THEN S_Toys  = . ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
46241     +   ELSE S_Toys  =    -0.95465683239199 +     0.14741955061838 * Toys ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46242     +END;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
46243     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46244     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** *************************;
46245     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
46246     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46247     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
46248     +*** *************************;
46249     +*** *************************;
46250     +*** Writing the Node H1 ;
46251     +*** *************************;
46252     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H11 = -0.05999403216612 * S_CatPurchase + 0.20339967513114 * S_Clothes + 0.09326695971817 * S_HouseKeeping + -0.51678544057999 * S_Mnt + 0.08508367153612 * S_Rcn + -0.14498151001559 * S_Recomendation + 0.16426718825798 * 
S_SmallAppliances + 0.20091741252493 * S_Toys ;
46253     +   H11  =    -0.05999403216612 * S_CatPurchase  +     0.20339967513114 *
46254     +        S_Clothes  +     0.09326695971817 * S_HouseKeeping
46255     +          +    -0.51678544057999 * S_Mnt  +     0.08508367153612 * S_Rcn
46256     +          +    -0.14498151001559 * S_Recomendation  +     0.16426718825798 *
46257     +        S_SmallAppliances  +     0.20091741252493 * S_Toys ;
MPRINT(EM_DIAGRAM):   H12 = 0.04795506765456 * S_CatPurchase + -1.30367114290262 * S_Clothes + -0.11383893219009 * S_HouseKeeping + -0.77732809295663 * S_Mnt + -0.46299682774209 * S_Rcn + 1.43133973003849 * S_Recomendation + -0.09497105212399 * 
S_SmallAppliances + -0.27361583975836 * S_Toys ;
46258     +   H12  =     0.04795506765456 * S_CatPurchase  +    -1.30367114290262 *
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.22723981741034 * Dependents0 ;
46259     +        S_Clothes  +    -0.11383893219009 * S_HouseKeeping
MPRINT(EM_DIAGRAM):   H12 = H12 + -1.8471250409398 * Dependents0 ;
46260     +          +    -0.77732809295663 * S_Mnt  +    -0.46299682774209 * S_Rcn
46261     +          +     1.43133973003849 * S_Recomendation  +    -0.09497105212399 *
46262     +        S_SmallAppliances  +    -0.27361583975836 * S_Toys ;
46263     +   H11  = H11  +     0.22723981741034 * Dependents0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24093835560783 * Marital_StatusDivorced + 0.22265991505819 * Marital_StatusMarried + 0.24181821231198 * Marital_StatusSingle + 0.17651606004301 * Marital_StatusTogether ;
46264     +   H12  = H12  +     -1.8471250409398 * Dependents0 ;
46265     +   H11  = H11  +     0.24093835560783 * Marital_StatusDivorced
46266     +          +     0.22265991505819 * Marital_StatusMarried
46267     +          +     0.24181821231198 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.98070438980573 * Marital_StatusDivorced + -0.50968691742973 * Marital_StatusMarried + -0.18946185010446 * Marital_StatusSingle + -1.07423169325063 * Marital_StatusTogether ;
46268     +          +     0.17651606004301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = 0.12139891831216 + H11 ;
46269     +   H12  = H12  +    -0.98070438980573 * Marital_StatusDivorced
MPRINT(EM_DIAGRAM):   H12 = -0.51485627332394 + H12 ;
46270     +          +    -0.50968691742973 * Marital_StatusMarried
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
46271     +          +    -0.18946185010446 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
46272     +          +    -1.07423169325063 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   END;
46273     +   H11  =     0.12139891831216 + H11 ;
46274     +   H12  =    -0.51485627332394 + H12 ;
MPRINT(EM_DIAGRAM):   ELSE DO;
46275     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = .;
46276     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = .;
46277     +END;
MPRINT(EM_DIAGRAM):   END;
46278     +ELSE DO;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
46279     +   H11  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
46280     +   H12  = .;
46281     +END;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
46282     +*** *************************;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
46283     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
46284     +*** *************************;
46285     +
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
46286     +*** Generate dummy variables for DepVar ;
46287     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
46288     +label F_DepVar = 'From: DepVar' ;
46289     +length F_DepVar $ 12;
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
46290     +F_DepVar = put( DepVar , BEST. );
46291     +%DMNORMIP( F_DepVar )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
MPRINT(EM_DIAGRAM):   end;
46292     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   else do;
46293     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
46294     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
46295     +end;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
46296     +else do;
MPRINT(EM_DIAGRAM):   end;
46297     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
46298     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
46299     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
46300     +   end;
MPRINT(EM_DIAGRAM):   end;
46301     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
46302     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
46303     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
46304     +   end;
MPRINT(EM_DIAGRAM):   end;
46305     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
46306     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.97099617500929 * H11 + -1.57799405981122 * H12 ;
46307     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.16634326661461 + P_DepVar1 ;
46308     +   end;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
46309     +end;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
46310     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
46311     +   P_DepVar1  =    -3.97099617500929 * H11  +    -1.57799405981122 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
46312     +   P_DepVar1  =    -4.16634326661461 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
46313     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
46314     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
46315     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
46316     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
46317     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   END;
46318     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
46319     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE DO;
46320     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
46321     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
46322     +END;
MPRINT(EM_DIAGRAM):   END;
46323     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.06989576946658;
46324     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.93010423053341;
46325     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   END;
46326     +END;
MPRINT(EM_DIAGRAM):   *** *****************************;
46327     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
46328     +   P_DepVar1  =     0.06989576946658;
MPRINT(EM_DIAGRAM):   *** ******************************;
46329     +   P_DepVar0  =     0.93010423053341;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
46330     +END;
46331     +*** *****************************;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
46332     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
46333     +*** ******************************;
46334     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
46335     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
46336     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
46337     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
46338     +*** *************************;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
46339     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
46340     +*** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
46341     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
46342     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
46343     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   END;
46344     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   ********************************;
46345     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
46346     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   ********************************;
46347     +   U_DepVar  =                    0;
46348     +END;
46349     +********************************;
46350     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
46351     +********************************;
MPRINT(EM_DIAGRAM):   drop S_:;
46352     +drop
46353     +H11
46354     +H12
46355     +;
46356     +drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
46357      run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
46358      quit;
46359      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
46360      filename emflow "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural2: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
46361      *------------------------------------------------------------*;
46362      * Neural2: Scoring VALIDATE data;
46363      *------------------------------------------------------------*;
46364      data EMWS8.Neural2_VALIDATE
46365      / view=EMWS8.Neural2_VALIDATE
46366      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural2_VALIDATE / view=EMWS8.Neural2_VALIDATE ;
46367      set EMWS8.Meta_VALIDATE
46368      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
46369      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural2\EMFLOWSCORE.sas.
46370     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
46371     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
46372     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
46373     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
46374     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
46375     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
46376     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
46377     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
46378     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
46379     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
46380     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
46381     +LENGTH _WARN_ $4
46382     +      F_DepVar  $ 12
46383     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
46384     +      label S_CatPurchase = 'Standard: CatPurchase' ;
MPRINT(EM_DIAGRAM):   label S_CatPurchase = 'Standard: CatPurchase' ;
46385     +
46386     +      label S_Clothes = 'Standard: Clothes' ;
MPRINT(EM_DIAGRAM):   label S_Clothes = 'Standard: Clothes' ;
46387     +
46388     +      label S_HouseKeeping = 'Standard: HouseKeeping' ;
MPRINT(EM_DIAGRAM):   label S_HouseKeeping = 'Standard: HouseKeeping' ;
46389     +
46390     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
46391     +
46392     +      label S_Rcn = 'Standard: Rcn' ;
MPRINT(EM_DIAGRAM):   label S_Rcn = 'Standard: Rcn' ;
46393     +
46394     +      label S_Recomendation = 'Standard: Recomendation' ;
MPRINT(EM_DIAGRAM):   label S_Recomendation = 'Standard: Recomendation' ;
46395     +
46396     +      label S_SmallAppliances = 'Standard: SmallAppliances' ;
MPRINT(EM_DIAGRAM):   label S_SmallAppliances = 'Standard: SmallAppliances' ;
46397     +
46398     +      label S_Toys = 'Standard: Toys' ;
MPRINT(EM_DIAGRAM):   label S_Toys = 'Standard: Toys' ;
46399     +
46400     +      label Dependents0 = 'Dummy: Dependents=0' ;
MPRINT(EM_DIAGRAM):   label Dependents0 = 'Dummy: Dependents=0' ;
46401     +
46402     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
46403     +
46404     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
46405     +
46406     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
46407     +
46408     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
46409     +
46410     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
46411     +
46412     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
46413     +
46414     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
46415     +
46416     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
46417     +
46418     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
46419     +
46420     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
46421     +
46422     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
46423     +
46424     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
46425     +
46426     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
46427     +
46428     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
46429     +
46430     +*** Generate dummy variables for Dependents ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Dependents ;
46431     +drop Dependents0 ;
MPRINT(EM_DIAGRAM):   drop Dependents0 ;
46432     +if missing( Dependents ) then do;
MPRINT(EM_DIAGRAM):   if missing( Dependents ) then do;
46433     +   Dependents0 = .;
MPRINT(EM_DIAGRAM):   Dependents0 = .;
46434     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
46435     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
46436     +end;
MPRINT(EM_DIAGRAM):   end;
46437     +else do;
MPRINT(EM_DIAGRAM):   else do;
46438     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
46439     +   _dm12 = put( Dependents , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Dependents , BEST. );
46440     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
46441     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
46442     +      Dependents0 = -1;
MPRINT(EM_DIAGRAM):   Dependents0 = -1;
46443     +   end;
MPRINT(EM_DIAGRAM):   end;
46444     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
46445     +      Dependents0 = 1;
MPRINT(EM_DIAGRAM):   Dependents0 = 1;
46446     +   end;
MPRINT(EM_DIAGRAM):   end;
46447     +   else do;
MPRINT(EM_DIAGRAM):   else do;
46448     +      Dependents0 = .;
MPRINT(EM_DIAGRAM):   Dependents0 = .;
46449     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
46450     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
46451     +   end;
MPRINT(EM_DIAGRAM):   end;
46452     +end;
MPRINT(EM_DIAGRAM):   end;
46453     +
46454     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
46455     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
46456     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
46457     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
46458     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
46459     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
46460     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
46461     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
46462     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
46463     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
46464     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
46465     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
46466     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
46467     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
46468     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
46469     +end;
MPRINT(EM_DIAGRAM):   end;
46470     +else do;
MPRINT(EM_DIAGRAM):   else do;
46471     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
46472     +   _dm12 = put( Marital_Status , $12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Marital_Status , $12. );
46473     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
46474     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
46475     +   if _dm12 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= 'SINGLE' then do;
46476     +      if _dm12 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= 'MARRIED' then do;
46477     +         if _dm12 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = 'DIVORCED' then do;
46478     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
46479     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46480     +         end;
MPRINT(EM_DIAGRAM):   end;
46481     +         else do;
MPRINT(EM_DIAGRAM):   else do;
46482     +            if _dm12 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = 'MARRIED' then do;
46483     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
46484     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46485     +            end;
MPRINT(EM_DIAGRAM):   end;
46486     +         end;
MPRINT(EM_DIAGRAM):   end;
46487     +      end;
MPRINT(EM_DIAGRAM):   end;
46488     +      else do;
MPRINT(EM_DIAGRAM):   else do;
46489     +         if _dm12 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = 'SINGLE' then do;
46490     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
46491     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46492     +         end;
MPRINT(EM_DIAGRAM):   end;
46493     +      end;
MPRINT(EM_DIAGRAM):   end;
46494     +   end;
MPRINT(EM_DIAGRAM):   end;
46495     +   else do;
MPRINT(EM_DIAGRAM):   else do;
46496     +      if _dm12 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = 'TOGETHER' then do;
46497     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
46498     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46499     +      end;
MPRINT(EM_DIAGRAM):   end;
46500     +      else do;
MPRINT(EM_DIAGRAM):   else do;
46501     +         if _dm12 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = 'WIDOW' then do;
46502     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
46503     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
46504     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
46505     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
46506     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
46507     +         end;
MPRINT(EM_DIAGRAM):   end;
46508     +      end;
MPRINT(EM_DIAGRAM):   end;
46509     +   end;
MPRINT(EM_DIAGRAM):   end;
46510     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
46511     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
46512     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
46513     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
46514     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
46515     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
46516     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
46517     +   end;
MPRINT(EM_DIAGRAM):   end;
46518     +end;
MPRINT(EM_DIAGRAM):   end;
46519     +
46520     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46521     +*** Checking missing input Interval
46522     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
46523     +
46524     +IF NMISS(
46525     +   CatPurchase ,
46526     +   Clothes ,
46527     +   HouseKeeping ,
46528     +   Mnt ,
46529     +   Rcn ,
46530     +   Recomendation ,
46531     +   SmallAppliances ,
46532     +   Toys   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( CatPurchase , Clothes , HouseKeeping , Mnt , Rcn , Recomendation , SmallAppliances , Toys ) THEN DO;
46533     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
46534     +
46535     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
46536     +END;
MPRINT(EM_DIAGRAM):   END;
46537     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46538     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
46539     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46540     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
46541     +   S_CatPurchase  =    -3.17624192684474 +     0.05492769453828 * CatPurchase
46542     +         ;
MPRINT(EM_DIAGRAM):   S_CatPurchase = -3.17624192684474 + 0.05492769453828 * CatPurchase ;
46543     +   S_Clothes  =     -2.3113689693832 +     0.04437092805094 * Clothes ;
MPRINT(EM_DIAGRAM):   S_Clothes = -2.3113689693832 + 0.04437092805094 * Clothes ;
46544     +   S_HouseKeeping  =    -0.93443662367683 +     0.14435178378641 *
46545     +        HouseKeeping ;
MPRINT(EM_DIAGRAM):   S_HouseKeeping = -0.93443662367683 + 0.14435178378641 * HouseKeeping ;
46546     +   S_Mnt  =     -0.9789629518701 +     0.00146441725342 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -0.9789629518701 + 0.00146441725342 * Mnt ;
46547     +   S_Rcn  =    -0.88409352592792 +      0.0137435215813 * Rcn ;
MPRINT(EM_DIAGRAM):   S_Rcn = -0.88409352592792 + 0.0137435215813 * Rcn ;
46548     +   S_Recomendation  =    -3.46611377322712 +     0.87281636006383 *
46549     +        Recomendation ;
MPRINT(EM_DIAGRAM):   S_Recomendation = -3.46611377322712 + 0.87281636006383 * Recomendation ;
46550     +   S_SmallAppliances  =    -2.26667909624218 +     0.07979093963203 *
46551     +        SmallAppliances ;
MPRINT(EM_DIAGRAM):   S_SmallAppliances = -2.26667909624218 + 0.07979093963203 * SmallAppliances ;
46552     +   S_Toys  =    -0.95465683239199 +     0.14741955061838 * Toys ;
MPRINT(EM_DIAGRAM):   S_Toys = -0.95465683239199 + 0.14741955061838 * Toys ;
46553     +END;
MPRINT(EM_DIAGRAM):   END;
46554     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
46555     +   IF MISSING( CatPurchase ) THEN S_CatPurchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( CatPurchase ) THEN S_CatPurchase = . ;
46556     +   ELSE S_CatPurchase  =    -3.17624192684474 +     0.05492769453828 *
46557     +        CatPurchase ;
MPRINT(EM_DIAGRAM):   ELSE S_CatPurchase = -3.17624192684474 + 0.05492769453828 * CatPurchase ;
46558     +   IF MISSING( Clothes ) THEN S_Clothes  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Clothes ) THEN S_Clothes = . ;
46559     +   ELSE S_Clothes  =     -2.3113689693832 +     0.04437092805094 * Clothes ;
MPRINT(EM_DIAGRAM):   ELSE S_Clothes = -2.3113689693832 + 0.04437092805094 * Clothes ;
46560     +   IF MISSING( HouseKeeping ) THEN S_HouseKeeping  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( HouseKeeping ) THEN S_HouseKeeping = . ;
46561     +   ELSE S_HouseKeeping  =    -0.93443662367683 +     0.14435178378641 *
46562     +        HouseKeeping ;
MPRINT(EM_DIAGRAM):   ELSE S_HouseKeeping = -0.93443662367683 + 0.14435178378641 * HouseKeeping ;
46563     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
46564     +   ELSE S_Mnt  =     -0.9789629518701 +     0.00146441725342 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -0.9789629518701 + 0.00146441725342 * Mnt ;
46565     +   IF MISSING( Rcn ) THEN S_Rcn  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Rcn ) THEN S_Rcn = . ;
46566     +   ELSE S_Rcn  =    -0.88409352592792 +      0.0137435215813 * Rcn ;
MPRINT(EM_DIAGRAM):   ELSE S_Rcn = -0.88409352592792 + 0.0137435215813 * Rcn ;
46567     +   IF MISSING( Recomendation ) THEN S_Recomendation  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recomendation ) THEN S_Recomendation = . ;
46568     +   ELSE S_Recomendation  =    -3.46611377322712 +     0.87281636006383 *
46569     +        Recomendation ;
MPRINT(EM_DIAGRAM):   ELSE S_Recomendation = -3.46611377322712 + 0.87281636006383 * Recomendation ;
46570     +   IF MISSING( SmallAppliances ) THEN S_SmallAppliances  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( SmallAppliances ) THEN S_SmallAppliances = . ;
46571     +   ELSE S_SmallAppliances  =    -2.26667909624218 +     0.07979093963203 *
46572     +        SmallAppliances ;
MPRINT(EM_DIAGRAM):   ELSE S_SmallAppliances = -2.26667909624218 + 0.07979093963203 * SmallAppliances ;
46573     +   IF MISSING( Toys ) THEN S_Toys  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Toys ) THEN S_Toys = . ;
46574     +   ELSE S_Toys  =    -0.95465683239199 +     0.14741955061838 * Toys ;
MPRINT(EM_DIAGRAM):   ELSE S_Toys = -0.95465683239199 + 0.14741955061838 * Toys ;
46575     +END;
MPRINT(EM_DIAGRAM):   END;
46576     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46577     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
46578     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46579     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46580     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
46581     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46582     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46583     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
46584     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46585     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
46586     +   H11  =    -0.05999403216612 * S_CatPurchase  +     0.20339967513114 *
46587     +        S_Clothes  +     0.09326695971817 * S_HouseKeeping
46588     +          +    -0.51678544057999 * S_Mnt  +     0.08508367153612 * S_Rcn
46589     +          +    -0.14498151001559 * S_Recomendation  +     0.16426718825798 *
46590     +        S_SmallAppliances  +     0.20091741252493 * S_Toys ;
MPRINT(EM_DIAGRAM):   H11 = -0.05999403216612 * S_CatPurchase + 0.20339967513114 * S_Clothes + 0.09326695971817 * S_HouseKeeping + -0.51678544057999 * S_Mnt + 0.08508367153612 * S_Rcn + -0.14498151001559 * S_Recomendation + 0.16426718825798 * 
S_SmallAppliances + 0.20091741252493 * S_Toys ;
46591     +   H12  =     0.04795506765456 * S_CatPurchase  +    -1.30367114290262 *
46592     +        S_Clothes  +    -0.11383893219009 * S_HouseKeeping
46593     +          +    -0.77732809295663 * S_Mnt  +    -0.46299682774209 * S_Rcn
46594     +          +     1.43133973003849 * S_Recomendation  +    -0.09497105212399 *
46595     +        S_SmallAppliances  +    -0.27361583975836 * S_Toys ;
MPRINT(EM_DIAGRAM):   H12 = 0.04795506765456 * S_CatPurchase + -1.30367114290262 * S_Clothes + -0.11383893219009 * S_HouseKeeping + -0.77732809295663 * S_Mnt + -0.46299682774209 * S_Rcn + 1.43133973003849 * S_Recomendation + -0.09497105212399 * 
S_SmallAppliances + -0.27361583975836 * S_Toys ;
46596     +   H11  = H11  +     0.22723981741034 * Dependents0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.22723981741034 * Dependents0 ;
46597     +   H12  = H12  +     -1.8471250409398 * Dependents0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -1.8471250409398 * Dependents0 ;
46598     +   H11  = H11  +     0.24093835560783 * Marital_StatusDivorced
46599     +          +     0.22265991505819 * Marital_StatusMarried
46600     +          +     0.24181821231198 * Marital_StatusSingle
46601     +          +     0.17651606004301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24093835560783 * Marital_StatusDivorced + 0.22265991505819 * Marital_StatusMarried + 0.24181821231198 * Marital_StatusSingle + 0.17651606004301 * Marital_StatusTogether ;
46602     +   H12  = H12  +    -0.98070438980573 * Marital_StatusDivorced
46603     +          +    -0.50968691742973 * Marital_StatusMarried
46604     +          +    -0.18946185010446 * Marital_StatusSingle
46605     +          +    -1.07423169325063 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.98070438980573 * Marital_StatusDivorced + -0.50968691742973 * Marital_StatusMarried + -0.18946185010446 * Marital_StatusSingle + -1.07423169325063 * Marital_StatusTogether ;
46606     +   H11  =     0.12139891831216 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.12139891831216 + H11 ;
46607     +   H12  =    -0.51485627332394 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.51485627332394 + H12 ;
46608     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
46609     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
46610     +END;
MPRINT(EM_DIAGRAM):   END;
46611     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
46612     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
46613     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
46614     +END;
MPRINT(EM_DIAGRAM):   END;
46615     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46616     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
46617     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46618     +
46619     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
46620     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
46621     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
46622     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
46623     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
46624     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
46625     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
46626     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
46627     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
46628     +end;
MPRINT(EM_DIAGRAM):   end;
46629     +else do;
MPRINT(EM_DIAGRAM):   else do;
46630     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
46631     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
46632     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
46633     +   end;
MPRINT(EM_DIAGRAM):   end;
46634     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
46635     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
46636     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
46637     +   end;
MPRINT(EM_DIAGRAM):   end;
46638     +   else do;
MPRINT(EM_DIAGRAM):   else do;
46639     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
46640     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
46641     +   end;
MPRINT(EM_DIAGRAM):   end;
46642     +end;
MPRINT(EM_DIAGRAM):   end;
46643     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
46644     +   P_DepVar1  =    -3.97099617500929 * H11  +    -1.57799405981122 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.97099617500929 * H11 + -1.57799405981122 * H12 ;
46645     +   P_DepVar1  =    -4.16634326661461 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.16634326661461 + P_DepVar1 ;
46646     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
46647     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
46648     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
46649     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
46650     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
46651     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
46652     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
46653     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
46654     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
46655     +END;
MPRINT(EM_DIAGRAM):   END;
46656     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
46657     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
46658     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
46659     +END;
MPRINT(EM_DIAGRAM):   END;
46660     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
46661     +   P_DepVar1  =     0.06989576946658;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.06989576946658;
46662     +   P_DepVar0  =     0.93010423053341;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.93010423053341;
46663     +END;
MPRINT(EM_DIAGRAM):   END;
46664     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
46665     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
46666     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
46667     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
46668     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
46669     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
46670     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
46671     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46672     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
46673     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
46674     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
46675     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
46676     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
46677     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
46678     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
46679     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
46680     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
46681     +END;
MPRINT(EM_DIAGRAM):   END;
46682     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
46683     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
46684     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
46685     +drop
46686     +H11
46687     +H12
46688     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
46689     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
46690      run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL2_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
46691      quit;
46692      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
46693      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
46694      * Neural2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural2: Computing metadata for TRAIN data;
46695      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural2_TRAIN out=WORK.M1NZACHS noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1NZACHS;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1NZACHS(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1NZACHS;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1NZACHS;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3WWKY2G NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WWKY2G;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WWKY2G;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JEXZEN(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WWKY2G;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WWKY2G;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WWKY2G;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WWKY2G;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WWKY2G;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural2";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural2";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
47007      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
47008      set EMWS8.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_EMINFO;
47009      where DATA='Neural2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
47010      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL2_EMINFO.
      WHERE (DATA='Neural2') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

47011      data EMWS8.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural2_EMINFO;
47012      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
47013      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
47014      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
47018      run;
47019      data EMWS8.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural2_EMINFO;
47020      set EMWS8.Neural2_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_EMINFO WORK.MODELTEMP_INFO;
47021      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL2_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

47022      proc sort data = EMWS8.Neural2_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural2_EMINFO NOTHREADS;
47023      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
47024      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL2_EMINFO.
NOTE: The data set EMWS8.NEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

47025      proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
47026      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
47027      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

47028      proc sort data = EMWS8.Neural2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
47029      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
47030      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL2_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

47031      data EMWS8.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural2_EMINFO;
47032      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
47033      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
47034      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL2_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

47035      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
47036      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
47037      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
47038      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: View EMWS8.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      
NOTE: View EMWS8.NEURAL2_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
